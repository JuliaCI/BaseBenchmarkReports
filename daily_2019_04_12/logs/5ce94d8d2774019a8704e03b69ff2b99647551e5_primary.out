cset: moving following pidspec: 15429
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.309197604 seconds)
loading group "string"... done (took 0.59719387 seconds)
loading group "linalg"... done (took 7.192634523 seconds)
loading group "parallel"... done (took 0.170191132 seconds)
loading group "find"... done (took 1.124717386 seconds)
loading group "tuple"... done (took 1.989150466 seconds)
loading group "dates"... done (took 1.293627407 seconds)
loading group "micro"... done (took 0.236006804 seconds)
loading group "io"... done (took 0.972813404 seconds)
loading group "scalar"... done (took 38.824074843 seconds)
loading group "sparse"... done (took 12.625512549 seconds)
loading group "broadcast"... done (took 0.980376335 seconds)
loading group "union"... done (took 13.202917326 seconds)
loading group "simd"... done (took 4.499905147 seconds)
loading group "random"... done (took 9.08299823 seconds)
loading group "problem"... done (took 1.946639289 seconds)
loading group "array"... done (took 21.541724503 seconds)
loading group "misc"... done (took 1.958265014 seconds)
loading group "sort"... done (took 3.264058387 seconds)
loading group "collection"... done (took 18.235957857 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.540107856 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.143724042 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.118334778 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.14062188 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.186172619 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.132720198 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.146487793 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.08601294 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.051586018 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.170650987 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.140909349 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.481464487 seconds)
done (took 5.104833907 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.256603084 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.088238098 seconds)
    (2/2) benchmarking "String"...
    done (took 0.097638717 seconds)
  done (took 0.892201442 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.067783963 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.127737341 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.081706009 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.069082793 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.068279126 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.082937493 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.068357569 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.067593697 seconds)
  done (took 1.279739441 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.075128441 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.070208176 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.085929907 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.069450554 seconds)
  done (took 1.01310386 seconds)
done (took 4.239017706 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.902306561 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.236656762 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.191257916 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.456663355 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.149805471 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.190400932 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.677707572 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.326844045 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.211801558 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.101362915 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.106858008 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.38126987 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.108159284 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.66893436 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.07677731 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.106377391 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.168632625 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.433948985 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.082602917 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.083539567 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.104545015 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.145509464 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.101538486 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.07866708 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.17038156 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.071028476 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.148652563 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.096176131 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.068935513 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.244367801 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.190361578 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.681348852 seconds)
  done (took 10.511838844 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.101381204 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.118896442 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.070128366 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.14095701 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.118186111 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.072790272 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.071730689 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.084265514 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.092824297 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.160337542 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.11639823 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.106814914 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.08284565 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.071493346 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.102840749 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.213294394 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.107933451 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.086873425 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.088038418 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.077235952 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.122978608 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.08417846 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.095491967 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.080202518 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.152913772 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.195714765 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.112505595 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.112334965 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.070438504 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.082661133 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.132613077 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.142438687 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.067650392 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.083145066 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.142492469 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.111622518 seconds)
  done (took 4.597422254 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.051084321 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.161951733 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.092639336 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.15268176 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.086575248 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.111014754 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.084071472 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100116235 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.247278686 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.080721647 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.458190954 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.129318108 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.102885995 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069114184 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.085593155 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.069212773 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.517808681 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.145346687 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.104051129 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.103741276 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.091032642 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.072199181 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.361120781 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.071680229 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.069362669 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.087061765 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.061252158 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.145969447 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069641007 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.228716534 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.089503421 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.090007512 seconds)
    (32/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.086383902 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.122934099 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.195458957 seconds)
    (35/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.067529028 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.094323039 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.124421341 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.082937017 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.068829517 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.170948402 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.075257944 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.084656784 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.090292553 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.121470228 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.120448609 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.070089703 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.083451687 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.182500733 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.068974627 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.100334623 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.878520909 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.167393625 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.078625815 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.067480044 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.288483572 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.102160952 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.07322969 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.065392142 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.26188483 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.153437035 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.068825246 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.084237791 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068167797 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.069046649 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.389333212 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.071607574 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.804420838 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.072283394 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.077853757 seconds)
    (70/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.109586613 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.084685149 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068848452 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.073526606 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.091092087 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.086157414 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.083853073 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.069874777 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.066891203 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.08389948 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.070175279 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.102243693 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.206806443 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.068781183 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.08440661 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.067390876 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.086592542 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.114700323 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.085565406 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.06809681 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.116097966 seconds)
    (91/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.066814606 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.06946226 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.085288195 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.104080674 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.085324574 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.086541845 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.086726965 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.128798365 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.069746269 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.119840941 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.086062107 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.098396961 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.088254863 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.115420975 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.080152444 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084977487 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.15449845 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.066627143 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.066584123 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.085319364 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.066946908 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.085446282 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.070856146 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.097518877 seconds)
  done (took 21.100944972 seconds)
done (took 37.973255935 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.293589408 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.09246583 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.092226784 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.076845888 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.093240447 seconds)
  done (took 1.436144989 seconds)
done (took 2.195720218 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.122021087 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.117711148 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.064984425 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.113636781 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.065276552 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.118206487 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.11546468 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.082292282 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.119271215 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.065780362 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.114623663 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.066352522 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065157835 seconds)
  done (took 2.020751835 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.085160079 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.086404428 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.086980383 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.083495177 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.080598893 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.083767809 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.081696987 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.106525973 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081352921 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.089330331 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065777412 seconds)
  done (took 1.690262002 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.084081378 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.08505439 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.08651522 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082674105 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.07998518 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.083259266 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.082587462 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.103856564 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.082422529 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.090323447 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.066710229 seconds)
  done (took 1.686119258 seconds)
done (took 6.149299645 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.080153003 seconds)
  done (took 0.831592268 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.701090192 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.580716059 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.084248339 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.135150721 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.222583406 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.154078107 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.444341459 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.111243312 seconds)
  done (took 10.369134359 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.09112062 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.086289502 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.069774873 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.099048168 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.071194507 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.087599047 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.074180622 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.07089364 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.087855523 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.073269088 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.087640827 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.073323841 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.086516298 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.070735843 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.073801835 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.087633182 seconds)
  done (took 2.113802564 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.095964864 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.093814255 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.091999413 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.077225935 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.091021878 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.074110642 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.092558837 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.076384961 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.088881064 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.074509297 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.092583981 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.075697379 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.088792835 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.066849398 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.092035788 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.07724094 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.088507737 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.076401684 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.092857511 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.077786235 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.091884866 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.067284809 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.089436931 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.076496207 seconds)
  done (took 2.874420045 seconds)
done (took 16.946832664 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.131923731 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.077161001 seconds)
  done (took 0.968501625 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.08254948 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.099058356 seconds)
  done (took 0.948650101 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.084311994 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.082214656 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.09061918 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.094873477 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.082739775 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.06713083 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.104482398 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.067943 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.083189617 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.068619423 seconds)
  done (took 1.592709938 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.07064226 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.094533392 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.072689885 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.099287062 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.07565027 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.082076701 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.07441146 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.085371908 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.080551214 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.080341522 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.073407937 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.100647861 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.073505906 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.102023648 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.074326872 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.085410634 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.088392331 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.069815983 seconds)
  done (took 2.253399377 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.067096735 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.068581542 seconds)
  done (took 0.906746423 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.068516444 seconds)
    (2/7) benchmarking "second"...
    done (took 0.0655918 seconds)
    (3/7) benchmarking "month"...
    done (took 0.083019825 seconds)
    (4/7) benchmarking "year"...
    done (took 0.068580813 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.080360565 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.064464272 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.080387545 seconds)
  done (took 1.281076759 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.401238561 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.111070449 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.243799406 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.089123383 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.104819292 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.26261531 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.084733434 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.072684198 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.089211003 seconds)
  done (took 2.267704587 seconds)
done (took 10.985618236 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.080947677 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.088452161 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.111560214 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.420078976 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.107047542 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.067775236 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.144294634 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.205554711 seconds)
done (took 1.995818787 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.125953846 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.620894873 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.402721162 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.212797784 seconds)
  done (took 2.012942325 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.380069512 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.093586343 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.075222668 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.068526013 seconds)
  done (took 1.399694401 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.067151874 seconds)
    (2/2) benchmarking "read"...
    done (took 0.071178641 seconds)
  done (took 0.915865764 seconds)
done (took 5.230707508 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.067774693 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.068384499 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.081347528 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.067756655 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.065580097 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.081154314 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.068181357 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.067658397 seconds)
    (9/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.085607445 seconds)
    (10/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.064655714 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.084590471 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.071185398 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.08416623 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065648011 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066185777 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.084333632 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.065366582 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065375556 seconds)
    (19/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.083047329 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066277071 seconds)
    (21/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.068746859 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.083450254 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.065342534 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.065884287 seconds)
  done (took 2.566279991 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.086565134 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.084576391 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.073542096 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.089549815 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.071711269 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.089654476 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.073155251 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.068992745 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.088768746 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.071242659 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.087137395 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.072750729 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.0853711 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.072772151 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.086095853 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.073104154 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.091688835 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068380163 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070290714 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.088346902 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.074211488 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083822705 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.072437568 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.089102787 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.072925447 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.087328114 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.070498354 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.083925811 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073266545 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.088166145 seconds)
  done (took 3.169713333 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.072655625 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.066081503 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.081885053 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.072719666 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.065942497 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.082510563 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.065840677 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.082015098 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.066466738 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.066667808 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.083578827 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.0660303 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.065918639 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.082906065 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.066745841 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.084842142 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.082532154 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.066099269 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.082867326 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.067116556 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.069200896 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.081954826 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.066361946 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.082235351 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.06623576 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.065704666 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.081360007 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.065385485 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.066685399 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.081467783 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.069136237 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.069218032 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.081047985 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.072529265 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.085649103 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.065423205 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.069942247 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.081259166 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.066890156 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.065271652 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.080328434 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.065435333 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.065040292 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.087558565 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.066233609 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.083755694 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.065899338 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.067183525 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.081476871 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.068930063 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.081814641 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.065900551 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.067220567 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.082834425 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.069951863 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.065451279 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.08208856 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.065140939 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.082209259 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.065478804 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.066362067 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.08073287 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.068602633 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.066681271 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.096552433 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.072999692 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.081920485 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.067687106 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.067500992 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.083829242 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.068403376 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.080069935 seconds)
  done (took 6.067378771 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.118760774 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.092417414 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.084575329 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.068143632 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.08068147 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.066943304 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.069944991 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081531902 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067840201 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.087482115 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066365093 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066907157 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082856989 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.078887567 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.082079033 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.06830953 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.088490415 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.063742032 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.06627036 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.085220415 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.066733991 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.085028057 seconds)
  done (took 2.507452485 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.186872669 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.089218644 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.112419225 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.091932463 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.086471864 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.07557938 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.087734102 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.071806582 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072015256 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.087993956 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070467544 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.088035924 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069834409 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.086066929 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070990531 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.086727525 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.072215149 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.086445878 seconds)
  done (took 2.382694802 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.079432723 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.068156053 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.106752441 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.068029675 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.084797582 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.07103237 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089459806 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.07672271 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.086641727 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.0688496 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.09223055 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071266973 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.086455495 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068555157 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071000284 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.084022088 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.0713008 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084388224 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.076934409 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.089325775 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.073432983 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.092833545 seconds)
  done (took 2.549235754 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082620423 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.070373569 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.103277227 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.087226189 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.064108999 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.066794579 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.09053781 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.069353124 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.090420569 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.070906431 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068399515 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.082946612 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.073755962 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.084292848 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.072908372 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.085041541 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.070209165 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.068519921 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.086118507 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.065187758 seconds)
  done (took 2.342729456 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.088550326 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.085307241 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.070077493 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.093843995 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.06977084 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.086020502 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.077601146 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.085681939 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.069297381 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.109101957 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.069676784 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.085640803 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.077778768 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.090483632 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.069148741 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093463823 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.077564752 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.093804543 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.069293275 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.084920507 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.109226755 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.179227468 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.093654491 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.06967574 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.085265986 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.069443472 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.069735124 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.08960533 seconds)
  done (took 3.207248142 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.068313441 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.068180285 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.081617213 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.065144679 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.065809159 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.08171416 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.066496919 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.065744909 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.084750857 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.06594514 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.068335175 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.083201989 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.068526167 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.083881234 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.067918087 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.068626971 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.083893728 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.065854072 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066344471 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081796419 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.0683163 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068038505 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.08422161 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.066413681 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081703112 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.068738055 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06616257 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.081925751 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068350728 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.066090096 seconds)
  done (took 2.965759187 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.078430602 seconds)
    (2/2) benchmarking "in"...
    done (took 0.092643871 seconds)
  done (took 0.969157022 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.066468526 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.082455686 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.081850171 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.071783403 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.088372305 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.06918859 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.092225648 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072834311 seconds)
  done (took 1.420472064 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.083228584 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.079409602 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.085960621 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.079346294 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.095217296 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.084404413 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.156511397 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.085848651 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.074448467 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.083462069 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.082060609 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.067374963 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.090747924 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068280903 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.090832149 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.074484645 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.066926435 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.090608586 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.07206734 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.083270637 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.069663846 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.092386875 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.07203155 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.066216236 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.085950047 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.077309999 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.095306604 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.070901894 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.087934056 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.075414234 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.089520325 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.062654585 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.069754165 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.085569845 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.067508235 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.094893522 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.082850142 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.087327539 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.077465082 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069768036 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.095416302 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.063750318 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.089068252 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.074960559 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.094806364 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.069066799 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.084861827 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.063420898 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.066654781 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.086654503 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.064466635 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068689536 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.080198818 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075150688 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.087631035 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.078580353 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.086324119 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.069244377 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.071571473 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.087789936 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.074971965 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.087135783 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070504338 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.068114824 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.093872912 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.072805532 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.093829755 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.064193014 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.062839887 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.083028824 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.078006248 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.106902318 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.07453106 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.085325235 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070116987 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.082424671 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.072032786 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.070392771 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.090221386 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.0743474 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.084545288 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.074428687 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.092385185 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068962131 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.070572696 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.092388571 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.067010591 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.087071512 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.066647275 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.100651297 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.067874166 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.082677539 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.066092995 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.078814295 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.088066429 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.069239928 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.082476532 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075761556 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.063424043 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.08566989 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070769771 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.085356471 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.078908792 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.090369379 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.075803849 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.09363474 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.077000939 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068622535 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.088464333 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.065768139 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.0858771 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.067689105 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.076424852 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.079924119 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071302088 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.085684536 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.069796608 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.093612172 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.066702679 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.0690954 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.092216929 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.074583933 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.083425444 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.065513831 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.070898953 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.085194664 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.072065373 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.0921975 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.067887837 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.063577172 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.079760177 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.071447831 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.084746637 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.071515751 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.089328508 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.07157567 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.063684739 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.082646858 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.073774004 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.093015378 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.069212009 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.085478925 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.074061754 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.070189826 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.084201098 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.074821884 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.086734056 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.067097937 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.074107771 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.085790325 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.064827354 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.088314222 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.071516561 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.066699164 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.08863467 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.072572869 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.087028432 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.069861431 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.08429732 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.073833688 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069605282 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.083429238 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068466258 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.083530578 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.078693728 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.070265753 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.080817509 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.066012712 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.091523727 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.066520057 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.067960564 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.083697985 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.070802863 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.085828472 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.066755668 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.068055771 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.087523263 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.079416769 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.089919899 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.06993635 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.089588572 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.079221478 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.084416146 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.070983246 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.068694366 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.086201561 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.069972734 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.093573926 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.073632072 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.09103212 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.07113843 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.064934038 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.09006335 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.07564806 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.084333308 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.066777262 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.067104347 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.08875883 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.073911121 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.088319722 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.070200248 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.083265545 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069021431 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071982206 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.087684686 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.069011452 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.083947848 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.074162765 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.083854422 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.074860035 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069601646 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.095636541 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.071583253 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.081137944 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.071849092 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.083600572 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.074433491 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.064683542 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.083205394 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.068218006 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.085910062 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.067540029 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.071532437 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.079836156 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.076006889 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.092327399 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.068641678 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.06795826 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.085610037 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075789362 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.08628423 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.072819361 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.071952361 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.091393782 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.078264123 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.084709407 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.071995741 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.095048383 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.068964092 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.06329684 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.089998465 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.06750684 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.084538922 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.068427803 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.067611928 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.088287787 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.076679601 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.092601291 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.063817419 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.088037337 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.067448726 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.067388329 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.081405204 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.073052137 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.087515504 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.069630702 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075666657 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.086125773 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.069505513 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.088810486 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.069393553 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.068973257 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.087245633 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071399859 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.086159082 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.071932404 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.084257713 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.071285049 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.067288183 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.082988719 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.070715229 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.085125013 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.068476206 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.073703649 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.084671035 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069162746 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.087386288 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.069424559 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069149917 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.08570448 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.068328085 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.088498768 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068783031 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.069363081 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.087676077 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.064875985 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.092076331 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.068377332 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.075955428 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.08574412 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.066217527 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.090792894 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.071291347 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.090793472 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.06927332 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.069200648 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.086744691 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.068972438 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.088047463 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075444043 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.06599587 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.095920254 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075690755 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.085841119 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.071912388 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.085171866 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.069684475 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.067929871 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.086130376 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.069688826 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.085179095 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.068437875 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.072929592 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.088323611 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.068480431 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.086671835 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.069702453 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.06890846 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.087194292 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.06384417 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.067049821 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.085321058 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.068490802 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.094831573 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.069774299 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.084932391 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.06887136 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069515182 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.084747835 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.065736439 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.092282766 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.077172031 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.085824418 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075700023 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.084696295 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.069883984 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.078165844 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.079890311 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.06766356 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.082783666 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.065837502 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.076071195 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.086191697 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.077820932 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.085554239 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.068436579 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.065776646 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.086030364 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.068074617 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.080033828 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.066113531 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072519164 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.084324932 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068501392 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.085379608 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.071138765 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069890348 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.094468504 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.068314035 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.086583308 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.069000335 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.065172098 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.083883088 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.067531653 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.088534806 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.069931459 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.066044233 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.083192594 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.069031966 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.086195512 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.069660109 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.068896391 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.086611754 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076305519 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.084736076 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.072297787 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.071348373 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.083538854 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.072299457 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.085654402 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.069309235 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.067460645 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.088547041 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.072646027 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.087175186 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.077747128 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.085309845 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069147557 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.069027138 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.084614634 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.069204455 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.085375569 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.068744636 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.067903862 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.087515547 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.077055123 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.083595151 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.072050248 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068223279 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.086092135 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.075322715 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.086756596 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.071407259 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.092739063 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.068633894 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.069862187 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.092683755 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.071939981 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.088801797 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.070939162 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.086854761 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074106152 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.067260619 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.092544142 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.068998006 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.086907128 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.069978099 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.066199743 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.085448143 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.069311416 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.084584243 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.074690788 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.069047256 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.084682943 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.068006586 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.083416042 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.069860491 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.072444613 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.093351075 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.070700136 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.088546998 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.064663058 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.065816196 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.086591545 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.066212958 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.086677744 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.071940529 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07313644 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.088048958 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.069210106 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.08515915 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.078570082 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.09150002 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.07282495 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.066285525 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.089669726 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.070554039 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.087807193 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.069625142 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.068670359 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.087330282 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.072991825 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.087450092 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.068403639 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075539995 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.088432576 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069991771 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.086693091 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.0692758 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.068056552 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.082148037 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.069747971 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.088149917 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074418341 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.087720601 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.068854614 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079027118 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.083647938 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.068823708 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.089664024 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.068922624 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.072348584 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.08178352 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.07021438 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.086658396 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.070464545 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.063844926 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.085107067 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.066523799 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.087759899 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.067862508 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.064047086 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.096661441 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.078065351 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.088427142 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.068442625 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.084783038 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.064600021 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.064461708 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.08541738 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070699376 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.086918542 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.07889509 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.067658544 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.084798624 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.064697287 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.086331228 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.07199518 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.071842363 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.083611876 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.064164796 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.066886912 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.089350153 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.073785714 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.085137858 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.069233086 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.089088654 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.070306699 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.066790995 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.08892143 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.065836274 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.089634225 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081286148 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.086595776 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069507854 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.074042785 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.094331183 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.069962271 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.081617234 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.070091552 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.071251781 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.086474018 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.07041293 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.087227894 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.084180879 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.089345206 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.068510839 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.067761579 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.088387765 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.068890403 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.093726911 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070941762 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.086486594 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.07356411 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.070617392 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.094934766 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.07163446 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.093596938 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.072077092 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.089372073 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.068185792 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068094936 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.084756645 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.068122297 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.08725561 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.069669492 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.073152573 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.09414894 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.06801965 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.096883511 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.077434762 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.088043368 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.066753773 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.067197829 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.08537492 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.064339764 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.087752792 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.068178198 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.066967179 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.084566154 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.069053955 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.08680773 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074251899 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.06907818 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.086942571 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.069408122 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.080912701 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.070520295 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.070888398 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.086457122 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.065763111 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.086141346 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.069304406 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.072584029 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.089577477 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.066526087 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.087204796 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.070503891 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069479399 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.081724589 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.07546849 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.084916605 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.070515235 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.067952409 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.086461647 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.070640501 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.089481763 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.074033094 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.087282313 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.070898835 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.077735494 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.08834372 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.066749349 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.083125766 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.073298698 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.06652041 seconds)
  done (took 47.09255737 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.109250765 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.083774369 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.064841306 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.081730838 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.076229071 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.083228016 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.064196074 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.064835425 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.082821725 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.068173916 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.081992778 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.064891556 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.090868861 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.088496463 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.094549827 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.068741715 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.082418418 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.06553845 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.082229887 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.065771627 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.090420385 seconds)
  done (took 2.500100335 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.077046678 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.09108464 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.075635158 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.095736423 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070040555 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.091280337 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.075684498 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.0910419 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.096513201 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069617795 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.09680429 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073333994 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.087569479 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.069858409 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.087491029 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073698728 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.09547243 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070114853 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.090471451 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.075749546 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.090469391 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.074988845 seconds)
  done (took 2.660828842 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.068728319 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.068171883 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.086452771 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.06418478 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.067590785 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.080959289 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.072137115 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.083622376 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.071954384 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.07478415 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.084508271 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.067365661 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.086642487 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.063603887 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.067507144 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.083752023 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.132051466 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.071600701 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.068011076 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.088506721 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.064838912 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.088146611 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.064300431 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.064039975 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.084664177 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.072159723 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.087273609 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.067039332 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.067640525 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.084875206 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.068960433 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.083762207 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.069726465 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.0690215 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.085208102 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.068063956 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.068127614 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.08642601 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.064282971 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.085122471 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.068400172 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.06440989 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.086726242 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.06974071 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.066470034 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.084496932 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.069590673 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.08599022 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.064265776 seconds)
  done (took 4.552469422 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.086754813 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.131925049 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.089294407 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.090784393 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.103220935 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.093712011 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.072361412 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.112626156 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.06678636 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.084755883 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.084299098 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.104519136 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.087168983 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.072949773 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.092412414 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.068836359 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.086450461 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.067111724 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.071644083 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.085818669 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.072073548 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.092108218 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.100347258 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.081706711 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.089460566 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.068077611 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.08498943 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.073782253 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.09807447 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.073020349 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.090043674 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.073446186 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.102148032 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.069899501 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.085232174 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.0712946 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.102746907 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.06866508 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.08891929 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.06647137 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.088674161 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.073195809 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.092434015 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.084951081 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.086568257 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.073453215 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.086432772 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.065748577 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.09969001 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.07018174 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.094335198 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.100691503 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.072314692 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.085767816 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.072584528 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.101521529 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.068571764 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.084542609 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.0716786 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.098364911 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.066389043 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.089748746 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.081945715 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.088067491 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.075363044 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.100618423 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.07344756 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.089772448 seconds)
  done (took 6.716768218 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.077676498 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.092653212 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.083496172 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.101812532 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.092866188 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.075497268 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.092355086 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.075043757 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.092899782 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.079766232 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.09281737 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.114757864 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.070486411 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.095422152 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.07517785 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.093564285 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.074727828 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.094213818 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.092676561 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.07520297 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.092635034 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.083178504 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.092855115 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.101079414 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.103737512 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.088175451 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.07519536 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.09270689 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.10195225 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.075215774 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.103513249 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.075198581 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.092608364 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.101119026 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.086561195 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.092489955 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068166137 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.091908307 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.076110141 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.092831261 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.070825467 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.101814162 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.093296603 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.070827392 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.09300886 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.075370704 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.10130534 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.086015559 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.096790477 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.097871399 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.076130919 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.101499801 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075233867 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.094348155 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.1011651 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.10810857 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.102437969 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.101682565 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.075490045 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.101440805 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.101518488 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.108327619 seconds)
  done (took 6.419543758 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.090157626 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.095631835 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.099105574 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.064683893 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.066734018 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.091710232 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.067100323 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.084892031 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.078580497 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.096133144 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080117971 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.091238921 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.075701332 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099506131 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.090837167 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.076213408 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.090803896 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.072939162 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.094276614 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.073337217 seconds)
  done (took 2.536047108 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.077497127 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.105122261 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.070315682 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.073927225 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.091294521 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.07465614 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.089904014 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071843426 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087220303 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071962769 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.097849951 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.079083159 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.088364637 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.074797957 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.096757303 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.074196559 seconds)
  done (took 2.186206362 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.081318061 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.09763808 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.08337359 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.087846275 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.067542326 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.08401131 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.069091567 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.065145164 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.084008937 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.083431277 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.088036474 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.0719308 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.087797601 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.067305552 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.065608876 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.090296501 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.065308899 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.084655058 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.069196234 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.101901143 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.080376037 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.086060195 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.070369663 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.069717613 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.088513858 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.074361654 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.088082462 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.066688818 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.085727092 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.069268504 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.087707978 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.076796161 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.084693118 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.06731062 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.067490646 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.084829233 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.069333216 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.087514142 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.072639081 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.067516243 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.086138936 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.068892405 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.087177907 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.070697707 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.083284646 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.069779379 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.064849293 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.093066444 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.068227437 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.086953317 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.069524218 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.089125475 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.070438458 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.079418478 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.09133231 seconds)
  done (took 5.18374765 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082784554 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.071679047 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.083730922 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.067246342 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.089671294 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.071461296 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.072673893 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.089499814 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.07076694 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.085447011 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.070686506 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.090663146 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070554645 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.072209296 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.088788451 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.072627756 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.082449663 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.072027065 seconds)
  done (took 2.270966787 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.07419406 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.06889434 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.094486911 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.069213934 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.086927365 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.071447192 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.064941486 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.086818091 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068239641 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.086487969 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069049882 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.07123494 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.085814577 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.071115142 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.086685473 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068826387 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.070679308 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.08576346 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.069654017 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.082799337 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.071446495 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.067063331 seconds)
  done (took 2.540126476 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.074035702 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.095584759 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.16465508 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.108962345 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.084974024 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.101281972 seconds)
  done (took 1.499774462 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.095428523 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101663997 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.070277977 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108806339 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07784642 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089043248 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070883094 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089222722 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080400734 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.101994651 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07070387 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.098559305 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097696971 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079881268 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.094698817 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077039694 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089296141 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070841338 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088228626 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107968601 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071404433 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098065978 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071620288 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089057065 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071576975 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097668954 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080210944 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.103159398 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088567262 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079475246 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094150698 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070977579 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097764487 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.103235988 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072390493 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097793293 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070959298 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107117544 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076195375 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097597211 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.07224757 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096362739 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098080595 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076306293 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.098006866 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07090135 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.093931499 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070298824 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090411124 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113866135 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077422278 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097674706 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.094584169 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079490164 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09748858 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114855004 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.085393573 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.098039366 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.095127051 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.084980368 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097391119 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07542562 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.098368436 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10201734 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077536679 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097708665 seconds)
  done (took 6.72541197 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08763027 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.107574385 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071352241 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.103544487 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.09884526 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071446627 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089575133 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071214381 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088526561 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07162519 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.130804835 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072161799 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098605764 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097078785 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071741183 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089210092 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071762619 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097141111 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07079627 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11436901 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.089858305 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079290873 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09865903 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097170653 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.085269426 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.095395083 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070184034 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08939193 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070693246 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.089452601 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076211778 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090380873 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.098178085 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.071123598 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09780774 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071142724 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089397396 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076203494 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08949424 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076935252 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098469606 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107927104 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071196233 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08941172 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084530904 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.090217531 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070811853 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089693691 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070319243 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089237569 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084446315 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.104048843 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.103744488 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097734916 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071388547 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089649424 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072310525 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089042772 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071925716 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.095113583 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079575356 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089756614 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115209222 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072111161 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.089813234 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07962081 seconds)
  done (took 6.61818733 seconds)
done (took 130.428377107 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.223390473 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.185706218 seconds)
  done (took 1.278441261 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.070809569 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.09762171 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.099768345 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.131067525 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.088354438 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.102473875 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.119804798 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.080817894 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.068263939 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.088323106 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.069660285 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.08830577 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.139870435 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.068940873 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.088261423 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.070711605 seconds)
  done (took 2.350590818 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.104835343 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.197702856 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.110468132 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.06729184 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.100730824 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.08045981 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.087023057 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.078365147 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.095779416 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.067891417 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.079878124 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.096997335 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.06736716 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.096687631 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.076415301 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.099754035 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.067683331 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.098319992 seconds)
  done (took 2.558896881 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.10584684 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.142475103 seconds)
  done (took 1.127402259 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.201318385 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.123974116 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.202819277 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.418763118 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.207222874 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.27731134 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.174027188 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.172167262 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.156173985 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.169132932 seconds)
  done (took 2.977841507 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.10169541 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.172856259 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.312560764 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.138583766 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.087572899 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.116966185 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.138748984 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.090567726 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.10292455 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.101135898 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.083099431 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.098616383 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.099252649 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.097032071 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.076731773 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.099099397 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.122553821 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.077176674 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.07835499 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.098011819 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.119047018 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.069699065 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.076648724 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.096061371 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.078957175 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.099277061 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.068376253 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.087375382 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.077619792 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.09614046 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.080943992 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.114579331 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.097852416 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.132434078 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.083564265 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.132160734 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.099083852 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.07453571 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.096541017 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.07527832 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.098437086 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.079190277 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.104211994 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.078741663 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.087717226 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.07979004 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.087578235 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.068581655 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.100219904 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.079767631 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.100117114 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.080305559 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.130580041 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.098548794 seconds)
  done (took 6.302934527 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.74706007 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.111427896 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.094868026 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.809358299 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.090935771 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.106754894 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.711145972 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.118773854 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.209273464 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.766314523 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.091717708 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.100080739 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.180426182 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.235235132 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.884253735 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.281849125 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.632138917 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.106149874 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.110281062 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.132940932 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.139876536 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.178336838 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.15029231 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.438697447 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.077076637 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.093404168 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.137799885 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.076578513 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.161239219 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.087000285 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.099642512 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.156323175 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.226120486 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.156226151 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.09781091 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.072324391 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.092470385 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.148656008 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.242255413 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.170226855 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.159091037 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069671328 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.092552697 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.140328708 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.132472284 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069369661 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.138701075 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.173592723 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.149123028 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.074828035 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.097849064 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.142336094 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.139304223 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.142466847 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.102280221 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.268739548 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.281287898 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.091638766 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.100328458 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.105302707 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.236452403 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.08522713 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.198235851 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.14076415 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.165551927 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.092202263 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.732949436 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.147836443 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.093205472 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.075332282 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.119187208 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.096026818 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.14053432 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.144492666 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.371697791 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.142839733 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.074029585 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.093476858 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.208488473 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.104393973 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072984938 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.141171724 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.096542985 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.102162916 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.164960615 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.1435427 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.147156849 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.207722353 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.143190521 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.160060695 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.075432079 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.125007883 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.096191908 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.191670019 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.171131006 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.139985656 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.206077284 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.140968354 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.14338265 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.147299137 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.097530943 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.1500396 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.119870393 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.081721853 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.138463469 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.189897715 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.123696824 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.083197318 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.095718632 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.141648926 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.126546759 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.086403447 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.161330136 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.151207875 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.459209916 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.147848998 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.08947002 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.088172114 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.140110866 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.162969844 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.0770926 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.232817827 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.102622924 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.168328605 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.122469465 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.070368192 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.121005511 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.141690212 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.079329039 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.122255956 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.159563635 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.078697684 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.215468497 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.189548217 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.078479559 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.214278585 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.161704528 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.076713467 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.149007199 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.120724201 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.146315313 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.099615766 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.140640656 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.075937126 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.772756204 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.143957885 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.122084164 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.073300403 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.181186322 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.09209338 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083796881 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.104738888 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069854845 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.750571604 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.086506608 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.102059376 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.103900593 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.077597001 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.122041707 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.138159082 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.094963906 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.139698895 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.179553936 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.097884513 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.119272051 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.084226805 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.140628523 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.098195502 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.104307939 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.085844607 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.105285472 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.123788322 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.075955153 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.104963614 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.148159344 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.14127186 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.192552472 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.545300987 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.071395647 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.105532855 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.199952013 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072376795 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.261776923 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.138592012 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.197293677 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.143357385 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.08113214 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.284479061 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.143895931 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.178455407 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.086830503 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.171905502 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.070917236 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.13837504 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.14113183 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.092897354 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.076276997 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.140243172 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.165094717 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.143732516 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.92552657 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.072718949 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.204478171 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.069072824 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.169167161 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.077341716 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.097999549 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.239306985 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.092740655 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.147629209 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.143520534 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.073979714 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.106016798 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.672849304 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.105452835 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.139792346 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.096352074 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.172180488 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.141187558 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.158970864 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.138012892 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.07700056 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.139141706 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.206623762 seconds)
  done (took 40.525386892 seconds)
done (took 57.998867346 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.260662277 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.180304455 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.242691431 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.145344182 seconds)
  done (took 1.805217322 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.145116716 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.105782061 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.118965722 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.087393683 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.105297383 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.087508937 seconds)
  done (took 1.552887938 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.406922163 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.267545672 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.233325162 seconds)
  done (took 1.812071413 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.262752347 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.214537789 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.449282777 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.298283673 seconds)
  done (took 2.255027281 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.178130114 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.11534836 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.069037993 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.107220853 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.16024988 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.254880534 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.129140658 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.189420437 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.080887624 seconds)
  done (took 2.236551201 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.198434988 seconds)
done (took 10.765496514 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.106197458 seconds)
    (2/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.105011472 seconds)
    (3/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.201480672 seconds)
    (4/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.141354535 seconds)
    (5/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.149725172 seconds)
    (6/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.079565454 seconds)
    (7/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.193252734 seconds)
    (8/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.290263615 seconds)
    (9/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.240859565 seconds)
    (10/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.283257771 seconds)
    (11/309) benchmarking ("sort", BigInt, false)...
    done (took 0.210629753 seconds)
    (12/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.105468244 seconds)
    (13/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.082557115 seconds)
    (14/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.101830715 seconds)
    (15/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.079034925 seconds)
    (16/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.212664334 seconds)
    (17/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.103581531 seconds)
    (18/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.09058255 seconds)
    (19/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.19839279 seconds)
    (20/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.214752966 seconds)
    (21/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.103101486 seconds)
    (22/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.079263629 seconds)
    (23/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.129968997 seconds)
    (24/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.285274292 seconds)
    (25/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.259931307 seconds)
    (26/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.07704463 seconds)
    (27/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.133181241 seconds)
    (28/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.068098839 seconds)
    (29/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.115829341 seconds)
    (30/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.276625968 seconds)
    (31/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.077918547 seconds)
    (32/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.14790025 seconds)
    (33/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.078959019 seconds)
    (34/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.086644155 seconds)
    (35/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.0755469 seconds)
    (36/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.27618073 seconds)
    (37/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.162884715 seconds)
    (38/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.113813227 seconds)
    (39/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.101083749 seconds)
    (40/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.077796994 seconds)
    (41/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.273059806 seconds)
    (42/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.099350432 seconds)
    (43/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.080220942 seconds)
    (44/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.063648592 seconds)
    (45/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.271215616 seconds)
    (46/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.072419268 seconds)
    (47/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.100406343 seconds)
    (48/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.099216147 seconds)
    (49/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.075582268 seconds)
    (50/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.07582516 seconds)
    (51/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.137885103 seconds)
    (52/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.115366374 seconds)
    (53/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.303828269 seconds)
    (54/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.160628833 seconds)
    (55/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.076111536 seconds)
    (56/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.098781047 seconds)
    (57/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.254068766 seconds)
    (58/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.213051004 seconds)
    (59/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.120765476 seconds)
    (60/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.125395775 seconds)
    (61/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.070213769 seconds)
    (62/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.117412318 seconds)
    (63/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.075301017 seconds)
    (64/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.205237774 seconds)
    (65/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.131577565 seconds)
    (66/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.096396136 seconds)
    (67/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.16776829 seconds)
    (68/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.074960071 seconds)
    (69/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.113281533 seconds)
    (70/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.100160397 seconds)
    (71/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.110372802 seconds)
    (72/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.109339116 seconds)
    (73/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.084637277 seconds)
    (74/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.064897287 seconds)
    (75/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.075402768 seconds)
    (76/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.121606992 seconds)
    (77/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.076280209 seconds)
    (78/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.139462909 seconds)
    (79/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.216613184 seconds)
    (80/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.133302567 seconds)
    (81/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.247214039 seconds)
    (82/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.074660017 seconds)
    (83/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.076215162 seconds)
    (84/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.089264961 seconds)
    (85/309) benchmarking ("sort", Int64, false)...
    done (took 0.069132565 seconds)
    (86/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.192215047 seconds)
    (87/309) benchmarking ("sort", Int8, false)...
    done (took 0.165900399 seconds)
    (88/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.11870016 seconds)
    (89/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.083253845 seconds)
    (90/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.053644265 seconds)
    (91/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.088966116 seconds)
    (92/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.06543617 seconds)
    (93/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.240752487 seconds)
    (94/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.073371704 seconds)
    (95/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.053890166 seconds)
    (96/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.096081049 seconds)
    (97/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.070680407 seconds)
    (98/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.114868912 seconds)
    (99/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.068641995 seconds)
    (100/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.067875188 seconds)
    (101/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.091264217 seconds)
    (102/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.055093688 seconds)
    (103/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.119254318 seconds)
    (104/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.055558822 seconds)
    (105/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.064651469 seconds)
    (106/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.053563297 seconds)
    (107/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.104128912 seconds)
    (108/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.094197286 seconds)
    (109/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.249541055 seconds)
    (110/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.179911601 seconds)
    (111/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.067775492 seconds)
    (112/309) benchmarking ("sort", Float32, false)...
    done (took 0.15180701 seconds)
    (113/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.112931706 seconds)
    (114/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.074035382 seconds)
    (115/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.053653921 seconds)
    (116/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.150682612 seconds)
    (117/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.067658093 seconds)
    (118/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.168550389 seconds)
    (119/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.149637794 seconds)
    (120/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.091520795 seconds)
    (121/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.101222423 seconds)
    (122/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.074127368 seconds)
    (123/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.203141773 seconds)
    (124/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.241310069 seconds)
    (125/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.163648188 seconds)
    (126/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.072333106 seconds)
    (127/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.053825158 seconds)
    (128/309) benchmarking ("sort", Bool, false)...
    done (took 0.160005732 seconds)
    (129/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.076223278 seconds)
    (130/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.140275832 seconds)
    (131/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.078480183 seconds)
    (132/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.097431752 seconds)
    (133/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.063711107 seconds)
    (134/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.123234016 seconds)
    (135/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.251281681 seconds)
    (136/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.069503382 seconds)
    (137/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.073287164 seconds)
    (138/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.197360081 seconds)
    (139/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.074597133 seconds)
    (140/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.076073032 seconds)
    (141/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.057018279 seconds)
    (142/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.069305738 seconds)
    (143/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.076679588 seconds)
    (144/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.054220495 seconds)
    (145/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.075180132 seconds)
    (146/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.153988619 seconds)
    (147/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.137520013 seconds)
    (148/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.070020024 seconds)
    (149/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.067688532 seconds)
    (150/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.116741424 seconds)
    (151/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.068368817 seconds)
    (152/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.140596897 seconds)
    (153/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.076055527 seconds)
    (154/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.25309325 seconds)
    (155/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.202240659 seconds)
    (156/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.246009843 seconds)
    (157/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.069664095 seconds)
    (158/309) benchmarking ("sort", Float64, false)...
    done (took 0.152215599 seconds)
    (159/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.07532077 seconds)
    (160/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.164708071 seconds)
    (161/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.077557123 seconds)
    (162/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.097591105 seconds)
    (163/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.108522754 seconds)
    (164/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.072209869 seconds)
    (165/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.159374891 seconds)
    (166/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.096057818 seconds)
    (167/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.078569722 seconds)
    (168/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.055454686 seconds)
    (169/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.076447351 seconds)
    (170/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.055653463 seconds)
    (171/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.075413178 seconds)
    (172/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.053226175 seconds)
    (173/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.128642747 seconds)
    (174/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.079154768 seconds)
    (175/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.089168035 seconds)
    (176/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.054176615 seconds)
    (177/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.055204663 seconds)
    (178/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.111503198 seconds)
    (179/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.100507371 seconds)
    (180/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.091726853 seconds)
    (181/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.072998391 seconds)
    (182/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.145824481 seconds)
    (183/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.241635993 seconds)
    (184/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.101410062 seconds)
    (185/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.076131834 seconds)
    (186/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.097626094 seconds)
    (187/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.070976034 seconds)
    (188/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.067282908 seconds)
    (189/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.311375342 seconds)
    (190/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.19530446 seconds)
    (191/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.069782354 seconds)
    (192/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.07740982 seconds)
    (193/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.252002325 seconds)
    (194/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.09476625 seconds)
    (195/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.078350337 seconds)
    (196/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.083410094 seconds)
    (197/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.122560694 seconds)
    (198/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.242503063 seconds)
    (199/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.055182422 seconds)
    (200/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.067435188 seconds)
    (201/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.076574493 seconds)
    (202/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.071957294 seconds)
    (203/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.161457948 seconds)
    (204/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.068200207 seconds)
    (205/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.055175361 seconds)
    (206/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.053127811 seconds)
    (207/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.089974357 seconds)
    (208/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.150176227 seconds)
    (209/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.239538169 seconds)
    (210/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.089991834 seconds)
    (211/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.092672135 seconds)
    (212/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.099048073 seconds)
    (213/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.075981165 seconds)
    (214/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.073466439 seconds)
    (215/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.257903411 seconds)
    (216/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.053844762 seconds)
    (217/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.099601409 seconds)
    (218/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.056383291 seconds)
    (219/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.077635328 seconds)
    (220/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.08992706 seconds)
    (221/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.064468553 seconds)
    (222/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.054467453 seconds)
    (223/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.088921276 seconds)
    (224/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.0826544 seconds)
    (225/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.072887204 seconds)
    (226/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.076192603 seconds)
    (227/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.053747256 seconds)
    (228/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.132925646 seconds)
    (229/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.055159076 seconds)
    (230/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.105435946 seconds)
    (231/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.086001928 seconds)
    (232/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.201393773 seconds)
    (233/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.067194727 seconds)
    (234/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.054567408 seconds)
    (235/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.088942963 seconds)
    (236/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.172932029 seconds)
    (237/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.11202614 seconds)
    (238/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.093513852 seconds)
    (239/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.0756609 seconds)
    (240/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.093836709 seconds)
    (241/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.127549213 seconds)
    (242/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.142479636 seconds)
    (243/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.090692643 seconds)
    (244/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.069545417 seconds)
    (245/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.053386763 seconds)
    (246/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.076825328 seconds)
    (247/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.067971271 seconds)
    (248/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.055282149 seconds)
    (249/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.054639534 seconds)
    (250/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.089477323 seconds)
    (251/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.053943303 seconds)
    (252/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.053038214 seconds)
    (253/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.096316437 seconds)
    (254/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.069500693 seconds)
    (255/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.112593579 seconds)
    (256/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.068842947 seconds)
    (257/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.073162372 seconds)
    (258/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.076411091 seconds)
    (259/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.053825597 seconds)
    (260/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.066921891 seconds)
    (261/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.111761001 seconds)
    (262/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.056442759 seconds)
    (263/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.098344856 seconds)
    (264/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.083164575 seconds)
    (265/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.089958992 seconds)
    (266/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.053553335 seconds)
    (267/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.069608575 seconds)
    (268/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.11950354 seconds)
    (269/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.090962986 seconds)
    (270/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.112315499 seconds)
    (271/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.076595291 seconds)
    (272/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.07260102 seconds)
    (273/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.095663616 seconds)
    (274/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.065459037 seconds)
    (275/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.159014675 seconds)
    (276/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.069884495 seconds)
    (277/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.118475841 seconds)
    (278/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.067040737 seconds)
    (279/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.076526564 seconds)
    (280/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.090153715 seconds)
    (281/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.054644405 seconds)
    (282/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.066759939 seconds)
    (283/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.089858832 seconds)
    (284/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.066993393 seconds)
    (285/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.122233223 seconds)
    (286/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.06493045 seconds)
    (287/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.053953441 seconds)
    (288/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.097825282 seconds)
    (289/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.070921761 seconds)
    (290/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.072096338 seconds)
    (291/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.078500516 seconds)
    (292/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.067611647 seconds)
    (293/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.074137164 seconds)
    (294/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.078159645 seconds)
    (295/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.080898507 seconds)
    (296/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.054555586 seconds)
    (297/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.161010812 seconds)
    (298/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.074292947 seconds)
    (299/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.077395149 seconds)
    (300/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.149331317 seconds)
    (301/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.093373816 seconds)
    (302/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.074204285 seconds)
    (303/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.072313508 seconds)
    (304/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.076358085 seconds)
    (305/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.070741975 seconds)
    (306/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.064070307 seconds)
    (307/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.102035917 seconds)
    (308/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.076301474 seconds)
    (309/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.122724503 seconds)
  done (took 35.336262111 seconds)
done (took 36.251843105 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.084898731 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.116346634 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.076956854 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.116542285 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.083017433 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.101724268 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.076012101 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.080072846 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.104780686 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.083825902 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.103811402 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.056849407 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.098461481 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.078047851 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.099307258 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.094397981 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.103206841 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.075218757 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.075744364 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.089336897 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.076794885 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.089238487 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.070526054 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.056949055 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.10139325 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.075125517 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.073801054 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.098973824 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.067338253 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.089602778 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.071361639 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.075152276 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.089681135 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.081078371 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.095649518 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.075585965 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.077621166 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.100508681 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.06971472 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.088899522 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.075010502 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.067192941 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.096049699 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.075661833 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.073577249 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.09471284 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.075611068 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.102732641 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.094075343 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.092023986 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.076735695 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.10097303 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.078842433 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.074377823 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.093815553 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.076664418 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.095061433 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.093320065 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.098632694 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.07023383 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.07560905 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.098096018 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.074100446 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.097147135 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.075956864 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.077642306 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.10019278 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.073766665 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.099324869 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.074173402 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.06761714 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.097708708 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.071753943 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.067753266 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.100445368 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.079004287 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.088920413 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.073227147 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.07472865 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.096130432 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.068538831 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091296313 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.070164265 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.074389426 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.091183509 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.057159174 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.071688181 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.095579528 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.067517275 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.076654053 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.095742869 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.074997175 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.068927947 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.100630186 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.068366019 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.095460129 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.067792314 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.067636829 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.091582731 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.071856361 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.067022451 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.09131806 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.077354006 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.092041132 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.074934189 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.081977878 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.089711816 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.074600445 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.08918601 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.067827688 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.084785429 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.099657462 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.068131303 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.09224121 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.067777254 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.075598099 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.08947731 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.068675184 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.067786469 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.089555069 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.073660116 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.067667776 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.091997359 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.075896898 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.10331802 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.06798619 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.071829591 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.092478481 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.067999269 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.073126126 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.090254651 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.068652819 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.069359709 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.08751894 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070206839 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.089905225 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.075145682 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.069810643 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.098001826 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.06981459 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.098701902 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.072744474 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.074512436 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.095019673 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.06719778 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.061127188 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.091856005 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069946807 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.070337865 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.089823899 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.07022021 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.067616359 seconds)
done (took 13.444348519 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.070994282 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.169852204 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.12745673 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.097940641 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.112137213 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.068729133 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.10207838 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.105790449 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.093079722 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.129210678 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.090127237 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.109343953 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.115859064 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.089974613 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.068504498 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.072024249 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.091845805 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.090388497 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.12655916 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.11094393 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.118586773 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.09043973 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.122777873 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.092859206 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.113638645 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.095782055 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.090654017 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.072876447 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.093629881 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.104720524 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.110082468 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.071599113 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.068857638 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.124618216 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.119476145 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.088274874 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.089703784 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.086467318 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.090300469 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.068562893 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.115706455 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.101729293 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.106496748 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.106554583 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.074823123 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.070990601 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.091725024 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.088630586 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.114937756 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.082343006 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.112980445 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.135891984 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.071350701 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.107322487 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.067507684 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.112148402 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.106660887 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.07151469 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.068818506 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.092685672 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.068282822 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.071438237 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.113380119 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.117981481 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.071814297 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.106471566 seconds)
  done (took 7.374781337 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.088403508 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.119337655 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.086012805 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.109318853 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.067967472 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.068800675 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.091163373 seconds)
  done (took 1.60777753 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.070853203 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.093863993 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.114725863 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.091262813 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.110920916 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.088717738 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.101186825 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.069696995 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.109066535 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.069976895 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.089825792 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.129365518 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.070953244 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.09854191 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.093602713 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.091820969 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.092644066 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.091924954 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.072399994 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.115374749 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.07268767 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.090028977 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.093952921 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.069005513 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.106343394 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.069292931 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.140296679 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.074548528 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.09327291 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.072158851 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.0687418 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.141028711 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.106582564 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.079864237 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.069409559 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.106953776 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.084123978 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.089645163 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.085882691 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.097074768 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.083308442 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.070269052 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.093494072 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.068277133 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.074213217 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.102567459 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.071743145 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.092629966 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.072125808 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.089002221 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.092541828 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.083382801 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.092166604 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.072955921 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.07083385 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.097916401 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.079883233 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.093068378 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.089272606 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.070739083 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.108674035 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.085274628 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.106353007 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.085244525 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.094850828 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.083713817 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.106642065 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.072065934 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070710659 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.095835534 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.085999244 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.090061336 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.071201463 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.080147325 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.094428935 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.092957133 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.114860372 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071719164 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.102235008 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.070195318 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.070315249 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.091964199 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.092460614 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.095646627 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.069807379 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.073401737 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.095158429 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.067559172 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.06805625 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.09564917 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.067948153 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.092503798 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.072581103 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.070847531 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.094373639 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.086174754 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.069663142 seconds)
  done (took 9.476393524 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.071630923 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.070185151 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.094067575 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.070289581 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.070497623 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.092911752 seconds)
  done (took 1.461919469 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.101546845 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.094446811 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.083826946 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.097382013 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.108189499 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.107159764 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.085653005 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.107389694 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.087904293 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.10480776 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.084941169 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.108075245 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.090227734 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.099054546 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.085269696 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.097777351 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.084993958 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.102049063 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.081481354 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.099341177 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.090645524 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.09869594 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.076349866 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.108340614 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.073618619 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.076291939 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.10209883 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.082138624 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.104398235 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.084318182 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.098148426 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.073577478 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.096167526 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.084849143 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.10708586 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.07472338 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.098384063 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.074348181 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.101941702 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.073954225 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.1083884 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.075644895 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.080407169 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.097689481 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.107698212 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.073992574 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.073783183 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.101540108 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.08392819 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.096775232 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.074434457 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.097401834 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.074180055 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.097396017 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.074002812 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.107040058 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.074519508 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.107498049 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.075802176 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.074189119 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.095092538 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.073726342 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.106896669 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.073423335 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.10631789 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.074522596 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.096963225 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.076261963 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.0989637 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.074977226 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.074172611 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.095625455 seconds)
  done (took 7.48600238 seconds)
done (took 28.380520894 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.652956909 seconds)
  done (took 1.6410118 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.781334273 seconds)
  done (took 1.770595873 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 14.589773164 seconds)
  done (took 15.585788679 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.616625677 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.759799746 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.81283463 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.159734336 seconds)
  done (took 3.338065067 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.878722909 seconds)
  done (took 1.883425023 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.23692838 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.225800581 seconds)
  done (took 1.458466826 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.741726608 seconds)
  done (took 1.746348556 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.311720617 seconds)
  done (took 2.309504964 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.322113538 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.182970982 seconds)
  done (took 1.505988 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.527969335 seconds)
  done (took 1.528009199 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.641248785 seconds)
  done (took 7.647918748 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.232287104 seconds)
  done (took 1.245073815 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.269780386 seconds)
  done (took 1.273564113 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.142989505 seconds)
  done (took 4.147963881 seconds)
done (took 48.07623061 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.079355927 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.083641851 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.10570164 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.081064261 seconds)
  done (took 1.353143926 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.080058475 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.075530875 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.102885405 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.075708817 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.102671871 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.076158725 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.100815604 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.080389501 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.074929398 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.099307221 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.076285622 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.097461999 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.077629098 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.100580288 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.07264685 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.07819176 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.101794203 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.075683842 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.101462151 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.075954796 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.073048083 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.099949345 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.078658226 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.096842312 seconds)
  done (took 3.089063104 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.079172264 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.075065433 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.099253025 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.07443061 seconds)
  done (took 1.336085774 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.079820107 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.117762863 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.092250383 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.079419513 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.118426076 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.11259136 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.072594142 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.07312031 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.098214301 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.079191093 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.093711301 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.100769221 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.112918195 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.080074769 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.104192241 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.068105493 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.071790831 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.112502198 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.079949865 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.103195859 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.073722776 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.081503577 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.093453326 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.092153063 seconds)
  done (took 3.206097056 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.078525974 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.105428359 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.103456703 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.091468854 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.11753673 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.067820346 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.101367479 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.093707609 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.150693529 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.067681718 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.09633147 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.068077089 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.098429673 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.066882666 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.079371197 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.134637489 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.114225124 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.094422299 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.099253171 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.090933678 seconds)
  done (took 2.934842712 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.07882828 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.072317096 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.090471952 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.07080804 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.078669509 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.098018903 seconds)
  done (took 1.504233775 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.07157107 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.069880465 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.092566588 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.068414091 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.073724266 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.092640119 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.068088352 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.069587033 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.092050206 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.069042892 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.068204668 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.091074003 seconds)
  done (took 1.942506729 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.438748831 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.072017988 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.094604072 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.067737722 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.07327544 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.092092159 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.082147767 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.069927143 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.116625549 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.069181933 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.093400521 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.07089051 seconds)
  done (took 2.361093009 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.262263689 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079748338 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.326607051 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169772875 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142838916 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.158253346 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106904995 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141542319 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.200099571 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.140065037 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202233128 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227773239 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136327508 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169316032 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.117017761 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.134668606 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188111169 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222398197 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10739914 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.226667903 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208225375 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157423158 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.182309744 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131102302 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.136588766 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15321372 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.074259925 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107063987 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234684229 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163712051 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203076288 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140375988 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.10023529 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232860541 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227525492 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196938237 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165243764 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.088074958 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.159057275 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.166246167 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.258862118 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.116381031 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196601399 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136212362 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109082851 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174826991 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148928462 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.148737655 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.139079436 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.117307123 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177004953 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241873016 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.168174467 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.115284494 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139565646 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144120887 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.146997362 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105832278 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.271782799 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197779695 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161698723 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.098735304 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.1006342 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212767059 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162426423 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.144715606 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.156006633 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121662108 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170760527 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.213032821 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149087549 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176396902 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.183731164 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091495438 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149987701 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.197518155 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158758229 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232344713 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156603079 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.076310996 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15546329 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132862211 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10909315 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.146853387 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103353891 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.210809451 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127546627 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.141261992 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141453312 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13860903 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113386409 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222349327 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204715618 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132599035 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.06845161 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13281043 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.151289628 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178302635 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116928143 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137417443 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148962337 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.082139909 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194253274 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.078016494 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153663715 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.105795088 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153615165 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164767608 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.078200147 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156694634 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.129180161 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.12980698 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166219141 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.221248951 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.092316182 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110102335 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228367267 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157424492 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.133451831 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.178434444 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.217228547 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.104196846 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131733871 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206940941 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.245280045 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.09288649 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.225165004 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136393514 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.08660193 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.115577519 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15776352 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141421801 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.151899034 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11029228 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.15711562 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201263518 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.102459696 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.123290758 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167778851 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.084421552 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10849373 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142524363 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129002289 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.099172825 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.128648675 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.134984681 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170857414 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180764281 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111557111 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179764216 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.101979758 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226688822 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117850628 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.133039432 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106862821 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.097767344 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.166371316 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218716181 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082014763 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.227600817 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.156411253 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133120964 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149637907 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086080659 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.19654371 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.081840499 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.073523406 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201679965 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.140784125 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139327739 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.187096403 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132674645 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.157852985 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.153457195 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164904515 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187522151 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.165185595 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134428528 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.091440057 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.142281924 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155099361 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.100746803 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.122968031 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.085828408 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13217228 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124631516 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086297574 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199976243 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158127044 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100626189 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14143316 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125115754 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.204544423 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.079884911 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160734248 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.148481847 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122918225 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.210916519 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188500831 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167037283 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129123681 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20334143 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.073630103 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.076782612 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.119001952 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.156989966 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111227477 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.086321634 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146551387 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.20586481 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158898614 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168361697 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139637555 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150592125 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.215317913 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.074043888 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.145487216 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181696025 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155817119 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.156173281 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11561496 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.102203659 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.201862634 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111660349 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.271105429 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148417748 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155842319 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184440303 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.132378553 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082537517 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.134909343 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195071225 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134700757 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.183746893 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128215536 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117329201 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113222452 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.110207252 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133235271 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158449636 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148673184 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19092395 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.145480286 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163770817 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.08413086 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146655771 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152192324 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176399024 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.06712952 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150793401 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221752748 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123157341 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147542309 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188087996 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107013324 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.128261635 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.237130948 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201899645 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.086813949 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139054016 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15031907 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.184364868 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149515403 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.172616619 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141244421 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166277036 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139191315 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.087926399 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116552372 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126390061 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110085311 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.123537981 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.140523338 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.146528461 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.123158976 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161697417 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140591731 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140977617 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148099351 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.126875894 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.09355974 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126349665 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235401452 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151945719 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234229412 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.103775819 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.207562502 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.226351415 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.077854369 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107653168 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.084539291 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.170937853 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112327119 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163017851 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.124846809 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13364621 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158111216 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174631877 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.123787925 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.071327004 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140251661 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164999962 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140318363 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127114531 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.133713662 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196238782 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.131969211 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107329546 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155428953 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107935504 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131930898 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236344907 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.063375191 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125292037 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078374004 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109385003 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159331116 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214225272 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.084462212 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.155063912 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147815718 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14971555 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.159772422 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130850784 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.125861623 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141868734 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182943581 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158169236 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.119002814 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.142844369 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160764289 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21530716 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134818417 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.098031783 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232626094 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212781947 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.19631566 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.117444516 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144838733 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144082448 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.137771279 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171179884 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111839035 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.226602306 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085415439 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194162652 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134426302 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095642202 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183980191 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.099167404 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117815873 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196746558 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173281478 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08500789 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.107232943 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148069684 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152179366 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136112527 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.077983037 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169064838 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.100814855 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166939703 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22953733 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084658184 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135677471 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.126108272 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.109731435 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111982393 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130968686 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115375942 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.124315366 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.228031124 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.12010382 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209857644 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175044794 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143004868 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195760103 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103784781 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.663903939 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.107329605 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187352621 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.150017611 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.260083839 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.101124562 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148731389 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140036851 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15284101 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200673942 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134885133 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.178853188 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188026962 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.151864589 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082938102 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132093536 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140669275 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.118742563 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13562565 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144783492 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147069201 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.105169985 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.149681804 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18253585 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.084799951 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.12498751 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.216893527 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.148525892 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177375711 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.17189415 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113601535 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149413043 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171797928 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108280019 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.152083252 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215993856 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.137462915 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10146963 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.110564022 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.134883956 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232582188 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.07719689 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.221709374 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155684042 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.14009499 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144696322 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.150414627 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163236574 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136740354 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155723729 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124171156 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.142174 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147053548 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.112517518 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.079622765 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.135836966 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142509284 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.128807078 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.130830043 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.121823873 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208509916 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.074365726 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125452286 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131808641 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175464793 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.239618876 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.116399317 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.08634808 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148631719 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143099762 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.144311459 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156276048 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.109941463 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085185779 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.110669844 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.11770759 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.135967839 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144564091 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132175143 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139954597 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.227323368 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.088061749 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.253072136 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.123473335 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109636573 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.09723392 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.081362692 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124463657 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126642883 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137616498 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100990751 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232647206 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.124429409 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.093642067 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121505133 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.101873105 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08626094 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159207753 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139564843 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152299428 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126601779 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.064876764 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138499534 seconds)
  done (took 72.101734468 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.144489138 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.120764481 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.131822161 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.190144644 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.163354652 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.2549499 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.199559867 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.240284087 seconds)
  done (took 2.55166128 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.074212616 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.117685311 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.104027493 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.116822117 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.091289729 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.070219158 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.293527119 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.111251233 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.068937835 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.115839047 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.120710176 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.092488213 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.469043678 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.067981707 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.09487056 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.088151633 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.071421904 seconds)
  done (took 3.261974559 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.4302432 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.634503997 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.452852761 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.077502058 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.883602504 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.109626457 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.403587772 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.164483432 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.092503224 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.433561604 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.728038524 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.154919834 seconds)
  done (took 17.668531174 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.078642657 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.071306042 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.111808347 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.085774656 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.100583253 seconds)
  done (took 1.550616022 seconds)
done (took 115.863538083 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.084948335 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.350544923 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.055437262 seconds)
  done (took 1.544512775 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.087976814 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.088108088 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.11173085 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.085073369 seconds)
  done (took 1.481102948 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.078687339 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.078342473 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.113095598 seconds)
  done (took 1.377755829 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.280803663 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.166643307 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.091051096 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.086332596 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.080085585 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.106651387 seconds)
  done (took 1.380483142 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.076207074 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.077498507 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.101015786 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.078081417 seconds)
  done (took 1.436482772 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.07969256 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.055482493 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.056880549 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.083699723 seconds)
  done (took 1.381146254 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.09324734 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.107631 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.083032448 seconds)
  done (took 1.389757397 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.110878215 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.113830769 seconds)
  done (took 1.333637964 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.085154929 seconds)
  done (took 1.190079228 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.095305468 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.142008648 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.157704341 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.138412332 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.16735642 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.137493634 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.087545677 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.115202579 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.106042774 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.090718915 seconds)
  done (took 2.347019017 seconds)
done (took 16.584762974 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.081218833 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.393683921 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.362307633 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.118776285 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.671974422 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.358699134 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.00832711 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.120005121 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.121854151 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.09555443 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.08584065 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.678977804 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.971450095 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.350588992 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.95948699 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.325431139 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.677736853 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.070163625 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.0945522 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.0699484 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.967639545 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.096103606 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.070139323 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.07002757 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.676796683 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.373234337 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.096679344 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.325818723 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069980433 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.098283225 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.357405282 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.096913693 seconds)
  done (took 16.013277785 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.073617899 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.146309168 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.075458028 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.085433082 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.098741279 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.071410511 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.100175367 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.071030095 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.154307283 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.069779242 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.112601895 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.07070503 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.099307601 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.070586811 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.088941385 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.096762837 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.071094095 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.070220523 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.096277494 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069933063 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.114674644 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.069646576 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.070134298 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.096154405 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.069716399 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.108132176 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.070849684 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.069933695 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.095742752 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.071561725 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.099102463 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.070935999 seconds)
  done (took 3.909531246 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.118194325 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.154523603 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.076349902 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.130755908 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.115515312 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.098813644 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.173161268 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.094171601 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.157171594 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070123963 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.11308573 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.069982515 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.129171783 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.070712482 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.115971645 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.070445542 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.070760232 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.096448898 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.070071862 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.096665558 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.089253929 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.095264766 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.071031966 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.070751213 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.096956391 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.083546204 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.09607202 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.07092544 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.070094447 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.098461118 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.073359704 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.096509878 seconds)
  done (took 4.220611978 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.075739947 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.077678029 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.111101949 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.085510506 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.098576001 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.075156581 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.075087789 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.097778582 seconds)
  done (took 1.808757413 seconds)
done (took 27.063472391 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.083660511 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.072075671 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.101872989 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.084434122 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.101007718 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.081097137 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.070011647 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.103771089 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.079202248 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.075748337 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.104258122 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.070153502 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.100617352 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.06954237 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.076322444 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.095770687 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.081969056 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.100769795 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.081628957 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.081438264 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.098406717 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.079668439 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.102584664 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.080946507 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.107370964 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.0819484 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.085509461 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.101923804 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.071333138 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.099048898 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.078797914 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.112190883 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.070508708 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.081369894 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.096727556 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.070222319 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.069503557 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.095597408 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.081228085 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.102634862 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.07376347 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.102709792 seconds)
  done (took 4.766161323 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.092184038 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.091119862 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.112786708 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.072952238 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.098980985 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.06488081 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.118267779 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.072602466 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.095587187 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.090201313 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.057679993 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.088045461 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.072722343 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.063699593 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.095512049 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.058880731 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.061351882 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.084736862 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.061979108 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.060945593 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.08627517 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.056559945 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.062439182 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.065506283 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.084501877 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.064724921 seconds)
  done (took 3.155217975 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.079482274 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.086408122 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.115975652 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.131226764 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.135353838 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.080386907 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.106814037 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.090427423 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.116367781 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.068962422 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.072998695 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.125858645 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.091058627 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.102320232 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.069752574 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.116651506 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.085194189 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.072100866 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.102371643 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.093248342 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.113204137 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.079692309 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.123657223 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.084144944 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.069742208 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.098661111 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.073052878 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.109991247 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.074534332 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.079327285 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.100562959 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.073042885 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.098035999 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.080716921 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.074081572 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.097887583 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.093004376 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.106090415 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.081737729 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.069919615 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.10109464 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.070779854 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.116699958 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.114262347 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.096251231 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.076811738 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.077319113 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.105532446 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.070254944 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.115096997 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.078869979 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.069513253 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.099398493 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.06971559 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.096100946 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.083269196 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.071884701 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.099105341 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.078532822 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.099164905 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.082306403 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.074564119 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.112575007 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.069395021 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.104024248 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.069098513 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.070594632 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.095684387 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.094635177 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.071457335 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.139066176 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.070757083 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.098075415 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.079061764 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.104775112 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.076286021 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.070059328 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.11151311 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.079174751 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.100175556 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.078829261 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.073501914 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.100111859 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.091717029 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.099380027 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.071665487 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.071143196 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.102253402 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.072637716 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.097926766 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.083758752 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.070145638 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.099741378 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.086960001 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.09593856 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.071413124 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.076364006 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.101647927 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.06936178 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.118201189 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.075447547 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.09763212 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.079107086 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.069617809 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.10021686 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.080159927 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.074632502 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.095689647 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.07478655 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.102709506 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.071067481 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.071144098 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.09963553 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.071769877 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.106349282 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.076547417 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.075277943 seconds)
  done (took 11.573451387 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.196201096 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.189316204 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.072480865 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.180979803 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.078829446 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.10865221 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.18376503 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.098708979 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.09833586 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.071133497 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.070981016 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.132202292 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.126607366 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.108228938 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.107659897 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.070385918 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.115907227 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.106355469 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.184810303 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.178496426 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.117841246 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.078574566 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.072484289 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.099259621 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.072278621 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.079606506 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.114934322 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.078249323 seconds)
  done (took 4.330482449 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.085708365 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.139780971 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.075870574 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.094419072 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.121534892 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.070340039 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.10270781 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.071951895 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.110044903 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.082469687 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.097840449 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.075903814 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.076938302 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.106342659 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.07112993 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.107506956 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.080499347 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.07237223 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.101070682 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.075595844 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.109501015 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.08333052 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.10110873 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.069444591 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.076260409 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.097049204 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.06714978 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.115813833 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.070375322 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.120963061 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.068663012 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.075920361 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.116408451 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.071576421 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.097385035 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.073111846 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.07362816 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.100557168 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.071774444 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.069576939 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.095586369 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.059720638 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.0696633 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.10978976 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.076825708 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.089303718 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.076371488 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.103317097 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.0756813 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.067496801 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.100120231 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.072612354 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.073169688 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.110908939 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.075206737 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.102888856 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.075263333 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.068860019 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.106148295 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.073951699 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.066217233 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.095919535 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.076062415 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.096874547 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.078258014 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.074433723 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.096989058 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.072968683 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.07556101 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.10382995 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.073498899 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.10065124 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.068501908 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.07201564 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.102664426 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.074625083 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.074977253 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.096033239 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.069996896 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.097797987 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.058302761 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.070142361 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.056757688 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.101040864 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.068738289 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.095686029 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.073349929 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.076116923 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.110796914 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.072692604 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.103362345 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.070876823 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.0691794 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.100586655 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.066075788 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.100133767 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.089432751 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.114108259 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.070239792 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.068538319 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.114676707 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.075095658 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.096556828 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.059153663 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.077230745 seconds)
  done (took 10.105676976 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.099205576 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.095321455 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.099319923 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.087195836 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.126587667 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.095368354 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.105860926 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.076191989 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.07158873 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.114597904 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.07099053 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.106430592 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.069757755 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.080061873 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.127526648 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.07832653 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.09916028 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.079883731 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.074832151 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.138854801 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.086174032 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.112042115 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.084621029 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.098141608 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.075002473 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.082926048 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.126475641 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.083068969 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.109716486 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.088826819 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.083365008 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.126572812 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.089745447 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.101663222 seconds)
  done (took 4.394585695 seconds)
done (took 39.437608664 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.218088951 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.408205414 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.191939243 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.073775289 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.218166036 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.220834047 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.205013904 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.195488212 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.353643069 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.193702091 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.433267717 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.807520249 seconds)
done (took 58.660730611 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.197600974 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.336067951 seconds)
    (2/2) benchmarking "String"...
    done (took 1.467908625 seconds)
  done (took 3.962266829 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.551980781 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.167611009 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.47746613 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.196901961 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.194388016 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.613834479 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.813282416 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.042887684 seconds)
  done (took 27.645463041 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.205174605 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.552557404 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.651622271 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.645914292 seconds)
  done (took 18.195790903 seconds)
done (took 59.69619633 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.203016648 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.204291975 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.230213982 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.197584835 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.304503012 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.221915269 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.662954563 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.297020956 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.207075295 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.188632865 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.21661408 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.202484818 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.204277146 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.824525174 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.203331779 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.196324896 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.286735283 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.938251724 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.577365427 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.203673186 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.198445477 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.205174208 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.218608551 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.196825051 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.236478454 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.197085913 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.208855816 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.211138813 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.432553456 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.203271874 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.290331554 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.771896871 seconds)
  done (took 191.07899532 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.198475798 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.154005111 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.231433251 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.220649072 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.605508815 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.39943293 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.332037614 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.660321141 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.214436584 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.224799263 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.467463364 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.197020856 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.531141271 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.161043248 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.209669352 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.279804793 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.416672484 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.502443953 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.211684311 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.449062792 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.211179725 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.513039583 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.442878221 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.407965032 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.244970303 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.205622675 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.202715546 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.220805787 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.388336577 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.348601348 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.229826297 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.223830836 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.780790383 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.057366757 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.216800747 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.210202116 seconds)
  done (took 149.714056446 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.480071622 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.200802598 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.200289746 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.200489944 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.230263427 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.201281706 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.729509506 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.731108671 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.71643042 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.21328429 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.260669328 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.415289122 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.198700755 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.293271838 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.21184709 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.201704322 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.215109527 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.226761773 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.198440177 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.200392934 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.732722316 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.215074117 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.567389588 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.205253439 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.201537581 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.229781011 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.596576203 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.200720729 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.230326489 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.520240171 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.243677447 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.199133357 seconds)
    (32/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.201589064 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.537460352 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.232540741 seconds)
    (35/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.199824595 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.310705144 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.201846668 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.230377182 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.201846256 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.471107329 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.200919457 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.20188903 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.206141194 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.763026399 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.200784716 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.73451454 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.203360246 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.122415804 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.199873504 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.202437182 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.712944262 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.636756562 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.199809522 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.199580917 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.20406646 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.201869022 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.200125508 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.232090772 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.803502433 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.300109468 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.200325914 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.203647084 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.230950413 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.198887664 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.674611108 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.198667425 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.909170974 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.258673651 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.309412963 seconds)
    (70/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.202065989 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.736064443 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.204130958 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.296269714 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.319076326 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.201043583 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.200893979 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.203871678 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.202873194 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.309127124 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.201602206 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.609654643 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.207949901 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.203598869 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.263952722 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.296551963 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.201421027 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.539773898 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.203243437 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.204392319 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.936707042 seconds)
    (91/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.201364605 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.297026108 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.201194048 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.203617025 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.204787353 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.609125119 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.736554391 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.437266424 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.204787939 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.835733934 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.207865725 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.621270885 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.722360906 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.762572437 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.20398692 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.307948031 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.2051926 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.204396281 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.203530722 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.232404093 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.203791771 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.260742347 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.204731123 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.600981279 seconds)
  done (took 346.254056026 seconds)
done (took 689.6676526 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.892793082 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.873228984 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.977682562 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.868752755 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.846696998 seconds)
  done (took 10.602562709 seconds)
done (took 11.749262725 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.385079139 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.382885318 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.261735939 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.383837708 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.233044044 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.398855336 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.360929888 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.222762438 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.302326836 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.273961452 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.304730997 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.249579659 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.229685922 seconds)
  done (took 18.134571459 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.503384517 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.503832878 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.269783335 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.502609997 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.244736442 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.513603414 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.393579476 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.402916875 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.390608665 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.221199827 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.219948051 seconds)
  done (took 16.314890801 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.505494541 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.499123422 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.269718388 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.509231346 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.246842804 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.520713951 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.394401473 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.404458724 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.393519306 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.221618208 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.220460706 seconds)
  done (took 16.334733486 seconds)
done (took 51.931343763 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.215166812 seconds)
  done (took 2.361823372 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.247184237 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.412908166 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.227360141 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.220245932 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.216611115 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.217050448 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.220020904 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.215914144 seconds)
  done (took 11.126314981 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.21230985 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.211977343 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.213244309 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.214638557 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.214586993 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.213729375 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.216601825 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.214406385 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.216568056 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.216178003 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.215555213 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.216262238 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.215627806 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.211776335 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.21506894 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.215252575 seconds)
  done (took 20.584480023 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.217012689 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.213579233 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.214862749 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.215816122 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.215924491 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.21514948 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.214809399 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.212728843 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.214399332 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.214363673 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.216750877 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.212693406 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.213122401 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.215523702 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.215244661 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.214845829 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.214127667 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.215236278 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.220085039 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.215034753 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.215675053 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.214531107 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.216801639 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.21563885 seconds)
  done (took 30.317029441 seconds)
done (took 65.537370964 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.213328448 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.816918329 seconds)
  done (took 9.179964538 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.217920292 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.2167281 seconds)
  done (took 3.586235797 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.217380776 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.217161152 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.216682929 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.21663638 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.218318151 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.217593012 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.217108077 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.217335654 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.217291226 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.218585689 seconds)
  done (took 13.325750706 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.217411889 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.220074761 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.214498148 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.217135459 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.216782304 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.215534952 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.219018782 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.217519694 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.219147846 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.216879346 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.217668425 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.215215194 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.218325696 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.21445352 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.220356916 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.215310878 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.213600843 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.218119046 seconds)
  done (took 23.058356708 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.218624529 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.218890291 seconds)
  done (took 3.589420672 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.217418832 seconds)
    (2/7) benchmarking "second"...
    done (took 1.216298921 seconds)
    (3/7) benchmarking "month"...
    done (took 1.216673406 seconds)
    (4/7) benchmarking "year"...
    done (took 1.217723354 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.216346586 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.217205725 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.213265476 seconds)
  done (took 9.665784507 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.219950099 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.397353467 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.479129465 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.781839583 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.221230545 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.226309354 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.064637454 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.224502755 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.227696673 seconds)
  done (took 13.994230526 seconds)
done (took 77.550360579 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.220223882 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.208648092 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.04751261 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.214446969 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.225598085 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.509781924 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.225472482 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.330269658 seconds)
done (took 37.135788523 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.230665318 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.919649937 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.963554647 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.21365995 seconds)
  done (took 11.248980092 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.205685029 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.135361282 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.202743389 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.214306258 seconds)
  done (took 17.914224388 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.822754653 seconds)
    (2/2) benchmarking "read"...
    done (took 1.546632233 seconds)
  done (took 4.524336563 seconds)
done (took 41.074141611 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.22082481 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.220409328 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.219184144 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.222974184 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.220638106 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.219043465 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.220729616 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.221243642 seconds)
    (9/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.218579555 seconds)
    (10/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.219277558 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.22094325 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.22056217 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.221469398 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.220605184 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.21838544 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.222352493 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.221488626 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.21887059 seconds)
    (19/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.222324671 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.219827839 seconds)
    (21/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.222171283 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.222755265 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.21928161 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.220250654 seconds)
  done (took 30.448494032 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.222736254 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.218714983 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.221885845 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.223323421 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.219927878 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.222675829 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.222827207 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.21882121 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.223340011 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.22239284 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.221211974 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.220170648 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.221656572 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.219381841 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.221650819 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.220870152 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.222817594 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.222809109 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.221500005 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.220724179 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.223814265 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.22018638 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.220584873 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.223335781 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.220260118 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.219208931 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.223131258 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.22236855 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.222654181 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.221112466 seconds)
  done (took 37.802131222 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.22760311 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.232900578 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.221801919 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.226379084 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.224141742 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.222999182 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.223181051 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.223367119 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.223848983 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.223055322 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.222317323 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.223758446 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.224432077 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.223150306 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.223397057 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.222269396 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.224739011 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.224392677 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.224600772 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.224434145 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.22327743 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.222126001 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.224578871 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.223145589 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.225418136 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.22543469 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.223815427 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.223709699 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.223769597 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.224164794 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.224900381 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.224000472 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.224558249 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.225483971 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.224942469 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.225256338 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.22900057 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.234403075 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.22549814 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.224851488 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.226172941 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.226857949 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.224771579 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.226497944 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.225488117 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.22648013 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.225296916 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.226889872 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.22668223 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.225166796 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.22680482 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.225241798 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.225766836 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.227142072 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.225338042 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.225494861 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.226491764 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.226414911 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.226854617 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.225923174 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.224903205 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.226116651 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.227368651 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.226242579 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.22572749 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.226371127 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.228660272 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.225656507 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.226071653 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.226446804 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.228180298 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.226740442 seconds)
  done (took 89.388305142 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.226220625 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.224966507 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.224715359 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.223625725 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.224089324 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.226712906 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.223648157 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.227732158 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.223021465 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.227106546 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.226752653 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.224589133 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.22275097 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.226251119 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.226336777 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.224948381 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.228660663 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.224638626 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.227612741 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.228532691 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.226948043 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.224643361 seconds)
  done (took 28.123978614 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.226871466 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.228929759 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.226393724 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.229402492 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.22684499 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.230338082 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.230685459 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.228864377 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.228711968 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.225529337 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.226165919 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.229326454 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.224617912 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.226748575 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.226877224 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.225025955 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.229322942 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.226498328 seconds)
  done (took 23.257912835 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.226069982 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.227271958 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.231836035 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.226257904 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.226916373 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.229995557 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.228484483 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.228694038 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.231014776 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.22535572 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.230859641 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.229105685 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.229697465 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.227224793 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.230177677 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.228039934 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.231159774 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.226961526 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.229569047 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.226613184 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.227288424 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.23107197 seconds)
  done (took 28.191344008 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.229791578 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.230569125 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.22699827 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.22764416 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.229043944 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.230718556 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.231097294 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.227788184 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.233549727 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.231125657 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.229801924 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.229641162 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.227443267 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.23001713 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.22812026 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.227667826 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.230951549 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.22943226 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.231783504 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.227566735 seconds)
  done (took 25.755598455 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.230502896 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.231093519 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.23078333 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.228947803 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.232273175 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.230956561 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.23098936 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.23099882 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.230884718 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.231751423 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.231289509 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.231759018 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.230869672 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.232272438 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.230930467 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.230157277 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.232499486 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.231774321 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.231624669 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.232756431 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.231439842 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.231132517 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.231716201 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.232057484 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.229288016 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.232213171 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.233110814 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.232218428 seconds)
  done (took 35.641962003 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.230429702 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.233896836 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.230268054 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.229357262 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.230028283 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.229894886 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.230835198 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.230816075 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.23297067 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.230355541 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.231769612 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.232365358 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.23408499 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.232526137 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.233437588 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.233480647 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.231827293 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.229982981 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.231075243 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.230375859 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.235099681 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.232615515 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.233636945 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.229056883 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.231995838 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.234236642 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.230628303 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.231417624 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.23424192 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.230887979 seconds)
  done (took 38.119825901 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.253429913 seconds)
    (2/2) benchmarking "in"...
    done (took 1.252758735 seconds)
  done (took 3.672830358 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.231125047 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.233796307 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.235538576 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.23208501 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.230815134 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.233309642 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.234621761 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.230351708 seconds)
  done (took 11.029653017 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.232532491 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.235009337 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.233527693 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.234597851 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.233746015 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.233505317 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.243680441 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.250773045 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.2369492 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.234283164 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.238419562 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.24316803 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.238609743 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.235420083 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.233469607 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.237350096 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.236789858 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.233670881 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.235293865 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.23699129 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.235110935 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.237211549 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.239088824 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.232720124 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.236148667 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.250217013 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.242577321 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.236461238 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.235239425 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.242595148 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.235980192 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.232562153 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.234790729 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.234834888 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.236894924 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.23665863 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.24713509 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.252686953 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.243987338 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.236349402 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.236833072 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.232759793 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.238422742 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.2387665 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.236052203 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.235902555 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.237672127 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.233570658 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.234642906 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.237569253 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.243326059 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.236597062 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.23404194 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.244888435 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.237871392 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.245158499 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.254265354 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.239189762 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.244541737 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.251474601 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.254705066 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.248085597 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.239560405 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.237543598 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.249452861 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.257875044 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.246093168 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.253210358 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.236595234 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.240253652 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.246587889 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.256011064 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.25152365 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.238989318 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.238829125 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.238970503 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.239061553 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.240389265 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.248378303 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.259645854 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.236932124 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.239132974 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.249130804 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.2586214 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.236720079 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.238583401 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.238042062 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.237145881 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.240656689 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.251862849 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.255099719 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.239028959 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.237179735 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.238742744 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.242966953 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.238095676 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.237722608 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.241740195 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.236424617 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.239421567 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.238502552 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.243474268 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.250186737 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.240378608 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.238893443 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.250604813 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.241550306 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.237514753 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.253625353 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.241496185 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.239895934 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.24039716 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.250164371 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.238462214 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.242109613 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.250700223 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.241183047 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.242758584 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.242017945 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.244389967 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.251893311 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.268289066 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.240914779 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.243140818 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.247190062 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.254412948 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.240470189 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.244590817 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.241863416 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.240136728 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.239071052 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.243402837 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.241727471 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.2434337 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.243018177 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.244204117 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.242109228 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.2419505 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.242217892 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.243625641 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.246083704 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.243467736 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.24454424 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.246396061 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.240855232 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.245708634 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.25261554 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.243717238 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.242632322 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.24507931 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.240705498 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.242576265 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.245193166 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.243471664 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.244179388 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.241060961 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.239814145 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.242675805 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.244871958 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.244627122 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.243118503 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.244666879 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.248023095 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.243734488 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.250682611 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.242163496 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.242545382 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.244170252 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.244017662 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.244306668 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.244833282 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.24288965 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.247492641 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.251920524 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.246872098 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.243343672 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.251875977 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.246658173 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.242919024 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.244601456 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.246001311 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.254065358 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.244046377 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.253534205 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.244193809 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.243527275 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.24649051 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.244615552 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.246405539 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.24491274 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.247199214 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.255288003 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.259848689 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.254998744 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.246200493 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.25032827 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.246049011 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.247694369 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.25140554 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.245511896 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.246874041 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.244064286 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.244636566 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.244543685 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.249931221 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.245738653 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.244669255 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.247211966 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.245312673 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.245065172 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.245421581 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.248808295 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.247295198 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.243968498 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.247636682 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.245247632 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.245969329 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.244437763 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.246171622 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.244457941 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.247320553 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.247451441 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.258141295 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.245131714 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.247044509 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.249286412 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.247313078 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.24641461 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.247951127 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.2488506 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.247301677 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.25725904 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.266351122 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.248020705 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.255262795 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.266368437 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.247052712 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.253305126 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.248642595 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.245310983 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.249314044 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.256581241 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.248888112 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.247970638 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.24728535 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.249622395 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.248789336 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.258501087 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.246964888 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.245983546 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.249323894 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.25301064 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.245541392 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.251578797 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.249593867 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.250940319 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.251406155 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.249672482 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.246828632 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.251186243 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.247600541 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.246150472 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.247934499 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.250449322 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.254646667 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.256137035 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.249175822 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.250450776 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.249528022 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.251415539 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.249559061 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.247339187 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.245042554 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.264147535 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.260509513 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.259201294 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.253558834 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.250099364 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.255038612 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.251027236 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.252129169 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.2469888 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.246252947 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.248482287 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.249344448 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.249635068 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.251886548 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.252296613 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.250896938 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.251896229 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.25199526 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.252158236 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.251034433 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.248729929 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.246655718 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.247972331 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.250464674 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.25118489 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.254938109 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.2509898 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.249652634 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.250244088 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.257995117 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.268658846 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.248964133 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.248325825 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.25190851 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.248980327 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.25195641 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.251495309 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.252846602 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.256192722 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.252363674 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.261123844 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.253472283 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.264257567 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.253085919 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.25309602 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.255911786 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.247972051 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.252083669 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.251543078 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.252868042 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.261686669 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.27123871 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.251584094 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.253299201 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.250610437 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.251424386 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.250457261 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.251955639 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.25081987 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.252297526 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.262325896 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.271259829 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.257097128 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.254852246 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.25030991 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.249668857 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.251913006 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.252977087 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.259721918 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.251958011 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.254379174 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.252064934 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.255078866 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.255788107 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.253298063 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.253749636 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.251321402 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.253785162 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.264527621 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.271488327 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.257023605 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.251268808 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.267809634 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.25283426 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.264055983 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.272083705 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.251771056 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.252969016 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.255689675 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.258493017 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.254313518 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.256722844 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.253254837 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.254272379 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.258287878 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.253884891 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.258237504 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.254804165 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.254078395 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.2567197 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.263280592 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.275730183 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.255841508 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.259767409 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.248239834 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.253556419 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.257987968 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.252474314 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.253980788 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.254760643 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.264903477 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.262547454 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.255685628 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.254489051 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.255692973 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.25582281 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.254943757 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.254875131 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.254219952 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.257083476 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.258917608 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.254077186 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.262233368 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.256376937 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.258134908 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.25893204 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.257518138 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.269802325 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.255438391 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.260257315 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.255131945 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.256477049 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.256938988 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.256197906 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.256875863 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.2584139 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.259210303 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.258656206 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.262164556 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.259667486 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.26087532 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.256094899 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.256687137 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.258049819 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.259836011 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.256187761 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.256090602 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.25652126 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.256884554 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.256716828 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.260881445 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.257637233 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.257668115 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.258644304 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.257098081 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.258867811 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.261593856 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.255365106 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.254192694 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.258910668 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.257079769 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.257523283 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.256274639 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.269651816 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.262847608 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.265484896 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.265861008 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.259527016 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.259976774 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.262890787 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.264923752 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.257815341 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.259821355 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.258568551 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.261719235 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.258317693 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.260880634 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.256903425 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.268049254 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.259375629 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.259968549 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.269826153 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.277398108 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.25891943 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.261013129 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.262330724 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.260880382 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.257500603 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.259785991 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.258851266 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.269752018 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.280880387 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.260575294 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.261909021 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.257519786 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.259749733 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.259853037 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.261499648 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.26062704 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.260077547 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.261007464 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.259325931 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.263641497 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.256940233 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.261105267 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.261537557 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.26158 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.267756664 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.255920701 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.263855621 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.262869913 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.26338512 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.261353955 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.261077526 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.257663937 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.258775702 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.261315841 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.260567028 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.262737454 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.264614538 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.261992567 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.262552275 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.263206314 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.261996247 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.264641679 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.272606466 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.268162763 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.260399471 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.260408389 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.263000426 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.265896527 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.261188361 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.260632637 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.263098798 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.264997322 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.262042997 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.261071922 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.261325273 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.264838934 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.282945995 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.281789905 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.263862065 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.264502425 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.270351484 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.26347425 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.260512923 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.26404362 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.266446058 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.266777329 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.270947233 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.261433241 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.271074853 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.280955892 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.262614097 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.268365334 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.267521918 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.273329812 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.266076802 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.262251446 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.260255208 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.268323 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.28237645 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.262939792 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.272109098 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.295575403 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.282499267 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.2653239 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.264762075 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.262877132 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.262185733 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.267748018 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.265001442 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.264794967 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.264025575 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.263242804 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.26502208 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.270995684 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.265936358 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.264266439 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.263913822 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.26398326 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.268519141 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.263201257 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.263658028 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.264714487 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.263559582 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.264409412 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.264139482 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.265042123 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.2811255 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.280169811 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.267548404 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.266276687 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.262921179 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.270071898 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.268999896 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.275988696 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.272819606 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.265046259 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.264932604 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.26790682 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.264750873 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.263803412 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.264822075 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.26619196 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.264942346 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.261880312 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.281617128 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.275902923 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.272637236 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.266231835 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.266031421 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.267319161 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.26750372 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.26592801 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.265509997 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.268949983 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.267718285 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.269323239 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.266466256 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.265176026 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.267716711 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.275248505 seconds)
  done (took 748.121761231 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.264223169 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.266398129 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.264204269 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.265706639 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.264747174 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.2647166 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.263980784 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.265334811 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.263912235 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.265931331 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.26416387 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.266072118 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.265948949 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.265684424 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.26643584 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.264621842 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.265600069 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.264732332 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.264672296 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.265029915 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.26547196 seconds)
  done (took 27.766437395 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.268026659 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.26471878 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.266285485 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.266857869 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.264333102 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.268645449 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.266957995 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.268505469 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.268791666 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.267100391 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.267907355 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.269532388 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.265909441 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.268733567 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.266800449 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.27031688 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.268293783 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.267612105 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.270144758 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.266453137 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.26949999 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.267677686 seconds)
  done (took 29.090181871 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.270571747 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.269211309 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.267971717 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.266569458 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.268252325 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.266398977 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.267722756 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.267296032 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.26962456 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.269716537 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.267938859 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.2707491 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.276429243 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.274810864 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.273676858 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.270468754 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.412902603 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.267718792 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.26947757 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.267572732 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.266286158 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.274840675 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.268696626 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.268016148 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.269769657 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.270833155 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.268820891 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.270590534 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.270857478 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.269342822 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.271438043 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.270010741 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.270663484 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.272987615 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.27035131 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.270795083 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.275880212 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.270657006 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.269366755 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.271655421 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.282311395 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.289159735 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.269057595 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.28016489 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.271792366 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.271615235 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.274695445 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.279643435 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.265995476 seconds)
  done (took 63.632918338 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.269379549 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.271623725 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.269046456 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.273579177 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.2709395 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.272049655 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.271623376 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.273769662 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.270520682 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.269533858 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.272761237 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.268614748 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.271958681 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.27142659 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.273545629 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.271479693 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.271142421 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.269445493 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.271923704 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.271356447 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.270088856 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.273017636 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.273556455 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.270336241 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.273111548 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.270232561 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.272534777 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.274272109 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.271864941 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.271333731 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.273753584 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.273304998 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.273802233 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.271147667 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.272260356 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.273590053 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.274465056 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.271281247 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.272874375 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.270300686 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.273167849 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.272716086 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.274002679 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.274434504 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.271955525 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.271806713 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.27101321 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.270928121 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.272285068 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.27298755 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.274360709 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.272478541 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.274646747 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.271973364 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.274698758 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.272906614 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.273055311 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.273121037 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.27409179 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.272185057 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.271995406 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.27637172 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.272827411 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.274903343 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.274434592 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.272537958 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.272926204 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.274218856 seconds)
  done (took 87.727248601 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.273044646 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.273875755 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.272360623 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.273656002 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.274516936 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.275852141 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.273627317 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.274530451 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.272083078 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.274125177 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.273741951 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.275716907 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.275619287 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.276891768 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.276331403 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.273819779 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.274751871 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.275460682 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.274527063 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.275173296 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.275963366 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.274081716 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.274831496 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.276739175 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.275412159 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.276015806 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.273801186 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.277932733 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.274662875 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.274624524 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.275391129 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.274996055 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.274964998 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.273936827 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.276595321 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.276358034 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.275695773 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.276263561 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.276541826 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.276932889 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.275244276 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.276465804 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.275144597 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.276997212 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.274959573 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.277053199 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.276938006 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.277384314 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.277468983 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.276154356 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.275158707 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.276576309 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.275913193 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.276043902 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.276466402 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.277077002 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.277460645 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.277373741 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.275962317 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.277743565 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.276293432 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.278535526 seconds)
  done (took 80.293608854 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.278580255 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.278623386 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.27402718 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.274454225 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.278508431 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.274399373 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.277397779 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.277532903 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.278865131 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.280017076 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.277918795 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.277150327 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.276309767 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.278444494 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.274929459 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.275891266 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.277658664 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.275793617 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.2799266 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.276793709 seconds)
  done (took 26.753474157 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.278974128 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.278610924 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.276363535 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.27554346 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.278702165 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.278624823 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.279994116 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.280996184 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.276334004 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.279512835 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.278997207 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.28007657 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.277253443 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.2790821 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.280860347 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.278272434 seconds)
  done (took 21.668165878 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.277803306 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.27996163 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.279432459 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.278608294 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.278144964 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.278369672 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.283492514 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.277986287 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.276301891 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.281008983 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.278785968 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.282378243 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.281012954 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.280414838 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.278865778 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.280752039 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.277641034 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.27876114 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.28334693 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.281078022 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.277874445 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.27864947 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.281878228 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.281211859 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.279309415 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.280048474 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.278227612 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.278294468 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.277498402 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.282587452 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.278524533 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.278075007 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.280616824 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.280051431 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.281084712 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.280122552 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.282875653 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.282908916 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.28180001 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.281243728 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.282513363 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.280648026 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.281427675 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.282114925 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.280783861 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.281839914 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.280081934 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.280670223 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.280162213 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.280139527 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.282809626 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.281626131 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.281459011 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.283862908 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.284484983 seconds)
  done (took 71.635064992 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.281753797 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.282079934 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.282112828 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.282766369 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.28323175 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.279782822 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.283274604 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.281797272 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.281795713 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.282894357 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.28008692 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.282287847 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.280749 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.285582592 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.281595207 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.284961717 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.281899861 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.282247326 seconds)
  done (took 24.294618284 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.28299444 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.283061788 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.28522165 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.282245331 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.283271705 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.286448762 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.281406552 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.285205068 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.284952771 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.281821276 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.28160105 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.28495415 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.285356282 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.28600866 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.283157014 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.283092882 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.285225727 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.28466968 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.281304121 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.28238035 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.285054896 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.282870266 seconds)
  done (took 29.457597056 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.281051834 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.285108881 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.299396009 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.326918562 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.312745538 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.282341109 seconds)
  done (took 9.003243636 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.28259327 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.285206147 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.283429507 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.285643454 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.285564232 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.282824003 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.282872191 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.284838769 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.285491179 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.28368722 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.281654405 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.286124297 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.286297048 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.283261057 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.284766704 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.28623384 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.283871815 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.284714343 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.285402018 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.287547607 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.282961428 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.285959405 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.284583743 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.283026986 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.282224322 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.284804327 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.286375206 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.284471773 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.285275598 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.287386612 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.286895313 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.28619696 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.287602167 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.284965903 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.288728678 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.287032155 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.285688852 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.286975453 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.287097571 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.28507921 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.287400501 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.28783664 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.287405969 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.286000056 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.28826028 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.284169296 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.285983853 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.28793062 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.285486291 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.287567139 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.289890145 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.286299798 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.289572633 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.288505867 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.288565183 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.288762352 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.285678173 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.287039079 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.289658503 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.287385796 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.287586455 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.28829335 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.284871925 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.286599354 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.290077722 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.287775446 seconds)
  done (took 86.098021133 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.286473319 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.287925793 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.287130538 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.288396847 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.287982147 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.288307842 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.286840624 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.28577345 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.288940784 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.287123696 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.288829479 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.286376764 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.287051099 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.28895727 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.288335944 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.286078575 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.288113769 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.287706941 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.287430303 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.290399136 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.287432268 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.288620424 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.288111845 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.289629798 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.288678868 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.290862108 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.289746353 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.288162796 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.288613423 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.288003665 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.28688594 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.2883733 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.287402377 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.288629501 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.287939449 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.287881274 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.288610659 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.288483952 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.288363804 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.288227601 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.289981742 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.292291396 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.290119516 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.287700485 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.28952592 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.288775355 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.288036876 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.289706419 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.288516865 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.290909896 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.290254645 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.289565627 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.288884746 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.2906345 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.289774824 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.288543555 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.289841095 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.290345103 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.289262311 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.292901062 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.288041157 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.289064835 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.294247162 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.290183462 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.290799603 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.291223013 seconds)
  done (took 86.283536011 seconds)
done (took 1744.411790451 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.379504486 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.292780552 seconds)
  done (took 13.892776082 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.448702835 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.403377381 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.285275509 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.317357485 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.285730496 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.296061569 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.281473194 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.286186909 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.284572421 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.286373041 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.287597724 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.471681528 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.301124406 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.285974582 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.28589258 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.379320881 seconds)
  done (took 42.418234845 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.318496368 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.295914385 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.407647857 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.312824528 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.3174915 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.478153515 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.351365176 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.298844145 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.46313077 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.337888343 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.842634021 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.316984284 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.294525146 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.448338224 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.311028367 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.482860096 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.546683841 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.941132299 seconds)
  done (took 29.994479355 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.744086374 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.332707861 seconds)
  done (took 9.303949992 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.295331434 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.286435132 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.289831109 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.297141208 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.300296227 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.326854786 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.314118638 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.359035857 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.307898302 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.330431305 seconds)
  done (took 64.346045587 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.313480673 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.293917857 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.295922065 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.291713202 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.284895231 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.285118353 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.291210625 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.292268268 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.959799548 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.421265669 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.314279629 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.301025657 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.2956481 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.29505201 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.291326132 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.329808172 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.424320623 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.293850017 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.290551359 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.30038733 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.292988703 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.422043243 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.337746633 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.297164274 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.422059971 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.983044062 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.298690455 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.300925738 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.412585601 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.292920826 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.292838293 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.294638584 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.294846815 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.855945279 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.811942268 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.308242986 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.317200366 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.3009179 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.29194309 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.465748485 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.29583936 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.303430445 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.285990346 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.766795268 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.454751222 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.406663205 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.56163242 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.293936861 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.296755254 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.358194815 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.295929847 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.295793228 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.323186376 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.048253449 seconds)
  done (took 109.376581925 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.34449742 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.777612574 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.459474482 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.307896458 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.082694984 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.998492231 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.295751277 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.582766754 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.297557296 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.287545169 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.630128056 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.801766295 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.293362099 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.298153797 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.955832214 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.290300097 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.289018883 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.072457972 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.290237294 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.290080393 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.712507188 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.311118538 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.294149751 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.324540921 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.328880806 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.774383299 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.827105918 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.754279215 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.29101737 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.288906583 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.77128369 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.296079658 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.37228334 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.291740227 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.570210532 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.651208151 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.628459461 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.290611669 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.296835127 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.291676108 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.324022424 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.751127331 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.644792744 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.287607396 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.292098858 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.756071492 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.289104608 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.28962562 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.295918778 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.49361241 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.27996588 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.290040712 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.767230045 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.291171551 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.636279945 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.364767171 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.32559268 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.782470947 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.289592046 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.387119706 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.343353129 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.290611341 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.294826524 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.296620588 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.294793971 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.638863985 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.67993908 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.293110922 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.640200555 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.75827133 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.298702789 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.828191581 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.1624289 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.316354691 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.345873535 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.289844905 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.886484875 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.78755746 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.340974175 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.293602706 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.625581482 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.295919233 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.613565897 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.306674849 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.312153399 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.715483833 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.31918067 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.320079924 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.291836566 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.296593782 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.912906555 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.296309963 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.583479344 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.309737288 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.29305344 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.292834409 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.34020337 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.292814411 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.314666855 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.294477039 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.8304305 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.30344276 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.591564409 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.30968503 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.293005705 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.294628644 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.295456161 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.291539004 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.510298065 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.731658711 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.295607131 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.295300909 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.293093942 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.30272918 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.293111153 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.298014257 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.599569528 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.294139578 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.293002741 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.295264646 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.013486359 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.298415197 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.292477374 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.297346392 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.149792675 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.505208203 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.312303515 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.294056148 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.297060729 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.311837442 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.663865803 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.295982633 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.327620176 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.296241787 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.007107725 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.321608759 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.313706887 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.9398076 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.301387937 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.267342265 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.318985371 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.295290568 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.599227355 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.570363242 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.615880644 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.296310461 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.313274781 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.984103485 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.309180012 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.427307347 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.314859899 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.297308186 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.495007858 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.544221765 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.294539802 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.868643732 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.298754441 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.511503045 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.306682201 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.616094134 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.796853737 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.295766087 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.300370583 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.995210839 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.968932656 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.918842942 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.299240198 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.628256436 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.294583276 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.754983841 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.293629607 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.296881288 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.746667434 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.299270346 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.30001802 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.2957445 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.298891151 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.363634103 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.471032471 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.418022295 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.300882819 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.756997197 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.306344245 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.296376362 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.302387228 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.300393663 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.648959722 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.352580196 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.298976989 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.296622147 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.299489926 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.303728281 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.775711455 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.193776483 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.297258501 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.450606046 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.94275162 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.298705786 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.297312595 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.891497774 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.558431018 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.807424963 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.310507941 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.609456041 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.299760305 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.337097328 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.028839629 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.308097654 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.77249146 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.298737772 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.29805506 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.897416264 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.297661623 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.369330651 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.300636351 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.301983425 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.832206868 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.298025343 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.303336599 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.677410569 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.299515173 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.545904707 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.299314989 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.351563228 seconds)
  done (took 1102.745446782 seconds)
done (took 1373.300507299 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.299056868 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.299279828 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.289546322 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.306323461 seconds)
  done (took 26.436004223 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.309001749 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.306938011 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.30701346 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.306463373 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.309519638 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.307795612 seconds)
  done (took 9.092007703 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.419557266 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.301147208 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.301890347 seconds)
  done (took 19.267856024 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.527417658 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.56341482 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.681498135 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.505975304 seconds)
  done (took 10.523877301 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.30791801 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.30812176 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.309468703 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.312393135 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.309632446 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.312575139 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.30870815 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.311186264 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.311152663 seconds)
  done (took 13.034248376 seconds)
  (6/6) benchmarking "26942"...
  done (took 5.332700881 seconds)
done (took 84.927663159 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.066280078 seconds)
    (2/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.303116868 seconds)
    (3/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.325924306 seconds)
    (4/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.794133469 seconds)
    (5/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.163286354 seconds)
    (6/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.379554744 seconds)
    (7/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.170026296 seconds)
    (8/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.699063307 seconds)
    (9/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.30317901 seconds)
    (10/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.311455055 seconds)
    (11/309) benchmarking ("sort", BigInt, false)...
    done (took 6.304773548 seconds)
    (12/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.578148463 seconds)
    (13/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.430471955 seconds)
    (14/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.344344597 seconds)
    (15/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.33060517 seconds)
    (16/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.301006971 seconds)
    (17/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.647264944 seconds)
    (18/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.355553755 seconds)
    (19/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.145099352 seconds)
    (20/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.453560347 seconds)
    (21/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.34552348 seconds)
    (22/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.425494289 seconds)
    (23/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.23574176 seconds)
    (24/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.795263386 seconds)
    (25/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.648532221 seconds)
    (26/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.331952013 seconds)
    (27/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.747264561 seconds)
    (28/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.154863422 seconds)
    (29/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.805331761 seconds)
    (30/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.975183504 seconds)
    (31/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.305701555 seconds)
    (32/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.291009334 seconds)
    (33/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.385607555 seconds)
    (34/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.679301607 seconds)
    (35/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.431887298 seconds)
    (36/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.146659779 seconds)
    (37/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.302896027 seconds)
    (38/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.321471943 seconds)
    (39/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.313888762 seconds)
    (40/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.304290167 seconds)
    (41/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.718177248 seconds)
    (42/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.351500944 seconds)
    (43/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.357881086 seconds)
    (44/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.545904337 seconds)
    (45/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.372448136 seconds)
    (46/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.368748164 seconds)
    (47/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 5.476175046 seconds)
    (48/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.332440135 seconds)
    (49/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.415862647 seconds)
    (50/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.290443229 seconds)
    (51/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.290326787 seconds)
    (52/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.585134912 seconds)
    (53/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.585997493 seconds)
    (54/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.943454979 seconds)
    (55/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.383692277 seconds)
    (56/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.388775511 seconds)
    (57/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.305702502 seconds)
    (58/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.629569743 seconds)
    (59/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.306963854 seconds)
    (60/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.301126513 seconds)
    (61/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.384883946 seconds)
    (62/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.385377348 seconds)
    (63/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.302033242 seconds)
    (64/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.931928587 seconds)
    (65/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.915763008 seconds)
    (66/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.154615528 seconds)
    (67/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.942003975 seconds)
    (68/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.330515269 seconds)
    (69/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.3205579 seconds)
    (70/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.495225599 seconds)
    (71/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.716015227 seconds)
    (72/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.721963906 seconds)
    (73/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 3.897525857 seconds)
    (74/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.953792266 seconds)
    (75/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.387893626 seconds)
    (76/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.970442768 seconds)
    (77/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.329919505 seconds)
    (78/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.37826065 seconds)
    (79/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.621432427 seconds)
    (80/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.068675004 seconds)
    (81/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.289800013 seconds)
    (82/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.764133602 seconds)
    (83/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.314546897 seconds)
    (84/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.234832927 seconds)
    (85/309) benchmarking ("sort", Int64, false)...
    done (took 5.488135874 seconds)
    (86/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.392380845 seconds)
    (87/309) benchmarking ("sort", Int8, false)...
    done (took 4.385985045 seconds)
    (88/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.729891803 seconds)
    (89/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.596418914 seconds)
    (90/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 4.161430868 seconds)
    (91/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.807071413 seconds)
    (92/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.295067181 seconds)
    (93/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.607143818 seconds)
    (94/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.674599689 seconds)
    (95/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.295762864 seconds)
    (96/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.059326793 seconds)
    (97/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.411105852 seconds)
    (98/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.304541016 seconds)
    (99/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.717647471 seconds)
    (100/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.429335097 seconds)
    (101/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.290032355 seconds)
    (102/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.372452948 seconds)
    (103/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.809916765 seconds)
    (104/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.734977848 seconds)
    (105/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.612103522 seconds)
    (106/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.693064254 seconds)
    (107/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.72031372 seconds)
    (108/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.516567502 seconds)
    (109/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.630809877 seconds)
    (110/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.921183965 seconds)
    (111/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.308140212 seconds)
    (112/309) benchmarking ("sort", Float32, false)...
    done (took 5.31162 seconds)
    (113/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.304875343 seconds)
    (114/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.09569021 seconds)
    (115/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.470963361 seconds)
    (116/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.383587713 seconds)
    (117/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.07522161 seconds)
    (118/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.3044615 seconds)
    (119/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.303436267 seconds)
    (120/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.404323156 seconds)
    (121/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.415088768 seconds)
    (122/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.730734107 seconds)
    (123/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.793884093 seconds)
    (124/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.649695943 seconds)
    (125/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.198217002 seconds)
    (126/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.910003633 seconds)
    (127/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.89779743 seconds)
    (128/309) benchmarking ("sort", Bool, false)...
    done (took 1.816985077 seconds)
    (129/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.331862263 seconds)
    (130/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.379230112 seconds)
    (131/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.314290161 seconds)
    (132/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.586141844 seconds)
    (133/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.769188424 seconds)
    (134/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.324635942 seconds)
    (135/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.077793446 seconds)
    (136/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.861550387 seconds)
    (137/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.074957655 seconds)
    (138/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.308012773 seconds)
    (139/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.569767285 seconds)
    (140/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.737157775 seconds)
    (141/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.294078628 seconds)
    (142/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.309270302 seconds)
    (143/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.138774486 seconds)
    (144/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.624019691 seconds)
    (145/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.436984571 seconds)
    (146/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.413502177 seconds)
    (147/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.291863401 seconds)
    (148/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.332752597 seconds)
    (149/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.999654219 seconds)
    (150/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.704928493 seconds)
    (151/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.083897217 seconds)
    (152/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.40317491 seconds)
    (153/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.332917406 seconds)
    (154/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.175370651 seconds)
    (155/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.305952014 seconds)
    (156/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.366949633 seconds)
    (157/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.332788624 seconds)
    (158/309) benchmarking ("sort", Float64, false)...
    done (took 5.616173702 seconds)
    (159/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.389857689 seconds)
    (160/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.201721869 seconds)
    (161/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.329280873 seconds)
    (162/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.317777553 seconds)
    (163/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.711716911 seconds)
    (164/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.374931357 seconds)
    (165/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.41300143 seconds)
    (166/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.334365473 seconds)
    (167/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.392328344 seconds)
    (168/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.308915061 seconds)
    (169/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.502179525 seconds)
    (170/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.89511106 seconds)
    (171/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.335996587 seconds)
    (172/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.801888099 seconds)
    (173/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.674304334 seconds)
    (174/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.964614183 seconds)
    (175/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.670358425 seconds)
    (176/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.205327939 seconds)
    (177/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.293352376 seconds)
    (178/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.827870003 seconds)
    (179/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.306858026 seconds)
    (180/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.354681402 seconds)
    (181/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.450598789 seconds)
    (182/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.331918779 seconds)
    (183/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.616613969 seconds)
    (184/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.353843137 seconds)
    (185/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.335433378 seconds)
    (186/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.336523381 seconds)
    (187/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.432710724 seconds)
    (188/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.187132999 seconds)
    (189/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.39473974 seconds)
    (190/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.307132038 seconds)
    (191/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.307423715 seconds)
    (192/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.39804747 seconds)
    (193/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.507191204 seconds)
    (194/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.391416458 seconds)
    (195/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.334721572 seconds)
    (196/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.437038946 seconds)
    (197/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.942828003 seconds)
    (198/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.916707106 seconds)
    (199/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.945976409 seconds)
    (200/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.366974846 seconds)
    (201/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.646746377 seconds)
    (202/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.328666696 seconds)
    (203/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.307641136 seconds)
    (204/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.736536472 seconds)
    (205/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.990625314 seconds)
    (206/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.54956779 seconds)
    (207/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.955099917 seconds)
    (208/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.309590475 seconds)
    (209/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.448019103 seconds)
    (210/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.998722911 seconds)
    (211/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 6.067700822 seconds)
    (212/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.852034065 seconds)
    (213/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.518436782 seconds)
    (214/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.559396772 seconds)
    (215/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.888280555 seconds)
    (216/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.723893114 seconds)
    (217/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.665526142 seconds)
    (218/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.318992773 seconds)
    (219/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.372363047 seconds)
    (220/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.523999861 seconds)
    (221/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.66383558 seconds)
    (222/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.52474584 seconds)
    (223/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.239788182 seconds)
    (224/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.404481408 seconds)
    (225/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.333943179 seconds)
    (226/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.294921836 seconds)
    (227/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.186142711 seconds)
    (228/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.127433177 seconds)
    (229/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.298927427 seconds)
    (230/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.615948948 seconds)
    (231/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.628105919 seconds)
    (232/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.313719383 seconds)
    (233/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.372508929 seconds)
    (234/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.50196096 seconds)
    (235/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.729465607 seconds)
    (236/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.332083288 seconds)
    (237/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.814693639 seconds)
    (238/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.341483334 seconds)
    (239/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.698597346 seconds)
    (240/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.729188502 seconds)
    (241/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.524772674 seconds)
    (242/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.333388123 seconds)
    (243/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.314206493 seconds)
    (244/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.437940975 seconds)
    (245/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.176863858 seconds)
    (246/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.932065932 seconds)
    (247/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.907536508 seconds)
    (248/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.306999884 seconds)
    (249/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.219779551 seconds)
    (250/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.528780623 seconds)
    (251/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 4.213178852 seconds)
    (252/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.92855025 seconds)
    (253/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.397043292 seconds)
    (254/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.32309182 seconds)
    (255/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.727581823 seconds)
    (256/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.342411565 seconds)
    (257/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.364538778 seconds)
    (258/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.877058073 seconds)
    (259/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.950148566 seconds)
    (260/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.734389029 seconds)
    (261/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.359059595 seconds)
    (262/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.337079647 seconds)
    (263/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.704163475 seconds)
    (264/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.730387831 seconds)
    (265/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.330168609 seconds)
    (266/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.632093561 seconds)
    (267/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.415143526 seconds)
    (268/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.363924147 seconds)
    (269/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.903343997 seconds)
    (270/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.47738268 seconds)
    (271/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.362669551 seconds)
    (272/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.331488987 seconds)
    (273/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.402169173 seconds)
    (274/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.854300934 seconds)
    (275/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.331321083 seconds)
    (276/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.434903449 seconds)
    (277/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.365414416 seconds)
    (278/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.420144861 seconds)
    (279/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.407884034 seconds)
    (280/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.316035041 seconds)
    (281/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.858610517 seconds)
    (282/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.400367973 seconds)
    (283/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.167781898 seconds)
    (284/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.433013674 seconds)
    (285/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.30201784 seconds)
    (286/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.222840513 seconds)
    (287/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.518437297 seconds)
    (288/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 4.535309919 seconds)
    (289/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.318179446 seconds)
    (290/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.239542641 seconds)
    (291/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.708689801 seconds)
    (292/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.263430621 seconds)
    (293/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.3589076 seconds)
    (294/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.215315569 seconds)
    (295/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.049856737 seconds)
    (296/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.707623028 seconds)
    (297/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.423186739 seconds)
    (298/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.345511709 seconds)
    (299/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.640598946 seconds)
    (300/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.317171736 seconds)
    (301/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.382779276 seconds)
    (302/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.403743884 seconds)
    (303/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.340516647 seconds)
    (304/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.733339282 seconds)
    (305/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.466569795 seconds)
    (306/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.693958919 seconds)
    (307/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.043040973 seconds)
    (308/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.361508687 seconds)
    (309/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.350843244 seconds)
  done (took 921.555355179 seconds)
done (took 922.800428951 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.348741787 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.343361571 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.327066845 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.347610135 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.439565885 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.360449448 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.33777309 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.33022443 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.375535397 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.377069222 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.325291015 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.359906112 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.328352413 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.326425746 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.32696615 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.341888703 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.353353975 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.327942324 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.34332874 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.337834864 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.343932613 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.325705896 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.377278787 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.360622735 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.331950206 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.330948094 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.331274073 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.347323222 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.439686497 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.331188509 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.331495294 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.341355271 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.353742135 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.328676195 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.323833265 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.348023598 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.341206327 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.338643626 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.332828497 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.358983593 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.767615142 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.328828502 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.330067161 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.329449262 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.332188632 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.334822442 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.329901047 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.337538523 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.342525328 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.342024247 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.75934735 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.344115101 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.332167712 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.330507035 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.340499599 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.329994738 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.334323844 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.344506663 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.348535237 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.347826968 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.348544764 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.333993474 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.332470518 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.346574542 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.336781087 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.801220883 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.325818623 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.333867958 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.7711882 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.336101449 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.799871254 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.338565421 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.332249802 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.343900358 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.361702486 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.361601448 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.325331473 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.33008092 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.337437027 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.328530209 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.341377017 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.344212395 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.335893326 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.331829341 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.345078623 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.364606682 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.341875526 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.332608061 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.34133855 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.351795599 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.338307823 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.343003281 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.334472047 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.327234623 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.341081275 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.336410333 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.334723495 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.333729997 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.336284141 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.34212463 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.77532761 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.349342136 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.329241145 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.329721905 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.331297581 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.346080682 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.774565999 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.333429656 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.354131339 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.380319369 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.333886171 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.355089805 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.3356705 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.348004166 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.342273839 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.335233266 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.328014081 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.356622041 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.771526338 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.347571343 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.334744327 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.332135665 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.349062882 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.334903503 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.33038804 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.365675243 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.334667688 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.346837385 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.454516077 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.344147043 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.364520283 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.331614571 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.336725428 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.367181749 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.349758004 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.364937577 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.335823676 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.350786853 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.350217653 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.330588958 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.346866223 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.344337115 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.334837694 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.340264858 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.329346662 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.364295482 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.346346093 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.346117595 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.355896897 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.455014153 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.332192064 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.358704262 seconds)
done (took 225.075981374 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.393546857 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.326609764 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.433239527 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.332800708 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.432626656 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.431652932 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.330476299 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.331501609 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.329872678 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.709921884 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.331797498 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.331686929 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.323328024 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.331223396 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.416386411 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.333490076 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.331814601 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.672821417 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.331884873 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.402027489 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.329170155 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.331666014 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.333333625 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.722031778 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.332835765 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.330763692 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.40254409 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.332785182 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.67827596 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.333274377 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.328857689 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.678140736 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.421296851 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.351188099 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.343843738 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.341526418 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.433774691 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.352458298 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.412950886 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.412708325 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.4354055 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.372736839 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.333534382 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.334771736 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.335975564 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.334631026 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.331699974 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.362156351 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.332709984 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.332300279 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.674930937 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.344522212 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.343969941 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.333356869 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.333380809 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.354584522 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.333501437 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.33658689 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.424307171 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.335812046 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.396762673 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.723774488 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.712643436 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.336785689 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.328249077 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.333715574 seconds)
  done (took 148.482132055 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.402368358 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.408874586 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.448819586 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.336990249 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.386396061 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.453827754 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.335770628 seconds)
  done (took 11.040845755 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.341116145 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.336795467 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.384840313 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.385148035 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.338188345 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.483851318 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.336617996 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.346692638 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.334825455 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.388681896 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.337812491 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.337238413 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.343565494 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.336300299 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.385272664 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.347463364 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.451711264 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.336977917 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.336783614 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.490470979 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.336069357 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.345297805 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.389638892 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.348227655 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.339508059 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.342652632 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.903147639 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.337050366 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.336319396 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.341303269 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.335185596 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.374649364 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.339176354 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.33303304 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.337240223 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.453497793 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.339852487 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.338105949 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.340996965 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.331909286 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.339147145 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.339822046 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.340544255 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.339737081 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.338717963 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.363633296 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.339140136 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.340568169 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.34081556 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.339773157 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.389947953 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.342036286 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.337653257 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.339363325 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.395034756 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.346902436 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.34145103 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.340144942 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.340866736 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.33909493 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.493068069 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.386715513 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.340659896 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.388558416 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.342279249 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.341140457 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.341587149 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.341850464 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.395811397 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.341188 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.387856667 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.338827395 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.493749117 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.36255902 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.341964778 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.342901105 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.345446113 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.339457252 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.341428158 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.345854771 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.339270918 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.343046373 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.345697782 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.339518326 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.339335759 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.445374633 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.450173834 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.340227119 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.353414123 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.348343533 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.340680644 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.394525861 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.343974092 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.340412705 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.392784618 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.45841567 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.397027067 seconds)
  done (took 153.795691715 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.349830224 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.35031132 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.343295573 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.360603822 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.344616703 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.344863506 seconds)
  done (took 9.372210015 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.346109083 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.345257284 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.345918322 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.347503995 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.344824486 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.344715624 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.345544156 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.347576381 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.349667393 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.345985853 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.349049912 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.348934467 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.347735477 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.347266215 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.346445831 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.349304102 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.347774035 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.342378261 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.347720223 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.348412681 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.441782013 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.345077785 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.347557643 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.350451994 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.355183364 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.350302596 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.355718012 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.349606514 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.34783381 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.356130584 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.351500757 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.347987298 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.348998323 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.352826196 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.350796155 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.348504648 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.351857548 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.349360807 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.345998791 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.347073016 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.347270839 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.346097836 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.34871382 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.349430073 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.348170976 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.35121717 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.352738768 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.355597106 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.346746503 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.350491013 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.350642158 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.34971937 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.351215047 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.349775654 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.350930692 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.352752589 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.355223982 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.346944691 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.346571816 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.349479214 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.351690309 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.349735241 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.350186323 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.352990395 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.355633301 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.350717994 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.350475142 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.352966998 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.347513613 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.348465694 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.353427285 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.347645891 seconds)
  done (took 99.524549349 seconds)
done (took 423.4800194 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.359754255 seconds)
  done (took 7.641430773 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.756437613 seconds)
  done (took 8.043080247 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.573844014 seconds)
  done (took 21.865688778 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.401738855 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.406586957 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.35465837 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.349577315 seconds)
  done (took 26.795396429 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.842577387 seconds)
  done (took 8.125368716 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.346090522 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.345794414 seconds)
  done (took 13.976712532 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.563726173 seconds)
  done (took 7.848542105 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.995488396 seconds)
  done (took 8.286003733 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.353016222 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.379685544 seconds)
  done (took 14.283930444 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.326986508 seconds)
  done (took 7.613368441 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.386874332 seconds)
  done (took 8.669286511 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.355871256 seconds)
  done (took 7.641143497 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.342797959 seconds)
  done (took 7.627396937 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.371240022 seconds)
  done (took 9.656993917 seconds)
done (took 159.359262522 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.341276779 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.35005505 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.3423047 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.340792726 seconds)
  done (took 26.656188689 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.382855104 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.383543379 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.384438986 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.395836478 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.385523077 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.384340713 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.374129291 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.375718541 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.394157869 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.386682217 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.386480964 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.384041692 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.383947364 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.376157034 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.38515589 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.384407001 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.392870317 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.386297727 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.378315784 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.386271884 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.351098399 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.394494415 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.387400936 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.349306679 seconds)
  done (took 34.458748586 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.54858322 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.419094663 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.501394778 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.401621896 seconds)
  done (took 7.157843473 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.401853264 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.404643634 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.417446462 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.45407664 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.478046614 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.413744249 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.375464864 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.371531756 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.359525991 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.405495876 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.48148597 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.421033564 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.488445243 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.351845603 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.537192001 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.352702601 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.351630587 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.40387087 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.454796007 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.46930319 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.351172688 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.402747357 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.407760942 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.421913374 seconds)
  done (took 35.26350836 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.3507666 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.358465977 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.35780738 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.352013472 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.353472135 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.353593285 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.356812914 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.351718228 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.372766164 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.351931589 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.34855157 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.350467688 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.352040801 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.352921246 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.350198278 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.36484104 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.367404512 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.350271912 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.354651355 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.360515619 seconds)
  done (took 28.398212078 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.345220205 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.197701045 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.695173443 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.600215255 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.345311555 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.349944647 seconds)
  done (took 27.819574987 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.423578336 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.560549341 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.349916306 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.735160283 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.800973038 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.352938394 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.352495894 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.59217102 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.909870663 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.922687353 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.416812566 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.423021512 seconds)
  done (took 20.127467848 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.350168822 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.349076668 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.350894697 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.366252741 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.408287228 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.356348079 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.360909773 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.345477532 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.413683506 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.413170736 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.356750862 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.408622063 seconds)
  done (took 37.764037903 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.435403135 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.392032578 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.366408521 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.107224403 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.725311979 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.559082896 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.133192608 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.782336705 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.355399065 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.622958906 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.355726831 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.438085401 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.605003241 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.356448593 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.350406885 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.392024427 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.574123954 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.850641482 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.35203922 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.404288701 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.373031331 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.363519709 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.501232348 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.381443975 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.558919414 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.477526359 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.609845571 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.349550077 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.641962903 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.362152521 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.361261371 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.349461139 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.625705497 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.042507884 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.448395544 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.360187249 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.083371232 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.061839012 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.349875755 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.415318914 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.362707451 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.35320322 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.36335485 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.353339051 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.284009314 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.354184545 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.795399672 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.357924588 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.061649191 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.349702459 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.363149494 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.447003054 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.35464673 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.164912353 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.377719255 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.352597736 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.350382281 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.357807245 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.924152522 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.869507059 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.357655027 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.293820654 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.768836402 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.415132769 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.987926127 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.456220703 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.356028257 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.354621879 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.285766024 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.41475257 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.370072297 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.499605287 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.373056603 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.999557335 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.053944404 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.353802044 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.303347805 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.915430183 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.365801978 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.286857028 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.579158927 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.353794662 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.289986426 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.311430079 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.287620878 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.079358211 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.363483061 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.78539334 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.359554792 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.783743661 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.36415973 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.370743053 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.375932028 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.577477415 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.238278025 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.353429193 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.365029111 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.482588341 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.375519694 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.788199471 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.288675575 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.355928983 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.607422456 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.565799871 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.352261201 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.404637605 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.565220611 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.831735857 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.375464555 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.35765681 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.374376433 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.943911331 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.367183025 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.004752492 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.375685956 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.353252962 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.11734022 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.361084784 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.457675493 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.35852528 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.612992423 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.165039943 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.358686071 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.43688562 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.357230911 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.355448828 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.529558475 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.873583317 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.358233661 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.357604062 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.358677497 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.370953601 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.35542534 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.305128456 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.35204911 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.369238928 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.3599304 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.579119139 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.355728721 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.647780221 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.289519534 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.504255964 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.410730313 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.576709547 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.580409788 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.356024045 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.615919504 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.355699567 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.377316348 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.373838069 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.376831369 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.45643037 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.380841182 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.357338383 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.616351749 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.360483981 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.361733268 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.51701031 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.360124591 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.363848521 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.361983827 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.253034346 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.946492783 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.337304557 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.364395294 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.246420134 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.371719203 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.421361925 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.362825541 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.366820699 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.260838094 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.188373936 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.362068039 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.360832714 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.585556344 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.369516618 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.546569266 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.445059752 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.567086555 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.967734537 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.378286457 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.293019232 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.068806754 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.051303223 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.357998473 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.295342594 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.35899747 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.368160975 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.369062204 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.89524439 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.960475825 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.368527315 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.46858687 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.366635464 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.369471621 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.363183194 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.358731945 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.267805761 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.01688038 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.368462014 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.380454941 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.502442633 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.373363625 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.29378497 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.36418764 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.364252887 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.35916314 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.358873771 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.391681935 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.485167892 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.848823795 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.621978446 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.195137824 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.374036858 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.660645987 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.400657039 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.362478539 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.36927 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.383511727 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.363657245 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.373971793 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.373439044 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.533433591 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.036353756 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.930715651 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.120132862 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.924224005 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.341626889 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.379203799 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.36637572 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.809515174 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.296733175 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.91895891 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.564594169 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.809549143 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.311476973 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.568790628 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.645485348 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.178500546 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.376083403 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.592612526 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.329848831 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.376556025 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.376184868 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.573724578 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.396551684 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.36775479 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.295544901 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.8869049 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.600881606 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.364009903 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.467854678 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.802306269 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.370783355 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.369856581 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.363401115 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.748482141 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.550060048 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.079216934 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.539590717 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.37066626 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.380042786 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.848686705 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.371805112 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.594789375 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.007982104 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.372261265 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.577728918 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.298889734 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.374737779 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.376872719 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.366905578 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.788475601 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.371876898 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.61722368 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.37660591 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.30005509 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.376486469 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.914424206 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.218346001 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.372416462 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.363494771 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.136310258 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.371025007 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.666046465 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.379456217 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.271924691 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.371496431 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.300121093 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.299395796 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.058533654 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.368464053 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.341568056 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.870732744 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.756878231 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.375798157 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.395555864 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.212673348 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.620679734 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.380146663 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.958236959 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.592346577 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.187575358 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.388105456 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.466235441 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.369519914 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.352335733 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.366357521 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.602060801 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.253660435 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.592082697 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.395783247 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.277329762 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.363410754 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.578805922 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.366938841 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.366937233 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.640716951 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.083944834 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.371560038 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.090327241 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.392700274 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.371563626 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.283462825 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.783512731 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.375119775 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.446765084 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.379058121 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.378534833 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.379442379 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.551744758 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.376598041 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.369595713 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.383107631 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.460888793 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.052253942 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.277346645 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.375850628 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.967516028 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.103334793 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.967448485 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.380389212 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.367614126 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.374882362 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.303481213 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.518125829 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.603290773 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.641373897 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.499195639 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.836332038 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.393116968 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.379309503 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.376708361 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.587655845 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.644040865 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.269285617 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.374948214 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.38715015 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.369331693 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.380931833 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.581069764 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.880996748 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.940786296 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.479177089 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.382885539 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.812785918 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.645771429 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.371981936 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.371110361 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.963344274 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.388917843 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.767445681 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.377306774 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.385338968 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.519052605 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.38002288 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.07446891 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.385003001 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.530441085 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.147034007 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.513176744 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.628372545 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.876928863 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.3825374 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.970761947 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.107492271 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.639899515 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.438375365 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.381851197 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.489511344 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.516940119 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.366508772 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.370126819 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.371363359 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.216355652 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.082340535 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.380253784 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.988395805 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.642251374 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.370138095 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.384897336 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.393754977 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.381868596 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.595706261 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.113348711 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.594483416 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.382752817 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.374703127 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.190235513 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.990823307 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.386592794 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.307695067 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.372453439 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.631162663 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.611557268 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.391967633 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.82444374 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.08554422 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.94855344 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.344327681 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.393786351 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.372574672 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.132485735 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.990630534 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.2512057 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.900438716 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.940256345 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.378718688 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.649955379 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.375965493 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.376561427 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.651101229 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.376257783 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.372909697 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.390376415 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.984569043 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.179278648 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.394091604 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.537251984 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.312450081 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.714965086 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.038878952 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.311083539 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.374533841 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.570651754 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.376581418 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.506968656 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.384947397 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.372187134 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.381813361 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.109078769 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.645027206 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.380949037 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.358257126 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.371179308 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.385023737 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.382053927 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.615816781 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.380944923 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.042385519 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.726794878 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.630620058 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.387472618 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.364504925 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.378625111 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.376303327 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.366283106 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.576650666 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.901703219 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.948941553 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.378009564 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.390568066 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.381348832 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.592287186 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.588022865 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.391599153 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.388292916 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.375401153 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.391304391 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.280333224 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.878163069 seconds)
  done (took 1613.969784297 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.395173912 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.424253852 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.42072936 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.437050448 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.399727732 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.45851723 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.409636482 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.435136713 seconds)
  done (took 52.694808456 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.373928721 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.636818484 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.413785028 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.37953563 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.385525646 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.384753897 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.83815598 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.3874611 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.387231379 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.386150439 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.382534274 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.389235204 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.044379684 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.385527331 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.389690716 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.3697694 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.390919249 seconds)
  done (took 66.249933521 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.374435463 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.63978542 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.40888859 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.382752285 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.724539053 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.377270325 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.632729405 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.437606294 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.375488908 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.56539685 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.053958493 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.390437835 seconds)
  done (took 80.681736481 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.387180298 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.384062755 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.387212789 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.386972692 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.386779734 seconds)
  done (took 8.246772407 seconds)
done (took 2040.77417091 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.632981274 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.125527764 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.09044583 seconds)
  done (took 5.533490842 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.523821906 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.571693619 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.697705053 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.700550184 seconds)
  done (took 7.808788809 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.651950417 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.775642034 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.567801931 seconds)
  done (took 6.309741851 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.871681083 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.401792751 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.504573742 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.377850549 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.380053167 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.37924604 seconds)
  done (took 20.4539982 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.381975579 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.382346561 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.382476828 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.384450866 seconds)
  done (took 6.846988523 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.361869577 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.14808164 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.369592184 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.380006235 seconds)
  done (took 18.57351771 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.128762139 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.141504037 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.1253335 seconds)
  done (took 7.711510446 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.37537973 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.222279597 seconds)
  done (took 9.912396102 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.692863883 seconds)
  done (took 3.00789048 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.515907442 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.652872093 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.444539125 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.383878336 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.468282367 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.525696098 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 3.157668791 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.698923014 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.36079738 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.683989217 seconds)
  done (took 29.210186669 seconds)
done (took 129.096715834 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.358748499 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.38130811 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.588868878 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.330757201 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.617144276 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.590594548 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.580507857 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.289128712 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.836904106 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.826619699 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.334130762 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.611737 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.530976124 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.38134865 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.529942336 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.386443635 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.606481244 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.412475652 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.013493816 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.211447948 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.585760137 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.972204493 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.170802921 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.22363416 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.610261618 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.539780181 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.553686632 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.387887021 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.192177066 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.80585081 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.542579609 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.385013861 seconds)
  done (took 193.704770594 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.3951701 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.382636087 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.379299941 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.382403558 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.392484215 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.379875175 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.38294224 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.376679754 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.379324918 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.382137368 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.378078299 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.395570938 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.378028848 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.381795238 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.381159603 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.379083152 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.411743688 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.386880936 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.380254633 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.380538557 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.382782592 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.379928885 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.38185947 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.383828699 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.389710972 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.380822914 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.382404014 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.379209866 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.380447173 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.379765253 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.381252917 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.381235388 seconds)
  done (took 205.588170721 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.38304164 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.385484641 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.382399398 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.39507297 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.379546291 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.383388124 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.396987029 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.381323476 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.383332472 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.380197493 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.384714912 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.381981075 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.385770052 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.381702325 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.382216051 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.394833755 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.381759202 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.39867138 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.387537768 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.38313884 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.387486252 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.393018407 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.388220414 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.382427009 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.38180986 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.399458919 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.39223314 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.381972678 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.382679238 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.381943374 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.393204241 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.384342044 seconds)
  done (took 205.680976368 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.587395248 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.391997284 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.392269536 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.34816024 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.3944962 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.393223352 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.384851122 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.5899901 seconds)
  done (took 14.802964616 seconds)
done (took 621.091872188 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.756267118 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.464972176 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.59803708 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.410685339 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.205699115 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.413158634 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.414428888 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.595019963 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.358099495 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.595393645 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.672822908 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.408517526 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.819210668 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.409332312 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.673498349 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.509055728 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.274020674 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.384768213 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.736157828 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.962098057 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.666978456 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.884683321 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.587169071 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.331210958 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.820374526 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.886756568 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.118360077 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.273132231 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.409000878 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.739661425 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.111311693 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.379565813 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.476145492 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.456508053 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.508843047 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.490513723 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.353879837 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.451410324 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.596251527 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.640790823 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.965183063 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.140168276 seconds)
  done (took 94.27329154 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.381215343 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.384356283 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.380472444 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.383114235 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.380401406 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.381005343 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.382205649 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.382306483 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.380114839 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.380131595 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.381397855 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.382184325 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.38229084 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.383286385 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.382113091 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.380897995 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.385195083 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.380713311 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.380391561 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.383967864 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.384078012 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.380716017 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.38313174 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.384078297 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.379865946 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.382220515 seconds)
  done (took 37.255659546 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.396740905 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.638705565 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.830488704 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.401217607 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.394309844 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.399108131 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.476820183 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.397333159 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.39728561 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.398112415 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.553573218 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.398916238 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.435062385 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.839230188 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.397110828 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.396272216 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.397874426 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.395510271 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.6477118 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.406259506 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.481871019 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.398178049 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.476429328 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.40418043 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.39893311 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.394983566 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.400688358 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.902428766 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.4007811 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.55361013 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.220723611 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.479012857 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.861653262 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.828284605 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.222152202 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.403900677 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.398247329 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.55821058 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.39698931 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.397027035 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.474238739 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.397243972 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.828408237 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.041704301 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.412692533 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.396807246 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.925241997 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.558105981 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.658601925 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.403278003 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.854412761 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.400188047 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.400511348 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.396327327 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.659517537 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.404962043 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.396591018 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.942344177 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.419626749 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.479420177 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.397789115 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.397847341 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.656517043 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.398212988 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.643551074 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.398615421 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.408554572 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.398257192 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.832579327 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.39799126 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.057465711 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.414087175 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.395944988 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.547401249 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.64014389 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.94898114 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.397059556 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.658398795 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.859542632 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.470577087 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.399448056 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.884603107 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.475594317 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.397503253 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.398691661 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.396371406 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.395540025 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.437580592 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.47191918 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.971444039 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.043297509 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.955718254 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.477701454 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.408063577 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.394577555 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.941585159 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.396393171 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.39467712 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.821590416 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.059423974 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.412234148 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.401988496 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.050090248 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.418378932 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.475464185 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.40144688 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.836582783 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.397951707 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.439543594 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.395461655 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.402709673 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.398968997 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.474463948 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.399766075 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.397326834 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.025740604 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.576645595 seconds)
  done (took 183.300858519 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.387532703 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.388518945 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.394758521 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.38922644 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.388056422 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.397247647 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.388304185 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.391297614 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.394865176 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.391180268 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.389294275 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.389307855 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.390023102 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.405183292 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.400555068 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.397065592 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.001256046 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.391337204 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.39342036 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.389528572 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.202190377 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.396938819 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.398804724 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.389902325 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.390043303 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.393432228 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.39542921 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.393900529 seconds)
  done (took 153.747906229 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.399751943 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.02397898 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.402502321 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.534651929 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.420075641 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.396461018 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.537448193 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.459793392 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.399790659 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.397727565 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.395060118 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.71938994 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.40180807 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.971110633 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.605671761 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.541150702 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.969676274 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.40465909 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.398464381 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.396378907 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.540976887 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.412972996 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.723080441 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.02161297 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.405009595 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.023853234 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.389390862 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.400439803 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.396283934 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.026094757 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.400848872 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.735626247 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.483656032 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.460362841 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.030043494 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.972074084 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.959339238 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.563291364 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.400939656 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.397383646 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.398044131 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.388498428 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.02696816 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.402889085 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.398510282 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.020396419 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.422692631 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.399694916 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.408276502 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.398390786 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.45947438 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.461119256 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.740203357 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.035295028 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.482834918 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.421974754 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.540073462 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.764885428 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.402151445 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.937361605 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.387806094 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.031663065 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.406113883 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.389586158 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.401055491 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.406155119 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.557270276 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.545084912 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.946830452 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.400420452 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.939247449 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.55733884 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.399122594 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.400646419 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.404951053 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.029882054 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.940589446 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.557333918 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.541801665 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.603771986 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.390287726 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.40047538 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.387961982 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.480296294 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.401422254 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.03551104 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.944245611 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.403638174 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.401064625 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.402949014 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.40228662 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.584886395 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.031767857 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.483311941 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.93377267 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.73977972 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.721058969 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.404248721 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.462409072 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.400260154 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.722922378 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.403763349 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.460481428 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.822843047 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.723361339 seconds)
  done (took 167.756048222 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.656002035 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.641160262 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.495978352 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.516374241 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.967976352 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.964959538 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.596469488 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.53116026 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.520780791 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.655625896 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.60162108 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.493341429 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.595433182 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.480018531 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.127550946 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.471519257 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.500261585 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.531928374 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.518775998 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.452693042 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.063911091 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.704766032 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.582662576 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.570156071 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.500200628 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.194639073 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.96810353 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.934827587 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.574883805 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.695595742 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.935892928 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.527510456 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.396171666 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.076340471 seconds)
  done (took 67.381933465 seconds)
done (took 705.03786906 seconds)
SAVING RESULT...
DONE!
