cset: moving following pidspec: 27980
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.326287185 seconds)
loading group "string"... done (took 0.545503821 seconds)
loading group "linalg"... done (took 7.485108796 seconds)
loading group "parallel"... done (took 0.168080362 seconds)
loading group "find"... done (took 1.261029615 seconds)
loading group "tuple"... done (took 1.926530124 seconds)
loading group "dates"... done (took 1.402405104 seconds)
loading group "micro"... done (took 0.248790222 seconds)
loading group "io"... done (took 0.962671288 seconds)
loading group "scalar"... done (took 40.8423111 seconds)
loading group "sparse"... done (took 13.162564819 seconds)
loading group "broadcast"... done (took 1.052777526 seconds)
loading group "union"... done (took 14.107418852 seconds)
loading group "simd"... done (took 4.764453197 seconds)
loading group "random"... done (took 9.621693425 seconds)
loading group "problem"... done (took 2.017330285 seconds)
loading group "array"... done (took 22.588768699 seconds)
loading group "misc"... done (took 2.029163687 seconds)
loading group "sort"... done (took 3.435678727 seconds)
loading group "collection"... done (took 19.617275572 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.570531266 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.156931864 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.151992638 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.147354151 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.195832752 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.143287527 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.157858772 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.097561623 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.013801811 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.171163025 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.15237759 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.526123415 seconds)
done (took 5.213729193 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.221644944 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.094055749 seconds)
    (2/2) benchmarking "String"...
    done (took 0.103806722 seconds)
  done (took 0.87066909 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.077034382 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.145543666 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.094277728 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.077374332 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.094671087 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.077551567 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.095275667 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.077717759 seconds)
  done (took 1.337298649 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.085488489 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.097324592 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.081645746 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.096337953 seconds)
  done (took 1.035298501 seconds)
done (took 4.229772626 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.723438739 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.271222247 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.203281778 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.462684486 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.196583563 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.215099285 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.675538671 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.342226143 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.256058417 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.099199341 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.13474581 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.397391616 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.136693042 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.685099075 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.091074549 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.123903752 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.180688864 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.439972342 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.082181964 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.109104195 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.115555378 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.140588886 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.129982 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.092495676 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.185578928 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.081775723 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.192286797 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.107172847 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.079676199 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.27473559 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.200454717 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.678309109 seconds)
  done (took 10.817294471 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.110070197 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.132782543 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.096376612 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.137860586 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.133050308 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.098459175 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.08378405 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.094876738 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.120529913 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.174658291 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.12957709 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.120224775 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.09367892 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.081410171 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.113651642 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.244592441 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.118828319 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.098919568 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.099681502 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.087810029 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.137031742 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.110921895 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.107984905 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.092554089 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.165641415 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.221227518 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.111452408 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.125700009 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.09654789 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.110535044 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.141696534 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.140807298 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.093384863 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.080614415 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.170508557 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.122246336 seconds)
  done (took 5.093908807 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.098329574 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.188731149 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.120938449 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.168067704 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.080289102 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.142225931 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.09408253 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.112109154 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.254988038 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.1003436 seconds)
    (10/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.127692438 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.480314354 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.139024005 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.098336442 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.096608469 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.081642993 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.096864759 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.666788683 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.158704331 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.118561882 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.11563604 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.100974958 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.085669636 seconds)
    (23/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.093477633 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.08009852 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.095743202 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.08124262 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.127872317 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.318758666 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.160351168 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.0809639 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.131995577 seconds)
    (32/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.126234241 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.120259108 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.079926256 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.133733622 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.212187441 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.110034674 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.133076478 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.094531643 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.078219011 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.172512494 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.103369917 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.078806942 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.120345304 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.132093931 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.132908406 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.096041484 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.08022358 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.194689664 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.095822437 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.09449878 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.946128385 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.178165176 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.088281417 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.094511722 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.283252791 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.120741087 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.095372424 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.077576512 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.285005919 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.18858101 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.097288537 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.078863347 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.096510364 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.07934447 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.396127237 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.080255728 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.019043344 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.081822636 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.10539568 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.081581907 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.096339862 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.101877496 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.088658346 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.113794731 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.077646968 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.097772782 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.078162326 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.096271627 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.08001174 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.107227183 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.212137984 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.096946819 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.077670737 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.094982749 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.114393964 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.110664344 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.097808991 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.09357198 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.113364533 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.097497707 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.096070853 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.115532019 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.097913095 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.105240647 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.082775089 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.142131944 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.095921943 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.135737584 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.095460054 seconds)
    (101/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.078243209 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.124136377 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.09944883 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.12903082 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.111593974 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.080804462 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.166209065 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.09520374 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.07647068 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.096788688 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.077165554 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.098298914 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.080023238 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.109641658 seconds)
  done (took 22.931636274 seconds)
done (took 40.614806019 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.323414907 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.10203604 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.10223872 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.102358981 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.100022892 seconds)
  done (took 1.481900057 seconds)
done (took 2.207371376 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.284397687 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.172672855 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.094583228 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.165218839 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.091933262 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.162902966 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.157945016 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.093692985 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.216645672 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.093689049 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.159857911 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.075977082 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.092785008 seconds)
  done (took 2.615241709 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.093753798 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.115701395 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.082775772 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.109252389 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.077012219 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.109530464 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.092168976 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.116126692 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.110624907 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.086248803 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.092342584 seconds)
  done (took 1.809190316 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.094516902 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.11216297 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.082927174 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.109979614 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.076048269 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.110558275 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.092578557 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.117279426 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.108548941 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.085826712 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.093593558 seconds)
  done (took 1.805672398 seconds)
done (took 6.946478522 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.090912933 seconds)
  done (took 0.808969486 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.930237048 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.584315314 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.111953261 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.147496817 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.31228178 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.169722223 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.459135497 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.123407469 seconds)
  done (took 10.764549219 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.143720388 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.087057803 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.101505038 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.08318675 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.100946747 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.085706732 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.101613205 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.101222782 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.083348655 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.099578205 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.08530729 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.099351952 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.099504751 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.083422265 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.102350399 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.085746546 seconds)
  done (took 2.329199563 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.118103662 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.117173241 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.10697447 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.108226726 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.086522122 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.104519237 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.105690754 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.088938099 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.10266193 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.103107338 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.090615618 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.106170779 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.102009036 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.079056667 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.105274681 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.107821809 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.085638214 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.105988846 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.105483828 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.090197257 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.106392382 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.094425129 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.086931026 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.105889911 seconds)
  done (took 3.244696548 seconds)
done (took 17.870780512 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.159297649 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.108599021 seconds)
  done (took 0.994092406 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.096727321 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.112993889 seconds)
  done (took 0.939909078 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.097550801 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.096244129 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.12229747 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.109125873 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.080230345 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.096163616 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.119698558 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.080665186 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.096286051 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.080379316 seconds)
  done (took 1.712291417 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.083057605 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.108147231 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.100590058 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.094336828 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.104876436 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.09433698 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.088813326 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.098566542 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.109786126 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.077432318 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.100898981 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.114220792 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.085696298 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.116228826 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.103516242 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.083785351 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.102076149 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.09850636 seconds)
  done (took 2.500259851 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.079101293 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.096074021 seconds)
  done (took 0.910694356 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.081761729 seconds)
    (2/7) benchmarking "second"...
    done (took 0.092912604 seconds)
    (3/7) benchmarking "month"...
    done (took 0.080991704 seconds)
    (4/7) benchmarking "year"...
    done (took 0.096563352 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.093355334 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.076940845 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.093525795 seconds)
  done (took 1.350594573 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.438515175 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.134930663 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.258566574 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.084262472 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.120065974 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.301958546 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.09762002 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.084115874 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.101675291 seconds)
  done (took 2.413413978 seconds)
done (took 11.552578916 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.093851389 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.11426271 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.112942193 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.458400334 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.107586897 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.097873027 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.146324005 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.252941493 seconds)
done (took 2.126897817 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.144060984 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.592260085 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.423778314 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.230121013 seconds)
  done (took 1.987390192 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.402587901 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.097921196 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.083084779 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.081068444 seconds)
  done (took 1.408634258 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.079765523 seconds)
    (2/2) benchmarking "read"...
    done (took 0.099753378 seconds)
  done (took 0.922788531 seconds)
done (took 5.209061916 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080888644 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.128976686 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.080123247 seconds)
    (4/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.096558642 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.077028812 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.098909763 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.077948409 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.09597873 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.079300228 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.097331577 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.095234331 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.080158824 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.095937634 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.077992154 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093578631 seconds)
    (16/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.080634534 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.095621856 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.077929623 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.093270282 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.077893777 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.096654034 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.078710262 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.093718578 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.080670928 seconds)
  done (took 2.908497372 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.100413714 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.098339401 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.102691181 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.086380478 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.10223751 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.086079273 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.103196782 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.096724403 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.086977956 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.098759613 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.100940266 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.085121695 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.098964398 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.0848401 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.099151232 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.101109653 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.086917747 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.09773949 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083328885 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.102096197 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.101585664 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082197688 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.101350729 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.086267155 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.102181957 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.10075992 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.082976325 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.097747522 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.10240217 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.085541147 seconds)
  done (took 3.591787934 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.085730524 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.09320481 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.079036723 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.101009453 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.078055394 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.096730039 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.077722758 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.095426174 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.078804417 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.094763235 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.079480623 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.094905622 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.0777477 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.096766432 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.077837626 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.099914194 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.111653929 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.078383691 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.094684406 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.079410746 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.097973548 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.078266468 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.094854228 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.07844009 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.094229774 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.077702811 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.094975241 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.07834237 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.095697838 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.077851746 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.098528417 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.080487411 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.095409303 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.084105648 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.09877987 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.077104104 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.098356269 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.076234995 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.096046033 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.093446168 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.078275125 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.093942874 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.078580734 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.100435444 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.079195978 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.096135944 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.079253651 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.096345811 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.079276349 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.098251183 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.077931992 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.094714063 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.079356685 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.096093409 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.080993507 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.095613988 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.09465911 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.078548043 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.095365307 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.078481211 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.093323077 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.077840369 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.096079712 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.079212822 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.110536203 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.085020727 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.095019474 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.08100242 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.097359289 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.080628504 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.096992694 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.108056967 seconds)
  done (took 7.141822663 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.131041635 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.125918467 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.081594046 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.096703209 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.077981971 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.095226073 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.081944633 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.096374593 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096859961 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.085394904 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.095298804 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.080091438 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.09717556 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.093242422 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.096898221 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.096060253 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.085679343 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.092721019 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.079022089 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.098265415 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.078823908 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.100377787 seconds)
  done (took 2.817123509 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.208597865 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.104558997 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.140995108 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.105591727 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.083781737 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.10689565 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.101259674 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.086971435 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102100144 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.083495255 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.101019056 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101241662 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.084026971 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099953409 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.208870362 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.085099334 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.10159571 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.084795434 seconds)
  done (took 2.745142344 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.093155239 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.097711944 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.098451585 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.098439163 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.098448382 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.084585991 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.103832386 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.1068678 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.083909293 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.097921176 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.091210212 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.10259479 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.100118656 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.082467825 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099941558 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.08264221 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.100357651 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081231366 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.107813117 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.104401197 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.087117889 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.107474095 seconds)
  done (took 2.869751727 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.097244605 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.09998159 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.117976814 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.08411589 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.094685099 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.08010698 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.105180418 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.080143606 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.107142433 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.099389608 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.081852345 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.098114733 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.08746511 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.098343554 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.102474317 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.081779555 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.099435279 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.081348589 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.099864954 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.076286984 seconds)
  done (took 2.632459264 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.102477053 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.100065249 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.098491028 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.091983542 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.099586623 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.082384926 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.108993618 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.100188633 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.082043805 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.124669233 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.100735482 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.08207828 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.109860211 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.106323058 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.09968993 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.09194463 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.109500648 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.108740471 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.08278668 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.099682771 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.124885964 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.081998633 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.108681778 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.099239189 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.083241551 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.100129642 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.098504407 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.088001688 seconds)
  done (took 3.529259108 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081480732 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.098341378 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.079181681 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.095150729 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.079647053 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.095405985 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.079269665 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.097701749 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.081089135 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.09528034 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.081872227 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.098229903 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.081730323 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.097635366 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.08132329 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.098228254 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081230009 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.095248196 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.078632463 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095329358 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.080906995 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099102014 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.080928173 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.095573418 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.078457839 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.098528761 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.078565439 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.096702703 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.080491722 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.0973355 seconds)
  done (took 3.423162484 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.091242368 seconds)
    (2/2) benchmarking "in"...
    done (took 0.106182092 seconds)
  done (took 0.960887641 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.079144467 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.113750407 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.07899567 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.102752422 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.085153002 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.100546761 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.107199413 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.086329143 seconds)
  done (took 1.518400489 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.096973756 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.10981663 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.084009725 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.113463528 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.108548216 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.097679413 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.170178099 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.102072302 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.104988523 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.080585278 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.112241291 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.08211933 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.105209107 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.081771947 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.105074168 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.087128199 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.096855474 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.10474225 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.086273762 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.097169226 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.083818423 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.111991531 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.083091931 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.096905889 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.099973585 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.092098778 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.112353276 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.08258097 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.104244262 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.106606693 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.087552106 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.092384887 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.081627132 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.101080144 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.079407518 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.109682289 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.115542593 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.084912075 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.10966326 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.099854342 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.094012126 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.094356737 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.085651869 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.105292154 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.10900242 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.082807649 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.099406974 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.077767642 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.096981977 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.084144215 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.09479242 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.081288934 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.094547302 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.088670506 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.103538166 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.10959285 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.081046927 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.100411296 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.084604758 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.103342493 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.087353704 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.102547342 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.101040704 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.082006805 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.10887549 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.086766659 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.110016242 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.094299023 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.077006077 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.096778333 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.091868612 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.123187045 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.105844087 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.084398494 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.0999379 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.079715655 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.102423623 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.083736627 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.106773837 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.104753817 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.082615903 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.106927848 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.089162942 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.100018093 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.101308128 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.091070532 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.097243015 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.083989806 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.097672741 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.116720716 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.081496189 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.096764938 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.080125243 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.110975955 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.085036088 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.099749358 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.079331005 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.108249722 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.092774083 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.083858405 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.100236641 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.082889584 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.111004626 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.104290908 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.088521505 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.109376947 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.106402047 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.082969607 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.102170428 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.079801732 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.100323722 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.084456285 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.10665317 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.07571737 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.103440911 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.082862008 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.101703269 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.109200129 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.081857215 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.100160459 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.089911053 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.106946282 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.098050819 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.079752384 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.102534005 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.083119864 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.103368698 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.090240746 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.099160174 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.075971327 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.096267012 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.103156736 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.083147747 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.10293781 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.087586988 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.10424766 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.075708282 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.09930211 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.103519418 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.091536843 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.100336859 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.082112311 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.107377021 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.099914648 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.081769926 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.106000732 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.084440145 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.099023821 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.087647569 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.101531947 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.075974186 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.104463902 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.102693213 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.081074747 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.102900651 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.086048391 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.103020588 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.099915977 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.08144119 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.105883966 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.08382335 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.098885416 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.081492326 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.099008795 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.11031573 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.084297368 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.094628429 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.079438843 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.108064808 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.080059424 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.099490084 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.080056434 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.102655797 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.100002107 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.080664883 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.099269048 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.084467234 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.113217049 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.104942698 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.084439671 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.105230081 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.094703358 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.100934684 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.084702778 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.102389795 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.100988729 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.084220781 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.110340827 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.087501396 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.107130637 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.102431441 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.079440934 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.105533339 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.090203531 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.10052022 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.079688436 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.099859098 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.103072003 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.088345432 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.103953534 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.08292428 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.099178201 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.082472387 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.104805229 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.102397829 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.082730667 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.098315823 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.088651614 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.100018652 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.10712806 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.084417512 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.110303501 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.085521413 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.096558655 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.085845912 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.099796771 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.105210181 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.078265345 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.096873467 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.08187533 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.101412243 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.081471102 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.103592976 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.076347206 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.107534957 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.107067425 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.082829552 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.09896933 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.084086999 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.106409761 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.083990199 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.104487279 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.085214632 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.107587427 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.110816408 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.081702949 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.103703863 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.092783644 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.102632272 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.09344119 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.088689018 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.098773292 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.081884376 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.099128056 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.080355278 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.104272449 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.109232238 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.090303294 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.094366392 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.085610184 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.099586693 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.080662248 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.097664818 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.086957056 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.103588555 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.100967558 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.089025672 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.102203206 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.083585024 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.104420158 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.081127489 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.1031808 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.100669098 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.08880281 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.101582638 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.085153947 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.100441212 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.085354582 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.100564231 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.079820085 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.103119137 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.099945493 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.082784516 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.10588724 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.082079038 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.101273613 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.08494095 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.102334854 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.100816255 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.082822063 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.099165599 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.086938923 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.100907285 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.083343652 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.103966279 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.077670431 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.108900652 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.081833925 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.109723975 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.09994734 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.079464788 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.106088785 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.085130665 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.107419942 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.100987486 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.084341833 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.10194438 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.083017342 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.104303665 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.089896075 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.099774534 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.111725736 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.091799838 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.102266 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.086051818 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.101645979 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.083656467 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.100716217 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.102404333 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.084480593 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.100510633 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.083716737 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.105446774 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.08650243 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.102274968 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.085068602 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.10315128 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.100341566 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.084455267 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.095461408 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.083975733 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.10078402 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.083712854 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.112361647 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.101133716 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.087027295 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.099598826 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.085229303 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.100278369 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.080118914 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.110849555 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.10985247 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.084338069 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.110012712 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.081717537 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.103124224 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.111562717 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.078855405 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.099172647 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.082521106 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.099001295 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.091357259 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.10316647 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.091242123 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.102625262 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.108287001 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.080612328 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.101984829 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.083059882 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.095421804 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.081457514 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.105645915 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.084423361 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.101639758 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.083413842 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.105734503 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.101882108 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.093307541 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.100766547 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.08274663 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.103210653 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.0784843 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.101529422 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.0997507 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.087306233 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.102030301 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.081166974 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.098570794 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.08271653 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.102697279 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.083956472 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.102050733 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.084288116 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.10960388 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.100663238 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.086313569 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.105385341 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.077860269 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.105242377 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.082953573 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.102157658 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.099492715 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.087821351 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.103935832 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.084472683 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.111764694 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.082744855 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.103606798 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.100852528 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.08207486 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.101706356 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.084074605 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.101846313 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.082042252 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.103595789 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.090111524 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.101424198 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.104314373 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.084079258 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.101683555 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.091090903 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.10382385 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.085853761 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.111081996 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.105013089 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.084768644 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.11112747 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.086359925 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.106099195 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.101977182 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.085446638 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.107698014 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.081944385 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.109674613 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.082688759 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.103527282 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.102965469 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.081571116 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.10163271 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.084023834 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.100935102 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.089249172 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.10400844 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.081207993 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.102413207 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.080583955 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.103403861 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.104849332 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.092176851 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.105035306 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.086014812 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.098837891 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.079762418 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.104661081 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.098965563 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.086502827 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.104755456 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.090537439 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.105117172 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.083619015 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.102067921 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.111229233 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.090145092 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.105622449 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.081554492 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.10645341 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.084755779 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.105388685 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.102275078 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.084643508 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.102356567 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.088699215 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.104822355 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.083547956 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.110162471 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.087133143 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.105485568 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.10373507 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.08458112 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.101714625 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.080102649 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.103077673 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.085827503 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.108193204 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.085086577 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.103809703 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.113310568 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.083740739 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.102034391 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.086705584 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.102558394 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.106455384 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.079866812 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.103468753 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.085779632 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.103711704 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.078868762 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.103243394 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.081383709 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.105330929 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.081806275 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.099174591 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.112643947 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.093949674 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.10666365 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.08185069 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.101591748 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.077923551 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.09953537 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.10034219 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.086589181 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.103735824 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.094994391 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.102211336 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.082244079 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.098639648 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.082917332 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.106058626 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.105017175 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.081236893 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.097429178 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.082838725 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.106234085 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.089009698 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.10203115 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.083018223 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.107438417 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.103866699 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.083144919 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.105972675 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.080905493 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.107135982 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.115797781 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.086033306 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.102817263 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.090831494 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.111005508 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.083494005 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.099135643 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.102999759 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.087836787 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.102280209 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.085975198 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.104124204 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.118610977 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.087889635 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.101201375 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.083565138 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.104903857 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.083909855 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.111880154 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.084230137 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.104835228 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.10623541 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.086893773 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.111747728 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.086490513 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.113024513 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.10535008 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.087546142 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.102008727 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.083502498 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.100910135 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.082097885 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.1054192 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.102947022 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.0893937 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.111566782 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.08246836 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.114505455 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.112452819 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.088932935 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.099444443 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.082787167 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.103202037 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.079428633 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.104966617 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.081078525 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.101740346 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.100142064 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.086095525 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.103236161 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.090237575 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.10402714 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.085083382 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.103145381 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.077641293 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.106068254 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.085777641 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.105203082 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.099443964 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.084838293 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.103804914 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.088968941 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.107021948 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.084500532 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.105553059 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.084697365 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.105198795 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.09759417 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.091194685 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.101418041 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.087803754 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.102510782 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.083878474 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.104725321 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.086599307 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.10999198 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.103571038 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.086858699 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.115939446 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.086156286 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.10160068 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.099615731 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.090186999 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.100746359 seconds)
  done (took 57.735017001 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.14604443 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080616 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.097753641 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.079479634 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.112724955 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.0989642 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.080354484 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.09919943 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.081330395 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.101812499 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.07875826 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.099245229 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.107325581 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.125489133 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093781807 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.103896151 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.07774851 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.100341911 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.097269494 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.081273832 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.109294792 seconds)
  done (took 2.868781658 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.104807735 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.1213905 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.115797118 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.118163272 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089352352 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.116051624 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.114663398 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.114395862 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.099593411 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.111592794 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.119382977 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.113742411 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.092083826 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.112053413 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110173719 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.092526776 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.118807409 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.109638298 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.114708124 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.095827577 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.113141737 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.114644646 seconds)
  done (took 3.229888714 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.084717968 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.101248722 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.085887984 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.097120231 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.083574002 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.098411901 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.088480132 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.101524569 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.086582347 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.102494243 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.081684017 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.102667622 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.103377627 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.079479231 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.102359722 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.081501671 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.152589522 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.107313924 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.082549112 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.105765806 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.077465477 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.107591917 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.097854177 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.080817254 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.101590741 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.088904706 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.105221952 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.080954757 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.104449808 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.082230767 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.103999129 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.080020684 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.105182485 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.10286991 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.083893966 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.101398707 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.084372544 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.10277247 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.079936684 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.100545535 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.084901904 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.099167408 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.084305937 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.104877978 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.081356801 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.101492547 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.084125956 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.103639282 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.096679338 seconds)
  done (took 5.461602614 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.104892876 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.161666603 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.087650412 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.143937803 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.121608367 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.1123444 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.087919912 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.142552283 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.103437408 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.082520166 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.123337549 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.120537504 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.103353676 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.089470164 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.107697767 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.103565752 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.085986253 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.102958411 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.088377053 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.103966945 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.10828444 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.090281554 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.119527011 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.118641899 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.107302975 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.083477822 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.104207003 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.107021441 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.098326929 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.109784696 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.107812438 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.09079793 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.121428452 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.105738906 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.082726887 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.107372562 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.122133415 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.083296997 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.107637702 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.101571252 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.086847183 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.109462591 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.109369226 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.102855814 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.105101659 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.10885335 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.084686898 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.100853879 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.117107606 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.088330719 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.114183391 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.120720012 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.087479652 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.105533578 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.108537448 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.099790488 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.105568082 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.101851533 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.087753155 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.118415746 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.100748341 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.088748683 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.119921896 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.105593697 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.091365076 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.119410584 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.110931812 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.1076212 seconds)
  done (took 8.125647968 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.094081009 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.110858248 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.120247887 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.119551904 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.091378828 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.111060402 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.109929505 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.090400734 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.11082704 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.117434307 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.109597343 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.134404984 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.085965605 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.114538887 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.1102416 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.091581145 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.11156054 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.111356711 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.091364632 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.112056844 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.111681238 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.120284443 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.091383167 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.120039733 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.142457599 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.105440169 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.09067207 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.111230738 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.120279751 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.109899346 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.123060938 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.091195896 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.111671183 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.121178479 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.122491789 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.090882442 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.103730714 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.10998392 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.091978881 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.11206967 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.104712886 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.101035576 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.111019631 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.10579964 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.090385397 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.111056796 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.120740068 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.123158151 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.113522998 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.095833887 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.111419527 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.120562162 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.110192273 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.092120482 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.120310624 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.146650496 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.119834981 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.120331469 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.110775856 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.099365058 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.11928457 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.12790869 seconds)
  done (took 7.656076624 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.107572274 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.11493789 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.117142383 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.098999376 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.083890632 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.10942079 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.082287938 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.101944051 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.113827495 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.095087191 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.116811553 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.107797168 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092567039 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.117777857 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.108950254 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.11150856 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.088909126 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.108718178 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.114076896 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.088473909 seconds)
  done (took 2.914171309 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.094105274 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.123558417 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.08386003 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.112504507 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.107520032 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.091078015 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.107422337 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.10703045 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.086396974 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.107355138 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.094850497 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.116743208 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.105047939 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.092139389 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.116358134 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.111072978 seconds)
  done (took 2.495300794 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.097161788 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.116875905 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.120017456 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.086108768 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.104385666 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.080111959 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.106827218 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.100731341 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.081357708 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.120320631 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.084378281 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.109107863 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.104230464 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.08315737 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.101890022 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.087800008 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.101939245 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.081733403 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.105074433 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.119111822 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.095738706 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.103805574 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.10437645 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.087731549 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.104898399 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.09012736 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.106879171 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.101599125 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.083531996 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.104533683 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.085360584 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.113515388 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.101002749 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.084095731 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.102177681 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.083158527 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.105356197 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.084349708 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.107958763 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.10349191 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.084225567 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.104234116 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.084929318 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.106528014 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.08023424 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.106012341 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.100670722 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.092040595 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.103370553 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.085472595 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.105824761 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.085440695 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.107230774 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.116045687 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.088384421 seconds)
  done (took 6.234498113 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.098431366 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.108813794 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.080801915 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.103126797 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.087208579 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.107997999 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.107567393 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.089047505 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.105970726 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.082903453 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.107496651 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.088599428 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.108172612 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.107174362 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.087755269 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.10840961 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.080381339 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.108068045 seconds)
  done (took 2.611977417 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.090812877 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.104776083 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.092858601 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.106566604 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.084299897 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.108683871 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.079826302 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.105028533 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102393453 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.085869992 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.104323716 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.087784434 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104113765 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.087124615 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.106063975 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083732288 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.10872912 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.103260824 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.086088294 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.100385217 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.087773628 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.103964723 seconds)
  done (took 2.966849933 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.118160959 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.126185297 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.091372195 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.231129991 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.104348549 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.132032973 seconds)
  done (took 1.646351119 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110153504 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120549075 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.10529691 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107846961 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115039013 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086061746 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107893319 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107158965 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116848286 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.1017775 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107876654 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117508404 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117027992 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097008654 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114975977 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114455994 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107324486 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088820294 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105761675 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.127268384 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08764822 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11736329 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107859558 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086974725 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109310761 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116702852 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116524997 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121189942 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088497033 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116923606 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113434222 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087930758 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118566391 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122328031 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108043817 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097593348 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108179321 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.127202806 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113448654 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096984972 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.110016798 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.1138772 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097149299 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114069616 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117093136 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107174006 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092887962 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10848822 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106545323 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.134387215 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.093901919 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118020276 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115497898 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117626048 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096408415 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.134307859 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.122268003 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117689148 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115605096 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121719768 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116171285 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.093531028 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117194596 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122566753 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114375743 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.096499355 seconds)
  done (took 8.102004309 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.102863038 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.126436587 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107476895 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122891659 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097193859 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109232677 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107006498 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08752509 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107947917 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106855448 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.152525059 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088360312 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118983538 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11737427 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087173704 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109325667 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108128335 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117283616 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087650906 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.135364048 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108115398 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116635958 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117328668 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097795597 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122602842 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114832939 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107139432 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088344791 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108976621 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106869685 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.093811186 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108598549 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116927714 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.086155974 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117418838 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108266881 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087468704 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11506975 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108627063 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11295873 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097360435 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128674223 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108784482 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107768583 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.102030975 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108480485 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107656657 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08733036 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108756188 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10624126 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.101726037 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.122736887 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122420097 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119053816 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10788067 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087965992 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109111688 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107042138 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08795396 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115450091 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117041238 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087113886 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.134915523 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.10962971 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108310383 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117520098 seconds)
  done (took 8.015919935 seconds)
done (took 154.943536291 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.224973387 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.219527602 seconds)
  done (took 1.292612574 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.088309012 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.135728437 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.095830434 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.169259951 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.084491082 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.140992538 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.137195047 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.097986417 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.106785517 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.086155813 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.106570949 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.086666529 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.1722345 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.084723975 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.10668101 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.107266875 seconds)
  done (took 2.664108119 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.114234288 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.253765276 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.123030888 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.103991268 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.090298067 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.108546587 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.084694565 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.111590473 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.088364233 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.105299061 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.088052766 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.107586379 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.082868408 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.107470271 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.088384409 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.109666078 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.102996166 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.088540594 seconds)
  done (took 2.81364626 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.113304465 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.15414204 seconds)
  done (took 1.126834855 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.241121747 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.162374284 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.230824298 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.471819331 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.271234557 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.355425179 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.203107589 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.212726877 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.166594899 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.209553636 seconds)
  done (took 3.378831031 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.118593843 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.180290596 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.317478935 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.154704347 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.106249877 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.127289217 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.156611489 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.130595501 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.125768371 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.100094719 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.123151057 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.118122668 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.137248004 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.094252678 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.115324719 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.116183704 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.121428393 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.114656538 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.114431163 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.095190711 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.138341799 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.083791107 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.115616617 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.112955508 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.097263779 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.119199795 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.105464352 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.084547067 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.116662033 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.092349093 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.114483959 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.125296419 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.117975094 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.155338542 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.121871616 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.15711082 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.116927076 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.091480466 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.115653504 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.089678379 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.119114029 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.118809291 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.124228804 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.097610032 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.106065144 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.09676905 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.106474307 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.08388115 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.11582077 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.11820652 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.093504574 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.114349461 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.155643062 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.119842959 seconds)
  done (took 7.366758296 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.782104931 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.15585852 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.089586368 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.878491507 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.135790769 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.104203865 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.769672731 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.111106683 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.256018494 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.752229649 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.1365921 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.095420751 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.227683129 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.257339696 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.925267834 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.2851919 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.635881974 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.126349733 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.151870742 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.153236045 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.117165183 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.114599176 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.130256634 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.427411468 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.116580874 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.088522596 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.118278581 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.11819194 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.158898096 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.124865668 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.091300068 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.198786023 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.24475706 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.202192096 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.092923296 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.11228715 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.087874019 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.19145139 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.260534212 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.192168823 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.178234289 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.108337515 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.087370893 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.122206694 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.131789344 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.084548849 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.183323787 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.173514615 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.167387417 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.11536942 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.117470322 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.097204983 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.121021848 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.162485142 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.120668777 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.306839967 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.312257398 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.088136915 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121051493 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.124913443 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.233534511 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.123376072 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.222329932 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.137977298 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.186677473 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.111727084 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.780252364 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.169177747 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.110866619 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.094713441 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.120332837 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.115039074 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.09884188 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.166451993 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.404819023 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.123858875 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.113575332 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.090005872 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.224745681 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.101790398 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.112610102 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.160067603 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.117250425 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.120177669 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.101850579 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.122773142 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.167728707 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.250604508 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.100135731 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.119264707 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.114449796 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.10217694 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.11652872 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.209556308 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.218257757 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.159648439 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.228753983 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.09927057 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.183900093 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.169628731 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.118110248 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.171357312 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.119403672 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.101142953 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.123094109 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.216056639 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.143662808 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.122320888 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.093334896 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.118868945 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.146300151 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.126562447 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.095983088 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.190284805 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.457077764 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.167402906 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.109330861 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.126356468 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.09835018 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.18155634 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.096437854 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.260342688 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121168745 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.168497025 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.118001782 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.087693176 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.1209588 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.165798351 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.121399422 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.118830498 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.099242122 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.118387651 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.234945717 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.215154062 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.11946643 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.218922688 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.183376255 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.118797354 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.169785832 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.121450699 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.16753143 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.119402769 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.118116216 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.093892899 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.769970037 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.122395682 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.097859972 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.115256006 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.1864447 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.087602545 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.123597414 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.124277461 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.084780228 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.786912405 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.12668291 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.120165904 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.101725775 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.11861175 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.118915088 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.095042786 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.116178683 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.16046783 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.228757878 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.118812532 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.095668291 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.125029705 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.157487748 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.116994142 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.12605404 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.122470846 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.102950522 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.122771186 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.113688805 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.101512654 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.1898566 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.161942729 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.216709635 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.570033373 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.112425167 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.123520169 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.201728427 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.112755051 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.282726427 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.117978298 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.200009667 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.185299686 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.097608254 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.317930996 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.162620807 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.185501388 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.127064275 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.192820814 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.087494485 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.117555578 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.162717787 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.110635588 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.094849122 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.183063266 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.1026002 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.122656288 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.964280358 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.088429712 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.246577362 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.08857515 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.169344108 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.116501545 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.119768584 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.285331219 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.09008811 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.127959726 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.162632329 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.115503341 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.123147316 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.849624225 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.124279601 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.119702787 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.095423939 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.220594323 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.161496111 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.120671888 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.118664313 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.095991716 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.181932705 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.209962563 seconds)
  done (took 43.746937608 seconds)
done (took 63.243972617 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.278746966 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.216215141 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.269106704 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.170151213 seconds)
  done (took 1.894023526 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.171521964 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.149367663 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.121552461 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.108503068 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.150297111 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.083601614 seconds)
  done (took 1.665190328 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.363331227 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.276377239 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.241678752 seconds)
  done (took 1.766210813 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.312938017 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.245084901 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.47557357 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.324159335 seconds)
  done (took 2.339979105 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.208401433 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.13231141 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.113496287 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.103509174 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.197318122 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.245565736 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.141708563 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.202260374 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.097749426 seconds)
  done (took 2.372473868 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.197507772 seconds)
done (took 11.122895894 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.296751835 seconds)
    (2/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.254134599 seconds)
    (3/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.246880775 seconds)
    (4/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.205434929 seconds)
    (5/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.159928946 seconds)
    (6/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.146805237 seconds)
    (7/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.11913992 seconds)
    (8/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.170799554 seconds)
    (9/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.125598333 seconds)
    (10/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.117547763 seconds)
    (11/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.194012308 seconds)
    (12/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.096590784 seconds)
    (13/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.138004784 seconds)
    (14/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.117122092 seconds)
    (15/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.165792245 seconds)
    (16/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.171594631 seconds)
    (17/309) benchmarking ("sort", Float64, false)...
    done (took 0.146178163 seconds)
    (18/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.222805103 seconds)
    (19/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.097509598 seconds)
    (20/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.28441725 seconds)
    (21/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.181354002 seconds)
    (22/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.161638175 seconds)
    (23/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.247199079 seconds)
    (24/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.229540178 seconds)
    (25/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.193034973 seconds)
    (26/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.149174353 seconds)
    (27/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.117804691 seconds)
    (28/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.124263143 seconds)
    (29/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.192185429 seconds)
    (30/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.205043497 seconds)
    (31/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.146843574 seconds)
    (32/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.091698344 seconds)
    (33/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.113992587 seconds)
    (34/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.211258222 seconds)
    (35/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.114714791 seconds)
    (36/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.10814524 seconds)
    (37/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.139534278 seconds)
    (38/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.198537834 seconds)
    (39/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.109996157 seconds)
    (40/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.109511942 seconds)
    (41/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.11622501 seconds)
    (42/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.09229135 seconds)
    (43/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.11649601 seconds)
    (44/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.118102899 seconds)
    (45/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.120094516 seconds)
    (46/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.125975267 seconds)
    (47/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.187469663 seconds)
    (48/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.08918771 seconds)
    (49/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.117976674 seconds)
    (50/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.098019331 seconds)
    (51/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.146172602 seconds)
    (52/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.095855196 seconds)
    (53/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.090345633 seconds)
    (54/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.168744125 seconds)
    (55/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.182054589 seconds)
    (56/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.222341981 seconds)
    (57/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.199108508 seconds)
    (58/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.116055307 seconds)
    (59/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.093812293 seconds)
    (60/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.139946389 seconds)
    (61/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.168249655 seconds)
    (62/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.109274951 seconds)
    (63/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.195667587 seconds)
    (64/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.133515091 seconds)
    (65/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.150666063 seconds)
    (66/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.169878747 seconds)
    (67/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.183529234 seconds)
    (68/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.101219435 seconds)
    (69/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.091635716 seconds)
    (70/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.118427527 seconds)
    (71/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.087697066 seconds)
    (72/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.116257449 seconds)
    (73/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.066491079 seconds)
    (74/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.225973637 seconds)
    (75/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.104519775 seconds)
    (76/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.115652716 seconds)
    (77/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.134919621 seconds)
    (78/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.21560939 seconds)
    (79/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.180108815 seconds)
    (80/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.22115532 seconds)
    (81/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.167078228 seconds)
    (82/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.201088921 seconds)
    (83/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.188770428 seconds)
    (84/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.157244018 seconds)
    (85/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.090749013 seconds)
    (86/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.085270815 seconds)
    (87/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.090472773 seconds)
    (88/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.108238868 seconds)
    (89/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.18094633 seconds)
    (90/309) benchmarking ("sort", Int64, false)...
    done (took 0.109771619 seconds)
    (91/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.189484056 seconds)
    (92/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.097278418 seconds)
    (93/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.064802988 seconds)
    (94/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.180566223 seconds)
    (95/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.124119428 seconds)
    (96/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.123705909 seconds)
    (97/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.109139429 seconds)
    (98/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.097802093 seconds)
    (99/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.216918709 seconds)
    (100/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.148828205 seconds)
    (101/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.118815146 seconds)
    (102/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.155132251 seconds)
    (103/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.090360069 seconds)
    (104/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.076334795 seconds)
    (105/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.235220676 seconds)
    (106/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.155870684 seconds)
    (107/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.110245905 seconds)
    (108/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.116669374 seconds)
    (109/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.174940039 seconds)
    (110/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.090916049 seconds)
    (111/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.139891931 seconds)
    (112/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.118037083 seconds)
    (113/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.113029269 seconds)
    (114/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.111477393 seconds)
    (115/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.087744352 seconds)
    (116/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.194134909 seconds)
    (117/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.10781016 seconds)
    (118/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.089145437 seconds)
    (119/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.301687834 seconds)
    (120/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.090583794 seconds)
    (121/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.086843085 seconds)
    (122/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.101495135 seconds)
    (123/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.09379928 seconds)
    (124/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.155132586 seconds)
    (125/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.096451902 seconds)
    (126/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.1165618 seconds)
    (127/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.083430544 seconds)
    (128/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.090605951 seconds)
    (129/309) benchmarking ("sort", Bool, false)...
    done (took 0.180952744 seconds)
    (130/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.093911537 seconds)
    (131/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.204725856 seconds)
    (132/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.116730672 seconds)
    (133/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.101322475 seconds)
    (134/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.172977715 seconds)
    (135/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.114232661 seconds)
    (136/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.093122227 seconds)
    (137/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.137970433 seconds)
    (138/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.178023559 seconds)
    (139/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.111974434 seconds)
    (140/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.115471314 seconds)
    (141/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.137116832 seconds)
    (142/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.093759254 seconds)
    (143/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.176807699 seconds)
    (144/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.185348857 seconds)
    (145/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.092612232 seconds)
    (146/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.08984354 seconds)
    (147/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.094339782 seconds)
    (148/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.118254836 seconds)
    (149/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.091295078 seconds)
    (150/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.089082983 seconds)
    (151/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.091692428 seconds)
    (152/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.120223389 seconds)
    (153/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.123108431 seconds)
    (154/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.109150085 seconds)
    (155/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.092814582 seconds)
    (156/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.121153286 seconds)
    (157/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.067707433 seconds)
    (158/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.110100843 seconds)
    (159/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.094515798 seconds)
    (160/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.222672718 seconds)
    (161/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.106846246 seconds)
    (162/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.066141701 seconds)
    (163/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.064902546 seconds)
    (164/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.120645247 seconds)
    (165/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.1170381 seconds)
    (166/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.095196254 seconds)
    (167/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.141430372 seconds)
    (168/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.09705163 seconds)
    (169/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.11085251 seconds)
    (170/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.109388132 seconds)
    (171/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.067728782 seconds)
    (172/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.085692582 seconds)
    (173/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.126136825 seconds)
    (174/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.148209817 seconds)
    (175/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.084885991 seconds)
    (176/309) benchmarking ("sort", Float32, false)...
    done (took 0.173423029 seconds)
    (177/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.132338372 seconds)
    (178/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.188061684 seconds)
    (179/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.125019444 seconds)
    (180/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.13534893 seconds)
    (181/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.067465945 seconds)
    (182/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.083711292 seconds)
    (183/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.119092728 seconds)
    (184/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.065326874 seconds)
    (185/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.134480963 seconds)
    (186/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.109768677 seconds)
    (187/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.086819037 seconds)
    (188/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.111245527 seconds)
    (189/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.114520994 seconds)
    (190/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.122322918 seconds)
    (191/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.092082662 seconds)
    (192/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.110896803 seconds)
    (193/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.077766095 seconds)
    (194/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.113767918 seconds)
    (195/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.127459281 seconds)
    (196/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.089199832 seconds)
    (197/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.092385387 seconds)
    (198/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.137128799 seconds)
    (199/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.093429754 seconds)
    (200/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.119833706 seconds)
    (201/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.067381763 seconds)
    (202/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.089373211 seconds)
    (203/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.164515523 seconds)
    (204/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.125036256 seconds)
    (205/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.12692228 seconds)
    (206/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.110843845 seconds)
    (207/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.10931434 seconds)
    (208/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.115212199 seconds)
    (209/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.09141075 seconds)
    (210/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.068305734 seconds)
    (211/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.065214977 seconds)
    (212/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.111226905 seconds)
    (213/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.162537415 seconds)
    (214/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.096216174 seconds)
    (215/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.117583105 seconds)
    (216/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.067129888 seconds)
    (217/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.144764213 seconds)
    (218/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.067071587 seconds)
    (219/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.088319148 seconds)
    (220/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.091030593 seconds)
    (221/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.085619164 seconds)
    (222/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.180546331 seconds)
    (223/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.110535617 seconds)
    (224/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.068460813 seconds)
    (225/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.136019675 seconds)
    (226/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.093229865 seconds)
    (227/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.066029755 seconds)
    (228/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.09128683 seconds)
    (229/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.086651824 seconds)
    (230/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.117929332 seconds)
    (231/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.093453838 seconds)
    (232/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.108603201 seconds)
    (233/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.06704457 seconds)
    (234/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.137071678 seconds)
    (235/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.065857169 seconds)
    (236/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.21871912 seconds)
    (237/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.19043992 seconds)
    (238/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.067345322 seconds)
    (239/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.109842296 seconds)
    (240/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.068093917 seconds)
    (241/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.109067345 seconds)
    (242/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.118963316 seconds)
    (243/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.110209802 seconds)
    (244/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.067903345 seconds)
    (245/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.065484175 seconds)
    (246/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.135772385 seconds)
    (247/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.066803098 seconds)
    (248/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.114038102 seconds)
    (249/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.087590417 seconds)
    (250/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.094941138 seconds)
    (251/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.087598186 seconds)
    (252/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.116452468 seconds)
    (253/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.067322376 seconds)
    (254/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.223572366 seconds)
    (255/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.109700806 seconds)
    (256/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.067589362 seconds)
    (257/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.085302106 seconds)
    (258/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.09232029 seconds)
    (259/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.099963599 seconds)
    (260/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.117334604 seconds)
    (261/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.067298174 seconds)
    (262/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.116049938 seconds)
    (263/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.067164759 seconds)
    (264/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.186018985 seconds)
    (265/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.094458969 seconds)
    (266/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.131130785 seconds)
    (267/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.139360604 seconds)
    (268/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.126394016 seconds)
    (269/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.06635719 seconds)
    (270/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.111493114 seconds)
    (271/309) benchmarking ("sort", BigInt, false)...
    done (took 0.219415562 seconds)
    (272/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.116444735 seconds)
    (273/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.088774278 seconds)
    (274/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.090086087 seconds)
    (275/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.126098195 seconds)
    (276/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.122591215 seconds)
    (277/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.068494221 seconds)
    (278/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.067852297 seconds)
    (279/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.100940521 seconds)
    (280/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.092852777 seconds)
    (281/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.090896858 seconds)
    (282/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.086025543 seconds)
    (283/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.111197601 seconds)
    (284/309) benchmarking ("sort", Int8, false)...
    done (took 0.188756899 seconds)
    (285/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.085414686 seconds)
    (286/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.195136743 seconds)
    (287/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.117173323 seconds)
    (288/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.107044001 seconds)
    (289/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.111655806 seconds)
    (290/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.066150299 seconds)
    (291/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.090193488 seconds)
    (292/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.113978082 seconds)
    (293/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.115654824 seconds)
    (294/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.067344406 seconds)
    (295/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.110109325 seconds)
    (296/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.08687993 seconds)
    (297/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.178519241 seconds)
    (298/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.085176397 seconds)
    (299/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.111014174 seconds)
    (300/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.093800333 seconds)
    (301/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.091575983 seconds)
    (302/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.21765382 seconds)
    (303/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.08697747 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.11630265 seconds)
    (305/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.067745573 seconds)
    (306/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.110258235 seconds)
    (307/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.078166317 seconds)
    (308/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.086968885 seconds)
    (309/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.112823535 seconds)
  done (took 39.785474995 seconds)
done (took 40.677005219 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.100399467 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.146531831 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.094840989 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.135956634 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.123343988 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.091674626 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.118938538 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.096974501 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.124774172 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.124351944 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.099030951 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.093297189 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.09675576 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.120760707 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.095525736 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.140053702 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.123267325 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.094085889 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.119206648 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.085475838 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.119555957 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.086073269 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.113857119 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.069513282 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.122151194 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.093233416 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.117394252 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.120247874 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.086636114 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.110482683 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.091475299 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.117984066 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.0867948 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.123967614 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.093361824 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.120037643 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.095796875 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.12127631 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.087255754 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.111511685 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.117050764 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.087091367 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.116567585 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.094775714 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.116303185 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.092555982 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.118615736 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.098970597 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.140104314 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.118390301 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.094860807 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.122911689 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.095988626 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.12057733 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.089512524 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.119826611 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.09144599 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.139982122 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.119132539 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.091869244 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.118873822 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.094220606 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.117474684 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.095093586 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.120120595 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.120135013 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.098532153 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.116588624 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.096883105 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.116081886 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.086709812 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.119714406 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.089890838 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.112360963 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.095566907 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.123240302 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.10882665 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.093771331 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.117171332 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.092147495 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.109657237 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089405376 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.11168615 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.093052957 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.112713718 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.070217104 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.114196781 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.093877209 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.109993582 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.09597441 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.117473632 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.094861404 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.112320162 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.098529799 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.111110737 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.092108128 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.111923018 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.086350439 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.114504434 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.0905894 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.112037964 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089238998 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.120678086 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.087971143 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.118338746 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.122367961 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.08811034 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.117129662 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.085813527 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.11006065 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.100982069 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.121408397 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.085939791 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.11782471 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.085860468 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.119538896 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.085320079 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.111938855 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.084984614 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.11194101 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.092097425 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.112052457 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.112971522 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.094862485 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.124880139 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.087312588 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.114302207 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089695087 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.111131834 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.0925986 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.111133712 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.087242979 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.113169103 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.077857024 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.113634265 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.087234332 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.118185868 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.089507497 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.119292175 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.088723055 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.120573977 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.090656599 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.117875901 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.091348311 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.1115563 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.073301173 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.117438278 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089330372 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.114450603 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.086417898 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.113577683 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.087113736 seconds)
done (took 16.944254452 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.089841896 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.18532142 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.153688307 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.14193846 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.107223541 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.1123878 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.121400392 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.118518489 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.114789387 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.143035434 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.109678267 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.13415417 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.148927167 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.086597148 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.111827439 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.091905027 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.113029467 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.103361793 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.146664181 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.134178133 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.163932131 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.086027941 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.147652285 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.136414296 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.120699813 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.105397065 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.112229153 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.092369657 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.115449578 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.112614915 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.134335923 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.114135155 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.088940878 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.134424523 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.10507256 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.121390057 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.086928133 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.120258018 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.086805582 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.113479446 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.140877077 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.133452835 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.093425442 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.117468877 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.09101965 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.115025623 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.089063454 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.122071875 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.097547707 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.117360463 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.125484738 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.155820509 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.091581301 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.121978639 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.086935041 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.123137262 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.120865388 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.090450872 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.11217376 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.090470014 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.111677601 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.091260054 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.127807368 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.142136132 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.091591529 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.123159792 seconds)
  done (took 8.634007436 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.106385715 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.139294918 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.104493801 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.132058279 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.112136277 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.088350182 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.130223241 seconds)
  done (took 1.770205189 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.091484794 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.133828896 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.111303684 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.136618369 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.13148008 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.109714575 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.123652392 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.08831101 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.132121551 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.0883671 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.136690969 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.15291743 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.089457986 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.12124485 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.137067535 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.089111913 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.137782397 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.087853803 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.116833361 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.111678592 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.117219394 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.134945437 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.09091496 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.114015685 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.102120816 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.114422864 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.163342821 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.093741825 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.115520753 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.091659645 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.112917717 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.165817215 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.101599627 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.128098444 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.112950387 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.104134724 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.127819358 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.086715258 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.129395772 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.093540971 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.128554994 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.088780739 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.115865904 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.111645675 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.094655988 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.124378232 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.090240565 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.114739081 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.092087713 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.134311618 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.089365787 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.127371383 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.088202286 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.119076038 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.089300196 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.121902777 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.123900966 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.09126944 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.135542678 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.090641921 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.131117523 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.104886064 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.128566785 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.130314714 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.091235161 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.12800603 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.101962115 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.117331985 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.089749948 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.118828845 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.130380486 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.08791893 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.115326603 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.10007652 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.115982531 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.111868048 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.138256901 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.114948956 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.100609218 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.113714196 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.090226908 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.113660715 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.11181477 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.11776059 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.088979549 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.118586142 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.091375788 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.111994381 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.087537725 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.118051928 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.086963268 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.115645212 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.116030815 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.090178338 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.11668383 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.106689623 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.114363184 seconds)
  done (took 11.832775642 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.092137532 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.114200962 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.09299334 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.114136834 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.090517635 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.11497175 seconds)
  done (took 1.589853017 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.115790846 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.118277131 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.10306687 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.121068565 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.156469365 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.103227053 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.130303074 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.122972436 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.108058548 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.128050771 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.128690784 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.10494204 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.136936914 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.121271959 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.104206766 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.121509206 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.128706347 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.100208547 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.128432592 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.096501099 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.13761174 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.120838364 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.096657281 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.132021823 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.117846251 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.096699381 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.125143675 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.103311157 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.128483317 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.122424617 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.096534473 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.118312864 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.096119317 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.123974628 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.129725326 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.095443843 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.121887646 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.118888312 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.100244822 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.118761253 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.104276423 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.121953057 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.127707968 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.093733256 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.123720368 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.121231282 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.094448423 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.125968899 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.102420093 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.119827265 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.119632566 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.095346391 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.118636359 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.09436662 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.122231964 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.122689985 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.0940398 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.130285887 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.095921166 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.123120206 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.118703463 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.093940719 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.123928059 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.11867297 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.105858153 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.118950186 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.094931254 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.122347689 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.121676378 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.095780289 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.119589159 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.092569785 seconds)
  done (took 9.232113491 seconds)
done (took 34.014919175 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.699496473 seconds)
  done (took 1.670673742 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.729416913 seconds)
  done (took 1.699558666 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.33431077 seconds)
  done (took 18.305889844 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.5124878 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.588793372 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.82064448 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.180912554 seconds)
  done (took 3.077910331 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.962997824 seconds)
  done (took 1.9592639 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.300477464 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.257397438 seconds)
  done (took 1.538450184 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.801456347 seconds)
  done (took 1.784170526 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.345095739 seconds)
  done (took 2.330286387 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.336080891 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.185161923 seconds)
  done (took 1.508657005 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.552614251 seconds)
  done (took 1.540262865 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.840999858 seconds)
  done (took 7.829672408 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.264029047 seconds)
  done (took 1.265149217 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.305692178 seconds)
  done (took 1.300030799 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.594269685 seconds)
  done (took 4.586712722 seconds)
done (took 51.376629282 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.103562755 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.126369647 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.101779289 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.123909149 seconds)
  done (took 1.443595902 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.105184619 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.12064214 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.099788412 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.121027314 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.125221637 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.096250463 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.123090299 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.09978823 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.120957835 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.096298305 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.121141132 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.119325663 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.098684781 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.122644129 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.093933192 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.124033629 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.098004019 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.121464195 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.12356498 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.096677617 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.119087534 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.097635687 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.125106292 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.093431666 seconds)
  done (took 3.657402494 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.105629533 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.118498787 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.09612114 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.117442234 seconds)
  done (took 1.441234087 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.102732065 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.141187711 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.13887998 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.100251299 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.142850006 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.136440709 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.093042307 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.117218578 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.094180468 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.125828751 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.09003782 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.149481436 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.136862439 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.098929667 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.127448909 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.087667202 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.117492451 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.136420839 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.099567111 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.126198814 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.092479297 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.125430788 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.089200894 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.140681732 seconds)
  done (took 3.806094781 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.161890158 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.152126532 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.138494443 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.095241847 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.155500245 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.142177167 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.08743355 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.141842171 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.086471696 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.131134055 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.117779686 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.132495693 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.128062762 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.087482447 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.113902384 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.087364651 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.127955825 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.130606959 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.090550201 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.144583889 seconds)
  done (took 3.45224767 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.101471124 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.117333896 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.088544594 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.115537414 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.099706785 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.120929382 seconds)
  done (took 1.641049705 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.094938057 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.114751901 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.089363914 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.113638448 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.094471232 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.114345609 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.089452021 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.114655153 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.090252237 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.114810724 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.089001011 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.113402813 seconds)
  done (took 2.235153167 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.46237815 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.092180473 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.120103436 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.11385792 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.095986182 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.115331218 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.102624717 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.118740068 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.139878237 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.089914471 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.115329973 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.091050615 seconds)
  done (took 2.658422605 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242477375 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125015876 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.29180789 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19246341 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159750833 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.171128264 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.151471961 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.166848548 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.224367103 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158020406 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209244073 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22170019 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126141251 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219342534 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112341007 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.145286571 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.226165409 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.219445741 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155699275 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.23317366 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20197064 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.166721117 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.180406946 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.153491669 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139044783 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170867644 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.121318073 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10351517 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237680005 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180889285 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.219463575 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164490105 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147486485 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217235629 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.252523686 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.225400593 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190528041 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136610438 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.151608194 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.165735834 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.270406378 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139523126 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.237524602 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160590298 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105241795 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223019606 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16969169 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.176127197 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.151696505 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139992481 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200004381 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241951461 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.195749684 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13831765 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165042938 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162286293 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.168718564 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153024608 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.254120973 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199576619 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180313076 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.121510983 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.146576342 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192827551 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183704053 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.168710148 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.2100479 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147192639 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19417246 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.187654818 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169327093 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220646718 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.19243386 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14002657 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170536558 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.17528118 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172039948 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.257856855 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178910656 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.122879603 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168589384 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150378572 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131348008 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.167235915 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.12515848 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.215043492 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151620147 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.135079383 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163580519 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.162197537 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.161652701 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198538586 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.220609812 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.120923682 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.111309221 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155686546 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.155207799 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191250862 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140625918 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.16129726 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161279078 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.129798481 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178764023 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.096839132 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175538261 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.118243073 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17747916 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185915138 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.126483403 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159488263 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154620271 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.149198102 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180335111 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198215833 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142174618 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132519196 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207364571 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175399013 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.15005812 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.1799703 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.227292246 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.114928209 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149794777 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228890906 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217372445 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13997253 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.22968992 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154603699 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107499993 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.134023132 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17896572 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156859438 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.160977129 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133047282 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.181931502 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.238678444 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.098655548 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13911357 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188595736 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133235769 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130724757 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159789064 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14717263 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.111451767 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.147138576 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.151778361 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180557396 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178962933 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.152686916 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16652706 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151416893 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.251816388 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140759784 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.14930622 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148662982 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.093413004 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.221025039 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19866589 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131486644 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203552465 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.171374174 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157050025 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170494029 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13623102 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.177098043 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.129630232 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.093435348 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21952618 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.164811314 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162391689 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.195929981 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155967787 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.182734068 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.181059021 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170676923 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201969746 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.163450231 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159149122 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.111152992 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.158848032 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166305172 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.124370265 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.141204554 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.106603536 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156751329 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143531201 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134165103 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198838378 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198001132 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.121244029 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.157006628 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150320825 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.179837636 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.129776974 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179513925 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.17611403 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148484861 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.224432559 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192943729 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186868828 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143411515 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230793233 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.094166425 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.124510567 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.142282611 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.171994174 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10663439 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135554182 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166822789 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.17962069 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211935432 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175527182 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162646774 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177887232 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.191989536 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.094277595 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.168385591 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183540136 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202184484 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.161720703 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139272966 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.152703484 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.176431875 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156400118 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.257596911 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167120072 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176447401 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.237663784 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.148430549 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104697367 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152074506 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185631424 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15360216 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.203044593 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.120483938 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140665061 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160688641 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.133107609 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.159637572 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184315622 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16343243 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218794771 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.148912559 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187801649 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126360087 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165603676 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157414841 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165401538 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.081608396 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175133358 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.23260673 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148277083 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171079538 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19213495 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132267085 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.178241312 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.212452926 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.224376738 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137533597 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158888793 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131319674 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.164675428 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200480689 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.177662904 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158945662 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18955179 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157440463 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.108444336 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141110192 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15214953 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.152765253 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.104855065 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.148177817 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.204023983 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.112602934 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.218256474 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162054271 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158214579 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172084217 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.122589159 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.146533047 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151215709 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24417899 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174065483 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213818114 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.149740656 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.17951649 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23312963 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.097344315 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132269698 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.133285769 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.179777851 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136079854 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19159219 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.147571893 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128274855 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208922483 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193365716 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139765502 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.091477016 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156369109 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172947133 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165566945 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152689863 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.158934186 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.236908458 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.114352965 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133094817 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.17183773 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15742456 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146790001 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197731267 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.079058854 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.14917663 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128855358 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105444809 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.164639873 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235997654 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.135369038 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.158498448 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195049455 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16881256 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.163404584 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149358461 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.121784267 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165911276 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229598694 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183980599 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.131408901 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156454108 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176729297 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195356153 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161331075 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.141337697 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202996086 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21984729 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.19831594 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.142832295 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168013626 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167486842 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157589237 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185436573 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135735363 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204821335 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135468769 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224278544 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152339489 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.141531698 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176849514 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.120064543 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143915855 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215911015 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174913316 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108151553 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133005522 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167248188 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176803978 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155481325 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.127468209 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180935933 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.125432589 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190318534 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.258854979 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133473529 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.151838756 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.119009245 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135211423 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15782529 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158784825 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139780489 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.138432919 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.231790133 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.135105614 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191211239 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229737267 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172781717 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175453967 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144401618 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.692052149 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.130183922 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193274073 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154394069 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203385031 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.151947191 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171318241 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15752042 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167736283 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221271094 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159457199 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.229665402 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194053307 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.176684947 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132835397 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158208777 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161901949 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.144769668 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.152667525 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166831553 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159188586 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.152054443 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.177688477 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169232564 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.133718759 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.11181377 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.22482171 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.154736801 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187156481 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.179299549 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138462773 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171803279 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186214594 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134717539 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.180903697 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238583405 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.140335951 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122101781 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.134759434 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.154857408 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.261305638 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.096316533 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.229787907 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175263768 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158382162 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167267274 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.147314629 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188030544 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156720653 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204822356 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.117302226 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.185447134 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.126449163 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138053123 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.130783644 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.153379028 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168795058 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.146280891 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158611536 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.137534589 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190236713 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.124761715 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14455146 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155535118 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190848653 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21372346 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.138710345 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135901591 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162031898 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150586621 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.174787719 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17726014 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.13474321 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106824019 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.13675182 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.159698499 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.112815895 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155259606 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157178525 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165123043 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205593761 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.138509641 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.279641418 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140204534 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153104044 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.089001526 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.132030668 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149699166 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117504956 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156870405 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15054656 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.262435822 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.14586728 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.103863136 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148856725 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.126490758 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106910936 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.165368641 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193188154 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175374769 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144221269 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.081505201 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158134953 seconds)
  done (took 81.001322716 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.222686948 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.133056868 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.146393039 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.201489643 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.176729245 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.269695181 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.209720664 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.255097794 seconds)
  done (took 2.694733736 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.09875099 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.145365148 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.154380754 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.132557002 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.090936523 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.119966586 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.334781733 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.134066336 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.090101146 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.139473447 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.148826058 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.117958479 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.51274355 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.118070604 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.118575212 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.083837968 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.116057853 seconds)
  done (took 3.734259588 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.466172719 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.717468854 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.479255039 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.124771084 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.144885177 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.134596466 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.732479435 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.212746671 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.094919687 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.492001711 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.769871061 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.180044006 seconds)
  done (took 18.638397728 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.102014544 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.121828464 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.107143574 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.136229602 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.094790756 seconds)
  done (took 1.652712581 seconds)
done (took 129.046218482 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.109193249 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.407803541 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.070841524 seconds)
  done (took 1.605123071 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.110651276 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.138225158 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.108259042 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.13689626 seconds)
  done (took 1.587054611 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.101579482 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.127177879 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.109076382 seconds)
  done (took 1.426395649 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.323092445 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.191166562 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.143426617 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.111741359 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.130163831 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.102511683 seconds)
  done (took 1.436340864 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.102468177 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.128318228 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.096351397 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.130564497 seconds)
  done (took 1.555390805 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.100124998 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.07025239 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.101862164 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.075034267 seconds)
  done (took 1.437680251 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.118145708 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.133538226 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.102797797 seconds)
  done (took 1.450702926 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.135852861 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.140260801 seconds)
  done (took 1.374999557 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.1087224 seconds)
  done (took 1.201414048 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.121657558 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.169880393 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.189830918 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.166580775 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.230258762 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.165655565 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.141763031 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.115792979 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.131558623 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.145359631 seconds)
  done (took 2.673945397 seconds)
done (took 17.611164491 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.105581713 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.513391688 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.412394075 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.118914902 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.723034002 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.379011442 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.03276634 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.14779653 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.166389403 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.092629742 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.13963568 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.670694469 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.026396897 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.474494993 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.98016434 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.470783894 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.702570619 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.097486523 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.120780177 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.095614465 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.018087416 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.090864116 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.12350585 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.094213008 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.703610908 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.426548434 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.095276642 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.470619482 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.091931491 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.128178752 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.383947639 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.124490019 seconds)
  done (took 17.310227576 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.103961396 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.177055362 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.104952542 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.141036565 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.124275383 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.100706878 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.126252701 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093426725 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.182714039 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.131678138 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.114367532 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.124382102 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.126201583 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.095406255 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.143513967 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.091581597 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.127007304 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.091920769 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.122522042 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.122223487 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.113479167 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.120745954 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.093941517 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.124159029 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.092876558 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.136838297 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.123672517 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.094956544 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.121617458 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.101240384 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.129923291 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.094655306 seconds)
  done (took 4.892832993 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.145654487 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.183469809 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.129523974 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.126499554 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.170447229 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.126007252 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.200260075 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.118367312 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.18565419 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.12601836 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.141122983 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.09262907 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.157705953 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.122819118 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.11736014 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.123200154 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.096901814 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.124047553 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.092357658 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.123967496 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.141556881 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.092710963 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.123205893 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.092869724 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.125478487 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.108212906 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.125373756 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.121431642 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.095808868 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.128553706 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.09973662 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.124785695 seconds)
  done (took 5.188898926 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.102694603 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.126751115 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.110708099 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.140291243 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.094866594 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.128328314 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.101463428 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.125810756 seconds)
  done (took 2.034876636 seconds)
done (took 30.521119736 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.117259441 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.127995763 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.112703231 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.136873378 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.101781308 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.132995926 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.090836801 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.135895059 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.133786807 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.107500634 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.138777913 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.091691266 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.124457629 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.091442233 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.136834523 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.098680497 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.135057835 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.101217822 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.135479041 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.132613084 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.094948244 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.135450274 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.105820094 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.135588808 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.108959217 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.1368257 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.139111373 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.105632296 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.124456599 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.094943173 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.126552479 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.110217639 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.125939331 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.104730299 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.12896412 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.099985664 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.125679293 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.093116421 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.134635558 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.133177808 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.099680332 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.134390667 seconds)
  done (took 6.07873699 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.113935198 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.140246969 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.109714039 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.081220701 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.119238573 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.080575544 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.139859752 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.078347108 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.111276614 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.107129249 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.073724891 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.108154643 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.077859332 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.102583199 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.082946671 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.074808704 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.109602583 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.078613423 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.075508543 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.107649354 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.078808678 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.072171026 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.110475962 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.077680426 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.074050828 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.115138626 seconds)
  done (took 3.609699842 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.106037095 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.136860708 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.115719605 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.185200387 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.163057096 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.099462702 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.133923445 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.140343549 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.114363293 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.120805 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.101625457 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.151723305 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.115505393 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.130290508 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.091326523 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.138521233 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.136157347 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.096563821 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.128764217 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.112674414 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.140736317 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.101469055 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.145022766 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.133055168 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.097738161 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.123564497 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.102923682 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.137071352 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.097927609 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.133101996 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.09555074 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.130864003 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.123304372 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.110001732 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.128116577 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.099586066 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.143905332 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.101934854 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.132185517 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.091617332 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.132053173 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.122459697 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.115730597 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.16875874 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.090837903 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.131280843 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.098255632 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.137852802 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.121831039 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.116383643 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.133027091 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.0964367 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.127975946 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.096961382 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.124234316 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.10637814 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.126495244 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.094397851 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.133275705 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.133619778 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.10556281 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.128285006 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.107293469 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.124285512 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.098695944 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.123379551 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.092688876 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.123608993 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.145290465 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.093890182 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.165144406 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.092477712 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.125346684 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.130652238 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.104737749 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.129363099 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.092610182 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.138171919 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.101031528 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.127555462 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.100108531 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.127727171 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.094383358 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.144477045 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.124691453 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.094773106 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.122571091 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.102013264 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.125194037 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.09351223 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.138698594 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.091534917 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.127116592 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.108829315 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.126791497 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.122988324 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.100124354 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.127561366 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.092123615 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.138413018 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.100479308 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.125355242 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.131657886 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.098908674 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.125309192 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.106988765 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.128956517 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.095050575 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.128986688 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.101807605 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.125005347 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.092996867 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.127330683 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.094050231 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.133830244 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.097995015 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.130736084 seconds)
  done (took 15.013930349 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.239740935 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.219220522 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.238373403 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.263979846 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.136518685 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.114434943 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.212695239 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.155974428 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.125652791 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.162042388 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.162952047 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.181386029 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.139742883 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.179851275 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.140368736 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.122291146 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.11495255 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.164804388 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.215985877 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.291279577 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.111607132 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.133083476 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.162855172 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.161071625 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.105084146 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.133727284 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.140389661 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.105215991 seconds)
  done (took 5.766206016 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.113081291 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.157200792 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.097764997 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.146479032 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.14964475 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.091379715 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.128551722 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.093834668 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.139596443 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.136373826 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.091690805 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.130349036 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.098936563 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.133349562 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.123428719 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.103141393 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.133705849 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.093765005 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.127965357 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.099282536 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.131255107 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.100893008 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.129707806 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.121384088 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.107700402 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.122365386 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.088548239 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.142383114 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.122414048 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.119870214 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.122420923 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.09907444 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.134472962 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.093021759 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.124888812 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.094063747 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.126816727 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.094222541 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.126100604 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.090382493 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.123040338 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.076258926 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.122923769 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.135658223 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.105269018 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.078816872 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.129009044 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.128891029 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.094985571 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.120830424 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.095852007 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.125509851 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.096474183 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.130454657 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.097530665 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.125047887 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.095688736 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.116713429 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.099094691 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.125153722 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.083800396 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.121603628 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.099624734 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.117977704 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.100567308 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.128740601 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.090564196 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.125845943 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.095843967 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.130299843 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.094582051 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.12730693 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.089859425 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.125707082 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.094635011 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.128923445 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.094955196 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.123976691 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.122883861 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.093690066 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.074873952 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.124023784 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.073541752 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.127371086 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.090980242 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.123464444 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.094709247 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.130798365 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.137639388 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.094282852 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.132942368 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.094200373 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.123331248 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.095513745 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.114405117 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.095809375 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.140498132 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.14095898 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.093336383 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.121935977 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.106956048 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.126344239 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.091938484 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.106601998 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.100952617 seconds)
  done (took 12.992803027 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.132098719 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.153805709 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.093721097 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.145004189 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.156179293 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.156877861 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.102631563 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.131293903 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.095203001 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.142610798 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.092955832 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.133408495 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.096751739 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.137778842 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.157475234 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.104641162 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.12629192 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.106242623 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.132886968 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.170513348 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.111085144 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.144101169 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.107419198 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.127079338 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.129285939 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.110529584 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.163501536 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.107719567 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.140271144 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.143108765 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.108193993 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.161947625 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.143313851 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.101530951 seconds)
  done (took 5.507517182 seconds)
done (took 50.074534541 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.221810323 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.444641467 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.197345836 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.199988215 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.255876253 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.210124777 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.227723 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.210036129 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.216109302 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.198111579 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.442139448 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.91403289 seconds)
done (took 58.869983806 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.201024979 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.339256271 seconds)
    (2/2) benchmarking "String"...
    done (took 1.469531476 seconds)
  done (took 3.940532331 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.55573507 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.176624216 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.46797442 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.203214839 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.204733075 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.498505195 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.905334485 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.572276587 seconds)
  done (took 28.160946029 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.214721887 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.597405335 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.975635517 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.975309835 seconds)
  done (took 18.89577491 seconds)
done (took 60.885204563 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.21324457 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.284258695 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.227362668 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.181827109 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.317391886 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.231419542 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.527179126 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.232741992 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.221535338 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.184759532 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.236220172 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.210094357 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.217135112 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.528358537 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.20128448 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.205743179 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.262365286 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.695179516 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.627842903 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.21404456 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.210711879 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.242690103 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.232734072 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.210720745 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.212172351 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.202530692 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.202629063 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.212058443 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.835021919 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.206692066 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.215872259 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.74372216 seconds)
  done (took 190.880614612 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.207346967 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.279550539 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.372412727 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.259226401 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.50609677 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.405469334 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.344654012 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.723226894 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.228912458 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.212765026 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.427548377 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.2049651 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.520743723 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.195794235 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.216087162 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.210069419 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.521800053 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.560982562 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.224315309 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.481342661 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.230028039 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.536776932 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.490745563 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.41562949 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.202478464 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.294792434 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.213299019 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.233413446 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.414749112 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.427886098 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.241904444 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.252048131 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.842311101 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.068093247 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.228715015 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.213015332 seconds)
  done (took 150.542331309 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.51088103 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.209280367 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.206254059 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.210594385 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.241118425 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.203791889 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.81113259 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.806339342 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.71173515 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.349483186 seconds)
    (10/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.209474178 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.271597463 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.478815006 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.206863033 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.30604992 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.21713117 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.206936492 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.221993057 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.256397678 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.211144888 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.211531917 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.810160085 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.223137694 seconds)
    (23/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.204259547 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.218879934 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.212988676 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.245531155 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.601539842 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.43522227 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.212476771 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.241967307 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.531956649 seconds)
    (32/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.223620952 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.247095356 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.205636337 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.593889471 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.925373668 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.322424552 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.207835387 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.24620242 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.206213719 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.484174114 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.208216416 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.21250843 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.215677919 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.868534602 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.209607046 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.811629845 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.214114174 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.156845543 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.206809781 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.211589399 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.735846209 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.842277114 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.231368537 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.216034248 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.216388908 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.213612128 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.215492692 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.247272685 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.73533235 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.314687973 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.228341286 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.21736852 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.244961738 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.213242015 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.408719501 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.214044537 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.449195255 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.287779 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.320842205 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.814648416 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.214201249 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.310607654 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.328073334 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.21013885 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.214622216 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.215042682 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.215775298 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.324424233 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.209835408 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.649117687 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.215602346 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.216239977 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.278365091 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.311386864 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.209111037 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.592030735 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.216472159 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.214063979 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.948436116 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.306723157 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.208870088 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.215138914 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.21468768 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.64868412 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.812901591 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.463118405 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.215751422 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.649373897 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.216850046 seconds)
    (101/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.21576821 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.671079708 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.782990069 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.887544394 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.217170789 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.324368031 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.215350312 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.217989376 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.215239196 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.243859261 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.23452371 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.274677845 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.209024777 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.614673672 seconds)
  done (took 348.344511635 seconds)
done (took 692.409513544 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.928300403 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.878680768 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.024249601 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.893684924 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.877442691 seconds)
  done (took 10.744283975 seconds)
done (took 11.884471604 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.414616309 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.412611667 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.282533941 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.413237319 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.24714548 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.431978272 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.389794642 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.235437884 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.321422106 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.302299632 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.321066915 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.271497876 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.24666334 seconds)
  done (took 18.432273643 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.553990975 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.539407354 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.279219219 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.541394631 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.255626002 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.549001325 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.422246154 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.461446214 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.440196874 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.254212262 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.230010163 seconds)
  done (took 16.66962457 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.568601276 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.566436781 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.280606005 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.558353812 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.254937374 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.556435176 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.426517761 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.451783851 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.439171794 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.252328751 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.233987082 seconds)
  done (took 16.732814032 seconds)
done (took 52.973163536 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.225856082 seconds)
  done (took 2.36969472 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.263616226 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.423706745 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.248219124 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.234319468 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.230883863 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.229359678 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.235965792 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.230296585 seconds)
  done (took 11.242705444 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.227006937 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.225050055 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.223993153 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.225860491 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.225412519 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.228080065 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.22845253 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.226320629 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.223204593 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.223938047 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.228952639 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.226213632 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.225821407 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.225840016 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.227825243 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.226620582 seconds)
  done (took 20.764177649 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.227602079 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.224895892 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.225259419 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.226675119 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.225517108 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.226344933 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.224903187 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.225937131 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.225190724 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.22358392 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.225246999 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.224885794 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.226805942 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.224951958 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.227531394 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.228130202 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.227299119 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.226984619 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.231964497 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.226131219 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.227518955 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.226310515 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.227548215 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.229023288 seconds)
  done (took 30.580996309 seconds)
done (took 66.100950956 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.406830488 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 4.120890231 seconds)
  done (took 9.672593137 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.231037635 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.22953303 seconds)
  done (took 3.608275369 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.231275289 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.229043064 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.230245345 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.229629613 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.231185707 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.228657506 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.228576978 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.230157229 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.229710024 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.231173255 seconds)
  done (took 13.448232604 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.230775379 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.230191748 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.227181277 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.230158808 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.231285465 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.227841482 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.231209549 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.230920243 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.231232399 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.230197062 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.229554032 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.229885103 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.230293741 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.22961693 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.230652737 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.227893482 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.231259813 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.230800727 seconds)
  done (took 23.288866502 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.23098513 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.230418253 seconds)
  done (took 3.612766053 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.22926152 seconds)
    (2/7) benchmarking "second"...
    done (took 1.229201339 seconds)
    (3/7) benchmarking "month"...
    done (took 1.229799041 seconds)
    (4/7) benchmarking "year"...
    done (took 1.229753054 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.23128874 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.229246238 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.229596635 seconds)
  done (took 9.758368507 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.234086658 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.41075127 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.493371817 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.854293953 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.233845556 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.237325471 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.095321733 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.234941638 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.235799051 seconds)
  done (took 14.178884443 seconds)
done (took 78.711360885 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.271376278 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.243028669 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.467706974 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.248081944 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.238499243 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.527660084 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.240641099 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.352372606 seconds)
done (took 37.737234357 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.233082471 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.991033214 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.989649479 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.226173735 seconds)
  done (took 11.356935326 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.211244996 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.20695621 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.210722832 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.285709527 seconds)
  done (took 18.065690752 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.299755921 seconds)
    (2/2) benchmarking "read"...
    done (took 1.562410028 seconds)
  done (took 5.012562688 seconds)
done (took 41.815361204 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.236014322 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.232574026 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.234055939 seconds)
    (4/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.230945011 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.232817635 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.233787555 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.230685362 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.23358511 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.234213614 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.23278915 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.235584409 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.235139534 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.23276442 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.231241209 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.231914947 seconds)
    (16/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.23470856 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.234830922 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.231621095 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.231914329 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.232100548 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.233975616 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.234480919 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.231320753 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.232944195 seconds)
  done (took 30.748229202 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.234768045 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.233390147 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.234737864 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.235670364 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.232978015 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.237455046 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.236915785 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.23395009 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.236705411 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.235708548 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.234315653 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.233564695 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.23565558 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.233476384 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.235082654 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.233139559 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.23466197 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.234748861 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.235083377 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.233956906 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.23708508 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.236394788 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.235814573 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.236371669 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.233966033 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.235908274 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.236952076 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.235856725 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.237582699 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.235751171 seconds)
  done (took 38.212200442 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.243156473 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.245629985 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.236884889 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.23722834 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.238110968 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.237869186 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.237282539 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.236415892 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.238171898 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.237695575 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.237716177 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.240033576 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.238283437 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.239721114 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.23872567 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.236368526 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.238492926 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.238124783 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.239023612 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.238603378 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.239650888 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.240671054 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.237580269 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.23912754 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.238284114 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.238789466 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.239264703 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.239195336 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.23790862 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.238297173 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.238020681 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.240323177 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.24010491 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.2402099 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.239362145 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.238344143 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.246359039 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.2482061 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.239687973 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.239710701 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.239704289 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.238339147 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.240998465 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.240120886 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.240215171 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.240185057 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.238735168 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.239314387 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.241644327 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.238343874 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.240840842 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.240693941 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.239488918 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.238358205 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.240532963 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.242960327 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.241958336 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.239463405 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.241838199 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.241383671 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.241578528 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.240836455 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.240064905 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.241445132 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.239073609 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.24149842 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.240185088 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.240565088 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.241397396 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.241565577 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.240985758 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.243567115 seconds)
  done (took 90.427765302 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.242780695 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.239968544 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.238122947 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.23912004 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.239400903 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.241676951 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.242166733 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.243306264 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.245468542 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.242578498 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.241526364 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.242119775 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.242757946 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.24458283 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.243329359 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.239680537 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.243246176 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.241091942 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.243697496 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.242249961 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.242644121 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.240801738 seconds)
  done (took 28.483488398 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.240967917 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.243558545 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.240611633 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.245129184 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.23752812 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.243087559 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.243742131 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.244277881 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.242276407 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.241225965 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.241315236 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.243511894 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.241163863 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.241445637 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.240050129 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.240764205 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.244956471 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.242493607 seconds)
  done (took 23.518988317 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.239831628 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.240586243 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.244785305 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.243812196 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.239915346 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.246950463 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.239985223 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.244807708 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.243441337 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.242376744 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.247179174 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.246079154 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.246397404 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.240944047 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.245441519 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.243438279 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.244842641 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.243729072 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.243564851 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.244616899 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.24639868 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.245884904 seconds)
  done (took 28.527624544 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.246705735 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.247168582 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.243857959 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.243670693 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.244285323 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.244166367 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.248637644 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.242835122 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.24546287 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.248339018 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.245916355 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.247523442 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.24755935 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.24487304 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.243564115 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.245220093 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.247358229 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.244004666 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.246520044 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.243195108 seconds)
  done (took 26.074508927 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.246235433 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.247984667 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.246701635 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.246867414 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.249844133 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.246087573 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.250783892 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.249631405 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.248928194 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.25086198 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.251247297 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.249347702 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.247882074 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.248407372 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.247904487 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.250593093 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.250124667 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.248146863 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.250385136 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.251393214 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.250622119 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.250321857 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.250319927 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.249429179 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.250303074 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.251220818 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.249638979 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.249445933 seconds)
  done (took 36.148199846 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.250116935 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.249927352 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.249027753 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.247464504 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.248257021 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.24771131 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.246056141 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.248484542 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.251907313 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.249519667 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.250051934 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.248989069 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.249313718 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.250323654 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.253609081 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.251135038 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.252588054 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.25055903 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.251628735 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.248865781 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.253236033 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.251697382 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.25299718 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.250777043 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.24913425 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.253543225 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.249369077 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.248520385 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.250307666 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.249075944 seconds)
  done (took 38.673766996 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.27105643 seconds)
    (2/2) benchmarking "in"...
    done (took 1.270361992 seconds)
  done (took 3.708705539 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.249260412 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.25247738 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.252241183 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.250923575 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.249839441 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.254526553 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.252454596 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.250313877 seconds)
  done (took 11.179934728 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.251799665 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.254907247 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.253711543 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.253568497 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.252643212 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.255486312 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.260636648 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.274399072 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.253067671 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.25538217 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.264696026 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.264173392 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.256046058 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.252500978 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.253605996 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.253029161 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.254051041 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.254171728 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.25550145 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.255343454 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.253345859 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.257657863 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.258999096 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.250360279 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.255331709 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.264984457 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.276751301 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.253126879 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.25193898 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.257047842 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.257356585 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.254959269 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.256335767 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.255512974 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.257009139 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.253905686 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.266610539 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.2757473 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.26187807 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.27545381 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.258960665 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.253199538 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.256625018 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.255185981 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.255292977 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.25649834 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.254932602 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.25355692 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.253897178 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.2590357 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.263314978 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.254755749 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.255352775 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.259847598 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.257362826 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.262374345 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.277664238 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.261149504 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.265842828 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.266312923 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.289513539 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.278942933 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.258047827 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.257768913 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.266360849 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.28207341 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.261957661 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.277034381 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.254626301 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.255860118 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.264689893 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.28830543 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.282150296 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.256805768 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.256160557 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.256213359 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.257495973 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.256611665 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.266218255 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.281831514 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.25858818 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.258457316 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.270641346 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.281764199 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.260764927 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.25793957 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.259859424 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.255688154 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.258237041 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.271106588 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.276774298 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.261273769 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.260927414 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.261048821 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.263400641 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.262268466 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.260476415 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.260235086 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.25458446 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.259561388 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.259570402 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.262839088 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.271009918 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.257748532 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.261409922 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.266671347 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.27879626 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.25757849 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.26596073 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.25976572 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.259313866 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.261491358 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.26724647 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.256081429 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.261239596 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.271752719 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.258465652 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.264679123 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.261547292 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.263121101 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.271014987 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.288604683 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.25716949 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.261146679 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.264427267 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.275260724 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.260964964 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.26349931 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.260000562 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.261832106 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.263112293 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.261761373 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.261472177 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.262106423 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.260212773 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.259365261 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.260479466 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.261674896 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.261730521 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.262911047 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.261533383 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.261891158 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.260668169 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.26296028 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.258451366 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.262695511 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.265927907 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.280978533 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.262949527 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.261382193 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.259337707 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.262872664 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.262414727 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.262237917 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.261966992 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.262459927 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.262642208 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.261459434 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.265067694 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.262407039 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.262822997 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.263615116 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.268858479 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.264851702 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.267725763 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.260342012 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.262399292 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.26322098 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.266294632 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.264806958 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.264391257 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.264291986 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.267522508 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.273137814 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.266429592 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.2655049 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.267134834 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.264789302 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.264050046 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.266682701 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.266935383 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.273458926 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.264109107 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.273242961 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.282559302 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.265976226 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.268026822 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.265754326 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.265670159 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.266707739 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.269378263 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.275200055 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.277115243 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.289821299 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.267635683 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.268934942 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.266090433 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.270412952 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.268888479 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.264914859 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.262766455 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.263965612 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.26518816 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.267328128 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.268477949 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.266685974 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.264394993 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.26506217 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.266457468 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.265796759 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.269420522 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.266316637 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.26920424 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.263745947 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.266507347 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.266237853 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.263326432 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.265734996 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.264619823 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.26732508 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.268553493 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.268293451 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.273877559 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.263293071 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.265642551 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.266574977 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.267267095 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.265796658 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.268547634 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.269051772 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.265646581 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.272684927 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.291053088 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.27061 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.273977545 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.288247821 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.269327034 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.27349708 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.269512173 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.262703341 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.271562013 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.279562074 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.266265492 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.268590491 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.270358192 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.269532117 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.268693801 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.277160977 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.283267013 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.266837833 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.268388994 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.270214449 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.26591369 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.270121048 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.267730644 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.269237851 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.271810437 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.26914916 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.268522334 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.269598021 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.268694467 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.269836453 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.269281184 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.271349087 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.279687096 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.276199683 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.267963033 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.272268475 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.272617005 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.274145408 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.271843944 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.268988953 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.268594633 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.283298431 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.294310447 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.275469944 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.290481303 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.272225421 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.277531631 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.29350059 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.277114715 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.272330529 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.2697624 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.269346621 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.270068317 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.269020692 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.270914997 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.271386958 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.270772218 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.272207145 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.275289015 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.270214031 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.271451226 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.269575313 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.27172934 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.271101632 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.270115223 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.273258308 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.272121007 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.274134434 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.27150031 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.271730922 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.279898671 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.291287804 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.271104264 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.273540631 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.270813129 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.27090415 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.274441045 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.270741141 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.275544019 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.280026148 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.276540921 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.284548685 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.274645494 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.283270029 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.272906164 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.277500202 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.285668068 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.271823874 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.27661556 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.278001298 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.273893073 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.280334865 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.295679272 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.274134402 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.27686979 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.273168968 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.274489734 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.275426078 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.274091538 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.276546333 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.274149655 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.283927908 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.296369882 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.278459768 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.276400695 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.270123412 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.274501256 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.274512945 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.270751163 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.278946847 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.274106552 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.275236674 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.275893877 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.275384628 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.271984014 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.273091644 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.275438978 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.271451119 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.274581855 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.282025877 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.296938194 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.280055215 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.276383761 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.284605027 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.299841637 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.285561944 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.295978857 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.27547355 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.274858139 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.276641402 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.279316529 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.275740243 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.275492546 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.273981695 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.275791454 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.280307384 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.276407063 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.27898278 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.278670872 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.277537209 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.275396303 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.288703495 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.301316865 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.279460525 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.282880404 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.275909418 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.277987271 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.283210376 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.279171964 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.275123179 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.279480417 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.29065837 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.286789513 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.280920837 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.280577822 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.277714098 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.276009779 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.2801155 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.277028544 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.280637083 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.281234894 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.281645039 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.278931371 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.282717602 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.27780357 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.279140002 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.278802327 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.281336681 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.290124063 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.298202321 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.279797261 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.278813569 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.282299091 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.279126523 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.278497992 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.277234813 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.284185597 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.280304043 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.278986589 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.288351237 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.286174988 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.283688974 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.278044343 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.280502663 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.281648056 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.282715145 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.277012099 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.280000498 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.282206806 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.281486681 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.280176305 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.281104507 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.28185045 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.282908927 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.284529868 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.281240892 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.279947244 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.290773079 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.281050311 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.27803814 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.281107891 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.280261224 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.278583944 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.280898605 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.290602313 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.305624701 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.292479325 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.29241564 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.283111322 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.280095661 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.284298587 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.291219985 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.279539405 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.281386221 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.278373328 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.282863951 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.283397507 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.283537029 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.281413983 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.287808913 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.299929726 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.281501544 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.290962305 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.304224877 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.282719284 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.280302363 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.286274056 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.283468184 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.281053056 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.282501158 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.282816374 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.290722553 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.30811708 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.284805696 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.281824266 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.281296168 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.28377852 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.286812612 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.284124952 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.285351364 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.281649143 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.283520303 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.280917731 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.283144548 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.279666584 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.284341521 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.282621922 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.286645545 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.291686564 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.281477129 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.286981747 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.283743874 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.284543331 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.285994628 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.284923161 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.280502389 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.278981974 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.28291247 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.284038135 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.283904698 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.28511133 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.283399031 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.284355627 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.286530385 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.283043037 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.286702824 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.292638633 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.295396453 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.28271271 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.285032211 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.284861152 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.287591001 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.283837538 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.282458925 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.284624744 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.286068258 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.283702747 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.284091844 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.286981938 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.288303924 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.304122528 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.304966707 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.285338169 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.285221343 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.288872924 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.285958154 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.282171336 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.284943666 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.290797032 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.286746514 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.296385905 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.286629348 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.292799125 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.307745648 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.286349193 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.291205897 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.288593688 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.293639196 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.289862159 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.285003765 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.285759093 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.291814533 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.303529447 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.289739539 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.297253768 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.321026591 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.310643687 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.287267909 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.288395703 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.286032262 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.289100202 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.28929907 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.287091107 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.286439731 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.287169056 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.288034358 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.289377814 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.293480322 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.288659634 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.287690258 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.287110038 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.285704973 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.285226409 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.285089306 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.287966218 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.28792491 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.285861299 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.288271273 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.287183073 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.288624944 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.301370155 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.318308905 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.289615673 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.28887069 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.287447874 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.291347871 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.291919344 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.30106659 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.29967887 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.289235112 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.286522602 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.292292766 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.289074197 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.291149662 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.290546945 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.287017163 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.29031781 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.284755104 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.301434895 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.316360792 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.294177218 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.290373153 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.290991399 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.290045273 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.290466545 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.293416099 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.291593921 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.293893748 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.291951921 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.2962118 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.290941051 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.290605692 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.293231614 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.29985283 seconds)
  done (took 761.179704679 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.288245335 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.286645947 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.288582939 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.287921165 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.286808096 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.288589763 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.291431151 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.28920232 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.289456552 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.290150482 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.28847945 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.288271509 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.289448434 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.291078914 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.289995238 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.289489888 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.290663333 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.291436303 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.291317919 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.292228123 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.289851528 seconds)
  done (took 28.284263248 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.293091813 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.290876805 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.289761514 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.295795988 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.289742927 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.292823762 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.290881743 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.294674488 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.292059719 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.292132598 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.295482236 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.295721482 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.294956004 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.292566465 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.292494017 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.292547438 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.295247958 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.29169647 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.295024381 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.291849568 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.298327651 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.294466827 seconds)
  done (took 29.655987299 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.29531747 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.292402008 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.292965107 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.29551987 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.295651352 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.294098574 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.295262807 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.294626255 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.297942294 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.295874425 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.293800586 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.295183676 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.303398517 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.304201978 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.298447372 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.297835623 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.442468892 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.295844381 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.297659623 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.29848081 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.296481544 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.30335127 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.316510687 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.297037657 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.294291688 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.297673879 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.300211468 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.297032751 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.295879782 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.296485215 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.300729098 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.295852615 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.297507878 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.299005145 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.297004859 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.298767463 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.301793841 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.301807761 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.299846813 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.299003551 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.310998174 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.321386898 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.298606214 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.303446879 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.320748213 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.297657761 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.300340869 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.306122666 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.295776965 seconds)
  done (took 65.027807667 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.296150413 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.297078464 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.294381036 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.299887043 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.298056535 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.298249882 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.300827059 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.299429137 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.295355901 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.294707352 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.300058799 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.296170108 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.295989815 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.301136141 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.298352565 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.29361324 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.295449861 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.297634027 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.296065078 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.29698421 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.297776778 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.300348488 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.300354163 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.295795423 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.299457424 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.297230963 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.298101323 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.300593785 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.29806813 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.300333327 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.300966693 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.301825258 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.304500928 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.297666512 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.298376943 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.299461051 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.301162554 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.296679066 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.302956965 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.300366401 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.301901704 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.301441683 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.300919128 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.303115347 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.301795971 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.300578487 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.300570169 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.299107454 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.300394078 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.302925191 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.304436468 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.302509904 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.300830875 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.304112786 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.303701152 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.30424358 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.301025535 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.298608205 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.304600109 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.299382014 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.300065151 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.302312721 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.299774075 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.302352116 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.300531088 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.300141998 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.300012168 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.299990553 seconds)
  done (took 89.593018419 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.302970305 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.301183782 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.301822786 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.303417628 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.3032011 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.303019285 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.304313914 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.303416937 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.303170401 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.301923075 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.301529084 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.298120486 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.301499034 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.301683998 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.304394566 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.300864043 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.301882317 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.301265498 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.301059263 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.302788569 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.301695525 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.302347495 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.302554661 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.303821718 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.3018461 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.301397123 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.301624787 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.302808874 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.301828177 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.301883681 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.302998051 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.30185828 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.30216113 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.301933666 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.303099453 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.305120457 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.300472997 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.303941515 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.304095699 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.301749143 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.305668326 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.303002321 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.303803478 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.304027853 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.305179833 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.302788548 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.303093378 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.304803178 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.302885879 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.302818122 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.302999812 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.303141535 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.302237511 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.303826696 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.303623927 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.306550866 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.306644066 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.304871774 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.303489821 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.303880856 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.306224579 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.30349559 seconds)
  done (took 81.997167324 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.306748851 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.30870264 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.304791345 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.300705695 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.305701451 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.303998287 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.304466406 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.305281045 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.304745572 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.303649313 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.304930783 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.3028989 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.304236597 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.30791509 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.305533102 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.303742537 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.30568597 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.301613536 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.306096345 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.304214065 seconds)
  done (took 27.312930989 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.303399579 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.306260281 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.304247393 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.303221279 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.308325621 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.302988723 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.306480166 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.304717186 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.304458222 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.306365635 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.307932833 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.306712973 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.30330169 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.304918009 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.309203874 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.306890798 seconds)
  done (took 22.106546624 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.305041998 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.306990806 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.305589449 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.308065843 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.305493041 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.306197121 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.308011164 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.305696306 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.307492324 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.308182042 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.309120535 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.308602935 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.310144578 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.306833223 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.305844614 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.310479137 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.30625622 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.305218401 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.310343402 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.308638288 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.308635993 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.305062503 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.310315181 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.309588318 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.304964169 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.306702559 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.306987631 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.303880321 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.306789051 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.310084771 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.308968885 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.306104005 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.306909969 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.305507864 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.309900978 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.309270414 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.308602482 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.309319671 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.309280718 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.310471248 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.310266974 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.307798725 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.311421792 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.310528007 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.308242531 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.311347229 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.30693314 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.307691081 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.310544964 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.308965217 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.310557252 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.310296164 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.310172933 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.310974497 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.309221028 seconds)
  done (took 73.170858156 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.311273438 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.310266532 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.308082007 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.311493124 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.312006617 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.309714822 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.31183793 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.311024628 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.311709409 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.312217655 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.310126068 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.315184747 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.307763145 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.313299541 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.310666252 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.31162243 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.310055032 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.307200215 seconds)
  done (took 24.818314971 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.310344563 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.311301748 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.312485852 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.311978795 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.311306518 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.31351611 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.310615612 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.313273264 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.313778121 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.31095431 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.308692133 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.314224444 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.312355406 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.313164298 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.309593879 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.312264267 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.315513131 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.313700461 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.312070864 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.308933294 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.313225503 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.317932255 seconds)
  done (took 30.095854464 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.31222443 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.311357305 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.312513083 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.331171819 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.332214105 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.337210233 seconds)
  done (took 9.16109311 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.320214793 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.31451773 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.313722607 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.317158291 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.31601321 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.312622023 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.311373883 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.312069863 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.31606849 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.313079036 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.314355465 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.316969384 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.315087495 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.31285119 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.31534495 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.31274265 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.310551973 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.310646516 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.313409413 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.316279447 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.312835068 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.313734035 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.30966493 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.31235578 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.313456942 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.314555262 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.313279582 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.314307786 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.314007338 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.31503852 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.315444341 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.314350192 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.316621247 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.314841266 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.317480991 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.317315354 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.314950742 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.316814138 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.318115897 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.31148195 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.315383537 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.314669457 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.316014816 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.314831913 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.318093764 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.317531939 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.313514018 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.314476579 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.315907212 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.318982634 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.319024762 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.315843457 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.319184136 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.318119631 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.318521327 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.318324732 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.316330241 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.315333705 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.318429172 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.31693808 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.315146853 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.318480066 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.318160993 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.315136098 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.320119107 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.315914486 seconds)
  done (took 88.067601774 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.314412222 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.316151633 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.314459606 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.315392468 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.317818466 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.318651578 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.317404466 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.316940476 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.316242141 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.315532357 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.320579462 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.31422926 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.315984527 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.317124448 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.319976812 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.317093293 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.317426427 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.318870111 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.317395944 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.320612215 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.314719109 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.317049066 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.317155431 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.318523542 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.31798742 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.320731956 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.31715669 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.316575113 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.318197409 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.319273937 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.319507563 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.317952652 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.319201548 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.319396939 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.318373898 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.318743228 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.317887975 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.31873729 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.316707655 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.322947836 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.32051766 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.323697998 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.318435042 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.321794888 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.31980747 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.320630807 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.316759578 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.318989897 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.319707816 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.319807441 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.319676047 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.31950879 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.322134319 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.32068486 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.320039658 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.320025754 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.321485174 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.320832026 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.320549902 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.325111465 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.32197197 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.322067982 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.324535036 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.320092112 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.323225192 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.320321377 seconds)
  done (took 88.28187892 seconds)
done (took 1775.607063008 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.358277618 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.384396302 seconds)
  done (took 13.973678547 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.484150845 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.442046298 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.321426752 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.365863882 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.316052865 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.318477176 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.309534927 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.315731271 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.323122456 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.323435137 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.318805858 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.511908721 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.328064896 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.315171523 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.320502253 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.415928719 seconds)
  done (took 42.964154312 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.351801367 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.325934685 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.450678372 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.345584387 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.353851577 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.525234927 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.379125149 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.325814597 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.518520298 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.373619722 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 3.129910442 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.355037672 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.324194157 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.606004571 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.344473845 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.521575495 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.59555509 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 3.137779622 seconds)
  done (took 31.197359969 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.829906201 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.351743944 seconds)
  done (took 9.420088667 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.328798718 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.331036274 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.361521563 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.337586598 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.370396776 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.371270482 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.389427619 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.382139599 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.370665255 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.34951447 seconds)
  done (took 64.826627531 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.346582716 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.327795293 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.327582897 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.32444464 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.320049655 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.317610832 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.323800835 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.334635299 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.344285387 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.464322734 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.346700951 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.335503251 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.348399888 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.326750999 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.324104015 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.36459146 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.453498045 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.343150916 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.320782932 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.33291711 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.327117882 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.455421726 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.367778513 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.323561771 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.463946567 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.351656625 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.327546878 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.333343213 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.436399445 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.345916268 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.322888815 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.323506439 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.327791399 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.925919346 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.870752559 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.333588936 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.344079389 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.333827728 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.324008329 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.468038208 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.347582019 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.330460909 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.31924564 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.82419762 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.484441461 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.44436957 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.695460197 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.325926348 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.326852027 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.391362701 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.326966731 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.326448269 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.358156825 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.138459814 seconds)
  done (took 112.110911634 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.31798222 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.804764594 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.491472465 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.341863552 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.138923542 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.99129084 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.337042993 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.635778487 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.367308872 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.31799248 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.620991819 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.859507748 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.341945642 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.343575136 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.974795374 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.389134372 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.322126938 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.146130506 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.336127529 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.319816027 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.75671224 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.35431652 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.315371042 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.493441359 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.358021408 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.822714433 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.949233085 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.743410023 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.336493336 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.312694088 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.813852112 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.339833093 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.357620112 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.314025835 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.604139643 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.701380084 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.696205883 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.337740028 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.355175472 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.311136693 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.331416508 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.792669115 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.68524402 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.324950511 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.311987923 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.807000686 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.326726942 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.319362665 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.32226647 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.518658219 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.08278599 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.316056358 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.887506211 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.315085607 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.660514279 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.328966052 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.390552093 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.840441365 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.330651739 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.371942924 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.377949033 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.316419853 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.314942247 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.316806197 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.320803484 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.693609004 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.467442365 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.323545568 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.701127108 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.817173157 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.332852148 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.858066137 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.27086082 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.322968564 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.419643251 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.318960275 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.939722083 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.841200458 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.339851746 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.311901775 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.66736139 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.33000587 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.603721766 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.328241784 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.33000856 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.760370482 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.341569094 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.328797957 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.319824711 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.31646712 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.945251235 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.318825041 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.606760416 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.364952006 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.319588025 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.318994523 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.331681423 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.316597334 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.33054724 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.323865413 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.866762915 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.341493728 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.460724294 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.342069861 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.320204867 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.322220641 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.324534304 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.319350006 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.537002126 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.920288106 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.324666388 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.321916558 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.318386759 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.325352729 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.456666358 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.326034756 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.65992085 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.336819172 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.317224628 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.341716552 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.985812342 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.388168566 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.317182264 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.318872712 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.162314367 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.548811316 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.339748694 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.327224528 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.323613772 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.346072828 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.824275486 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.323342035 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.359271532 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.323042125 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.043732803 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.344907934 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.339107875 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.755866043 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.322174181 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.321793662 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.344443592 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.324929414 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.652356891 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.614539785 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.380611177 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.319400712 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.336686505 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.028593522 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.367600515 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.470198793 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.342435828 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.393213859 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.524387963 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.658555642 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.326335311 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.892275054 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.324335182 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.538703177 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.32443742 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.659736572 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.837228116 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.338940756 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.330180552 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.054054607 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.998993799 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.036058573 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.331007605 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.612162242 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.318394074 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.776580053 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.326978353 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.340109019 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.762164995 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.325326679 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.329802524 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.321741374 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.324557612 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.461384238 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.50247846 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.59353789 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.325019296 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.802621389 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.345953427 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.319537914 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.346039063 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.326949591 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.680247467 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.417263178 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.332959913 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.369689303 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.326793891 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.330756197 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.814362619 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.336614453 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.326873585 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.484361937 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.978880824 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.344057402 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.337524412 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 4.038478299 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.595584078 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.846033389 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.385427063 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.655424546 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.341616331 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.365138727 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.070814064 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.383088815 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.859811135 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.341172153 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.326863584 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.952500349 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.342932369 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.683823644 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.323839578 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.329872413 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.900195138 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.344307051 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.334304491 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.781544022 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.322333819 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.577997274 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.326805761 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.358788189 seconds)
  done (took 1110.873205557 seconds)
done (took 1386.594341147 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.328669614 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.331756993 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.309760829 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.329546146 seconds)
  done (took 26.544343442 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.337359508 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.33658547 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.339197868 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.334286422 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.339948443 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.334252224 seconds)
  done (took 9.270776795 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.360318349 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.331216392 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.332455249 seconds)
  done (took 19.273056757 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.56540749 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.661671764 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.725202436 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.642194841 seconds)
  done (took 10.844204073 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.335459205 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.338164837 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.338472679 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.339862224 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.336415814 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.340468507 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.339533656 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.338157716 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.342063656 seconds)
  done (took 13.297634691 seconds)
  (6/6) benchmarking "26942"...
  done (took 5.440968346 seconds)
done (took 85.910495008 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.257815408 seconds)
    (2/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.929045522 seconds)
    (3/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.286974595 seconds)
    (4/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.447593187 seconds)
    (5/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.330550715 seconds)
    (6/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.374523727 seconds)
    (7/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.371424593 seconds)
    (8/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.332349671 seconds)
    (9/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.624722803 seconds)
    (10/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.391868582 seconds)
    (11/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.756659941 seconds)
    (12/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.372586172 seconds)
    (13/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.414279745 seconds)
    (14/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.358144344 seconds)
    (15/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.376546551 seconds)
    (16/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.703451575 seconds)
    (17/309) benchmarking ("sort", Float64, false)...
    done (took 5.723920126 seconds)
    (18/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.340566559 seconds)
    (19/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.328713427 seconds)
    (20/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.925914068 seconds)
    (21/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.645045574 seconds)
    (22/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.795904332 seconds)
    (23/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.441638284 seconds)
    (24/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.335841351 seconds)
    (25/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.713317401 seconds)
    (26/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.285062048 seconds)
    (27/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.456901077 seconds)
    (28/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.724118346 seconds)
    (29/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.266983581 seconds)
    (30/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.760170107 seconds)
    (31/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.040574627 seconds)
    (32/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.855886373 seconds)
    (33/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.554429947 seconds)
    (34/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.275280311 seconds)
    (35/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.349425372 seconds)
    (36/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.415593463 seconds)
    (37/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.403790165 seconds)
    (38/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.77984617 seconds)
    (39/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.344801371 seconds)
    (40/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.344717624 seconds)
    (41/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.39480233 seconds)
    (42/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.416317856 seconds)
    (43/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.438936904 seconds)
    (44/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.391581442 seconds)
    (45/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.312844566 seconds)
    (46/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.497051164 seconds)
    (47/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.583606816 seconds)
    (48/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.414136599 seconds)
    (49/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.333070759 seconds)
    (50/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.452738483 seconds)
    (51/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.704703728 seconds)
    (52/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.43675265 seconds)
    (53/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.934970743 seconds)
    (54/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.31152235 seconds)
    (55/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.858724233 seconds)
    (56/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.674629455 seconds)
    (57/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.499557499 seconds)
    (58/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.454529123 seconds)
    (59/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.358559059 seconds)
    (60/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.98229951 seconds)
    (61/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.557218474 seconds)
    (62/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.608452023 seconds)
    (63/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.19262239 seconds)
    (64/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.376205313 seconds)
    (65/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.075746024 seconds)
    (66/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.329145357 seconds)
    (67/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.350782518 seconds)
    (68/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.343784461 seconds)
    (69/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.41437543 seconds)
    (70/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.335597069 seconds)
    (71/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.428755412 seconds)
    (72/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.239555061 seconds)
    (73/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.616330329 seconds)
    (74/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.917598004 seconds)
    (75/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.316852363 seconds)
    (76/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.397729858 seconds)
    (77/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 4.030384984 seconds)
    (78/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.335072887 seconds)
    (79/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.565765818 seconds)
    (80/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 4.326285383 seconds)
    (81/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.372745599 seconds)
    (82/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.323219601 seconds)
    (83/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.332916303 seconds)
    (84/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.240096761 seconds)
    (85/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.0308337 seconds)
    (86/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.606072405 seconds)
    (87/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.567489241 seconds)
    (88/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.558702555 seconds)
    (89/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.3375127 seconds)
    (90/309) benchmarking ("sort", Int64, false)...
    done (took 5.638269041 seconds)
    (91/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.885388556 seconds)
    (92/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.461684808 seconds)
    (93/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.960178122 seconds)
    (94/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.968253338 seconds)
    (95/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.460733212 seconds)
    (96/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.712218104 seconds)
    (97/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.178665318 seconds)
    (98/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.338801813 seconds)
    (99/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.339485931 seconds)
    (100/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.214537963 seconds)
    (101/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.376185174 seconds)
    (102/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.58991158 seconds)
    (103/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.84085585 seconds)
    (104/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.720846653 seconds)
    (105/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.46783457 seconds)
    (106/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.407274337 seconds)
    (107/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 6.338916202 seconds)
    (108/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.117523736 seconds)
    (109/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.423648787 seconds)
    (110/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.36367634 seconds)
    (111/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.340253059 seconds)
    (112/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.576712689 seconds)
    (113/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.763561657 seconds)
    (114/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.37228627 seconds)
    (115/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.490056871 seconds)
    (116/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.335731365 seconds)
    (117/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.298745233 seconds)
    (118/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.399017788 seconds)
    (119/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.880594748 seconds)
    (120/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.647498759 seconds)
    (121/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.348448129 seconds)
    (122/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 4.002991256 seconds)
    (123/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.389325852 seconds)
    (124/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.313849405 seconds)
    (125/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.427354707 seconds)
    (126/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.462583665 seconds)
    (127/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.437485034 seconds)
    (128/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.338026479 seconds)
    (129/309) benchmarking ("sort", Bool, false)...
    done (took 1.849775723 seconds)
    (130/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.372295845 seconds)
    (131/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.794322933 seconds)
    (132/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.609424956 seconds)
    (133/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.786918165 seconds)
    (134/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.329285366 seconds)
    (135/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.355671978 seconds)
    (136/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.366529086 seconds)
    (137/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.293692534 seconds)
    (138/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.332459151 seconds)
    (139/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 4.030041418 seconds)
    (140/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.139531311 seconds)
    (141/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.207612621 seconds)
    (142/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.634950624 seconds)
    (143/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.318666515 seconds)
    (144/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.428612683 seconds)
    (145/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.350562739 seconds)
    (146/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.172254197 seconds)
    (147/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.44240794 seconds)
    (148/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.366971911 seconds)
    (149/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.425910917 seconds)
    (150/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.96347101 seconds)
    (151/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.35785166 seconds)
    (152/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.342578952 seconds)
    (153/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.934516566 seconds)
    (154/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.181818264 seconds)
    (155/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.362454008 seconds)
    (156/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.34840545 seconds)
    (157/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.340331542 seconds)
    (158/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 3.01518621 seconds)
    (159/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.348837059 seconds)
    (160/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.342802798 seconds)
    (161/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.334520073 seconds)
    (162/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.216697945 seconds)
    (163/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.474851935 seconds)
    (164/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.722402169 seconds)
    (165/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.381124462 seconds)
    (166/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.368407869 seconds)
    (167/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 5.757246526 seconds)
    (168/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.428035968 seconds)
    (169/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.344768225 seconds)
    (170/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.348773505 seconds)
    (171/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 4.330265567 seconds)
    (172/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.321559214 seconds)
    (173/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.947942453 seconds)
    (174/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.646697079 seconds)
    (175/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 3.001258079 seconds)
    (176/309) benchmarking ("sort", Float32, false)...
    done (took 5.357593393 seconds)
    (177/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 4.052514823 seconds)
    (178/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.341957529 seconds)
    (179/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.092206563 seconds)
    (180/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.378184295 seconds)
    (181/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.34202516 seconds)
    (182/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 3.083181631 seconds)
    (183/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.427960348 seconds)
    (184/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.263945999 seconds)
    (185/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.576316166 seconds)
    (186/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.440248487 seconds)
    (187/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.973288845 seconds)
    (188/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.421003714 seconds)
    (189/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.92882839 seconds)
    (190/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.369470731 seconds)
    (191/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.372213324 seconds)
    (192/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.533604982 seconds)
    (193/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.678314773 seconds)
    (194/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.457836067 seconds)
    (195/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.191244609 seconds)
    (196/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.890587693 seconds)
    (197/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.178751751 seconds)
    (198/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.346808057 seconds)
    (199/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.372743655 seconds)
    (200/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.385678826 seconds)
    (201/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.975180832 seconds)
    (202/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.654912438 seconds)
    (203/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.687320412 seconds)
    (204/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.801386135 seconds)
    (205/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.959075847 seconds)
    (206/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.779305479 seconds)
    (207/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.42272388 seconds)
    (208/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.363776906 seconds)
    (209/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 4.06763671 seconds)
    (210/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.377270251 seconds)
    (211/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.876020738 seconds)
    (212/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.780244489 seconds)
    (213/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.360720153 seconds)
    (214/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.004702699 seconds)
    (215/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.54575852 seconds)
    (216/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.806456594 seconds)
    (217/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.737957367 seconds)
    (218/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.538551632 seconds)
    (219/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.430654889 seconds)
    (220/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 3.010054419 seconds)
    (221/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.859447246 seconds)
    (222/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.750937465 seconds)
    (223/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.340959901 seconds)
    (224/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.344480005 seconds)
    (225/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.344048576 seconds)
    (226/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.369301456 seconds)
    (227/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.325293188 seconds)
    (228/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.976682857 seconds)
    (229/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.473021271 seconds)
    (230/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.370819335 seconds)
    (231/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.372117883 seconds)
    (232/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.385176033 seconds)
    (233/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 3.036447174 seconds)
    (234/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.921824629 seconds)
    (235/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.860847042 seconds)
    (236/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.630704052 seconds)
    (237/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.36661086 seconds)
    (238/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.760194063 seconds)
    (239/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.274007611 seconds)
    (240/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.984351837 seconds)
    (241/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.336430715 seconds)
    (242/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.409900916 seconds)
    (243/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.770995892 seconds)
    (244/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.214504624 seconds)
    (245/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.742204653 seconds)
    (246/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.39226694 seconds)
    (247/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.80656043 seconds)
    (248/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.428871999 seconds)
    (249/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.431016885 seconds)
    (250/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.327521871 seconds)
    (251/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.353464483 seconds)
    (252/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.486210665 seconds)
    (253/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.330977022 seconds)
    (254/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.355805456 seconds)
    (255/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.577712383 seconds)
    (256/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.295237638 seconds)
    (257/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.330755624 seconds)
    (258/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.322511374 seconds)
    (259/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.820545647 seconds)
    (260/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.847001801 seconds)
    (261/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.763768388 seconds)
    (262/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.369812583 seconds)
    (263/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.53948295 seconds)
    (264/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.35853267 seconds)
    (265/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.73408542 seconds)
    (266/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.791087399 seconds)
    (267/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.041338528 seconds)
    (268/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.765890935 seconds)
    (269/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.535333219 seconds)
    (270/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.18607524 seconds)
    (271/309) benchmarking ("sort", BigInt, false)...
    done (took 6.343247896 seconds)
    (272/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.372854729 seconds)
    (273/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.771326228 seconds)
    (274/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.01611904 seconds)
    (275/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.191463255 seconds)
    (276/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.083417175 seconds)
    (277/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 3.045914789 seconds)
    (278/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.323679805 seconds)
    (279/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.319759737 seconds)
    (280/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.434919371 seconds)
    (281/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.488461304 seconds)
    (282/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.430512564 seconds)
    (283/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.432386833 seconds)
    (284/309) benchmarking ("sort", Int8, false)...
    done (took 4.381507354 seconds)
    (285/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.465658518 seconds)
    (286/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.349924338 seconds)
    (287/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.176334287 seconds)
    (288/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.938084099 seconds)
    (289/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.345619679 seconds)
    (290/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.780665792 seconds)
    (291/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.538323109 seconds)
    (292/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.875905858 seconds)
    (293/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.383707665 seconds)
    (294/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.008624847 seconds)
    (295/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.408500403 seconds)
    (296/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.839330347 seconds)
    (297/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.441997547 seconds)
    (298/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.046611631 seconds)
    (299/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.213496486 seconds)
    (300/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.37126359 seconds)
    (301/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.052190309 seconds)
    (302/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.350147912 seconds)
    (303/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.70846285 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.385088843 seconds)
    (305/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.74932423 seconds)
    (306/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.127651078 seconds)
    (307/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.774668133 seconds)
    (308/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.360689755 seconds)
    (309/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.349426039 seconds)
  done (took 937.417409673 seconds)
done (took 938.666586887 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.383697549 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.381051897 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.362713148 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.384471448 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.47056677 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.388571873 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.37187525 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.364611225 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.413301337 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.409445256 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.360424572 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.384797975 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.364199687 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.363488588 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.359186016 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.378761625 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.517144116 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.365211129 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.378749804 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.372970453 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.378938997 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.360427575 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.411960465 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.386572606 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.365905074 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.366842165 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.366855941 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.385314268 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.477245943 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.366405684 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.364460121 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.377081639 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.513291145 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.361580458 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.359849674 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.381380857 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.37456668 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.373864438 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.368784986 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.395379879 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.883023444 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.37249032 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.368935355 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.364871636 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.365078922 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.369667822 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.365151399 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.369160487 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.377871706 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.380493121 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.86991327 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.390160471 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.369044177 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.369058374 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.379543175 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.365600243 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.367982337 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.381450091 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.384798484 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.382979611 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.499935171 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.369223219 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.36530691 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.38191436 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.374911278 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.910210521 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.371020698 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.370609408 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.879312811 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.381496202 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.90863345 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.382562274 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.369363096 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.383992668 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.397395712 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.516103845 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.362201633 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.367254945 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.374935015 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.367444407 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.378593151 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.386932985 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.372048859 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.36833606 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.380868678 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.390478135 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.379727483 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.368837385 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.376823447 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.388075691 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.373741282 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.380817782 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.370431647 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.365149769 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.377255146 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.372647048 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.36944444 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.371354538 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.375067964 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.377769763 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.887482921 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.397588936 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.361357892 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.363427322 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.369066976 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.38401233 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.886415467 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.378760803 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.389864565 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.416661374 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.36874412 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.504276975 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.372474278 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.385981238 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.377629164 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.376063709 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.364256674 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.448011923 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.874054309 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.394521438 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.372427522 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.369375104 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.388466737 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.372633217 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.367949591 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.467503773 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.361981062 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.384996181 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.491066063 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.380539691 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.400098483 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.370365593 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.37395046 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.394616398 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.386669177 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.400612062 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.370285385 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.388767187 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.386198532 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.369004906 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.382604586 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.383958135 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.374476196 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.377762722 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.365167655 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.39679582 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.387229022 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.388157092 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.393235894 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.491757551 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.368821483 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.515193015 seconds)
done (took 232.04569059 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.436636413 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.362334988 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.451220385 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.36758925 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.471222814 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.470852077 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.367750707 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.367465477 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.368184056 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.742910909 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.364265348 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.366813019 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.371498463 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.366511839 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.448976297 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.368696005 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.368349239 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.707515424 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.370875827 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.439284418 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.36951991 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.369000121 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.369591019 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.752821968 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.367893652 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.363928041 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.440174784 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.3722102 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.716145501 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.367984264 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.365830362 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.717431733 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.4600473 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.388817086 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.38117657 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.378969955 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.474358592 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.392013822 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.451359834 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.450092744 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.456224575 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.409339526 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.364753278 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.370107856 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.374453967 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.371416455 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.367012335 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.398768845 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.363805456 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.372178842 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.708268466 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.379870694 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.368488272 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.367501543 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.369153076 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.400629625 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.370870267 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.371798134 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.464221417 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.373023323 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.438309108 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.754520995 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.746121801 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.372541631 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.366629765 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.371695669 seconds)
  done (took 150.879535421 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.439805741 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.448907187 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.489337546 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.389596039 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.421801989 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.497326967 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.388934454 seconds)
  done (took 11.356445045 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.378872338 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.37494137 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.422723789 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.419078604 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.375389088 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.520370286 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.375614394 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.386198284 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.374113179 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.423949071 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.37803943 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.374138161 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.380685061 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.371771805 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.422867048 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.382241136 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.487825691 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.372984109 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.374276696 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.523676975 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.374456177 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.383087213 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.427379394 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.386999707 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.377717045 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.379205047 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.943523275 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.373809675 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.371899532 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.374405404 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.371452884 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.411013612 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.378212281 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.370355665 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.37272958 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.489885332 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.376021482 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.374708924 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.37597819 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.369862839 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.3786005 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.375120104 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.374923696 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.374265919 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.374953567 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.39832843 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.376107611 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.374774955 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.377738055 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.377623761 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.425644243 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.37547695 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.375300109 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.373205866 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.434264083 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.383331061 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.378763702 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.373086986 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.375796001 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.373612633 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.52868049 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.423121609 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.379409929 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.423682646 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.376572885 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.377372654 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.377607874 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.377082801 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.431329972 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.379308991 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.426944092 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.37324664 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.530426839 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.403103503 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.380156149 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.380454168 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.380072287 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.381501853 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.372666333 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.383952788 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.378374971 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.379588078 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.38441122 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.377703598 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.377175305 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.481340656 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.487469325 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.379144083 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.390670888 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.385100372 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.377210499 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.429825811 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.380042862 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.37670031 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.432957389 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.492514572 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.431255523 seconds)
  done (took 157.365974301 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.383165582 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.384441002 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.376129665 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.391883844 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.379710899 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.377576053 seconds)
  done (took 9.579737439 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.379058794 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.381785362 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.383013401 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.380872779 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.379588522 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.381748381 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.378597079 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.380913406 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.384826346 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.382143499 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.381764444 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.37891242 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.383967029 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.379318319 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.38022063 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.380023728 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.380873158 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.377638363 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.383715636 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.381656143 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.485216931 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.380997353 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.38219825 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.382446308 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.388025933 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.38311054 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.38844803 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.384210143 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.382144197 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.393651472 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.401626605 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.383964939 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.38138834 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.389377501 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.385242715 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.385441057 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.387904946 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.384468577 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.381397624 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.384341406 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.384953659 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.382037882 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.382206586 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.384679659 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.383981092 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.387131076 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.388466692 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.390263453 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.382963533 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.383887468 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.385853118 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.386315951 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.382486693 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.386143056 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.386775832 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.407761755 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.388995058 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.384496316 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.386293725 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.38644733 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.38768775 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.385309173 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.386794564 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.391383429 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.384268166 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.386597198 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.387012808 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.391685566 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.384458408 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.387143785 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.384887384 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.38445042 seconds)
  done (took 102.104252584 seconds)
done (took 432.560999756 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.48511686 seconds)
  done (took 7.775150825 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.445570839 seconds)
  done (took 7.740183061 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 22.961543465 seconds)
  done (took 24.258589549 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.456051224 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.437392231 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.406775291 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.845668831 seconds)
  done (took 27.437079534 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.956131035 seconds)
  done (took 8.247805769 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.371932384 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.384412062 seconds)
  done (took 14.044418373 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.469493585 seconds)
  done (took 7.7567431 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.927445075 seconds)
  done (took 8.205778647 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.383213577 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.382540945 seconds)
  done (took 14.315081673 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.337628845 seconds)
  done (took 7.616247497 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.376794594 seconds)
  done (took 8.656528197 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.360688154 seconds)
  done (took 7.639441713 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.386396971 seconds)
  done (took 7.664732772 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.829847853 seconds)
  done (took 10.108441224 seconds)
done (took 162.755647209 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.358153818 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.367298165 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.366251493 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.365155117 seconds)
  done (took 26.733814677 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.398843681 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.400116165 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.401085491 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.408805739 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.400895141 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.399724951 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.390728359 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.391348283 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.409516183 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.402524192 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.400937619 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.399830142 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.397576519 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.390323728 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.400250588 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.399040557 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.409486276 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.399323972 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.389797366 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.40080201 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.365797259 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.409428606 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.400100509 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.365375446 seconds)
  done (took 34.809639668 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.882418105 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.434991834 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.517759634 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.416472937 seconds)
  done (took 7.531060541 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.416714649 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.417665331 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.427383691 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.467290104 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.493472207 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.426527621 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.39079976 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.38651334 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.372530963 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.417417376 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.493226493 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.431681276 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.501728741 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.36395997 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.551097997 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.363579602 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.364580659 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.415687479 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.466775223 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.48415077 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.364434677 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.417482856 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.419408985 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.433067909 seconds)
  done (took 35.565297092 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.377203283 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.371605465 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.364043935 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.363695667 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.385073277 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.362413198 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.363837841 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.36660665 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.36329456 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.370599872 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.362275434 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.376524605 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.362564141 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.363018516 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.369368486 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.36377775 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.37025253 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.362878872 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.362884998 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.366515089 seconds)
  done (took 28.623866066 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.355678087 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 5.286549481 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.706220366 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.612593053 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.356886834 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.363332386 seconds)
  done (took 28.957253067 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.431831792 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.590982205 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.368722715 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.729021364 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.829117119 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.386012421 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.363460797 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.607411676 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.934605993 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.927522099 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.426706398 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.437622807 seconds)
  done (took 20.311271742 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.358434975 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.363759657 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.371727622 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.379664375 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.419250482 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.390464223 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.370908244 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.360177566 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.425996728 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.445927215 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.391015309 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.420501283 seconds)
  done (took 37.976496494 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.444965056 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.402303547 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.304277849 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.133670895 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.076650706 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.570409077 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.128164378 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.788437851 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.362260576 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.633290654 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.371189913 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.455557017 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.614965857 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.359259717 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.383311867 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.381230422 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.610107666 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.836134646 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.36774737 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.362339253 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.392737689 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.35970487 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.546584358 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.396940974 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.572719826 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.338241122 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.622323845 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.139254027 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.648667566 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.378759886 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.371297725 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.360136826 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.635554233 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.035453044 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.481747878 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.371106098 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.077885557 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.909684594 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.341753037 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.45655936 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.369939962 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.386536448 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.371591652 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.360365529 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.294903352 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.363912611 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.806220458 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.368961194 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.071960737 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.362052621 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.373272365 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.454909936 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.365445279 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.931728334 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.402903452 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.36666532 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.359448446 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.367007632 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.935616494 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.884081581 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.371497404 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.30489967 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.761571878 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.458128158 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.020073423 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.491094986 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.366837803 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.36848821 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.298272661 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.466786665 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.386151476 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.510208045 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.387671196 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.013036971 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.086523418 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.40282102 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.302224733 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.910086227 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.372022633 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.319850442 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.590946688 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.143191046 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.300559494 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.309262808 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.298967569 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.073816184 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.379549504 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.727440812 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.378647577 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.794746176 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.375523936 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.380040298 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.388484972 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.58864322 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.241824627 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.365093058 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.371826727 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.499973989 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.38646344 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.797503421 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.300762137 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.36951548 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.62179888 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.576940615 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.375285443 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.392320732 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.593054777 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.37636154 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.386689421 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.365573824 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.400677423 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.946793866 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.401604652 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.879549249 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.391118247 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.144042893 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.098574171 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.376708387 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.474617725 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.373232958 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.622618203 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.12472862 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.270278061 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.434496602 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.370556037 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.368066392 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.491938532 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.224483797 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.527142531 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.363969577 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.369233524 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.385128484 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.367702693 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.315960669 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.366028243 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.398480082 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.15516449 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.590426052 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.368777956 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.650803735 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.30353877 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.515997335 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.379268097 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.591153897 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.612596815 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.392997456 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.628596988 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.37364512 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.384271659 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.386055503 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.38758398 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.46585745 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.390222631 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.373625749 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.633240593 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.373280186 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.372804259 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.511336844 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.152534064 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.374353683 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.376249124 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.225108738 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.955515369 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.371644651 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.380094837 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.260657883 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.383403523 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.43736736 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.377238061 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.3819707 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.218710663 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.238013252 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.375750987 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.368752384 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.601724582 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.382241224 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.494530302 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.454400755 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.571087916 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.95905173 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.403100575 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.305404687 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.081448909 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.064418849 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.371014235 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.56090696 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.369694479 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.380175055 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.382017627 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.920759151 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.957120695 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.397460473 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.431592907 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.37818077 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.382601338 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.377079731 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.370920908 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.203421558 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.913202425 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.381152651 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.390290651 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.514231776 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.387432946 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.30400485 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.889843328 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.377643682 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.37368775 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.148580976 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.407780857 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.420078435 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.847599236 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.633346735 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.089770793 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.385987548 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.532120681 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.405925802 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.376200438 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.382335876 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.387817267 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.385878164 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.390958092 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.385062525 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.488742394 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.81122762 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.942381689 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.103234393 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.946556887 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.332251393 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.386991891 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.262992154 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.811603087 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.307467652 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.029851592 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.564609189 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.835374576 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.3203463 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.573890401 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.616018974 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.179285844 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.385439631 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.601233073 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.308943137 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.375756108 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.387455002 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.586444431 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.408360346 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.387564724 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.311149305 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.891268225 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.614616671 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.382535013 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.455876578 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.813069204 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.375749143 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.1561783 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.375776245 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.713627145 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.572234902 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.920932166 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.764116169 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.375478389 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.398930393 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.849041273 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.385988378 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.900338499 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.004677854 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.396097357 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.58401763 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.312066904 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.387564219 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.387586 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.372021818 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.722055489 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.391273307 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.636058758 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.388502313 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.311298171 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.376263931 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.921900933 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.245832875 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.382037415 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.377449781 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.121416851 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.378306341 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.693863961 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.385088358 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.20030151 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.404897661 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.311781591 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.312011459 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.071389634 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.37959782 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.35314301 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.869671134 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.766063635 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.402270003 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.39977294 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.231704089 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.634446827 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.392228743 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.966585065 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.619872784 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.210524624 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.401810094 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.47808435 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.388852515 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.359446993 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.275509367 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.613523397 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.236541546 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.602621258 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.351437838 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.27858752 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.376490031 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.590678598 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.278846417 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.392944914 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.625341816 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.108578043 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.383202072 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.093384202 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.42431661 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.38052158 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.390677976 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.788597643 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.385163116 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.448948086 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.389697556 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.389429351 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.391794001 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.550730474 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.379638196 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.382516857 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.394549936 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.473946645 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.91414337 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.203882105 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.160623405 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.974094515 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.13149299 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.990476903 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.410207135 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.380450641 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.391289598 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.315984936 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.528595936 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.905691986 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.655395128 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.511951138 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.90944253 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.403387607 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.382281936 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.391696265 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.599634569 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.657030362 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.252626232 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.396118196 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.048966517 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.262583206 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.393758261 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.59410781 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.877375977 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.940119782 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.50317662 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.39657154 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.825604434 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.657493944 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.472331222 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.382095698 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.971936727 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.389674203 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.723672726 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.407041219 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.390282913 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.530924695 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.393091718 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.051277496 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.411561076 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.538693743 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.155741435 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.472809837 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.638849009 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.868839186 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.39577959 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.98044779 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.112405431 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.645744451 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.454341327 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.393546673 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.490172425 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.530343994 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.395065782 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.265154949 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.384793731 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.227940673 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.094767484 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.394114894 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.97746398 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.664277031 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.382467862 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.396681685 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.408445907 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.394307373 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.607846859 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.093622313 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.615976046 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.395933336 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.387647826 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.955919874 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.980402183 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.414174843 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.319311674 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.390384826 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.632584575 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.648891234 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.411672602 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.839589948 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.095495074 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.92846503 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.357661651 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.408572969 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.390816464 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.105109844 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.97833729 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.239074763 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.887135783 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.053204655 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.390807295 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.668215777 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.392536905 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.386993214 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.670378917 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.391965465 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.392271733 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.405674673 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.981310956 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.19071441 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.392303782 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.500660886 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.323558458 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.613066789 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.054406115 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.323695589 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.387070164 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.564699889 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.387637422 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.518820667 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.400395581 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.388614679 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.395273731 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.152610786 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.663564944 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.394830777 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.383856801 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.370344497 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.393393343 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.400944003 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.631466205 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.395463464 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.062038224 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.736630211 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.643960704 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.393727063 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.375718446 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.392832991 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.388535362 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.10758548 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.358439919 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.955623324 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.959817498 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.409500186 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.406539768 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.393193002 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.607210122 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.60030257 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.390287257 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.402986003 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.395080813 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.411882494 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.291127876 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.15615705 seconds)
  done (took 1607.744381801 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.430758182 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.392651724 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.418702136 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.445402126 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.397526014 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.473687376 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.461128371 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.456512995 seconds)
  done (took 52.781656252 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.402811165 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.551801469 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.421930112 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.396525397 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.400156484 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.398525347 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.863019276 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.423405534 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.398325341 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.401449205 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.390231691 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.398179145 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.054788279 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.40876101 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.399079194 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.386815569 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.399170121 seconds)
  done (took 66.403904012 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.403281318 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.475552015 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.499640067 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.399060086 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.513376533 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.423065468 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 11.374036959 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.428612634 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.409436832 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.439460476 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.065970352 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.408158156 seconds)
  done (took 85.148337063 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.398362507 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.399612092 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.400206461 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.401445631 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.399436657 seconds)
  done (took 8.308033254 seconds)
done (took 2042.174597986 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.637448138 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.081026305 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.060947953 seconds)
  done (took 5.448107776 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.542632996 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.590777616 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.713049774 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.718039621 seconds)
  done (took 7.885923955 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.693171159 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.786521227 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.586726801 seconds)
  done (took 6.385516893 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.837552791 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.395230962 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.549594839 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.393278488 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.402149905 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.398543327 seconds)
  done (took 20.508338367 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.401343186 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.403240033 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.400850337 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.40306859 seconds)
  done (took 6.929223448 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.376204103 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.099113861 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.384945755 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.394224037 seconds)
  done (took 18.570816821 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.145482144 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.160607709 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.142363793 seconds)
  done (took 7.76704206 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.412055286 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.252393005 seconds)
  done (took 9.979833731 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.692976999 seconds)
  done (took 3.016216635 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.535307323 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.724788922 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.456981729 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.36316913 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.500201902 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.313328383 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 3.070149445 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.638931557 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.337730715 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.61198368 seconds)
  done (took 28.868037107 seconds)
done (took 129.083769456 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.273814952 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.780000467 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.606514157 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.281654282 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.623438304 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.605981904 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.602377548 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.249925329 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.752997797 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.741124382 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.285087927 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.623951833 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.546532017 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.780523816 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.54882702 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.781538413 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.623591425 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.323594824 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.92714773 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.125785723 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.602508795 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.882063414 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.110582892 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.903516273 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.630041882 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.558326637 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.458574317 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.780651858 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.1039002 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.482978161 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.558136161 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.299776361 seconds)
  done (took 193.770753693 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.404970968 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.399091523 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.415011625 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.398661118 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.39833141 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.415824406 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.400073422 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.398575754 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.399346565 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.417454586 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.419114362 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.400020607 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.416348584 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.431582096 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.401243548 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.410118114 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.414762026 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.39887981 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.400095305 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.399162768 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.40143821 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.399672335 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.418967425 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.426200523 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.407961365 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.400034785 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.400122456 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.400961738 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.401545856 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.430901754 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.40229825 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.399694351 seconds)
  done (took 206.345367173 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.399488999 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.400518239 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.417370084 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.416524925 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.40167145 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.40340725 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.421887444 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.410172133 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.416094977 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.409589437 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.400776537 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.402181199 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.41878232 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.401347551 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.436527395 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.400378507 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.401118128 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.40111616 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.40273303 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.422363966 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.40533213 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.401684986 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.402008684 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.407257923 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.402917333 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.411774505 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.413369845 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.403512322 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.433502632 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.402772605 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.414178625 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.40121494 seconds)
  done (took 206.402439444 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.59763407 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.409505613 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.411674334 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.348371045 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.411155976 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.409877889 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.404679935 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.60927103 seconds)
  done (took 14.921130453 seconds)
done (took 622.750172787 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.689741913 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.402072875 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.611988983 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.43200904 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.175715128 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.448741776 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.432668703 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.602535744 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.329098033 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.608269223 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.673527976 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.448529008 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.801636001 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.428448173 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.686091158 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.531886987 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.336811628 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.469602504 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.753167288 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.945474894 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.695566423 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.933747629 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.623559995 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.328246724 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.820787979 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.934245954 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.154041013 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.318333423 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.448155187 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.757953714 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.083631944 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.396319339 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.494614643 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.494295915 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.555253664 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.53123789 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.350633746 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.489226519 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.636060338 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.680303818 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.945785908 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.147663147 seconds)
  done (took 94.949892141 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.394438154 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.396539244 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.394551657 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.397185053 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.39695111 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.395775589 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.394798616 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.39591854 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.395421091 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.395694478 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.395746505 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.396209462 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.396915626 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.397260573 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.397701704 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.396767942 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.397619179 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.400276079 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.397564983 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.395789383 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.398251538 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.397033636 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.397973486 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.397952299 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.398359187 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.397558704 seconds)
  done (took 37.64125787 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.416361529 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.669691862 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.829988007 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.426841054 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.415262113 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.419768552 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.49463258 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.422937559 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.41986288 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.422021759 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.588050595 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.420436553 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.453468701 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.857480315 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.422722944 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.418766642 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.419184605 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.417714387 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.681759256 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.429975692 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.519332836 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.422776595 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.496739319 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.431216324 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.441777967 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.417977265 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.423598563 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.939302335 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.439471444 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.589558115 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.22577742 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.496996089 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.887638618 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.859459234 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.235636182 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.423366109 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.419515078 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.591193982 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.42140781 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.419589939 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.498432989 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.420961622 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.837229625 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.04304504 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.436067464 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.420323318 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.957006017 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.611120164 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.668836559 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.432433012 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.862428069 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.422880374 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.42176716 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.42187566 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.667464924 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.429381724 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.42024109 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.954562268 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.444290596 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.506869853 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.424879287 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.42087835 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.695367821 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.422138561 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.676794587 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.421681028 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.429451249 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.441549104 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.843534927 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.428204883 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.061728646 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.442157029 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.422063646 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.589356838 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.677566519 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.994247077 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.445254731 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.70674823 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.908346433 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.521381497 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.429165444 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.931226815 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.524364152 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.429692605 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.425198897 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.425227145 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.423121962 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.468501459 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.498893744 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.99145452 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.069145486 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.974903709 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.523673673 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.437628612 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.423503573 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.957376973 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.444710713 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.422760934 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.835074531 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.056961972 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.442222203 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.430378012 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.073948694 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.445889332 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.503145125 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.431796978 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.850601293 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.42337156 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.470840852 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.422804998 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.429398528 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.448632054 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.502108695 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.426780672 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.426127259 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.031077945 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.620495448 seconds)
  done (took 186.408283719 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.424492626 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.416847048 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.418907267 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.417750416 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.41801519 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.425246869 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.417271001 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.416911546 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.423794616 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.41714025 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.418814494 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.419041508 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.420390424 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.420843475 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.429911241 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.424799873 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.029901941 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.421026852 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.418832008 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.434298728 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.227600311 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.422772166 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.419138424 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.438717118 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.419553288 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.420840438 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.420390575 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.421795235 seconds)
  done (took 154.560043742 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.427117999 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.9960438 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.444633887 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.559035782 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.449636113 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.424814714 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.555925101 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.487839161 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.445524328 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.425420116 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.424137295 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.734670541 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.4313859 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.952982844 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.623357305 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.575784072 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.960069938 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.448381894 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.42538242 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.424900953 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.561164431 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.433016016 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.737773038 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.000441954 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.444888774 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.998282446 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.412016881 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.427410628 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.427461453 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.013143755 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.446466882 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.73711366 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.506115858 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.489417411 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.030097051 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.979944661 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.982264977 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.580327068 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.432395 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.427473557 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.42594874 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.411578064 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.011460874 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.451813452 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.427350802 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.00102723 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.452166566 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.429364109 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.4342875 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.425997765 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.487957532 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.506571589 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.760044686 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.023125395 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.526991334 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.444346812 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.56095789 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.810991489 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.432095894 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.962617118 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.414748907 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.018842649 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.451938762 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.412866673 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.43009936 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.43429174 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.580317533 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.565208227 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.966454137 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.450272491 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.964071519 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.601431442 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.433067967 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.430041694 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.432667615 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.018380552 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.985805845 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.603244584 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.570820336 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.63078151 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.416736777 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.429497959 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.414229217 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.508106224 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.436132433 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.019834475 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.984773737 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.452674728 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.431765873 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.432142528 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.432659018 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.609651784 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.038641862 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.530628665 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.955934396 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.767325117 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.749838398 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.436381715 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.489961673 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.447081077 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.749128531 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.438137003 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.489587746 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.870694147 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.745754365 seconds)
  done (took 170.284250204 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.680514156 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.623423044 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.523877827 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.564300411 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.03147928 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.008069353 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.684455078 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.569401492 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.541925761 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.693532745 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.595859658 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.520482391 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.605607192 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.508080097 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.17592771 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.520572001 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.541306742 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.575329017 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.544938982 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.444017231 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.077240494 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.731904022 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.610573679 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.355527084 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.525880016 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.200112724 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.991898689 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.953789129 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.611787645 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.741586945 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.974929434 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.570665457 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.393137766 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.111954685 seconds)
  done (took 68.147209711 seconds)
done (took 713.309137806 seconds)
SAVING RESULT...
DONE!
