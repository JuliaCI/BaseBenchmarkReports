cset: moving following pidspec: 4490
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.476263649 seconds)
loading group "string"... done (took 0.486481499 seconds)
loading group "linalg"... done (took 9.442502393 seconds)
loading group "parallel"... done (took 0.168764868 seconds)
loading group "find"... done (took 3.175690496 seconds)
loading group "tuple"... done (took 2.127985776 seconds)
loading group "dates"... done (took 1.427268993 seconds)
loading group "micro"... done (took 0.201689566 seconds)
loading group "io"... done (took 0.515694367 seconds)
loading group "scalar"... done (took 58.998431893 seconds)
loading group "sparse"... done (took 14.478488412 seconds)
loading group "broadcast"... done (took 1.313871723 seconds)
loading group "union"... done (took 11.016127443 seconds)
loading group "simd"... done (took 3.820974824 seconds)
loading group "random"... done (took 13.779138554 seconds)
loading group "problem"... done (took 2.318818999 seconds)
loading group "array"... done (took 24.542666558 seconds)
loading group "misc"... done (took 1.142859894 seconds)
loading group "sort"... done (took 3.815724392 seconds)
loading group "collection"... done (took 22.159095336 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.71031441 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.118436802 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.201163461 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.197977508 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.274583076 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.165286953 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.155652291 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.127749926 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.676598901 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.210929826 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.138744505 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.367041589 seconds)
done (took 6.106131923 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.381187157 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.060543607 seconds)
    (2/2) benchmarking "String"...
    done (took 0.192113342 seconds)
  done (took 0.946043347 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.076747599 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.159212216 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.108753892 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.096250593 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.095094138 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.111388163 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.096757313 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.111172435 seconds)
  done (took 1.468607263 seconds)
done (took 3.570139257 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.496121894 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.976261682 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.585731231 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.189636397 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.367440503 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.306381906 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.268999712 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.235755324 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.089194864 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.08519045 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.199641518 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.450726089 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.39600485 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.004309874 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.068925046 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.094246728 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.160872035 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.863145187 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.080354346 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.111487021 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.528800244 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.229360491 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.115903394 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.106885585 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.185040816 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.126398349 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.148794667 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.107227502 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.715902329 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.137888126 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.212503007 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.083476001 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.14800124 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.16371697 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.217361412 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.110745822 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.720445639 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.20145766 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.100973676 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.102431425 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.814936786 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.123078569 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.210550932 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.10754189 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.070638833 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.18227955 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.118080854 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.080870434 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.095676569 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.101669877 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.173650986 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.486440114 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.105560429 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.199405659 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.093544804 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.791402054 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.096860045 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.283721499 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.126666993 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.096608581 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.090639553 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.090441727 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.169016858 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.096079199 seconds)
  done (took 21.023171217 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.191743261 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.209800589 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.0956023 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.145085922 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.143230669 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.084150072 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.089096985 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.09626237 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.114592448 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.196809821 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.12614903 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.218128837 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.077016933 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.109642437 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.167951441 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.254821909 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.110988942 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.125168523 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.091943906 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.097473515 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.147644804 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.095604309 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.095466297 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.111583198 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.169897001 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.204813091 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.112878994 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.127139516 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.092078763 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.100978051 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.146371688 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.151862447 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.091629479 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.088448067 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.177292741 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.122226194 seconds)
  done (took 5.495850518 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.235325293 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.103139609 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.246478395 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.190790513 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.129211294 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.185055795 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.194658166 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.306032463 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.292638209 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.165609401 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.130501851 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.09686194 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.0783601 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.080421101 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.105966046 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 0.834507537 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.176793183 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.140230077 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.187983533 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.1164871 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.082976183 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.741203895 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.103324817 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.088214302 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.096912741 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.08434724 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.230399355 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.096850709 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.493478019 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.086552459 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.09835834 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.134793544 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.201280697 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.138007743 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.123179351 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.111945664 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.087687992 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.216349622 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.103354703 seconds)
    (40/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.223336229 seconds)
    (41/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.103476061 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.077815485 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.079613293 seconds)
    (44/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.084078924 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.140094205 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.119810712 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.112397678 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.120814124 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.136531844 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.088381717 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.111368828 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 4.092129645 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.195991898 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.167743011 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.108596786 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.286990394 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.10962815 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.101472087 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.111862302 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 2.815830754 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.136335386 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.086104459 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.098044209 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.097982996 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.080997506 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.842560281 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.106503287 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.433407465 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.085256628 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.165276401 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.098597571 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.119828746 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.090015551 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.087876774 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.128222853 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.088804667 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.080461695 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.106386308 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.083109919 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.089866884 seconds)
    (81/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.103827298 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.117028147 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.10525566 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.082946207 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.151643591 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.114473428 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.109208322 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.126317395 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.093483841 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.087825265 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.133320645 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084451517 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.105543685 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.189014794 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.115674451 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.115472076 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.118528529 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.147309595 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.089937602 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 2.257516977 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.09736464 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.126831716 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.103338325 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.116311896 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.116557862 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.08749845 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.087482957 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.098413346 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.084215571 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.150219927 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.103531367 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.083648329 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.091315055 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.112544769 seconds)
  done (took 28.553021225 seconds)
done (took 55.763078645 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.432255272 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.082941995 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.102707502 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.083647963 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.082097629 seconds)
  done (took 1.555192594 seconds)
done (took 2.302567934 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.299533242 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.199757028 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.088476994 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.188405317 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.088386301 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.195709775 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.164837095 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.120126979 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.206386571 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.086080662 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.190334796 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.085849198 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.088261816 seconds)
  done (took 2.777032935 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.106003109 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.101857242 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.105413027 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.124296194 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.089042596 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.104020984 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.124103768 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.112948473 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.105346576 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.117505699 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.089143667 seconds)
  done (took 1.932251099 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.100409176 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.097983658 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.093676524 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.117846687 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.085996778 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.102033262 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.121652844 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.11266878 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.101833199 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.116941955 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.090513184 seconds)
  done (took 1.894918154 seconds)
done (took 7.351595421 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.235635384 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 12.020407459 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.181746379 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.251808423 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.330952563 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.301058808 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.625298422 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.209625114 seconds)
  done (took 16.030208376 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.116806452 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.204242318 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.095340515 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.091667521 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.116221371 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.0927529 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.094532404 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.121005001 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.095003566 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.094867235 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.113556661 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.099049731 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.098936765 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.099261449 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.117079443 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.096243693 seconds)
  done (took 2.563935841 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.139251246 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.118645471 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.117232859 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.0999953 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.097811224 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.121601406 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.105377841 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.102513105 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.118084557 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.099625914 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.105852764 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.120262959 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.100812056 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.098178866 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.121137204 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.123638974 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.099169325 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.119792822 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.120416244 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.10221389 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.121966245 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.100854374 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.100493606 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.120428263 seconds)
  done (took 3.513491578 seconds)
done (took 22.86263639 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.146641155 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.08824129 seconds)
  done (took 0.995288526 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.169543595 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.186188424 seconds)
  done (took 1.123894885 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.116059573 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.095037871 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.144943641 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.107413848 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.095513032 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.113465622 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.122260972 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.094731269 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.114084757 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.095854221 seconds)
  done (took 1.868428189 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.099909191 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.099524411 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.127198472 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.164914619 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.118780559 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.096447364 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.099020858 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.118121777 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.100233803 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.095270232 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.118681223 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.113383327 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.09897176 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.132821165 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.100487634 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.10017628 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.12184481 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.097832586 seconds)
  done (took 2.773767851 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.093307636 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.093388901 seconds)
  done (took 0.959130426 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.096497634 seconds)
    (2/7) benchmarking "second"...
    done (took 0.091398881 seconds)
    (3/7) benchmarking "month"...
    done (took 0.09410631 seconds)
    (4/7) benchmarking "year"...
    done (took 0.113427613 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.094050397 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.094088452 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.112763882 seconds)
  done (took 1.466415231 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.525520785 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.2449826 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.377155919 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.073544825 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.124956856 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.305857379 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.125402887 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.075080841 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.092580443 seconds)
  done (took 2.753405346 seconds)
done (took 12.706946267 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.093149949 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.208658085 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.608442239 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.131336472 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.091129714 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.148143856 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.359409359 seconds)
done (took 2.412185648 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.340942813 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.180679644 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.088075359 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.091581411 seconds)
  done (took 1.470959382 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.083072078 seconds)
    (2/2) benchmarking "read"...
    done (took 0.099846916 seconds)
  done (took 0.961391611 seconds)
done (took 3.210929532 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.093479844 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.112912475 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.10749735 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.089692413 seconds)
    (5/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.089476577 seconds)
    (6/24) benchmarking ("one", "Float64")...
    done (took 0.090763401 seconds)
    (7/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.109277449 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 0.091127829 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.093711924 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.092611717 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.112290663 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.093046626 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.089443498 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.10558977 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.090025224 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090196555 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.089602213 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.111152006 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.092347552 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.090811282 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.110212608 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.093995269 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.092754826 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.093661295 seconds)
  done (took 3.132921185 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.113797572 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.092026122 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.113459359 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.097485747 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.096367235 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.240742517 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.098928272 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.096327007 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.117236062 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.095889914 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.097079533 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.096948353 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.1150843 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.097372263 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.094716121 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.116484866 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.098092876 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.094996373 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.114439597 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.098685658 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.097622224 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.113352892 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.097867984 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.097151034 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.117374348 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.098063048 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.096132718 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.114334755 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.098675483 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.097693947 seconds)
  done (took 3.984395143 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.09912003 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.088694398 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.09331407 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.120679067 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.09102512 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.094271532 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.109160514 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.095057744 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.09420837 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.093140476 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.114636216 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.093754951 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.093980995 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.114274612 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.096593076 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.096278639 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.103320661 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.113375104 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.094852706 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.095221283 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.116152048 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.09511084 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.094185366 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.092969175 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.113065211 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.090931271 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.09340261 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.11252969 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.096328343 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.094119806 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.09624324 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.115577022 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.094502071 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.103927075 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.115876065 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.09369691 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.10090537 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.110340668 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.096765462 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.091382513 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.091112735 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.112937386 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.093521422 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.101103124 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.112906888 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.095503674 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.095918298 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.095569458 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.113958655 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.097192315 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.090826731 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.113350536 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.097012706 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.095563229 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.097132813 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.109389362 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.094791067 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.091255685 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.113137225 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.095428611 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.091437304 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.092573785 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.117646959 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.096072322 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.109550864 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.119578578 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.095374813 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.096154317 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.113597111 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.101266292 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.096979083 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.12344245 seconds)
  done (took 8.050139879 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.114474285 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.100285736 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.112165314 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.096082014 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.095159594 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.09576215 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.119403961 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.096942762 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096695764 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.121240476 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.095172356 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.095292608 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.113215224 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.097037077 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.095496134 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.097453834 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.120053835 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.095718806 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.095790086 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.115406989 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.096503726 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.100286047 seconds)
  done (took 3.051943074 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.218857703 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.121384351 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.146952058 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.127098019 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.11294504 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.127372392 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.100279568 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.10079278 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.118011721 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.106095105 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.10599265 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.120030708 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.113400569 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.104016066 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.124044748 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.105273238 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.099897477 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.126498335 seconds)
  done (took 2.969946406 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.105824532 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.092828208 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.155529232 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.092607924 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.09479457 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.115566266 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.102984165 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.116610777 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.117047059 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.097664921 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.105145678 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.115250562 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.098605056 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097326222 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097254649 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.116477107 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.097818029 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.097234761 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.122596095 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.10338444 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.103612019 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.122750896 seconds)
  done (took 3.157747757 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.107509432 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.093184087 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.12898883 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.096754192 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.093275291 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.092117574 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.116901833 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.094473122 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.098663009 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.111253394 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.093725457 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.093160277 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.129169921 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.097047625 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.102936394 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.116277678 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.098227128 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.09822458 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.11546948 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.09716016 seconds)
  done (took 2.862460174 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.188947774 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.128732247 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.109442116 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.117734989 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.131173063 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.114633174 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.143443518 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.113786686 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.115019614 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.144634605 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.115245544 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.112957244 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.141355733 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.119416081 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.132800074 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.122734669 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.121764418 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.144067504 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.113228273 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.13369046 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.126604451 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.11478647 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.141649167 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.114910891 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.114956445 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.133763706 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.113665629 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.137989147 seconds)
  done (took 4.356012668 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.093776524 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.091795599 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.093084682 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.112577328 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.092802937 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.091545152 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.092066285 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.113708713 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.096072652 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.095021751 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.116454847 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.096997106 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.095564714 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.095679004 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.115441907 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.096570555 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.096981956 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.114179312 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.096405263 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095618967 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.096366194 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.115895999 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.096469035 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.095906757 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.096802494 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.116847947 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.09594392 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.097543894 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.114867815 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.096835958 seconds)
  done (took 3.801636351 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.105352365 seconds)
    (2/2) benchmarking "in"...
    done (took 0.102134769 seconds)
  done (took 0.99890754 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.100154165 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.107043497 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.091475894 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.113519854 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.1030693 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.097164053 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.125020027 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.10368386 seconds)
  done (took 1.637436816 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.185527419 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.210394204 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.117567875 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.104768666 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.210341892 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.18873545 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.130038256 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.098345296 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.111512706 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.087547068 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.208039423 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.084519695 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.092070902 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.10938357 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.092316477 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.098237597 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.112893952 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.103391951 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.098846442 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.114043979 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.098293905 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.097275497 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.112518056 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.103720608 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.089071316 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.120167187 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.100252419 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.107676387 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.114301785 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.100149125 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.095778971 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.118478847 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.102372747 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.102426945 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.115024626 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.195120756 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.121011877 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.089753275 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.093559968 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.120111716 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.126681647 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.096441205 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.119822975 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.09453543 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.098216076 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.121012856 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.103577745 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.099358453 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.108668598 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.094918459 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.0989581 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.092651335 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.117499363 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.097991728 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.097504849 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.124722333 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.100646521 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.094531159 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.114691634 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.09451784 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.097871691 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.11394583 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.099867754 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.101239227 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.11887375 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.098132789 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.093440665 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.115498533 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.095346562 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.094881458 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.09254843 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.126026548 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.095193242 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.096979383 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.118585432 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.094705876 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.089894162 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.121069693 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.096007174 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.094154439 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.121319151 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.126622758 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.099690896 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.114239242 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.093242985 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.105032151 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.11984864 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.102840011 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.090996236 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.127280165 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.101187477 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.098750573 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.091209989 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.117138863 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.094080401 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.101578128 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.112205748 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.099135919 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.096867672 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.123805858 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.10526776 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.096094817 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.120315004 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.104431976 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.104204321 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.097119841 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.172592739 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.094920086 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.117824556 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.100669791 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.104007571 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.112957684 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.09766839 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.097335214 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.095281351 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.115911126 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.103569318 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.098855945 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.122232799 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.102883878 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.099816222 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.119379485 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.100887322 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.094676739 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.112459026 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.103612732 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.108420469 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.120015847 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.100659213 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.097328902 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.097409605 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.116053055 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.099279824 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.090012733 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.120155186 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.091025364 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.09365405 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.114973672 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.098918746 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.094319823 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.109749974 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.093136583 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.094924721 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.113742586 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.099558573 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.094811739 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.089678155 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.106707115 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.093737072 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.089754234 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.117824663 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.102415048 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.089939906 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.118322536 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.090530746 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.104435199 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.113448836 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.10571558 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.09980019 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.119779108 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.104391567 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.086573161 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.09112014 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.120426264 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.101662505 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.095116159 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.121181699 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.099690394 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.105282534 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.109816724 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.105650108 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.092168289 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.094932399 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.123232715 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.096619842 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.096984045 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.109875105 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.130077366 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.106180749 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.120810927 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.093473464 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.093929215 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.120063542 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.093929223 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.097844292 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.120508696 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.099920914 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.092032365 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.114337579 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.103007247 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.091050041 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.096301104 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.113385431 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.094554187 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.086604162 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.118666585 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.087586623 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.098957335 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.117214419 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.101884929 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.099774348 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.095920592 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.115807409 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.109290459 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.092841943 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.121715101 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.087864836 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.098955682 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.126320298 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.100639289 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.100031554 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.117008366 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.091571342 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.096174803 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.124661219 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.099114914 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.094088812 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.0950322 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.110811713 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.093243958 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.104817321 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.122872921 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.096355876 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.099776016 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.121538911 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.102669548 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.096086117 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.091834946 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.128016366 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.103102661 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.092804593 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.116699116 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.097870801 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.094758335 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.125478649 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.09244427 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.095466267 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.12234748 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.10569167 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.100276784 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.120654291 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.103730538 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.105823887 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.097948765 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.121721503 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.09074396 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.102341132 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.113771614 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.093503016 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.09076017 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.121604203 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.090143707 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.096713352 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.117859912 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.092884215 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.090493964 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.098186906 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.124132832 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.09948271 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.091874786 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.122280116 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.104913205 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.102159208 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.115958944 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.107032889 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.092336424 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.109128812 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.098045471 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.090462937 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.096682757 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.11338984 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.102752352 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.09350842 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.11755638 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.100030776 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.09731613 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.115797335 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.1023847 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.104883882 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.112100951 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.089015901 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.092578724 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.118008957 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.097679459 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.096975674 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.122536203 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.102117086 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.104519056 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.119247769 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.097470099 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.095260909 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.100182241 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.115665563 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.105613289 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.101717014 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.123062193 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.090844865 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.099768132 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.112824872 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.102593011 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.100506548 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.11640237 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.096321386 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.093339827 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.114595892 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.09797156 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.091029764 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.088280605 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.114861563 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.107002759 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.096510258 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.123709212 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.100703968 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.096055657 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.115485633 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.097422513 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.104955485 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.115029928 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.109284161 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.101379537 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.093383575 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.11572161 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.107417895 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.101422654 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.128832028 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.095885118 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.106629336 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.129599815 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.105263243 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.10001168 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.103661949 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.127658983 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.104994435 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.099471146 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.112050786 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.097582381 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.099567391 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.119561645 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.108276993 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.09756602 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.110568189 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.098126923 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.1019061 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.119681258 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.098076066 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.090702109 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.097007789 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.126364576 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.103811957 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.102265581 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.120235621 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.096951993 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.091049672 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.121821126 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.102440672 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.096406877 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.102438435 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.119806571 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.099003601 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.091901926 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.124111554 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.096781894 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.0896683 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.110071538 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.092043729 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.102763817 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.111964231 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.102808161 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.100548945 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.091990058 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.117789628 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.106735784 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.095256328 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.12171502 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.100330298 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.09323581 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.126046666 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.098165398 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.09373414 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.100398887 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.12418555 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.08830325 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.094831803 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.11756461 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.106635637 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.096692883 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.124976127 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.095084663 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.101298814 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.121656835 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.101470515 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.101235773 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.101631527 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.113029986 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.101976643 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.098730378 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.123330538 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.092366318 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.093236575 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.114570736 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.096034475 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.103487764 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.114538287 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.10992376 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.103416195 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.093883147 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.122586268 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.104280726 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.095108132 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.127276218 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.093881888 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.097150365 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.112999206 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.103565857 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.098286014 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.126782333 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.095867925 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.090001789 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.123665134 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.101492255 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.100442232 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.097772524 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.125688987 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.088657949 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.089800196 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.120180386 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.092646734 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.10596376 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.122586461 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.094287383 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.094503303 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.121278181 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.098464651 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.102137179 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.091281342 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.114649099 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.096778144 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.097243733 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.116292485 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.089828235 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.100071967 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.117298682 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.099355354 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.094470799 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.112854078 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.097542024 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.10346556 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.11663087 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.093664913 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.092224219 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.102916693 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.117587728 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.092909194 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.090575607 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.124931818 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.097684572 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.10245054 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.115035458 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.094801729 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.093048113 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.121099554 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.103713494 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.094047465 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.116916152 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.094362813 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.102489508 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.100099479 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.112122766 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.094302314 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.106384869 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.122838991 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.09732622 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.098914007 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.119458936 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.10329313 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.103093442 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.122891891 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.090332663 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.091035117 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.094938898 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.112278015 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.098541552 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.101087526 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.117919452 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.092987602 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.101415762 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.123940705 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.0987563 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.099551023 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.089820831 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.126726766 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.093295767 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.098601117 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.11397749 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.090534042 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.098764736 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.124097438 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.09444461 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.095886876 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.121163578 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.099285342 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.090750184 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.094211188 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.124324148 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.099806079 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.102254184 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.11794168 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.093772727 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.099381884 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.127712386 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.09702096 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.095000799 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.124057081 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.102399325 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.096112499 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.116862757 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.102237863 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.102868943 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.098907474 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.126116031 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.093445776 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.094958833 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.126525584 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.103822141 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.105305289 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.117025867 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.090310467 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.10103693 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.116231142 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.089326234 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.1000943 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.125709992 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.104184569 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.097250036 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.09327815 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.128616899 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.101422897 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.096909754 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.118023889 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.093974482 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.101099114 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.115279423 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.099893146 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.093199362 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.127374715 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.103713568 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.10203777 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.127038052 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.090721418 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.101423922 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.098429543 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.127160182 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.096589477 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.089944164 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.112938532 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.09916978 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.104182691 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.124985605 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.106579826 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.101775852 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.099654429 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.119248989 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.096039992 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.094792956 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.126799586 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.101327562 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.097857274 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.118208461 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.095331339 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.096936213 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.120716307 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.10719268 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.103562467 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.096681791 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.130440053 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.102664348 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.094350132 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.118553064 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.099496929 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.098530538 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.121073344 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.103069646 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.094246541 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.111674609 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.103224171 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.103163816 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.094194794 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.125555405 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.103197824 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.094627348 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.121308657 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.103243717 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.100351972 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.118802638 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.097371932 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.099521475 seconds)
  done (took 63.815547818 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.147073859 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.106294519 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.119780873 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.09873255 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.117421282 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.121646538 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.098880223 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.099646106 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.120393038 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.107994037 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.098171519 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.119525409 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.113779754 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.12009976 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.137800905 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.109615336 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.118407372 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.099988462 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.097521103 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.100146881 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.133637308 seconds)
  done (took 3.233616978 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.116139913 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.110883648 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.130421455 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.110866202 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.104893926 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.130403593 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.109919727 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.131446063 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.112516358 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.106928679 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.133777072 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.109610778 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.105837203 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.127215496 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.106714396 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.1282539 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.111852318 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.105432107 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.132267734 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.110348028 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.107275877 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.131113498 seconds)
  done (took 3.419308271 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.126136649 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.10184796 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.096445134 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.120558679 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.100678761 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.098818669 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.123022681 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.099131674 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.106207454 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.094311899 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.110086209 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.093258516 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.097981019 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.118267808 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.093493714 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.098479632 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.127770897 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.101462726 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.10383065 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.098685545 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.110499954 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.098085163 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.099512175 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.110318973 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.104537691 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.103553388 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.098410986 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.123126586 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.09020479 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.102113322 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.11982132 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.092854853 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.090197431 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.088660517 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.110588575 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.101317684 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.101839578 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.1189444 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.100802774 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.089600289 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.099213996 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.125103591 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.090024567 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.100066735 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.119576171 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.092696959 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.102419599 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.098623718 seconds)
  done (took 5.840752278 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.128623512 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.157150888 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.102219117 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.128165655 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.135685822 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.109340608 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.101743629 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.152108243 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.103325384 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.101278383 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.137508171 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.114472121 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.126342614 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.106808328 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.104444837 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.125447952 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.105322728 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.102102199 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.128665291 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.102657267 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.1076171 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.125700512 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.11415878 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.111265569 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.126829175 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.10217605 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.102280736 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.126752578 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.11170132 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.129394165 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.106490159 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.107847346 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.135147408 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.105667694 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.102463508 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.123975685 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.115171863 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.104176281 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.125917605 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.101547701 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.104808183 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.126826352 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.104695936 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.114395231 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.126697528 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.103983787 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.103148851 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.121752801 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.112821315 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.105175119 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.131806276 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.11353022 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.105204144 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.125324226 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.360565908 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.134438333 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.104326956 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.102204769 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.125890261 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.113119972 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.101667194 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.126909853 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.114281664 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.103299334 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.130907561 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.113559544 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.104919116 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.127489804 seconds)
  done (took 9.093989077 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.133159818 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.108160882 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.136563941 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.114856599 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.106861441 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.128938116 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.106063043 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.105933751 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.130012207 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.112022425 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.129042173 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.217342858 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.128705565 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.112221835 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.107294953 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.130844042 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.106568114 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.106559692 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.130586457 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.108018972 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.107817673 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.136605422 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.10765821 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.136179023 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.119472959 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.103260291 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.129259715 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.107397785 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.115224384 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.12866557 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.118734422 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.127783427 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.106906976 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.115685055 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.140543573 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.107871361 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.101732384 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.128146396 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.107472584 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.108207663 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.126079432 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.115402728 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.109493975 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.125477281 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.107762014 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.107975821 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.137013552 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.119454905 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.134221193 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.112998765 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.107259929 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.136129647 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.107938839 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.128760687 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.116380291 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.122483739 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.136398323 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.116223934 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.128707323 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.115182824 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.116257864 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.145355971 seconds)
  done (took 8.350419172 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.09987647 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.099187159 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.099519578 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.121012673 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.100278317 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.099710791 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.099285821 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.122803111 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.100644274 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.100977961 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.121624691 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.099610083 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099779955 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099872149 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.121346607 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100337288 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.10044436 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.119858126 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.100879491 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.099898423 seconds)
  done (took 2.974218502 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.109667664 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.116194395 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.122432838 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.107919899 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.102010026 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.129056678 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.101813643 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102532495 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.101991131 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.125349174 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.109512653 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.10942537 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.124646448 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.107556127 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.132504541 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.108508827 seconds)
  done (took 2.679705074 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.120187748 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.119026996 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.201821054 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.104470726 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.124834559 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.109266168 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.102852967 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.127401461 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.101740539 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.108103041 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.106181887 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.129319245 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.102077188 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.102948396 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.125303339 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.105659287 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.101065065 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.129377703 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.102610461 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.207755195 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.106947438 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.105736401 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.1266536 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.104982529 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.104794639 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.129956534 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.108447997 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.103899593 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.126673307 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.103587393 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.103880212 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.109706694 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.123729799 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.107061198 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.103086054 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.126696421 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.103126962 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.10388 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.127189421 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.103164001 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.105155292 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.12491574 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.103991812 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.105876731 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.101066965 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.124878026 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.101597344 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.107932855 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.126833821 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.105134905 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.103703844 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.130852018 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.106595666 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.109540696 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.131484337 seconds)
  done (took 7.228008435 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.113934968 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.10464668 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.136296901 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.101333052 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.103397848 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.104574866 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.127388729 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.105157427 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.104953902 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.123552137 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.103723864 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.104606703 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.126342836 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.103991454 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.104464929 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.106218162 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.133823901 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.113440942 seconds)
  done (took 2.892470706 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.108042012 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.106489301 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.116605605 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.126305623 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.102095108 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.103416386 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.124888446 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.101782841 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.10369519 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.103289973 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.127159786 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.102646475 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102434471 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.125848791 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.103347286 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.104579903 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.125162305 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.103046963 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.104906494 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.102106583 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.126910301 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.102960846 seconds)
  done (took 3.307916831 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.114222612 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.231466107 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.110279495 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.238475342 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.100155559 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.123663311 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.109487304 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.125117817 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.117142236 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.099894881 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.122192548 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.100168763 seconds)
  done (took 2.46940073 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.132322837 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.140930541 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.127406512 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.104408067 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11292634 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.132702832 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108389292 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108929712 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.140771094 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119179333 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.129345674 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116746964 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115709357 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.139489806 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112959078 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113345474 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.132301978 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109504016 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.104171048 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.146434392 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109707247 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.138515283 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108006926 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108417787 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.130331912 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11567214 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116860322 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.141825178 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107987704 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.1388861 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114110635 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108058443 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.137852825 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.12063698 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.127955744 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117139473 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108902894 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.145531038 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113697449 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.139398831 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.106983491 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113446528 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.139877903 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112676586 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117412985 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.13082982 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11487479 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109338254 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.131884398 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.130513202 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.136450847 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116973688 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114109083 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.139747128 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117187759 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.150904519 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.120715504 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.140130448 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11345417 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.119478021 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.141532827 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113605668 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.13876704 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.120137183 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112323044 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.138786467 seconds)
  done (took 9.0254956 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.144125412 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.105558879 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.131519107 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120000031 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117384389 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.134323508 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10844637 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109570064 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.130272933 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.105436746 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.175803156 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108855012 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116839118 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.138780918 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110103858 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.131801128 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109701605 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116703576 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.127692362 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.130495834 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109859748 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.139286169 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116912393 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.13949301 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119720448 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113563847 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.13111525 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109809411 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108053298 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.132363677 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114326387 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.130623754 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118261891 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.105838327 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.140248295 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109110172 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108128656 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.135910663 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108598844 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112753135 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.140158098 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.124134711 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.132482387 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110138072 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120121384 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.133660677 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10928259 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105320281 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.13325713 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10641773 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119942443 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.14320158 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.120253586 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.139916628 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10934606 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.112077152 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.13472806 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11092108 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109076387 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.135455584 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117627497 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.131556238 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.130015842 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109515862 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.133158428 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117675676 seconds)
  done (took 8.952855065 seconds)
done (took 172.057346605 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.17761439 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.217447762 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.200172109 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.165834404 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.094283248 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.169492693 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.136818182 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.201982177 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.095233777 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.094196194 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.117969724 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.096304883 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.207134532 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.117362766 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.094942553 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.097211285 seconds)
  done (took 3.171595527 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.196189265 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.343404947 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.133756201 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.098877077 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.100755518 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.099409016 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.120873962 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.101339833 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.099902838 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.128709756 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.10102834 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.097387483 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.127756545 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.096317351 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.099611588 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.122685132 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.107091617 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.10083677 seconds)
  done (took 3.169093523 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.119225369 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.155924366 seconds)
  done (took 1.170276801 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.130596274 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.214102834 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.298580166 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.171292556 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.119838213 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.141502475 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.149277108 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.134214599 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.190156909 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.135042152 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.111575073 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.098756344 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.149555868 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.105465328 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.116823285 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.121952415 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.129201463 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.114241491 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.138010584 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.101462573 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.147202663 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.102570196 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.105861681 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.138188088 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.18142506 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.137835956 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.104760531 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.102768405 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.126292308 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.117129999 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.107093527 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.139789381 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.113321847 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.181707401 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.103225147 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.177134593 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.106987577 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.124302752 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.114579227 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.100360053 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.125011468 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.103898419 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.113035283 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.122399785 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.103664468 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.107488941 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.127537898 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.103348002 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.108398435 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.129806239 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.109244637 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.129773379 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.154489122 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.130148644 seconds)
  done (took 7.972724847 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.925124246 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.147518212 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.100349589 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.069232507 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.145052004 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.114222804 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.912403073 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.149398735 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.254365839 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.93369233 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.115690111 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.106654442 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.269021268 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.260930095 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.279662578 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.365727878 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.774604377 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.118344358 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.13309569 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.167891402 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.105866687 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.14020374 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.117439135 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.460122005 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.100864681 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.099959308 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.127072865 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.108171689 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.178854109 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.100900586 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.10299642 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.199892913 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.303286549 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.215648142 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.100277884 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.122121088 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.100295132 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.189602905 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.275640911 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.222021148 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.167807126 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.120114394 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.098480594 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.103955134 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.136996723 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.097111759 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.187853727 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.193608668 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.169402162 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.12833846 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.108496501 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.107279512 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.126460632 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.181222343 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.099560816 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.36265149 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.365260351 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.122323313 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.106764651 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.112771679 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.26665519 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.125004935 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.243888716 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.123638987 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.216333495 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.124315661 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.808693424 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.166868736 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.122157472 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.104762828 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.104723568 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.130262382 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.103376681 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.184459294 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.409807452 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.129691095 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.106155916 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.099601779 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.231666995 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.12514832 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.100162187 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.184652858 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.103757088 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.106710925 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.131560094 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.106982325 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.191435294 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.276738928 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.107772713 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.107193181 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.129294013 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.110523724 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.101981807 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.233213829 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.234729438 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.179432407 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.22955267 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.104868161 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.185088485 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.18850734 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.105326149 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.193294165 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.104476518 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.111167238 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.127085607 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.231848596 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.16042672 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.101303664 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.106439246 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.129047248 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.140252387 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.104346935 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.130789661 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.167902299 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.494660955 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.191024145 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.097675417 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.128283123 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.106160729 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.185451324 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.107629367 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.264528037 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.13187504 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.167159029 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.129822426 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.097429251 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.107547743 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.183354941 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.109247671 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.129881388 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.104566213 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.132990628 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.261373924 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.222633497 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.133016775 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.249851592 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.171918825 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.129639814 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.173827935 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.129165502 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.189276083 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.110656666 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.105210143 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.1254984 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.80334179 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.112146215 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.106016926 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.128590494 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.183722045 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.122875436 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.103282553 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.100974607 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.098300112 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.792493168 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.129811336 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.099257975 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.102529918 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.128783486 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.106296724 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.106988968 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.12857714 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.15966998 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.273658044 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.110289912 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.106710666 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.123948765 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.158145456 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.126131752 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.101205643 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.100313539 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.124567301 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.107800067 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.105679533 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.126491854 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.166917341 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.179721808 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.234242194 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.568295889 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.125292732 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.101049999 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.247163933 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.123458031 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.333528421 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.107146708 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.243296728 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.186356054 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.098738133 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.364295521 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.186864537 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.209680524 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.105445632 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.197636472 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.098805468 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.128641757 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.159597265 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.124157627 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.108133808 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.181558613 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.109435978 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.107286058 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.302298923 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.101172626 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.250741183 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.099872191 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.192890761 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.103897787 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.106842609 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.352855792 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.102128827 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.11313076 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.18203926 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.105596911 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.1254383 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.970766452 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.101180592 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.109803128 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.128558332 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.239816157 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.186312736 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.107207029 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.108440833 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.132510934 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.160102106 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.230692273 seconds)
  done (took 47.03502812 seconds)
done (took 63.414793117 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.227023677 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.168738432 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.353353241 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.148618379 seconds)
  done (took 1.909382472 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.260239451 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.168469652 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.243314677 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.097271914 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.250413886 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.097161526 seconds)
  done (took 2.037441768 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.170403259 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.166012743 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.143266875 seconds)
  done (took 1.403133387 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.213790989 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.208244499 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.34805406 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.262648112 seconds)
  done (took 2.038413457 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.276843844 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.117410457 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.12707985 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.227291065 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.242942555 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.207511596 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.123920652 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.175467837 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.130155104 seconds)
  done (took 2.589177773 seconds)
done (took 10.899402155 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.417442502 seconds)
    (2/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.295384742 seconds)
    (3/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.259056511 seconds)
    (4/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.264526931 seconds)
    (5/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.130818423 seconds)
    (6/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.12715943 seconds)
    (7/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.141640401 seconds)
    (8/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.234955349 seconds)
    (9/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.113221197 seconds)
    (10/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.189199213 seconds)
    (11/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.135162022 seconds)
    (12/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.417255534 seconds)
    (13/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.251606938 seconds)
    (14/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.102343007 seconds)
    (15/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.341372291 seconds)
    (16/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.321723012 seconds)
    (17/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.396825579 seconds)
    (18/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.106016972 seconds)
    (19/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.259284215 seconds)
    (20/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.359677891 seconds)
    (21/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.12797643 seconds)
    (22/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.242570459 seconds)
    (23/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.103401487 seconds)
    (24/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.109723397 seconds)
    (25/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.36605662 seconds)
    (26/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.220553463 seconds)
    (27/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.175655903 seconds)
    (28/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.133056016 seconds)
    (29/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.397359977 seconds)
    (30/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.117046722 seconds)
    (31/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.237787085 seconds)
    (32/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.139932022 seconds)
    (33/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.123750312 seconds)
    (34/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.196556175 seconds)
    (35/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.125916549 seconds)
    (36/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.129201592 seconds)
    (37/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.218937861 seconds)
    (38/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.111710293 seconds)
    (39/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.105366207 seconds)
    (40/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.186282879 seconds)
    (41/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.138926934 seconds)
    (42/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.171325511 seconds)
    (43/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.121690804 seconds)
    (44/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.280059538 seconds)
    (45/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.085189129 seconds)
    (46/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.103405227 seconds)
    (47/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.110941283 seconds)
    (48/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.135640638 seconds)
    (49/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.101136499 seconds)
    (50/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.164972291 seconds)
    (51/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.195148884 seconds)
    (52/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.102868121 seconds)
    (53/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.085337208 seconds)
    (54/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.146775358 seconds)
    (55/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.11969095 seconds)
    (56/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.100073637 seconds)
    (57/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.129757624 seconds)
    (58/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.086958473 seconds)
    (59/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.087021128 seconds)
    (60/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.221418448 seconds)
    (61/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.148404371 seconds)
    (62/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.172482296 seconds)
    (63/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.126337251 seconds)
    (64/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.220249399 seconds)
    (65/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.124059291 seconds)
    (66/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.162152881 seconds)
    (67/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.213912638 seconds)
    (68/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.113114573 seconds)
    (69/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.129151845 seconds)
    (70/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.11054814 seconds)
    (71/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.080381025 seconds)
    (72/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.110171378 seconds)
    (73/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.139209368 seconds)
    (74/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.145772101 seconds)
    (75/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.102530803 seconds)
    (76/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.158468582 seconds)
    (77/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.086513698 seconds)
    (78/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.222956196 seconds)
    (79/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.129878797 seconds)
    (80/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.08497336 seconds)
    (81/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.32521694 seconds)
    (82/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.107412437 seconds)
    (83/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.157736868 seconds)
    (84/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.102062584 seconds)
    (85/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.142139206 seconds)
    (86/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.079934558 seconds)
    (87/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.191232878 seconds)
    (88/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.113073681 seconds)
    (89/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.100613642 seconds)
    (90/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.113402795 seconds)
    (91/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.11135287 seconds)
    (92/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.081761636 seconds)
    (93/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.081750598 seconds)
    (94/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.143679932 seconds)
    (95/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.146228466 seconds)
    (96/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.126171149 seconds)
    (97/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.163373528 seconds)
    (98/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.085109858 seconds)
    (99/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.086992892 seconds)
    (100/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.135644503 seconds)
    (101/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.105280441 seconds)
    (102/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.082588151 seconds)
    (103/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.113807145 seconds)
    (104/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.082789609 seconds)
    (105/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.081841087 seconds)
    (106/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.198701598 seconds)
    (107/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.07960149 seconds)
    (108/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.113305507 seconds)
    (109/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.161652584 seconds)
    (110/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.084634148 seconds)
    (111/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.090071161 seconds)
    (112/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.216347576 seconds)
    (113/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.080663982 seconds)
    (114/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.07960746 seconds)
    (115/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.13363951 seconds)
    (116/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.130112268 seconds)
    (117/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.111897389 seconds)
    (118/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.135903402 seconds)
    (119/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.081302317 seconds)
    (120/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.131386751 seconds)
    (121/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.104468709 seconds)
    (122/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.107457527 seconds)
    (123/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.136092797 seconds)
    (124/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.087763588 seconds)
    (125/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.085590766 seconds)
    (126/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.14803559 seconds)
    (127/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.111411816 seconds)
    (128/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.178441189 seconds)
    (129/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.080230592 seconds)
    (130/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.114076976 seconds)
    (131/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.114040721 seconds)
    (132/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.123546343 seconds)
    (133/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.123750576 seconds)
    (134/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.138164406 seconds)
    (135/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.088251652 seconds)
    (136/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.086050381 seconds)
    (137/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.115911412 seconds)
    (138/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.159244833 seconds)
    (139/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.079629251 seconds)
    (140/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.08625992 seconds)
    (141/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.082371939 seconds)
    (142/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.137482697 seconds)
    (143/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.088568033 seconds)
    (144/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.09127799 seconds)
    (145/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.083818084 seconds)
    (146/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.084941588 seconds)
    (147/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.085236075 seconds)
    (148/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.12973553 seconds)
    (149/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.080586531 seconds)
    (150/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.087946945 seconds)
    (151/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.080232764 seconds)
    (152/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.168691864 seconds)
    (153/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.083243135 seconds)
    (154/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.173341008 seconds)
    (155/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.13752655 seconds)
    (156/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.105099732 seconds)
    (157/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.082377351 seconds)
    (158/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.082920215 seconds)
    (159/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.129345055 seconds)
    (160/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.101826155 seconds)
    (161/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.079787093 seconds)
    (162/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.110769908 seconds)
    (163/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.130169233 seconds)
    (164/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.111124104 seconds)
    (165/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.11066242 seconds)
    (166/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.125617839 seconds)
    (167/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.126256719 seconds)
    (168/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.080614967 seconds)
    (169/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.083579297 seconds)
    (170/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.086900147 seconds)
    (171/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.105840601 seconds)
    (172/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.103747813 seconds)
    (173/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.081282601 seconds)
    (174/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.22051804 seconds)
    (175/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.102609348 seconds)
    (176/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.110566436 seconds)
    (177/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.107163839 seconds)
    (178/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.112129598 seconds)
    (179/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.123841214 seconds)
    (180/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.082369963 seconds)
    (181/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.129464946 seconds)
    (182/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.083850168 seconds)
    (183/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.087739009 seconds)
    (184/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.080471523 seconds)
    (185/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.081434593 seconds)
    (186/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.105340641 seconds)
    (187/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.104992285 seconds)
    (188/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.082073902 seconds)
    (189/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.103158318 seconds)
    (190/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.110905472 seconds)
    (191/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.105433885 seconds)
    (192/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.11396059 seconds)
  done (took 27.675211109 seconds)
done (took 28.605907025 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.227561253 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.132105463 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.111468272 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.112512125 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.235720218 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.118439123 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.156625596 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.114103839 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.121854832 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.138292593 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.102302871 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.12492192 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.137818449 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.24784496 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.11561367 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.103763206 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.101698107 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.148566209 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.127897182 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.128018043 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.23752303 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.131246997 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.121923167 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.10280677 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.237677352 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.103973098 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.137919584 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.112813595 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.125016252 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.137381172 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.112966877 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.10366594 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.127923707 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.154869983 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.10200413 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.112155016 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.126965781 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.087842961 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.113086874 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.137358299 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.127026823 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.112426919 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.135842379 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.104623029 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.113604855 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.110898387 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.126795738 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.116332445 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.100208241 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.138338829 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.105117376 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.127468922 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.134868729 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.102446968 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.101159275 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.127730196 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.122573799 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.102734906 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.124871959 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.126313814 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.104594888 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.102058555 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.13820079 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.102527891 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.11161948 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.126503814 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.114061317 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.114765263 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.134457259 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.105653255 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.102567616 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.110750064 seconds)
done (took 10.132653462 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.107149245 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.146617865 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.249100416 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.251767025 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.156638767 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.121247323 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.117043238 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.152601009 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.115693351 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.121492749 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.166005099 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.135872328 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.254637034 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.11907484 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.145834883 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.114713764 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.11417984 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.13810649 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.25097556 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.128248464 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.125553586 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.145563875 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.128961779 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.119040141 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.133193962 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.139527552 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.139051829 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.115543189 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.107063269 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.138744032 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.128690147 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.10600593 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.134361754 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.126811957 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.12532949 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.140818021 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.120535807 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.114481343 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.131968258 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.108143717 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.112840398 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.148209939 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.107719033 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.119326227 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.140427501 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.12146975 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.114579197 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.143353316 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.110879692 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.114014544 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.130502928 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.131633718 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.119919739 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.149088937 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.119887414 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.119748305 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.143483553 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.119202008 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.110494311 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.144179202 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.10754591 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.107532244 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.108463849 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.15198341 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.110229042 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.143793131 seconds)
  done (took 9.853008949 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.125831599 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.136700167 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.144505246 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.118080072 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.112558284 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.125015483 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.101230829 seconds)
  done (took 1.836339984 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.103384976 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.269377424 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.261774387 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.261553833 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.250141003 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.268616869 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.126290747 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.102406395 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.165622587 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.113805219 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.270419142 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.324173959 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.13960108 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.119976361 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.263496353 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.101916417 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.261909853 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.102610348 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.145310765 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.263393103 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.120800333 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.132601382 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.14355486 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.103339219 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.263974844 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.104205594 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.330545803 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.121794953 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.112960497 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.142501042 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.119080849 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.206528329 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.235283439 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.146469744 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.111370173 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.260320616 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.252647441 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.117695688 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.335567966 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.108291196 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.249222477 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.117451567 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.118090667 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.14566565 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.118486982 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.249831665 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.123619444 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.146119194 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.117485056 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.27414597 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.114534667 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.26519353 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.142842847 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.118324065 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.11398316 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.145487859 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.126013597 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.119144243 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.270699279 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.148360016 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.258548121 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.259943525 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.228372551 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.261358629 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.156540182 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.267527469 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.21207319 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.148608019 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.112876625 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.117527233 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.26183154 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.145891238 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.117365933 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.252128387 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.119906413 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.263310793 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.26338488 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.144215962 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.117414021 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.107652783 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.11518556 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.130731204 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.25358673 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.117758701 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.115093855 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.149863261 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.117180452 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.117306019 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.136147102 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.127817986 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.11696637 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.141393215 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.123895678 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.143424594 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.120942369 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.270037298 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.11528744 seconds)
  done (took 17.824164847 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.106418366 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.105758853 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.109241388 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.132219541 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.106884295 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.105281708 seconds)
  done (took 1.676167096 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.141959446 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.11864148 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.15342897 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.120725621 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.166119334 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.251648578 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.2615233 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.139016175 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.138539826 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.130062396 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.253500224 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.256196329 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.256657866 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.123127038 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.259291054 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.122363714 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.261287593 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.117142139 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.155041702 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.116540586 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.117047126 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.148929232 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.116428259 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.245457904 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.118875326 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.148979328 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.112772331 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.126720506 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.154500835 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.113061868 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.121610069 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.146699357 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.111545686 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.112116945 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.259271706 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.14037609 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.115063013 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.121286306 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.148833751 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.12012963 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.260730831 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.115737746 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.151785808 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.122656373 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.112887489 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.138558112 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.122239486 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.111001246 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.258954068 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.150004218 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.122057883 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.119988255 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.146780973 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.123296775 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.111608522 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.140243646 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.122946161 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.262910741 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.123417658 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.109538584 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.147187085 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.120624677 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.140375702 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.12371196 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.120396599 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.147400416 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.112628833 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.120918399 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.141954076 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.120048942 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.122841095 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.144880303 seconds)
  done (took 11.842413948 seconds)
done (took 44.005864464 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.559574818 seconds)
  done (took 2.570113981 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 1.097969896 seconds)
  done (took 2.104407022 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.045664914 seconds)
  done (took 19.086374092 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.42420954 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.351099301 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.01783967 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.175253122 seconds)
  done (took 2.976218799 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.09479923 seconds)
  done (took 2.116124261 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.340080756 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.247095717 seconds)
  done (took 1.600253173 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.830034948 seconds)
  done (took 1.854716157 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.801975175 seconds)
  done (took 2.812743573 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.269848508 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.245421641 seconds)
  done (took 1.539974413 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.670668645 seconds)
  done (took 1.69237434 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.957968706 seconds)
  done (took 20.984288502 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.255309825 seconds)
  done (took 1.285219882 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.292709064 seconds)
  done (took 1.320781294 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.657384954 seconds)
  done (took 4.683494681 seconds)
done (took 67.641611762 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.120367162 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.123438544 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.121996815 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.147040543 seconds)
  done (took 1.526194317 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.125008086 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.119405364 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.121471891 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.144519146 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.124136825 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.117543555 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.14291556 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.121952899 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.11716256 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.14691223 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.118162264 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.117019537 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.146676317 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.118218583 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.117204807 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.145635404 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.122856436 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.117920252 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.139949209 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.144981502 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.120329006 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.119925712 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.149161367 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.121467173 seconds)
  done (took 4.105872838 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.11476715 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.109659146 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.111747588 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.133874371 seconds)
  done (took 1.501647526 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.127075851 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.130038107 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.154258321 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.125660887 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.130778481 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.155564131 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.117933144 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.115988978 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.143884374 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.128567861 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.134594758 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.159559168 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.131660972 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.120672765 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.15526369 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.114273618 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.119560705 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.15566445 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.127626396 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.126030659 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.146365986 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.127285908 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.123402921 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.154138151 seconds)
  done (took 4.254092236 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.195278481 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.130385289 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.172545988 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.166394502 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.174371687 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.117566821 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.147435142 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.151070256 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.125255196 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.11870807 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.145776981 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.1651057 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.12430333 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.147172774 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.119774667 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.123250814 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.155005752 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.124347744 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.18962413 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.12216112 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.124620992 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.155980219 seconds)
  done (took 4.227073911 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.123585128 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.110877419 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.133138904 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.108642809 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.123029993 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.111966828 seconds)
  done (took 1.743231739 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.109619529 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.104420399 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.104324127 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.128042742 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.10848419 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.104404983 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.102006554 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.130754726 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.104388317 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.103544668 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.12893067 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.103681948 seconds)
  done (took 2.36929854 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205277673 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.147083564 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.251146101 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.384573554 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193598893 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162078628 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.309752086 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.187491057 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.178597605 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.166812064 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183039439 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190634104 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.154752733 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215615041 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140430832 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.188339891 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172686648 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.237954512 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169382918 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216530056 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183892792 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.20216526 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.191066038 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.178062429 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140959489 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190490565 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.121229497 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129274894 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194108726 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164152093 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202618172 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177720286 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142770409 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213674794 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.261508734 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178445155 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.266613552 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.16021534 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.17365536 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.220822747 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.257136478 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.142559423 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.218820381 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152487128 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157088721 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217493756 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151547977 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.212089121 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.134365485 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143969795 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212918528 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207389123 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.170089173 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.164776439 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.327076591 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136120746 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.142057568 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205689587 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215625903 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200628881 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209391263 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.122881857 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.203387247 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218844865 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242295405 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.142338535 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.193175566 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.126875464 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16384198 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.233096182 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212847895 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158319592 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.220243952 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158233602 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172381382 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.193327473 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154987882 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236185541 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171048962 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.147758215 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15126005 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160379303 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126615022 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.189072217 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.148094024 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.244850433 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132322025 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.210608637 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179523711 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.181458801 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.16106973 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188467848 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162148109 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.176298172 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.102672062 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143674218 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.187477795 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158828084 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157334901 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.150732335 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167775212 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.125858537 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15039703 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.152275339 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170915125 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.162866441 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160457294 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199502523 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.131351185 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.209558616 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147066397 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.190788175 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167625271 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.222297758 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130495515 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.160768897 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.249352502 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171610514 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.136799677 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.2007251 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.224532746 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.154788149 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167403377 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1661987 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.226696053 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142777015 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.230765794 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168625493 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.138922728 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.140476314 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203573984 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.186101295 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.159638889 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12644176 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.194236121 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215696874 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.1262705 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138788312 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21186685 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133834968 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151847745 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136834812 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165157709 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.143635062 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.150870865 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.167393441 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154852015 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19602762 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.166099779 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185411706 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134738655 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20313638 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13084651 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.199899965 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148159629 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.1467939 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.174076963 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.225968409 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128866058 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208972031 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.160153017 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210940898 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201560928 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129209258 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.212264174 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127867919 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.119750419 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191390062 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.196404843 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.16325112 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.217770432 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205846041 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.163706508 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.193648354 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148679089 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198081339 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.182984997 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185420452 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.139580437 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.200619036 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196771271 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.124240977 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.123970378 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.155383577 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138731753 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129407031 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.164822748 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180080104 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192852562 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.203952817 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.166398887 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165796962 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.191380406 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.153583043 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159219262 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.204081256 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138701131 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.218621075 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19060248 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208020073 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.168956267 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163422032 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.120118047 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155848405 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.133663675 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.188431959 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137729713 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135388297 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171514963 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.219398359 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168125883 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177774345 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216366971 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165067326 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.23039108 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.120128901 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.189365364 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165040384 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197232218 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.184541559 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134533602 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.187028825 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.193824198 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170790318 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222448689 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168327582 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208562106 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190722703 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.195441937 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130097693 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.173696661 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160947702 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168565726 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.160485961 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.171158349 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131763676 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146802021 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.167120818 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.140236536 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215814552 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143075817 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204830233 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.182895791 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171996566 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.154262177 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143420732 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.201825727 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146349602 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.10599475 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19461425 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21985316 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151655671 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179152137 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170690689 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129085358 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.345870934 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.211936346 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171784635 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.165576189 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139286066 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.200935812 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.157602624 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188416325 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.184211392 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170775734 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20762216 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.201004208 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.140221249 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159109996 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.147331422 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.177243376 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.140262084 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.183674324 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.162828793 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.170261066 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18778931 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166414166 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.170620078 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206301107 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.145050946 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.177336016 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140231811 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.257322743 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169772265 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201302107 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.19218143 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.164246306 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211689833 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.122842067 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12683111 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.161062265 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.184144533 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157969854 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17743887 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.191857129 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209746561 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176148894 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191389031 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141088369 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.155201152 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.167119624 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14779076 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213483682 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162956955 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.137346031 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214418954 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.12814506 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129308362 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.190825471 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.317068642 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146885561 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197075249 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.10828631 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.307784492 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.13076641 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132707784 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.187767221 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167922461 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.162323836 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.185077542 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202203738 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140295409 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.185841184 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135818243 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.204809521 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183119355 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196242206 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20500874 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.145230145 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.190648736 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157606908 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200897374 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146821264 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.175133948 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15948961 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.224925808 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.174837655 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.160304561 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169624315 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199102257 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.171035396 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204301694 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139140321 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211749602 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128242441 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198010584 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138842547 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123959845 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189666025 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.192846511 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130470775 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202014875 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172815056 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160965928 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.127730399 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145620139 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195144238 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140041249 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.158893393 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213355245 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.129768184 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182047192 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240582108 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129227486 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.199242341 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141450584 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.160319408 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138976543 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173888526 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132733287 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.174497545 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204315834 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.129516963 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20444462 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165872458 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194345011 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152890338 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.17154383 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.264160073 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.1582141 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191364341 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.18090148 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195493582 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.177741023 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176143208 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.20286505 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148574787 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196652836 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174651714 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.221216869 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196316722 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.168657413 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130016042 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172499951 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137644704 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.163628676 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.151224974 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197616544 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142172861 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.135897763 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.198360722 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143635545 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.177120703 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141624747 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.231514138 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.149727261 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.218523553 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.215979847 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138817822 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207885038 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176131934 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158074838 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.163747475 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202178457 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.143667557 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183553866 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.134798371 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.13572691 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244924503 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.124419418 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190068785 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204459985 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.17119678 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201591799 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.134299494 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208776645 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141995471 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206644182 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.127407086 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.15028968 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.199874819 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134334942 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.156061125 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.171952655 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189247388 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.164737155 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.172535491 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.178024014 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.224451299 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.123752535 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134453458 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.316491707 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192668146 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195524384 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.162269107 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137777204 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145260492 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18944932 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.166993391 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201900138 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.129901034 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157717898 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.146875124 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.186361141 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.139366149 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.196908915 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182364328 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185834058 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185059623 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.132942139 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.284473027 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140762086 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.202172859 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.117647482 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.159413822 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142286119 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134467648 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172413953 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.207956729 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217511605 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.194303145 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.146505456 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.166001874 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.127626138 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131002164 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.191900616 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150749526 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199932237 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146606752 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.133441257 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141529885 seconds)
  done (took 85.360876363 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.23130944 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.17955868 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.238889449 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.24733028 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.280283493 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.340418343 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.252659558 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.296608945 seconds)
  done (took 3.194368475 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.125092498 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.161492532 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.143849211 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.145529819 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.11150853 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.501166823 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.163209711 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.122053958 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.16156187 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.154866504 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.139138302 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.576886408 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.123320513 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.147308517 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.12409574 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.136647045 seconds)
  done (took 4.159165458 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.091108724 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.551413013 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.188157322 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.313241213 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.238816714 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.21673138 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.815761588 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.204450117 seconds)
  done (took 12.740041554 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.174973158 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.169830433 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.467177653 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.328036023 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.217713063 seconds)
  done (took 2.488497489 seconds)
done (took 128.688020616 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.127020624 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.684786483 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.130327543 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.155416486 seconds)
  done (took 2.213886726 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.198716573 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.092570295 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.123969897 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.092970792 seconds)
  done (took 1.635120185 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.384878561 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.097951472 seconds)
  done (took 1.640442912 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.147607796 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.13469327 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.16654603 seconds)
  done (took 1.585599473 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.136490173 seconds)
  done (took 1.265928268 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.120151907 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.117176311 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.279708921 seconds)
  done (took 1.647901273 seconds)
done (took 11.121201754 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.121194374 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.934088602 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.436200173 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.13490445 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.712906079 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.430449599 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.423389505 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.178611503 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.173646108 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.111211086 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.162437833 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.691249001 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.437956805 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.883215366 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.391648543 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.910725522 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.695378627 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.113920396 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.146032813 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.113116683 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.400308658 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.137184751 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.11388566 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.113894377 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.690342765 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.452912608 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.112479169 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.919836126 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.111890723 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.115000434 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.400356445 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.141814046 seconds)
  done (took 21.024184659 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.115854273 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.168742112 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.149765857 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.114431564 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.114472242 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.1415799 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.122812772 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.124136726 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.204706383 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.111186068 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.162450852 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.11212578 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.117595491 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.11034589 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.166137213 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.112360364 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.1150851 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.143797067 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.118251156 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.114461784 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.164508846 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.110283565 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.113868505 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.143892607 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.111912476 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.134359192 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.14280461 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.124228457 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.111565453 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.146374321 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.115896093 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.111678373 seconds)
  done (took 5.304658454 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.161141454 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.178464482 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.149661721 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.150987944 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.190389232 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.113987742 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.20025995 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.179951645 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.205866481 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.113116351 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.1339233 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.139781457 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.153842366 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.112757281 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.166480551 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.112912323 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.115222248 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.142498895 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.120978642 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.114597015 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.163806051 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.111854682 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.114164725 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.143248923 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.112792255 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.135126618 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.142052747 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.125048715 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.111601668 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.145876192 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.118796306 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.113145103 seconds)
  done (took 5.633343183 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.127812668 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.127863329 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.135584603 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.166363751 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.123573004 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.126128086 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.157868891 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.123120521 seconds)
  done (took 2.230704659 seconds)
done (took 35.329792469 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.135169363 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.128629941 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.133430724 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.158660841 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.276215604 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.119005785 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.129353377 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.150416649 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.128145469 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.134613353 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.110335395 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.153845855 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.133026652 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.123230868 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.276014997 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.160416988 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.249324465 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.278122141 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.153759225 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.127873558 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.121419162 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.281855702 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.154677893 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.12165176 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.278432124 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.11576855 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.26779332 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.125372582 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.122367556 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.14439241 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.280279271 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.123417493 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.120465958 seconds)
  done (took 6.648769914 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.226794543 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.156430625 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.123028785 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.12018682 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.123119512 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.152557958 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.233504605 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.152758758 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.121246573 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.12161264 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.15147212 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.214254184 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.158807509 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.116970764 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.123459444 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.112106225 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.263989776 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.123649483 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.144660644 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.095582179 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.116027058 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.119307596 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.281211188 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.116606512 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.153322004 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.121733878 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.122236459 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.157099064 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.123593116 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.123101013 seconds)
  done (took 5.622711895 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.126353404 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.134512616 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.137928021 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.2187968 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.151001966 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.164290848 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.140108701 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.133991849 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.173379499 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.115607985 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.130566162 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.181928522 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.131714439 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.124869907 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.143338327 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.132698523 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.129399336 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.14417526 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.12430762 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.132912782 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.134430613 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.162043263 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.138624008 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.121660076 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.143771488 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.122873747 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.124596152 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.155750317 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.123729744 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.129146745 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.146134875 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.117585545 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.116306905 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.17986748 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.115421899 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.1268164 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.167445508 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.128386463 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.127671006 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.178856754 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.11779088 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.115244408 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.172678749 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.170172259 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.115519256 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.159006452 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.116810467 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.129195628 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.14192359 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.133241195 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.157552368 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.144249138 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.135738098 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.11331192 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.142310447 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.123786024 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.114170215 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.117388113 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.160124363 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.119080757 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.135580742 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.152866147 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.126503212 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.115923844 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.155469643 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.113784035 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.114152898 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.117410053 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.17266056 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.122354099 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.15115108 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.144545224 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.128681195 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.126833246 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.157083875 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.127836392 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.113084769 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.155414821 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.125851841 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.119628039 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.15837079 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.11765505 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.117356523 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.129671287 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.166999907 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.129487427 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.126691189 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.159316559 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.117797129 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.11496229 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.163369333 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.116703696 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.118428952 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.158545523 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.115511829 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.118576436 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.157138205 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.125342202 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.112281111 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.139983291 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.148429783 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.114921054 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.140316187 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.148867348 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.119755676 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.123248365 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.187019157 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.114864768 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.124355605 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.157947466 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.115318141 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.122013312 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.146483974 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.115168174 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.130276468 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.129690648 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.152829904 seconds)
  done (took 17.129883513 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.376495627 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.366223986 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.212925386 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.412979686 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.126599992 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.2846044 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.396850969 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.370565955 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.115288892 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.148442132 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.206866571 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.329420475 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.114991316 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.177901559 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.372184041 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.449429615 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.143731077 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.185376314 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.151084927 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.127840463 seconds)
  done (took 6.23447079 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.13516842 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.149738542 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.167371357 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.143981254 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.125134736 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.162574869 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.116296337 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.13762049 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.157494458 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.124667205 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.117682842 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.161943117 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.12831785 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.132072211 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.160188705 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.149649685 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.124030213 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.148993282 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.137597823 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.119022753 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.134126324 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.140569544 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.12448821 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.167664659 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.133754207 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.125446257 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.143420681 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.120464338 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.121707729 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.12229616 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.150352752 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.13416372 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.121592193 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.136248303 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.127612525 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.129746429 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.15213828 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.118672097 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.119737997 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.11828405 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.160056992 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.129099449 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.122581048 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.129469894 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.134795579 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.112155615 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.128787737 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.157455704 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.108226227 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.135162775 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.156717345 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.129630596 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.122423509 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.135127935 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.15170317 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.133187165 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.124373593 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.160197027 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.120772559 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.112779853 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.143435562 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.12028468 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.123990371 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.159914749 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.128253452 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.135065858 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.162613897 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.114827289 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.119356551 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.147707123 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.119153862 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.129733292 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.16588151 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.125500441 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.122750345 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.124891562 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.154995309 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.096370651 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.124386657 seconds)
  done (took 11.81303947 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.140357126 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.12558886 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.132278376 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.180925814 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.12824968 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.120353557 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.156333473 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.135263227 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.128635075 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.16458022 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.129410027 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.128432848 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.167517308 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.126940839 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.124679807 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.161530871 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.129019114 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.153542504 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.159278801 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.143172748 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.129101023 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.151183042 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.128501746 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.12620525 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.175260116 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.127168937 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.141224331 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.159939241 seconds)
  done (took 5.159265713 seconds)
done (took 53.752472852 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.302312354 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.514494482 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.282020798 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.274660952 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.299290144 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.323980209 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.279567909 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.279613881 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.912686456 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.249838737 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.274241234 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.276049707 seconds)
done (took 29.453271354 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.613377223 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.417913028 seconds)
    (2/2) benchmarking "String"...
    done (took 1.599471592 seconds)
  done (took 4.205109657 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.267305713 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.264397169 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.516895742 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.268250622 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.266232603 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.265377619 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.267449835 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.272468744 seconds)
  done (took 16.294056381 seconds)
done (took 26.56079811 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.313845124 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.829014023 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.552778329 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.254156891 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.272521904 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.268927186 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.274019016 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.330907702 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.280607577 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.252590526 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.741244012 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.615526901 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.287607733 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.741954933 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.247507331 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.306131333 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.288105473 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.731678546 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.275021097 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.249963653 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.263396665 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.254833663 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.288137116 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.28471862 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.284361995 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.275094046 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.274802513 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.273840094 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.637302558 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.296785273 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.31374308 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.275252895 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.276269029 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.27068362 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.294978411 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.288675212 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.601641081 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.280325873 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.256335356 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.286869033 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.607289995 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.291004173 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.269694597 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.285155858 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.255422333 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.339212112 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.260767291 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.394760522 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.316139419 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.289618702 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.336423772 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.708954635 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.276315875 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.279595913 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.290044678 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.651208485 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.275114733 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.3955442 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.306706058 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.28671911 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.27351152 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.273640884 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.304211782 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.290216862 seconds)
  done (took 149.822493458 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.275739575 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.268890007 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.273449027 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.285659529 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.274954123 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.275927678 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.274022894 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.273539229 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.274307098 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.302506946 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.270434421 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.27224113 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.275634759 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.257860255 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.285716157 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.305760883 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.27960241 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.276901844 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.286051668 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.278888987 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.279089113 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.273123451 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.274429892 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.272615245 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.278888497 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.289370997 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.283827801 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.28847919 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.286582654 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.273571755 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.297719757 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.283960397 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.962291474 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.149194792 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.289454158 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.281363057 seconds)
  done (took 82.811669214 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.274584976 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.273237994 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.278269626 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.313608891 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.277663717 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.887684511 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.916348739 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.349137613 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.562599691 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.931256982 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.646545896 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.28206107 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.374878105 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.289787517 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.278054086 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.370443807 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.303108274 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.27572903 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.279382779 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.924483005 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.297180717 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.327441874 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.461841755 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.294436464 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.316011661 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.675200244 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.281081088 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.315999265 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.625405889 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.332270664 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.278706093 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.703268674 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.873225217 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.396402619 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.2808578 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.309336674 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.28122223 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.568370145 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.280868066 seconds)
    (40/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.28191188 seconds)
    (41/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.279557727 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.2817033 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.283183065 seconds)
    (44/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.278624851 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.003721566 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.279308995 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.899006294 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.279138765 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.295145004 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.282116675 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.282570612 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.46849585 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.049735432 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.277404964 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.283437464 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.286118591 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.282941171 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.285645221 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.316531164 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.363369573 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 4.227438473 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.277241883 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.2868134 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.317036674 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.286585371 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.865916173 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.282273962 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.696483144 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.342216139 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.442949277 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.926443029 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.282507736 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.381102854 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.400292882 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.281483571 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.281159863 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.286178514 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.287101453 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.400188478 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.2843367 seconds)
    (81/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.284729043 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 6.017259202 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.466153469 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.300200064 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.953808299 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.385371327 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.282683705 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.72896575 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.288326984 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.286317206 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.145237506 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.384325466 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.283372452 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.285984256 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.282606356 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 6.014942499 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.930404634 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.676318665 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.286785187 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.924304794 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.2871864 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 5.201749114 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.93271408 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.049011302 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.283878533 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.402005791 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.467396429 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.299943583 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.287911196 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.95871706 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.289983865 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.341014696 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.284966865 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.683454193 seconds)
  done (took 390.324852746 seconds)
done (took 624.137795395 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.268736139 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.266636522 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.265873337 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.272193126 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.267982732 seconds)
  done (took 12.527471912 seconds)
done (took 13.714871148 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.49903262 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.501605018 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.35568113 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.501437674 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.324233149 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.51269981 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.479210845 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.30425985 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.408715646 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.375969318 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.406735642 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.344323766 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.323409899 seconds)
  done (took 19.522923902 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.597741355 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.299379368 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.357645344 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.576915711 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.336380847 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.596831442 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.640171447 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.301299037 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.4757968 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.311907919 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.311367144 seconds)
  done (took 18.992644593 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.604376437 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.300895028 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.377335468 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.578305805 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.336935023 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.597288739 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.650007157 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.304191988 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.47622322 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.31397105 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.311795876 seconds)
  done (took 19.038268696 seconds)
done (took 58.74593014 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.332277634 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.400287888 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.326727904 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.310884218 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.311190823 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.310234847 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.311181835 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.309255802 seconds)
  done (took 11.798436582 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.309141997 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.307358767 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.308729939 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.309358331 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.309478758 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.309494008 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.308241717 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.309957868 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.308926682 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.311024776 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.308080924 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.308815258 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.309582361 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.308804816 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.31183313 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.311523374 seconds)
  done (took 22.139897059 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.311400987 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.309583548 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.308313697 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.308985964 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.310953863 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.311019365 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.311404256 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.309230601 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.310075297 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.307457497 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.31275041 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.308315665 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.306682772 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.308817209 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.31200498 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.31333028 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.308859985 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.306836034 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.314123228 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.311999702 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.311659168 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.309438856 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.309726103 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.309874954 seconds)
  done (took 32.631344023 seconds)
done (took 67.763433531 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.306587341 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.294314579 seconds)
  done (took 5.789105535 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.368869401 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.366367145 seconds)
  done (took 3.927826296 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.311652347 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.311579253 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.312776425 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.312546795 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.313086483 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.312296958 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.311697699 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.310784482 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.311206576 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.307573296 seconds)
  done (took 14.307723428 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.310464901 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.31087552 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.309312851 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.310288851 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.311707011 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.311912608 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.309757752 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.313416936 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.309710038 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.311596509 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.313655327 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.312199443 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.311505323 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.311132084 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.312538521 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.310699516 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.310987701 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.308629832 seconds)
  done (took 24.793126475 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.326144056 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.329999061 seconds)
  done (took 3.849468598 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.440786974 seconds)
    (2/7) benchmarking "second"...
    done (took 1.355149616 seconds)
    (3/7) benchmarking "month"...
    done (took 1.419978482 seconds)
    (4/7) benchmarking "year"...
    done (took 1.410124678 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.355591488 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.33447029 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.353014829 seconds)
  done (took 10.856695266 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.300933922 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.605833575 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.803976519 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.465981617 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.289997759 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.321157423 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.277942649 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.3225579 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.320248708 seconds)
  done (took 14.902647636 seconds)
done (took 79.620097254 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.296695572 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.327543504 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.322896145 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.312811555 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.635008901 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.357525074 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.298564557 seconds)
done (took 16.75526483 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.280722653 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.291546544 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.296740753 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.309446631 seconds)
  done (took 10.372767396 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.297094402 seconds)
    (2/2) benchmarking "read"...
    done (took 1.623418371 seconds)
  done (took 5.110894119 seconds)
done (took 16.687143272 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.317672438 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.312178443 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.31545794 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.311568121 seconds)
    (5/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.311430714 seconds)
    (6/24) benchmarking ("one", "Float64")...
    done (took 1.312518038 seconds)
    (7/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.317667531 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 1.317454996 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.316235896 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.311599411 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.313819591 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.316620492 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.316781093 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.318573444 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.310436442 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.318612729 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.318830675 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.315368228 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.314171424 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.315800271 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.313267381 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.315288887 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.312421416 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.312884674 seconds)
  done (took 32.748538277 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.316694918 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.318307244 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.315687257 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.313693236 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.316278171 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.318353329 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.317380503 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.318507253 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.317915368 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.31685098 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.318624628 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.316678904 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.318170441 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.314164392 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.316490255 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.321786107 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.317998573 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.320135841 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.318789052 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.319088263 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.318797338 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.31888948 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.318323055 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.318072606 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.312443016 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.318930342 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.319413663 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.317151345 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.320751683 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.318094238 seconds)
  done (took 40.725044265 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.322606063 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.32182296 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.31806801 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.321433019 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.319375097 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.318045782 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.31668207 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.318173064 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.320217387 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.317617247 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.321704894 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.314001814 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.319102723 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.319944151 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.317836267 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.321201771 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.319745921 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.319500985 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.320159431 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.319062803 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.32283649 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.316139374 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.317392038 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.321493746 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.320430456 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.319567275 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.315910135 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.31686077 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.319728315 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.322680667 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.319616411 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.317766965 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.321500496 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.31721877 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.31919313 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.31699433 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.324523447 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.32127782 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.316298397 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.316078947 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.315567184 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.313862889 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.319825946 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.314769963 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.313440155 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.318682881 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.317999437 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.322027582 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.319655606 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.315745494 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.315428592 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.31915499 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.317898401 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.317803438 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.318220898 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.317796194 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.320653578 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.321814234 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.318217044 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.318276423 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.318951249 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.320950059 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.321166679 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.318548571 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.317011079 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.315819674 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.320309263 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.317521039 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.325702333 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.324974617 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.32064629 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.321885722 seconds)
  done (took 96.17156789 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.319621372 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.321796344 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.317024625 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.32245869 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.319227125 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.32048531 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.319075358 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.319710934 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.317088771 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.323292379 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.318658867 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.322680379 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.324416513 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.321968137 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.323413911 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.320607842 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.318248061 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.325029812 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.321301713 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.324954666 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.320310793 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.321385764 seconds)
  done (took 30.263189414 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.325398596 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.32594894 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.323851863 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.329509114 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.329300272 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.328600868 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.326557469 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.326472956 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.323708663 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.323085299 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.324281751 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.32403936 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.327629558 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.325089575 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.324429401 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.327283982 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.320507073 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.324912403 seconds)
  done (took 25.063536466 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.325681005 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.324778205 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.324007911 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.327377779 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.326848821 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.329763168 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.326207318 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.3279268 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.326225834 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.324634357 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.32670966 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.326882737 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.325830553 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.325855038 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.328183901 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.325118713 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.32525005 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.328845088 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.326963118 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.329978077 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.325872393 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.327558307 seconds)
  done (took 30.388486787 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.324855449 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.325654663 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.328068465 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.326911572 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.325941587 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.328479836 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.329540745 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.327519968 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.328521156 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.327897957 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.324410359 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.329873443 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.32867789 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.326897846 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.326952814 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.327064044 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.32757029 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.327445536 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.327411207 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.326482433 seconds)
  done (took 27.751356003 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.328331179 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.330282154 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.33079664 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.330710454 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.329732941 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.329711669 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.33012709 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.327423037 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.331011802 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.32847521 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.332810115 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.326456312 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.33152986 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.325822058 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.329893192 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.328846557 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.332347417 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.331525347 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.3308067 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.329807249 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.333031509 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.331726208 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.332233587 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.332468472 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.32911661 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.330723499 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.332314504 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.33456279 seconds)
  done (took 38.459174139 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.331465211 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.334494134 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.331685664 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.33283585 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.333161392 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.332282071 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.336069552 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.332456359 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.333413278 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.333438261 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.330976589 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.332985391 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.333529194 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.334519836 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.333713486 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.332202639 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.331303739 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.336490435 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.334863894 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.331692958 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.336325923 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.331805133 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.333638127 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.330575357 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.334180013 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.333772539 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.333771701 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.332049807 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.333695898 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.333835322 seconds)
  done (took 41.20531091 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.353579105 seconds)
    (2/2) benchmarking "in"...
    done (took 1.352961218 seconds)
  done (took 3.914319187 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.334367677 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.335679069 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.333242678 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.337766075 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.334954732 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.333085839 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.335514737 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.335293284 seconds)
  done (took 11.889845911 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.325310364 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.335421542 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.334974832 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.335326158 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.336232108 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.328153811 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.334672348 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.33876722 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.32986774 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.330295219 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.335612539 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.336064672 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.329813853 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.329308696 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.329703599 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.331745801 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.337381397 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.336116847 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.334501419 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.33607099 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.33303641 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.329907936 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.332468127 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.337405697 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.329272431 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.339142016 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.337061953 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.341025783 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.329546597 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.33568457 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.332244373 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.338816321 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.337356951 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.337654556 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.340388954 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.336635356 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.340106792 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.339288738 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.33834723 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.344176243 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.341688621 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.338661069 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.331882691 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.336582583 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.336741458 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.342136372 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.337719809 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.338349411 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.330829017 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.335190006 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.34725965 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.33311461 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.342228556 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.338615748 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.338486244 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.3426833 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.34472999 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.336101982 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.340595782 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.344099845 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.353440571 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.349446044 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.340114779 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.34434342 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.342244573 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.360141548 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.346409175 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.350247077 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.344001629 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.340982189 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.341605851 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.353837946 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.353667212 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.348326657 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.340965851 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.343616545 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.332433479 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.344686797 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.342357964 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.344321835 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.349452265 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.343216441 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.343778954 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.354777895 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.334708956 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.34770486 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.341583274 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.341181029 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.332445259 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.347030435 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.351653811 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.342657139 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.334409589 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.336717395 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.337561796 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.345404031 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.334354868 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.338490315 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.347619483 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.343611355 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.342826789 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.338411332 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.345195809 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.349579297 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.343172182 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.344162784 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.350821476 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.336938354 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.347773083 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.352916515 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.34407781 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.33699799 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.34442158 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.349680072 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.338696499 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.347557967 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.350076108 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.343621057 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.348970329 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.345587525 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.347609169 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.368619092 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.352323974 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.343479611 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.342610953 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.356566999 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.345120828 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.342995556 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.350521488 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.345938806 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.347193683 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.342002164 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.349743308 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.340207701 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.349606881 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.339670055 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.350255179 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.344744117 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.347441143 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.342086273 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.3463058 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.342751564 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.346478583 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.349301823 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.353297104 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.34403679 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.355767993 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.34499095 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.34224602 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.349305242 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.35167745 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.347024311 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.339582449 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.349552544 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.336744487 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.347470933 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.33965449 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.349216207 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.349026279 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.347575777 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.345669083 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.336780118 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.344945637 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.352401904 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.345388738 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.346969704 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.349193504 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.345578824 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.345219273 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.339827834 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.349898449 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.339112722 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.346269823 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.353666809 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.348467676 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.345941865 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.346089984 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.354327309 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.347009299 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.348428342 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.343611038 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.350636431 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.35494098 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.350575152 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.357526951 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.347951206 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.348402229 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.340365478 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.343954437 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.349955396 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.341498569 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.358055238 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.354483955 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.361882252 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.343851284 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.352337161 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.340435338 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.352477892 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.349247482 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.357519704 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.350343847 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.351051862 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.343246999 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.353580851 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.3453247 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.354450617 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.340050641 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.354090289 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.353364519 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.350877574 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.349109489 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.341705378 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.347359986 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.354780469 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.351104759 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.350487961 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.344370252 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.354529261 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.34163343 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.345951656 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.353793922 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.348634003 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.350867542 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.357413405 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.348585096 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.35510076 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.349780307 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.34495425 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.355457972 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.348528364 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.349214794 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.354433694 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.35181759 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.346902717 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.356258464 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.353227361 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.344765884 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.350847335 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.361237953 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.352441922 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.347417607 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.359893209 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.353583183 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.349887915 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.352882624 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.34547348 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.35636515 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.353904931 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.361494234 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.345773055 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.355571542 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.34547979 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.35655732 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.347197119 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.354910385 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.353364967 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.357312529 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.360430652 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.353093539 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.347222879 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.357746575 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.351019456 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.355011688 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.347698244 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.360883634 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.355130066 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.354070962 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.353355771 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.350139156 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.357625029 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.347706223 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.3573746 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.34670736 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.365849041 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.374591121 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.357384428 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.360412242 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.358720634 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.354442106 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.356844707 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.350921906 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.349290307 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.353392207 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.349510556 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.349513231 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.358553816 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.349911201 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.359986606 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.354174877 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.356860254 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.359864704 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.35652706 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.348497669 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.356202565 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.354314048 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.355075075 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.348135497 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.356578479 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.35072299 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.358271356 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.356960928 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.35109314 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.362808024 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.361449705 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.354634318 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.353221034 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.353405745 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.350140145 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.352692731 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.363763555 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.350933174 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.364672513 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.352139527 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.360464388 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.353143177 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.364335909 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.368208316 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.352899577 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.367718277 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.357222578 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.349030717 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.350050132 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.358148945 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.362227779 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.367686443 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.352343657 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.362254458 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.358214293 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.358642583 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.36068815 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.359866224 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.359385894 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.359542647 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.365725374 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.362927018 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.354165309 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.361190205 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.369809498 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.360234899 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.360534094 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.348729917 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.361304144 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.370311083 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.356038844 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.358087707 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.353413862 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.36196593 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.357917028 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.359965969 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.359187247 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.360024125 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.364611011 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.365451815 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.362545574 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.360499454 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.364965968 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.370382901 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.365982873 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.370019506 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.356266204 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.365632974 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.361996275 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.355407725 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.356561515 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.355558148 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.365915351 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.352206638 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.36804656 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.36138543 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.358990924 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.363930773 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.367779324 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.352461356 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.36453432 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.385176647 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.352814974 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.367257491 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.361498467 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.35343525 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.36597667 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.362470102 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.353913515 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.356057006 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.363078687 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.367094603 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.35575379 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.365694412 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.355035562 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.365381309 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.364173516 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.363697668 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.362708342 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.364164196 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.356078128 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.365720271 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.363758942 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.375837353 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.358931911 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.360859841 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.358492693 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.371800739 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.375721288 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.35782264 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.370356792 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.364009395 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.358125008 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.361172827 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.369426662 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.356907969 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.363485366 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.357423546 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.361294445 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.364319228 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.36553899 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.366277468 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.367640695 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.355142204 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.359738411 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.366931246 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.363617871 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.36395011 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.362700435 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.373942517 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.357549038 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.358660715 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.367172193 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.359881666 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.36975624 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.360201156 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.366232543 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.362524276 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.36834542 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.365625824 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.366825953 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.356356935 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.362143169 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.371075546 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.371083902 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.370253127 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.366061781 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.368446784 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.361168437 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.364802498 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.368409898 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.36129739 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.361130106 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.373034859 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.362997376 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.361195626 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.361571771 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.369391709 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.371261541 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.371860265 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.359345918 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.375082733 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.377982988 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.374585324 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.358701852 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.36424695 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.362582931 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.366533489 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.367778812 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.361380293 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.375404187 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.375330081 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.373122832 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.36669716 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.372257732 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.359257864 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.370221676 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.37422497 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.36397245 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.374970464 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.365178115 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.377160984 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.370262236 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.369388833 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.361588418 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.361723956 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.366929539 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.369736061 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.370099179 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.36867135 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.372887147 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.367326125 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.374970589 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.36880956 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.370594957 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.369763025 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.359498123 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.372071881 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.361013292 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.372398773 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.374134413 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.363079441 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.375973174 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.369544972 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.366868802 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.370609723 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.380885477 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.370339498 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.364189048 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.36928321 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.376104344 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.382473511 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.370151658 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.363220693 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.368122321 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.374333896 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.37242903 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.373024636 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.362964795 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.384112022 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.386041981 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.362769998 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.367037163 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.373311606 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.383970229 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.370278175 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.371836076 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.368328078 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.370122222 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.377670852 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.373055244 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.374613764 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.377240055 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.366767011 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.37625865 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.365383687 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.370056549 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.376227791 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.38495621 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.371823382 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.367344493 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.388044844 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.387159711 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.373716721 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.400626151 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.383784868 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.373179361 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.378434744 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.363813332 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.377925201 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.369196319 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.381405429 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.373431218 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.373285946 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.374367996 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.365976607 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.375579619 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.382855794 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.38531286 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.37381502 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.366257429 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.370170848 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.376001547 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.372655833 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.374748016 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.375577071 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.370387429 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.373715798 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.367831465 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.387273014 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.395119813 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.379287939 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.374397455 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.374976477 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.379058707 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.38009047 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.377121445 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.38276967 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.37650642 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.375583136 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.372165651 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.382710214 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.377857629 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.371481749 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.370909841 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.371275234 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.380659913 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.385637026 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.403321565 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.380216869 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.381227502 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.377642852 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.376641525 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.37140886 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.377407727 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.378589687 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.370064162 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.373530001 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.380737699 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.379975946 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.375828437 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.372541573 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.386231198 seconds)
  done (took 809.956470525 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.378308537 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.378401507 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.378279009 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.376140476 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.377228563 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.377082592 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.377333255 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.374575909 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.377097038 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.377063834 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.375821551 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.377118964 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.377742 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.376829339 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.379392993 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.37886997 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.37719337 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.3815577 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.377019174 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.378305781 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.378402961 seconds)
  done (took 30.173790367 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.378387887 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.37876563 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.378651865 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.378216546 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.379097808 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.381200517 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.378710368 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.378137385 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.378875119 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.379427722 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.378257977 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.37950778 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.378769557 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.379120415 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.379922507 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.380372279 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.380807327 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.382899021 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.38038524 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.380666949 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.379664066 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.379770776 seconds)
  done (took 31.594918612 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.379941917 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.380172178 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.372324125 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.385750472 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.381658465 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.381399717 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.379629295 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.381268408 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.380614763 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.37250261 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.371187082 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.374954716 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.378115106 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.389082257 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.376539764 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.387417614 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.380588608 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.381531128 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.381735449 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.381902444 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.382379829 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.393645854 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.382543506 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.373223175 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.383449821 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.379266232 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.384381875 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.381478628 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.374673761 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.385658076 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.382803561 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.375768261 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.385624499 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.385727456 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.376361316 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.385982271 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.382971169 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.383727723 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.382444362 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.385135358 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.40558142 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.381629844 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.388031587 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.396432996 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.382789593 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.377717766 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.389647343 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.383752889 seconds)
  done (took 67.599483248 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.382909187 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.3829926 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.385056788 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.383379934 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.382832568 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.381893905 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.383649651 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.382547149 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.381615108 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.381801874 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.382840075 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.384459467 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.382270593 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.383601813 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.384318043 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.384373285 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.383172887 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.383954365 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.384116868 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.383099775 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.385896671 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.386362671 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.385598917 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.384758501 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.384375192 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.386696843 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.385262186 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.384263202 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.386391966 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.384434094 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.384853348 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.385395863 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.384794721 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.385346117 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.383251898 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.385363446 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.389094553 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.384890472 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.386158403 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.38625749 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.384945926 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.38829694 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.384912918 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.386224461 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.387237269 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.386008742 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.385932462 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.385508492 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.387595224 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.387812581 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.388557386 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.386508962 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.38721639 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.38711781 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.388253147 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.389667953 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.386700087 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.386467873 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.386068553 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.388221982 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.386482096 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.386630683 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.390620594 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.388675591 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.388912474 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.386494365 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.387753754 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.387929967 seconds)
  done (took 95.469048112 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.388924906 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.387680409 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.389984013 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.388535088 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.390318873 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.389146936 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.38959653 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.386786259 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.390313643 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.388486627 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.390111145 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.38904715 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.386903624 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.388550811 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.388930058 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.3904816 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.389366321 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.386427502 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.38777625 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.390322937 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.389370592 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.390725203 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.389257956 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.38910446 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.390077978 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.388552233 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.389580119 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.391363561 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.391004301 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.388284789 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.390138556 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.388803744 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.389983284 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.391317908 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.390466389 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.390230184 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.389258869 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.39027727 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.388388309 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.389675658 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.390094997 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.390255434 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.391383703 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.391079178 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.390975289 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.391049598 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.391663987 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.391881868 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.389029621 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.392233532 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.391003564 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.391673064 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.393002878 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.390793554 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.39306741 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.39134346 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.393427743 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.391441214 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.392245389 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.393155561 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.389241317 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.391488617 seconds)
  done (took 87.442569293 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.394638932 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.3944199 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.390706263 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.390199522 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.390139246 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.391995041 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.395120455 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.393629023 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.394763646 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.392173831 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.393476354 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.394179463 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.393332706 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.394875497 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.393224624 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.393456456 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.393633534 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.390803677 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.393302224 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.394338486 seconds)
  done (took 29.119928181 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.393977912 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.394446472 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.39650758 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.39160753 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.394972272 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.394664341 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.392606839 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.393079401 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.395203589 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.394411868 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.395244718 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.392207335 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.396846408 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.394643807 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.395347869 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.395269509 seconds)
  done (took 23.569780783 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.395472299 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.397158794 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.393289406 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.394610118 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.392702811 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.394268626 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.3942867 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.39320646 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.395632373 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.394861924 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.396885214 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.396895135 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.395702752 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.395863126 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.394026008 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.398896631 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.395580966 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.394891848 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.394306444 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.397201629 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.398443137 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.393475826 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.394210342 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.394826075 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.394975412 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.392942884 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.397803548 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.393541117 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.395442438 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.397180439 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.396229431 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.392573201 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.397431905 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.394955985 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.394169671 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.394535613 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.393297187 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.394972479 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.395788314 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.395489748 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.39541573 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.395206778 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.398552546 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.392549609 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.397564888 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.394392072 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.396773554 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.395137421 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.397754704 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.397445299 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.395851869 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.393792747 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.394896296 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.396742453 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.395268839 seconds)
  done (took 78.005997223 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.397247256 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.395551366 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.391738763 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.400098659 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.396733303 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.395305265 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.394730521 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.400239875 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.393335662 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.393039886 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.397024534 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.397960172 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.396514679 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.397273686 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.398009304 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.39811148 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.397944409 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.401876085 seconds)
  done (took 26.403891085 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.398809477 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.396912751 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.39702496 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.397526742 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.398184323 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.39687344 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.397110916 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.400538168 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.400203806 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.396377362 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.395869868 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.400764301 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.398627814 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.397836216 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.394765143 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.394092428 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.399583218 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.401640801 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.3970719 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.401264637 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.397386144 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.394959992 seconds)
  done (took 32.017451379 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.389283976 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.38710595 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.389718693 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.404614367 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.407443352 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.389482702 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.387197814 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.38953297 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.412006826 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.442107094 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.432316666 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.407201764 seconds)
  done (took 18.101201847 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.401616093 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.399707336 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.399603166 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.400636262 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.401441936 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.397826033 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.401252084 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.397559532 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.398868411 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.398995318 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.397612799 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.39751297 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.401930993 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.398220287 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.397869304 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.401828522 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.398375973 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.403811267 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.397173615 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.400651702 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.396487981 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.400806375 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.401216012 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.403086803 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.396071218 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.400212618 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.40020472 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.396663439 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.397818361 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.395505486 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.400140106 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.395673881 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.401597979 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.401220904 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.394824591 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.401049796 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.398532176 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.40132254 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.400941735 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.398671415 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.401526996 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.400132161 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.397789988 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.402177544 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.40273988 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.399393752 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.400428473 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.394699107 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.399694438 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.400544376 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.399093337 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.403663958 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.404897274 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.400043723 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.401757364 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.40235812 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.403479038 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.400453745 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.402253212 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.396121072 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.405181994 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.407046482 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.400089084 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.405501679 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.405742161 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.40474638 seconds)
  done (took 93.6845751 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.402455686 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.399843531 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.400806017 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.404021231 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.404225692 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.400231073 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.406814343 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.40267048 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.403542423 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.401258626 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.402491368 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.401113492 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.402999933 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.402070587 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.398153912 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.399050033 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.401924639 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.398812934 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.401739565 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.402074004 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.403459609 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.403305275 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.399764249 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.400941382 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.409647497 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.399802627 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.402509684 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.402506272 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.401072373 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.403318176 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.402696295 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.40069787 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.403137293 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.40488591 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.404012098 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.403410814 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.405481186 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.403149364 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.399304352 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.403612509 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.397678613 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.404932573 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.401078918 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.402809792 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.39873382 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.402047656 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.404735508 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.404259233 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.407335856 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.401628798 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.404064358 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.401978326 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.404390037 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.403117233 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.401110408 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.405941815 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.402205668 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.40406518 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.402821465 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.405284487 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.406597581 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.40347372 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.40534713 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.400842755 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.400677361 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.402340506 seconds)
  done (took 93.84254552 seconds)
done (took 1896.760275585 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.565206063 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.538108767 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.393219696 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.402048852 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.392221187 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.38496803 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.419506927 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.390753889 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.397572204 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.39481695 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.400010009 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.638672001 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.455244014 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.391325083 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.397043377 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.493117001 seconds)
  done (took 28.318953087 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.424441206 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.403237054 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.536082792 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.402170971 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.427140953 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.620396819 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.466115561 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.399341146 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.597566703 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.420423996 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.397792895 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.422525105 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.397709319 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.395328694 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.421821915 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.617509271 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.692150222 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.403116079 seconds)
  done (took 30.712866063 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.93316742 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.426694285 seconds)
  done (took 5.629512323 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.423243391 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.403677384 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.401142551 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.395813673 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.390029161 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.389080532 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.397951564 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.396568368 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.401478309 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.561699751 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.400552953 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.414557404 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.39579678 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.400421358 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.410063526 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.451128386 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.551631194 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.408513094 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.408558523 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.404187351 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.40007934 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.492241648 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.445965874 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.415215047 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.544868981 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.397826907 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.407808581 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.401335026 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.526549391 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.410141344 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.401829576 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.400804213 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.401935179 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.40666418 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.974808964 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.405719031 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.428782482 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.41265376 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.410389867 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.5589422 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.40643801 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.409760637 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.397541608 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.980314527 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.52132559 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.545812125 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.410822394 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.405647558 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.407413193 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.47715953 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.405056429 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.406407116 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.471048982 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.248453306 seconds)
  done (took 89.431408828 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.435372434 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.393976409 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.586480568 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.425153118 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.398634397 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.402017278 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.41784644 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.754038265 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.449540508 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.397378775 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.755045515 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.081691274 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.401825624 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.454112078 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.421002542 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.447977928 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.397517851 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.395647316 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.403491121 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.398523086 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.015798404 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.414092009 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.397108116 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.600381584 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.439038271 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.012742561 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.403885217 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.395485338 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.425182953 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.396483193 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.063845905 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.415863925 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.437705989 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.396804761 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.730648106 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.865003574 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.81474042 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.406982938 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.410458998 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.399624371 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.434634089 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.005855412 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.835972527 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.404339085 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.400416938 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.005633976 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.397549553 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.40940665 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.408085936 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.680762924 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.401819268 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.405699846 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.403953322 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.424174648 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.406170392 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.470786562 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.469884175 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.012894452 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.39714385 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.403046758 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.418486783 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.401082753 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.415515339 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.39575733 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.402229746 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.838346437 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.588793014 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.411631949 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.847378885 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.036401431 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.404800672 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.133791288 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.40328019 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.430092338 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.520872858 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.403952974 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.408207784 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.004007074 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.411264433 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.407657734 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.816965308 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.402328952 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.760444527 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.429258711 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.407876413 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.044888242 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.411016478 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.452089589 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.40684782 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.410765425 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.40622442 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.424019418 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.733814679 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.479104516 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.402183747 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.408144261 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.407040469 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.401728349 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.40930287 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.407313066 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.112275217 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.405166451 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.407339009 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.4106073 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.404369261 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.423469096 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.405702747 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.403190966 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.695985457 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.403668271 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.411880345 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.408970074 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.408237697 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.420861269 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.60750397 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.405368566 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.77810183 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.409392537 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.418159046 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.412711936 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.404819692 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.424083655 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.407189072 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.43093541 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.386806023 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.731074904 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.431196566 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.425367852 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.407499982 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.407581649 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.415208246 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.412312823 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.455629776 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.407067006 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.271057465 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.424036966 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.432344536 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.403061492 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.421820934 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.405002081 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.417873503 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.411972526 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.728301521 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.739209701 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.598087163 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.411268166 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.407446092 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.282260012 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.449756263 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.597520312 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.438448493 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.408943288 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.714435349 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.601066213 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.411539901 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.407391989 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.416952901 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.694236253 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.412019123 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.745147842 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.077978386 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.406057968 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.409988241 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.267486421 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.18485632 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.416372992 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.41569303 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.759768932 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.433817231 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.407010819 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.409152264 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.410519849 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.408183314 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.414946433 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.409606068 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.408159956 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.408925904 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.483970142 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.609690673 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.4345781 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.41201794 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.013270262 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.442459202 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.409285805 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.414449213 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.406696694 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.409368221 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.461694718 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.417711644 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.442954691 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.412517887 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.416126535 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.043584025 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.412258742 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.416419159 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.614826375 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.220712379 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.408842008 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.413742886 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.411541773 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.466188032 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.045763682 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.413792595 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.785950852 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.420147064 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.455130617 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.428741855 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.42026945 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.044886033 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.406964022 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.41194065 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.211593719 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.415002523 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.192459286 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.410602706 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.405110498 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.130877981 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.407661361 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.417348519 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.422747794 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.414190346 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.726025396 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.411751447 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.44758509 seconds)
  done (took 517.269111804 seconds)
done (took 672.635060304 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.414647867 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.410496325 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.418456158 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.415972709 seconds)
  done (took 10.948719491 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.429587218 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.42189978 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.426512756 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.420135199 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.430368848 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.418050132 seconds)
  done (took 9.838964697 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.415531832 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.409833172 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.42120477 seconds)
  done (took 8.539813529 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.681846277 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.445776635 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.839983262 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.426691558 seconds)
  done (took 9.689852049 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.430968172 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.431602108 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.430804821 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.423450512 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.433742822 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.435095104 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.434761825 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.431534271 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.431375549 seconds)
  done (took 14.17402865 seconds)
done (took 54.488889812 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.394384899 seconds)
    (2/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.473398122 seconds)
    (3/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.397581353 seconds)
    (4/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.498249641 seconds)
    (5/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.503546286 seconds)
    (6/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.47370521 seconds)
    (7/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.459731824 seconds)
    (8/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.512430781 seconds)
    (9/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.45753438 seconds)
    (10/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.44681596 seconds)
    (11/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.462881418 seconds)
    (12/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.634610371 seconds)
    (13/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.51447173 seconds)
    (14/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.398663922 seconds)
    (15/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.82515446 seconds)
    (16/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.452299051 seconds)
    (17/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.725623258 seconds)
    (18/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.55083579 seconds)
    (19/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.565788859 seconds)
    (20/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.422644408 seconds)
    (21/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.500400902 seconds)
    (22/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.394157288 seconds)
    (23/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.458270327 seconds)
    (24/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.455837319 seconds)
    (25/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.393625615 seconds)
    (26/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.132032854 seconds)
    (27/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.396071929 seconds)
    (28/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.513022468 seconds)
    (29/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.503740153 seconds)
    (30/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.426595286 seconds)
    (31/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.560204349 seconds)
    (32/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.536312059 seconds)
    (33/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.413606752 seconds)
    (34/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.514056495 seconds)
    (35/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.503113934 seconds)
    (36/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.412780861 seconds)
    (37/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.910106042 seconds)
    (38/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.492403007 seconds)
    (39/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.407977846 seconds)
    (40/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.754572258 seconds)
    (41/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.451631266 seconds)
    (42/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.492728293 seconds)
    (43/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.597278585 seconds)
    (44/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.695122148 seconds)
    (45/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.770849354 seconds)
    (46/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.600164823 seconds)
    (47/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.464339763 seconds)
    (48/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.459715611 seconds)
    (49/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.53585539 seconds)
    (50/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.395702699 seconds)
    (51/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.410308425 seconds)
    (52/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.423429471 seconds)
    (53/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.882799406 seconds)
    (54/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.696808781 seconds)
    (55/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.545212062 seconds)
    (56/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.49483533 seconds)
    (57/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.690584257 seconds)
    (58/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.640365917 seconds)
    (59/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 1.958634871 seconds)
    (60/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.413508763 seconds)
    (61/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.888197258 seconds)
    (62/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.855699212 seconds)
    (63/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.513033164 seconds)
    (64/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.616824657 seconds)
    (65/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.511837429 seconds)
    (66/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.614648013 seconds)
    (67/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.587705527 seconds)
    (68/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.406612937 seconds)
    (69/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.492470632 seconds)
    (70/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.457685736 seconds)
    (71/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.396270199 seconds)
    (72/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.590415195 seconds)
    (73/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.49531907 seconds)
    (74/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.513540031 seconds)
    (75/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.435711968 seconds)
    (76/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.828082771 seconds)
    (77/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 1.956127669 seconds)
    (78/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.410527641 seconds)
    (79/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.505657964 seconds)
    (80/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.654981692 seconds)
    (81/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.457668851 seconds)
    (82/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.551834842 seconds)
    (83/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.505607906 seconds)
    (84/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.556099752 seconds)
    (85/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.541934621 seconds)
    (86/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.403716946 seconds)
    (87/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 1.900968885 seconds)
    (88/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.599324318 seconds)
    (89/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.560532302 seconds)
    (90/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.401415412 seconds)
    (91/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.473015791 seconds)
    (92/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.608813417 seconds)
    (93/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.830388178 seconds)
    (94/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.427954153 seconds)
    (95/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.764974215 seconds)
    (96/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.503360847 seconds)
    (97/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.523238811 seconds)
    (98/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.591479823 seconds)
    (99/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.624128304 seconds)
    (100/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.647541778 seconds)
    (101/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.644447409 seconds)
    (102/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.018665519 seconds)
    (103/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.514967266 seconds)
    (104/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.77478777 seconds)
    (105/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.86098006 seconds)
    (106/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.550237949 seconds)
    (107/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.406462422 seconds)
    (108/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.497799198 seconds)
    (109/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.401535827 seconds)
    (110/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.591088767 seconds)
    (111/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.594545429 seconds)
    (112/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.679575948 seconds)
    (113/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.399170585 seconds)
    (114/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.404625677 seconds)
    (115/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.778628884 seconds)
    (116/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.552441102 seconds)
    (117/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.464610965 seconds)
    (118/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.608300107 seconds)
    (119/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.514350609 seconds)
    (120/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.69184889 seconds)
    (121/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.530458102 seconds)
    (122/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.543199565 seconds)
    (123/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.452580904 seconds)
    (124/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.398243146 seconds)
    (125/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.668315861 seconds)
    (126/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.718000483 seconds)
    (127/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.405645851 seconds)
    (128/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.40422236 seconds)
    (129/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.461577895 seconds)
    (130/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.597389323 seconds)
    (131/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.13450032 seconds)
    (132/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.580887082 seconds)
    (133/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.515150354 seconds)
    (134/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.458011608 seconds)
    (135/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.397770338 seconds)
    (136/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.716492662 seconds)
    (137/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.650991911 seconds)
    (138/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.559349049 seconds)
    (139/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.40649817 seconds)
    (140/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 1.931893556 seconds)
    (141/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.71890256 seconds)
    (142/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.493643912 seconds)
    (143/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.80497989 seconds)
    (144/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.405465799 seconds)
    (145/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.446516086 seconds)
    (146/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.716294183 seconds)
    (147/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.578077985 seconds)
    (148/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.599593436 seconds)
    (149/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.52244277 seconds)
    (150/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.411363834 seconds)
    (151/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.415006228 seconds)
    (152/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.599254478 seconds)
    (153/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.531065202 seconds)
    (154/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.411225098 seconds)
    (155/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.547613432 seconds)
    (156/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.534854707 seconds)
    (157/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.72748438 seconds)
    (158/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.629085246 seconds)
    (159/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.535463275 seconds)
    (160/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.499454334 seconds)
    (161/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.407585386 seconds)
    (162/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.485681937 seconds)
    (163/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.426411221 seconds)
    (164/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.483665492 seconds)
    (165/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.462869422 seconds)
    (166/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.637814604 seconds)
    (167/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.538937929 seconds)
    (168/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.51542062 seconds)
    (169/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.684164034 seconds)
    (170/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.771411387 seconds)
    (171/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.406134838 seconds)
    (172/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.544598851 seconds)
    (173/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.434751668 seconds)
    (174/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.506831953 seconds)
    (175/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.567430878 seconds)
    (176/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.468807172 seconds)
    (177/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.577780985 seconds)
    (178/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.470734105 seconds)
    (179/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.626422346 seconds)
    (180/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 1.889154059 seconds)
    (181/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.556252933 seconds)
    (182/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 1.88778104 seconds)
    (183/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.821854039 seconds)
    (184/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.576359723 seconds)
    (185/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.407531053 seconds)
    (186/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.472886154 seconds)
    (187/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.598381937 seconds)
    (188/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.412618625 seconds)
    (189/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.609836501 seconds)
    (190/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 1.92780801 seconds)
    (191/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.430905084 seconds)
    (192/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.578327058 seconds)
  done (took 349.780300948 seconds)
done (took 351.081464843 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.464068365 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.524075749 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.436507224 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.441328393 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.44056291 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.448129187 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.460150469 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.440947014 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.452977011 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.452336493 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.431140997 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.448323171 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.456402725 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.452950146 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.471986669 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.441379998 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.435961083 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.450861621 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.45545316 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.458969599 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.445545352 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.439522461 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.471890141 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.437759801 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.450296792 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.450198123 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.450918513 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.431388937 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.443194319 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.452876241 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.435183411 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.4455738 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.45966936 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.456501672 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.445180936 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.4540211 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.446220182 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.530192571 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.466902496 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.457063105 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.450148507 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.461248084 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.447551251 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.447071955 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.449886861 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.473385864 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.449518099 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.460268418 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.4406763 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.449766559 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.468274584 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.45614581 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.451908099 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.453202146 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.438312216 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.459260132 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.452289715 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.462878028 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.450899476 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.445904785 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.480336021 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.460441009 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.456849864 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.453251657 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.449983143 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.460963393 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.452170064 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.46250237 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.451528538 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.448431193 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.449416184 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.454626182 seconds)
done (took 113.997921585 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.569968053 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.43964251 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.599672784 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.451559867 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.617827853 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.566516659 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.447793901 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.455803087 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.450744361 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.246979038 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.453224671 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.456732118 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.442167295 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.455253417 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.562314205 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.455837274 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.452320705 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.141835798 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.456619111 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.583323386 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.442992594 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.45550378 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.454905246 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.253369487 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.441894386 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.441022482 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.583851593 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.45464681 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.147303935 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.438053859 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.438280444 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.150591217 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.57928912 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.473580133 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.468312127 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.462159066 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.619360248 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.458566836 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.574556013 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.577842488 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.608731168 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.49153139 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.436992334 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.444663076 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.45636371 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.459441467 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.45811107 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.482379984 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.444631862 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.458530341 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.146769401 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.467149709 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.467798385 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.457835627 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.456589864 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.480044054 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.456764709 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.455514564 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.582706596 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.455508136 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.574959949 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.25040463 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.250566258 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.454848163 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.444887405 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.453834816 seconds)
  done (took 116.131543191 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.515281009 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.52503 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.571397842 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.448910249 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.494946784 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.574566738 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.451393386 seconds)
  done (took 11.897646801 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.45279017 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.454600242 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.495571864 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.494425955 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.454231825 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.613675191 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.449680095 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.456423764 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.453432713 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.496459355 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.457236609 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.456490683 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.467169742 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.445724065 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.495381127 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.458301817 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.567882507 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.450024075 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.452674445 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.599574861 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.454664771 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.468744665 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.492741272 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.462281041 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.457311456 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.45311431 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.208433624 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.457445445 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.454918204 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.455559751 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.453971396 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.516130128 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.456289267 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.440326673 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.456309986 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.562117568 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.455892725 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.452388343 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.45317178 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.449614182 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.458655913 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.458974249 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.452397793 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.451927752 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.455007578 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.47242768 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.458550163 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.457006681 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.457084529 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.457197581 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.498687603 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.456296816 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.453914686 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.457094997 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.505696794 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.46157984 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.457586558 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.45800483 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.456325308 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.459389437 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.598910151 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.491261644 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.457207829 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.498302956 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.456879085 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.459566415 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.460545506 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.460806464 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.539494553 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.453243804 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.495875127 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.459197058 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.632154066 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.473758604 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.463013734 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.446333333 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.446693827 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.459948725 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.445151397 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.455175172 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.454529115 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.449327836 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.458189257 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.460481836 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.455533598 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.612517455 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.557182142 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.460787701 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.464008067 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.456524365 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.459764356 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.497467413 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.456218556 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.454718866 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.499765734 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.56396174 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.495412163 seconds)
  done (took 149.206424684 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.459386531 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.463464675 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.451623905 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.477718369 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.45041956 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.450642195 seconds)
  done (took 10.066714369 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.455454961 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.467550676 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.455071809 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.458473664 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.45993494 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.457682171 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.461662918 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.449546176 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.460548768 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.460266733 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.461511343 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.462976881 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.45815664 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.458937528 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.466249182 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.45920436 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.458505504 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.457671227 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.457224238 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.460576769 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.444517507 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.459295371 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.460397084 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.453526104 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.461786754 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.462472778 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.478222904 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.458970051 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.461445846 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.458347822 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.466585983 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.46381149 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.451236904 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.459294669 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.46804535 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.451754162 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.467947171 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.462623931 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.459072652 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.45528716 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.463243543 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.460710261 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.459347604 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.465467009 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.453977848 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.463516319 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.463371516 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.474572001 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.462959161 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.46033493 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.463091173 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.464194447 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.466767725 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.463057062 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.456709863 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.460718726 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.471910305 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.465136825 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.466818508 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.458172266 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.469309399 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.465536094 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.458482633 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.469701631 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.465602561 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.462406516 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.459641141 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.475746466 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.46706708 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.467929192 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.465989052 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.463279925 seconds)
  done (took 107.5646997 seconds)
done (took 396.183425884 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 3.008216673 seconds)
  done (took 4.334018461 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.712370994 seconds)
  done (took 4.04308027 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 26.279833357 seconds)
  done (took 27.612050573 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.474595187 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.456003409 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.490833527 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.457562906 seconds)
  done (took 11.205178954 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 3.029219298 seconds)
  done (took 4.355967046 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.473714437 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.464771945 seconds)
  done (took 6.260334532 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.872580173 seconds)
  done (took 4.201582071 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 3.323766872 seconds)
  done (took 4.652991442 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.458520823 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.458610689 seconds)
  done (took 6.249548935 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.425399319 seconds)
  done (took 3.749132445 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 22.262410745 seconds)
  done (took 23.585739174 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.470954777 seconds)
  done (took 3.799140267 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.480261593 seconds)
  done (took 3.801224861 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.805691936 seconds)
  done (took 7.128064249 seconds)
done (took 116.308975186 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.445635389 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.451648349 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.452339646 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.450768294 seconds)
  done (took 11.123749584 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.524441295 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.528328916 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.535797234 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.520383733 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.5218438 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.528444267 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.490099829 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.487886208 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.520493873 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.513851326 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.532428332 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.520448828 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.52984762 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.488926193 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.51324588 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.531530399 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.519970157 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.533592673 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.487607193 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.52354594 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.464814578 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.523653025 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.517291151 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.46605276 seconds)
  done (took 37.651114152 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.971059655 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.524264042 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.609721218 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.506887193 seconds)
  done (took 7.937459496 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.567920536 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.56994491 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.584809413 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.624598 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.669693033 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.584213846 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.490014773 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.486928738 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.471569173 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.570753929 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.647625242 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.568205245 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.785460053 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.465148575 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.782052884 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.464386313 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.465236076 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.569417745 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.617151354 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.647116165 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.465684393 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.567878372 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.573115145 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.566873667 seconds)
  done (took 39.133329999 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.470683086 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.481898004 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.463560583 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.483126326 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.465380034 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.467733102 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.466237303 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.474485349 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.465011369 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.464250414 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.469236707 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.481655896 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.467902456 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.468327598 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.473662015 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.470592401 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.468998082 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.473151955 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.47738961 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.468230689 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.468271442 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.475211561 seconds)
  done (took 33.691110482 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.452067288 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.45034645 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.802747336 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.708818339 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.452582781 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.4553456 seconds)
  done (took 14.651731269 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.545580169 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.714364506 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.464103548 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.915709166 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.982511883 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.461756756 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.459383239 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.759127812 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.155130568 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.156015955 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.535986018 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.542371246 seconds)
  done (took 22.022552657 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.544051726 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.463447858 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.465214945 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.55005764 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.470203488 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.464406281 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.528629249 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.025274059 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.473810211 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.740067765 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.477159906 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.554064274 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.716138496 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.465828923 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.490864407 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.440757939 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.698353234 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.035646015 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.467382347 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.465627393 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.526011948 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.479540838 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.471204246 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.726405265 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.472008291 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.46608534 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.729763357 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.464163559 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.819128922 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.796060971 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.797375949 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.473551403 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.7410232 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.973539157 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.576166256 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.716079792 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.47301236 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.473945757 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.464676208 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.47435274 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.473699004 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.496324637 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.791457296 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.474453499 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.464477764 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.470349468 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.032297453 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.478860699 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.469117271 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.468346663 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.794905189 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.55832945 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.472654538 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.466296466 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.478950543 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.473487307 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.472991389 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.597399623 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.116617203 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.477393737 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.478254945 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.472623357 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.482276644 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.486634786 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.264257145 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.481272482 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.475312138 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.472827284 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.468596022 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.467597746 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.49713615 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.46736197 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.488405741 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.469608169 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.447006704 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.492802298 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.47540255 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.09350844 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.488561754 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.47568507 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.694103982 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.469221752 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.469537419 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.469083567 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.469964149 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.384995236 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.483907883 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.437924713 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.509928804 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.033856957 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.72782343 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.495913805 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.502052845 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.693286752 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.4380324 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.468602074 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.486677699 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.477440397 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.493147067 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.029698455 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.475177233 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.475769631 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.722176443 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.682942434 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.472666784 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.455782443 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.046554747 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.489123219 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.499458627 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.473026725 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.73153981 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.230354732 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.811078267 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.477427709 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.531452163 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.471298491 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.458686365 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.494276084 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.483472062 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.493137263 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.815040365 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.446717118 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.499700181 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.547736282 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.474108471 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.475224009 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.475853297 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.482189558 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.475632498 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.707450043 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.482503925 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.804894274 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.477097918 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.469882827 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.474800667 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.479908745 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.482865514 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.70006149 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.488287878 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.749620751 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.47637821 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.478284566 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.473953529 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.69485373 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.494441744 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.487696416 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.820373606 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.473510146 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.48012453 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.81036368 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.51740336 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.590582401 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.514099487 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.476283437 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.728517065 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.48319942 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.482183929 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.479541717 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.484183315 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.479852354 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.486197657 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.479259285 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.24187883 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.479240182 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.489231 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.487767321 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.493688772 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.560371962 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.485555505 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.730508788 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.502729471 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.486974629 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.493874752 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.483852765 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.701733174 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.807493958 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.489114285 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.664547134 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.044244708 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.24227983 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.50100881 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.48373653 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.481233345 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.481850746 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.48422728 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.485954868 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.481766851 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.736423462 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.822018584 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.483899383 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.251379369 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.490474196 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.486522986 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.494290199 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.807300656 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.495705912 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.487278919 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.49045395 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.487267061 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.523164302 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.813597352 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.708510586 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.500258989 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.481099884 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 2.001470251 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.491466254 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.480950006 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.484479276 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.509266396 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.480064274 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.099900783 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.82390576 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.472261525 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.81461409 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.486542037 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.508035938 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.477690299 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.480104505 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.502677504 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.517172166 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.497804216 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.737972813 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.488706747 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.492072951 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.122894262 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.433049748 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.181557547 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.508098197 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.499068786 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.486843727 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.051722795 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.488621703 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.487121514 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.783112418 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.054069339 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.487249615 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.049837915 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.491583924 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.402002524 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.812525356 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.718261915 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.506567902 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.48926504 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.81956815 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.704285898 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.511265262 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.501810042 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.489527337 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.454230438 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.146935535 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.487633634 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.670081516 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.052203117 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.486987292 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.491973334 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.529438431 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.489792638 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.973457385 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.48785913 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.483286237 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.492270317 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.490654479 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.156260162 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.498118994 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.488797427 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.27670998 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.499458848 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.05842331 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.492100397 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.741049397 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.820795275 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.793940472 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.493894511 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.495723188 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.735681218 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.81718803 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.492235525 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.492658344 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.190977045 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.409829732 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.494735331 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.48892486 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.461987221 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.507858561 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.847540858 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.495911023 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.504773444 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.492320373 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.488339689 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.491547024 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.488574168 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.497172419 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.479871038 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.065534967 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.509999935 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.502240326 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.510682359 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.491750335 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.7438075 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.504926803 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.255896396 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.721389473 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.485295889 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.526718143 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.491907345 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.493951831 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.464289305 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.487403554 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.490791699 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.51707413 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.716191979 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.505973798 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.46065191 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.556378512 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.70672185 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.489052675 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.490539394 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.762671819 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.494964687 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.498295886 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.441433982 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.523388774 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.490406725 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.492481473 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.486269752 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.530416645 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.565273245 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.746863122 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.827163312 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.825133889 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.984388975 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.494064571 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.495751419 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.509989095 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.575167497 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.488717405 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.509002678 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.495300553 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.250744282 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.493589175 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.268456768 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.829854742 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.497366388 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.492837277 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.493409107 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.73101693 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.494040691 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.768111729 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.489691508 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.490294668 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.516671072 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.498719669 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.511141792 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.70850312 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.767461168 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.489105205 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.505942251 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.498275247 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.494412892 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.827073331 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.710279615 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.076087781 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.124765351 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.49150028 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.502502213 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.0657871 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.772818953 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.49340405 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.491227865 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.49358704 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.507543224 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.496047661 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.503244172 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.501053917 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.721410742 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.82744789 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.017109225 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.831464396 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.521091588 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.372262626 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.490520439 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.745399846 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.329250024 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.748057638 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.269112039 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.399028263 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.753222632 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.566553978 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.753986842 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.49659423 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.731019335 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.502835262 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.497663445 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.48705232 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.4951931 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.494277067 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.826164061 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.268685908 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.75465206 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.497800027 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.503297733 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.529084141 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.750648907 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.719904439 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.414228023 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.723421689 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.831158622 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.503686001 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.495445949 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.25118878 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.830232231 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.502137957 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.497490146 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.764252019 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.499799015 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.536643967 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.365239696 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.493501555 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.127899244 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.70919235 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.519905942 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.508075824 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.399820667 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.278774249 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.514577202 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.080751454 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.494951924 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.49680687 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.7997848 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.50126556 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.497421078 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.789072327 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.503498202 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.516317597 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.762535736 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.262088984 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.457726514 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.519675998 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.503063889 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.507101814 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.49619636 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.565567996 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.504653319 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.511886484 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.97194144 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.505210475 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.502492432 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.508065435 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.513059733 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.519198071 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.503047382 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.497389241 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.50627678 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.488650861 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.480311918 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.506957099 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.631240872 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.118145483 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.502765853 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.119361687 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.834064722 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.748832273 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.515312249 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.4716792 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.504789853 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.497218663 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.499568455 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.500783393 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.521844778 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.139345863 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.514086393 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.837975887 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.513307877 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.716469434 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.716780993 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.51001697 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.766490195 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.524980867 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.527348165 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.468586152 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.502301784 seconds)
  done (took 1042.711979679 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.5442888 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.569353797 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.508056153 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.532274922 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.581734684 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.598190949 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.598013776 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.565045459 seconds)
  done (took 21.859134849 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.500634936 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.509677706 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.509163649 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.504817655 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.519696305 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 2.087949864 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.503902666 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.506320551 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.533112308 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.508526601 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.500047037 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.252528253 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.511307501 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.508173042 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.508092058 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.509011692 seconds)
  done (took 34.844795104 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.77757777 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.718864576 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.395520669 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.514297776 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.552472755 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.511079262 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.918944645 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.52754474 seconds)
  done (took 29.282391819 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.516627328 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.516486856 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.517636542 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.516139105 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.519981186 seconds)
  done (took 8.950240601 seconds)
done (took 1305.189958967 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.518266689 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.517372654 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.516683475 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.517221493 seconds)
  done (took 7.431922297 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.483011114 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.483687437 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.484656281 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.499312573 seconds)
  done (took 10.314958668 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.95837252 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.166925102 seconds)
  done (took 5.489691404 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.513754667 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.277718622 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.254317609 seconds)
  done (took 8.411403075 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.818711804 seconds)
  done (took 3.183462596 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.000196215 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.037816057 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.507023639 seconds)
  done (took 7.912653375 seconds)
done (took 44.114823252 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.521103833 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.271231724 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.662891531 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.51239083 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.66442324 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.673197878 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.777150073 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.505321456 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.506627993 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.507040508 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.507978012 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.66275621 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.763022825 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.274671887 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.761361805 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.276371083 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.667185559 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.524309479 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.514845614 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.520327129 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.774134148 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.519008432 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.514690475 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.504689671 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.668863631 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.653604857 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.513655327 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.267171968 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.509855034 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.518674729 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.652764142 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.518704617 seconds)
  done (took 87.053267717 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.520214856 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.501767123 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.52053389 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.509671223 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.502968218 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.509967478 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.507862336 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.502019116 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.514654426 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.502901647 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.503023654 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.503017519 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.504763785 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.501992781 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.50298161 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.503240847 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.504293053 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.503238698 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.52336953 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.52123551 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.504018532 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.503875773 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.520828421 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.520136176 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.532921359 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.504861534 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.503078543 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.504251067 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.503701929 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.511779771 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.50477038 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.505575886 seconds)
  done (took 81.651350047 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.508970607 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.510488274 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.50481622 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.509991557 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.516293838 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.509775418 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.512210592 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.509014739 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.514679335 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.50822102 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.50426186 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.506942432 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.523063392 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.505765823 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.504811292 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.506516057 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.517329187 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.50952902 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.515676102 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.511336897 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.506916283 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.517929595 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.518688781 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.503988508 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.530318333 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.526781261 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.518654641 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.507345852 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.506637183 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.524883138 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.51279705 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.530899704 seconds)
  done (took 81.786206931 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.755110052 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.526751052 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.529907049 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.520931062 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.531937201 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.524975239 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.523046339 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.78606463 seconds)
  done (took 16.069429329 seconds)
done (took 267.933983944 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.521303778 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.522189127 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.55029871 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.520447672 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.542255578 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.549526189 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.769673487 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.552553596 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.761086898 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.522455798 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.540495417 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.52673227 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.52189543 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.676375795 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.516327539 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.525201784 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.534752187 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.527155651 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.523171581 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.81032445 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.55263628 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.515726077 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.522225221 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.527969527 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.51422913 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.603543727 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.59965137 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.690302557 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.653633802 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.596792677 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 2.51338348 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.539308777 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.525197199 seconds)
  done (took 71.238048862 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.518244071 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.5292033 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.528306221 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.528797053 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.528659297 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.53061865 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.519796362 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.529135371 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.532411559 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.530167246 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.529876419 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.532147273 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.530212538 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.528696622 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.530255247 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.504085712 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.519661363 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.531136958 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.518121051 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.504700388 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.530405858 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.532777012 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.529201316 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.532290184 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.532879733 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.531994644 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.531069808 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.532643352 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.532550667 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.530745646 seconds)
  done (took 47.196159448 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.531399412 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.537508275 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.529134645 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.530101508 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.522273578 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.527286383 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.901167865 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.534282766 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.526238072 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.528979961 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.517353488 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.55636623 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.581465357 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.535115545 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.528128985 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.532994335 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.534033729 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.52446389 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.518475071 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.542772946 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.911125521 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.537102225 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.903919952 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.542186525 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.526673872 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.528258213 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.531154311 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.533091011 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.527191778 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.519715558 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.548702215 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.89307679 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.518440973 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.538900671 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.52941525 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.535552893 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.535522402 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.516444084 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.527425753 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.526683585 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.901059724 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.526979028 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.538852745 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.522332797 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.527850785 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.536898891 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.522149198 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.522180396 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.846129642 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.53312563 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.526114402 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.530062379 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.535755628 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.529214664 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.846399873 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.528995005 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.527509548 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.52210047 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.532716371 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.903672862 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.537636636 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.525458336 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.520535585 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.532251535 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.523233931 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.551489891 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.542151858 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.530824812 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.520906459 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.552835395 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.521764821 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.531194999 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.540227607 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.522629283 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.522076374 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.547799611 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.532701133 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.523212963 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.525524104 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.903870164 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.533402995 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.521349513 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.918184586 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.535622579 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.54417012 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.540986609 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.537429703 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.613335067 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.900308086 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.519736381 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.545618984 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.523997753 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.910973547 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.540283381 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.531912539 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.523818552 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.542128182 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.539670481 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.54057599 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.525046584 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.53227104 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.543933533 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.523562904 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.535480869 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.910784582 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.538608911 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.537588592 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.533635698 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.617130187 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.538904726 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.543979332 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.532982179 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.92015167 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.537497947 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.540408333 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.525395431 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.531450581 seconds)
  done (took 223.950319235 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.529501661 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.524052172 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.525191814 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.520862862 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.524484699 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.533532026 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.526688449 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.525669358 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.532845489 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.524112187 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.527899875 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.535706995 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.534244591 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.525411488 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.527862217 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.52730434 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.525288819 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.528908505 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.530839768 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.52628374 seconds)
  done (took 47.940157915 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.541953712 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.27473582 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.224612885 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.54486548 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.541502896 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.534601553 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.604525844 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.547532106 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.544622656 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.931569206 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.756874574 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.545750956 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.542586326 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.542319012 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.223668098 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.51644534 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.932466311 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.277680862 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.54594937 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.274398724 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.517803164 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.543142773 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.533538552 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.276899414 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.94519618 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.910342714 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.610303479 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.281057286 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.544938551 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.542767707 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.280765558 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.546628774 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.533868378 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.264193226 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.547587128 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.559667067 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.543023703 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.609474348 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.611609242 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.916453909 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.279024939 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.922136197 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.556803956 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.731053903 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.546438816 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.515614976 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.289917444 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.547356242 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.517645408 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.545818301 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.553533024 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.239236896 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.538407232 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.239790777 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.545672629 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.544072763 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.28032027 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.243427318 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.231013484 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.761945733 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.538406247 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.911345971 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.547416986 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.29340066 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.547702886 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.545895683 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.545892843 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.761965795 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.285673796 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.914319184 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.937668411 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.939900219 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.549998648 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.623303676 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.544736297 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.937517198 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.620339187 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.991580738 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.939475249 seconds)
  done (took 142.558973425 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.848560154 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.66197491 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.021870251 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.220072388 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.145910874 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.692783242 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.673250866 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.820454156 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.544996759 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.650316289 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.381764408 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.655407792 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.411331878 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.620350072 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.657743865 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.679399534 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.040303403 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.540332461 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.307039439 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.356741379 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.542832498 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.660753199 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 2.371115913 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.966467489 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.558532117 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.36466358 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.535278645 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.158543218 seconds)
  done (took 59.476789411 seconds)
done (took 593.737238052 seconds)
SAVING RESULT...
DONE!
