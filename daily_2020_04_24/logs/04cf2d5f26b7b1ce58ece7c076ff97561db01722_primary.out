cset: moving following pidspec: 16546
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.322987454 seconds)
loading group "string"... done (took 0.627276186 seconds)
loading group "linalg"... done (took 7.708913065 seconds)
loading group "parallel"... done (took 0.161074225 seconds)
loading group "find"... done (took 1.145321392 seconds)
loading group "tuple"... done (took 1.869334021 seconds)
loading group "dates"... done (took 1.246869171 seconds)
loading group "micro"... done (took 0.235853006 seconds)
loading group "io"... done (took 0.915415501 seconds)
loading group "scalar"... done (took 38.340125395 seconds)
loading group "sparse"... done (took 12.139942989 seconds)
loading group "broadcast"... done (took 0.98679347 seconds)
loading group "union"... done (took 13.14853212 seconds)
loading group "simd"... done (took 4.591606109 seconds)
loading group "random"... done (took 8.952958359 seconds)
loading group "problem"... done (took 1.788904148 seconds)
loading group "array"... done (took 20.128815377 seconds)
loading group "misc"... done (took 1.770582326 seconds)
loading group "sort"... done (took 3.131976637 seconds)
loading group "collection"... done (took 17.253840544 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.542267962 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.131182278 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.14252536 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.131324501 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.157683631 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.124353891 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.135483095 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.093438769 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.863792729 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.157710119 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.121657218 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.424366317 seconds)
done (took 5.407103902 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.180038751 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.087806089 seconds)
    (2/2) benchmarking "String"...
    done (took 0.088938984 seconds)
  done (took 1.232109189 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.073440266 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.133516278 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.074770452 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.075574376 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.074875186 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.074708886 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.074002158 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.077614559 seconds)
  done (took 1.640340192 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.078541019 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.075025842 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.073524707 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.076540484 seconds)
  done (took 1.361055748 seconds)
done (took 5.552859303 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.787434479 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.217652012 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.191114599 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.407107315 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.137225757 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.184243199 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.649939888 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.334807772 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.197493855 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.084617105 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.117124712 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.358237449 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.129167359 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.647770516 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.08306884 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.095789991 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.143812456 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.44929703 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.073548387 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.088155959 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.094642341 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.135711854 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.092009236 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.081822266 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.15563751 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.073739577 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.141726925 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.087759018 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.071795877 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.223013103 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.180994249 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.663518044 seconds)
  done (took 10.468898323 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.104388409 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.107366721 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.076785568 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.133693707 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.107998909 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.078811932 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.083449448 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.075429129 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.102080046 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.138704172 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.101084685 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.114327091 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.074466576 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.077260404 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.091205967 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.218403501 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.089037008 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.089867579 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.078404513 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.086418966 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.116882432 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.087213343 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.088170926 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.088873842 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.137824304 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.189447817 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.105130871 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.103525831 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.074756699 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.090461705 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.122409946 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.13633987 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.074307584 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.074044934 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.134431073 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.102878959 seconds)
  done (took 4.848712556 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.998965921 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.149607076 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.09676443 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.141740837 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.072937671 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.11664839 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.076461112 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.089177231 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.218606235 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.391437189 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.59858662 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.139272452 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.118883139 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.111541896 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.075933107 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.076633745 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.075039536 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.503987082 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.108266338 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.116389844 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.08866309 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.078136998 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.077620989 seconds)
    (23/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.073706191 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.074759073 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.071553992 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.076076674 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.122175013 seconds)
    (28/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.081779705 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.311423073 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.129804549 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.076534275 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.952383821 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.173539557 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.073570823 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.247261169 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.175997208 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.09754899 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.150257379 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.076930177 seconds)
    (40/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.073854862 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.169499536 seconds)
    (42/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.073322867 seconds)
    (43/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.078413579 seconds)
    (44/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.073848867 seconds)
    (45/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.092586882 seconds)
    (46/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.111170011 seconds)
    (47/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.128779275 seconds)
    (48/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.073260638 seconds)
    (49/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.074518651 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.177752579 seconds)
    (51/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.073319831 seconds)
    (52/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.087219762 seconds)
    (53/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.170245941 seconds)
    (54/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.161794278 seconds)
    (55/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.102547465 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.073257443 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.298077104 seconds)
    (58/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.097829728 seconds)
    (59/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.077842567 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.073336418 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.180318321 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.131172151 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.075954022 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.074809596 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.076033701 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.07649105 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.378423455 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.073277373 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.918898422 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.07692261 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.084875499 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.077616942 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.07785381 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.080752656 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.080505505 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.096264475 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.073924822 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.081124946 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.073484787 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.076298346 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.073799249 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.090598542 seconds)
    (83/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.072633989 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.374373559 seconds)
    (85/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.179022843 seconds)
    (86/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.076304514 seconds)
    (87/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.073143021 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.099861325 seconds)
    (89/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.103677053 seconds)
    (90/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.076304391 seconds)
    (91/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.073628313 seconds)
    (92/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.107460332 seconds)
    (93/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.074724129 seconds)
    (94/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.074490384 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.074142698 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.091434454 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.07821675 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.120878966 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.075070129 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.096180053 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.101296377 seconds)
    (102/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.070698366 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.076863589 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.106285352 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.0881497 seconds)
    (106/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.072698499 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.075429391 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.444798354 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.072847878 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.075850698 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.072964025 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.075740498 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.074404343 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.089144492 seconds)
  done (took 22.492525594 seconds)
done (took 39.865271985 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.252763832 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.078116695 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.079197325 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.078697277 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.078585751 seconds)
  done (took 1.707979941 seconds)
done (took 2.83706724 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.12874168 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.10692053 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.07244121 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.105223278 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.07517192 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.108328888 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.107604438 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.084706917 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.10702372 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.072217669 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.104711135 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.072307361 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.071792751 seconds)
  done (took 2.357826558 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.089007013 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.091169651 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.077739977 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.090381277 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.071261897 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.090587472 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.089005817 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.096841587 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.089339725 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.080269863 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.071361792 seconds)
  done (took 2.058246182 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.087987738 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.09140699 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.077610209 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.090271721 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.074205068 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.089434151 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.089638528 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.093704772 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.089425559 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.081585598 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.071617204 seconds)
  done (took 2.052260812 seconds)
done (took 7.584959352 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.082234789 seconds)
  done (took 1.188714324 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.543531926 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.729438594 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.08646626 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.11274023 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.19878806 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.119704145 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.249773286 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.090403942 seconds)
  done (took 8.399938003 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.109061524 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.078796386 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.08037975 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.07734022 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.08034946 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.079197582 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.076220287 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.076795876 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.077738928 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.076462138 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.080264694 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.076034681 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.077317102 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.080342895 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.07710006 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.078576375 seconds)
  done (took 2.470619567 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.099484614 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.098369607 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.080925579 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.083269665 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.080047252 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.07962198 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.082241821 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.081205676 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.078513431 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.079804002 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.082962066 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.080742526 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.078969954 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.071367391 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.081991823 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.084132107 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.078332465 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.08199884 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.082912327 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.083117232 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.082668753 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.071275744 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.079409573 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.081658358 seconds)
  done (took 3.173039139 seconds)
done (took 16.348217819 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.112098295 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.07532646 seconds)
  done (took 1.303750806 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.085423078 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.089134812 seconds)
  done (took 1.298907515 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.086137141 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.0706024 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.094998712 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.08440538 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.073046151 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.07243398 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.094011689 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.073425717 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.073032806 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.072617648 seconds)
  done (took 1.920583267 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.072829121 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.08244725 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.076733107 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.086655816 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.080054988 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.070951995 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.078489421 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.074661424 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.083852401 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.069661161 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.078084816 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.090680216 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.077912506 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.092775793 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.079107315 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.075455573 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.077497387 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.073903914 seconds)
  done (took 2.548501455 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.069866742 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.07255433 seconds)
  done (took 1.272831033 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.072318712 seconds)
    (2/7) benchmarking "second"...
    done (took 0.069142879 seconds)
    (3/7) benchmarking "month"...
    done (took 0.073061186 seconds)
    (4/7) benchmarking "year"...
    done (took 0.073531007 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.070189395 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.069502001 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.070652104 seconds)
  done (took 1.625487512 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.397404839 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.124412824 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.314212365 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.080281918 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.089483796 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.262104458 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.074210171 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.079182768 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.078978138 seconds)
  done (took 2.664765009 seconds)
done (took 13.768778169 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.086740634 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.095746857 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.104303678 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.389739395 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.100276162 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.075153965 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.121905174 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.189969608 seconds)
done (took 2.301840333 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.218825789 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.785289402 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.493289579 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.215853543 seconds)
  done (took 2.62448863 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.345137786 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.09587761 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.183757812 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.075614358 seconds)
  done (took 1.841541705 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.071972388 seconds)
    (2/2) benchmarking "read"...
    done (took 0.076604191 seconds)
  done (took 1.284532559 seconds)
done (took 7.105919542 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.072936195 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.093998335 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.073965913 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.07162453 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.073896113 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.071610528 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.07200934 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.07374917 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.073945511 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.073604775 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.074145864 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.074078982 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071111581 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071325299 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07373482 seconds)
    (16/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.071555528 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.07129292 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071727942 seconds)
    (19/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.071096598 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071039472 seconds)
    (21/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.073360814 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073255956 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.071341288 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.071546901 seconds)
  done (took 2.926060973 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.088980794 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.073514326 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.078226545 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.07886102 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.076240252 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.078145522 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.077986539 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.073361275 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.078161036 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.075853842 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.075947376 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.076097065 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.075473323 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.075927037 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076458443 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.075858675 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.078554688 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073755693 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.076561106 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.075940844 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.078196653 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073623801 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.076152957 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.078237467 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.07616686 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.07584974 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.076283464 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.07470324 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.078088925 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.075938453 seconds)
  done (took 3.448490141 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.075882152 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.070166132 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.070686517 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.0783596 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.070727616 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.070898533 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.070249887 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.070856161 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.071456923 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.070510821 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.071666837 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.070301079 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.070894991 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.071431499 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.071385683 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.074946264 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.087809004 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.070625955 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.070075625 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.070983112 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.077271699 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.070388858 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.070606222 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.070191881 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.070329886 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.07018074 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.070977076 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.070374251 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.07127391 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.070464057 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.074676162 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.074724056 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.070233196 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.078431947 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.074981982 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.070719733 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.07571156 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.070745141 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.071600163 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.070482392 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.070885574 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.070162962 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.070664057 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.079118988 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.070898513 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.072625028 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.070673789 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.072081567 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.070888784 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.07300175 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.070440139 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.070873331 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.072534638 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.072183345 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.07569901 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.070348394 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.071623945 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.070648725 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.071356897 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.070293525 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.070424874 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.070404947 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.073829201 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.071427239 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.087671944 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.078694187 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.070736474 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.072487065 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.071316018 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.074341645 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.072281847 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.086456824 seconds)
  done (took 6.377763335 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.093506267 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.095392246 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.07350469 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.073685628 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069767015 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.071222418 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.077870351 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071484384 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073747085 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.091994892 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071487326 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.073365806 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073570871 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.075598961 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071917478 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.07346617 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.080582767 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069249657 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.071381465 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.075468856 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071644333 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.077175262 seconds)
  done (took 2.837835695 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.154226566 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.07795742 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.113616105 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.082797176 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.077850235 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.082511358 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.078110522 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.077400361 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.077480099 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.076020766 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.075724701 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.077721335 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.078101596 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075614206 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.075340758 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.075973284 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.077894491 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.075794641 seconds)
  done (took 2.662776125 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.0828893 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.074324676 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.096134188 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.073940696 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.074031598 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.076438599 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.079054592 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.082209741 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.076183444 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.074139187 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.081906549 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.077136582 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.076572423 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074105863 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.076489769 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.074109059 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.076463204 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073983112 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.081641802 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.078296345 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.078434561 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.081842577 seconds)
  done (took 2.872745833 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.085537204 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.075589293 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.089383892 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.076165613 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.069011161 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.072044122 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.077728925 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.073208743 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.077733078 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.07579537 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.073472938 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.071404028 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.076197438 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.073975081 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.076432608 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.073542752 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.07561541 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.073617478 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.075585288 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.068861457 seconds)
  done (took 2.665320516 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.090000426 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075065403 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.075218242 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.082265469 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.07562331 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.075602846 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.081997589 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.074636096 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.074776235 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.096517743 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.075361834 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.075061085 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.081911106 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.081660942 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.074746074 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.082059928 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.081682204 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.081819966 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.075280101 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.074899991 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.096212933 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.075271764 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.082135537 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.075435499 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.075480803 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.074894718 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.074869411 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.079657852 seconds)
  done (took 3.376423965 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.073301984 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.074280661 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.07151289 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.071710447 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.07186444 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.071551674 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.071600892 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.071670246 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.073797096 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.072631987 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.07429167 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.074324922 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.073903853 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.074081465 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.073898962 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.073873248 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073797695 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.071955214 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071819544 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07159184 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.073982973 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07420705 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.073998368 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.071537877 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071570206 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.073941982 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071633419 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.071751699 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.074123485 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.071648218 seconds)
  done (took 3.345726948 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.080806926 seconds)
    (2/2) benchmarking "in"...
    done (took 0.078135874 seconds)
  done (took 1.320237941 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.068668752 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.086704558 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.068976316 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.078258176 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.076294925 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.074112344 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.079905333 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.076398463 seconds)
  done (took 1.767118332 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.087602366 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.08201521 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.074146777 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.084456365 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.083315628 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.090394499 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.13240114 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.074030077 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.080557669 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.07235317 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.086777224 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.073862107 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.081249263 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.075061441 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.080114992 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.082064481 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.071336251 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.078707616 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.075009861 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.07223586 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.074670826 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.083492221 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.077516959 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.068993497 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.075966402 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.09758352 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.085723464 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.07381111 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.077657769 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.082121426 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.081118367 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.06785549 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.073437266 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.073575932 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.071553348 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.082420099 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.089057142 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.077285114 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.083204674 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.074243884 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.082604101 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.068782207 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.07904084 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.081818224 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.086039333 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.073852621 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.074067274 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.068740412 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.072228375 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.076912432 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.068948444 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.075018703 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.068686516 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.082245529 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.078560855 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.084999676 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.072963318 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.076172969 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.077386427 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.077529513 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.082066443 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.077005329 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.077562799 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.073499472 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.085285657 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.079857334 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.082201032 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.068923695 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.067868494 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.072315711 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.084301128 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.098714323 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.080213515 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.07384418 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.074319178 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.071672403 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.077423999 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.074349218 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.079668059 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.080842787 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.07306877 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.078137667 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.081430294 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.074810891 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.076523574 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.080010666 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.071445938 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.07608516 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.072332195 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.089306909 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.074827091 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.071560523 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.071596497 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.08391455 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.077254894 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.071831051 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.071270262 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.080943818 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.066687151 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.072141641 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.072751291 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.074180029 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.082659199 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.076114761 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.076516587 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.082286231 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.079518113 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.073712305 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.075683978 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.069373834 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.200869624 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.074574208 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.08499827 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.070003699 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.079799973 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.077779768 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.075126126 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.084941733 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.072689794 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.075112005 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.084172158 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.08106189 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.072578248 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.070866118 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.07816465 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.074077636 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.076636215 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.08303064 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.072614249 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.069556957 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.069578515 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.07803066 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.073606193 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.078312383 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.078209435 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.078466009 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.068581131 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.072056178 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.078236529 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.083278382 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.075532947 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.075352761 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.079979787 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.075513807 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.073017031 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.081041005 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.077648122 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.074314541 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.080099688 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.075654671 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.068912038 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.076399746 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.077048146 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.072352907 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.078615042 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.076200321 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.076652908 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.074098808 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.07260403 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.079962864 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.074354309 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.073815403 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.074809145 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.072400833 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.084960532 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.076611745 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.069325386 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.071177369 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.080911216 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.072534007 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.0733128 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.073463366 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.076448515 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.07397264 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.07207458 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.072876251 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.076389158 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.081936894 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.076695017 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.074168111 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.080014786 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.086851481 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.072901614 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.077221746 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.072876863 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.074352992 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.07377088 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.084041207 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.080967445 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.07801903 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.076488045 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.070295079 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.079709898 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.0821642 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.073309374 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.071059667 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.073346229 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.077126063 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.08022423 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.077033276 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.073454666 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.07177045 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.075588267 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.075645063 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.076076657 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.072049759 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.073229204 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.078154381 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.070797843 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.07790238 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.07319322 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.083794373 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.076566003 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.067695053 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.074944903 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.071457746 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.080729935 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.067652428 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.072149783 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.07292294 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.072901235 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.071672956 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.075641995 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.066921017 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.212308547 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.085055366 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.07730785 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.07567654 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.075506728 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.084086125 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.077336001 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.079001168 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.080769442 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.081677125 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.08566931 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.074378924 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.082712925 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.085399008 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.073551807 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.068645281 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.080595549 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.072313582 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.072556521 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.073130704 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.071614816 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.077845687 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.081959087 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.081102052 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.067865198 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.07792736 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.072448007 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.074031439 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.06868646 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.078939848 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.077639298 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.07626066 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.082251027 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.074109086 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.073284829 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.079212401 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.072986406 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.074025114 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.074496413 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.078074619 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.073644894 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.07643691 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.073882361 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.077602199 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.073444095 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.071204588 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.075808525 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.073359813 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.074919445 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.079947546 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.073271488 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.075071936 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.0772264 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.07376761 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.075407434 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.074923923 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.073806549 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.07773867 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.075395427 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.074890331 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.076872976 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.069237198 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.082423823 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.073367935 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.082481473 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.074935101 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.070479609 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.079902736 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.07733941 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.078221939 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.07346634 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.073751187 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.075805602 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.072822118 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.077151524 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.081458475 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.072432782 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.085465773 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.081215073 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.076003189 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.07790574 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.07489347 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.076387604 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.073773788 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.075022361 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.073721078 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.07487741 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.07314072 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.078872465 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.076689574 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.075198428 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.075604887 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.073685352 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.074476017 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.074027014 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.068195542 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.073360196 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.074241742 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.073025386 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.083015695 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.072490681 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.072580549 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.072072994 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.073727805 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.071514614 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.06954981 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.079208582 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.079654535 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.072323209 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.07923141 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.072815054 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.075246014 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.083668017 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.066937114 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.070896314 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.203093495 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.073729434 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.084634531 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.07619823 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.086939315 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.076460937 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.075149744 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.072098446 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.07443518 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.072825846 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.068593236 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.071894347 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.078699617 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.07394173 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.07341734 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.07359565 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.077825555 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.074394459 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.083774757 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.073371613 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.075627213 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.073482909 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.071513639 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.074213816 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.073812762 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.077445488 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.074255966 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.071998643 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.070838486 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.072889876 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.075582148 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.07589901 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.073283806 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.076589003 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.081504514 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.072826284 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.077188714 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.076052832 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.068520154 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.077241892 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.073715496 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.072887893 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.073515156 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.080961644 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.077544653 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.073769408 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.084090391 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.072633291 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.075137555 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.073630958 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.071519054 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.072989527 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.072724779 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.073296741 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.073622596 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.074102926 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.082630051 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.0720047 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.078033164 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.075055159 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.075011905 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.081164753 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.074150103 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.077455984 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.079282299 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.075100707 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.076282589 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.083447797 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.077341946 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.07788232 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.074127706 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.076247941 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.079708026 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.074099929 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.080883391 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.075526532 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.073787281 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.076320559 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.072162073 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.072820978 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.073742325 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.072854338 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.0804031 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.073880492 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.073979023 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.07366958 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.071600408 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.075174899 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.075604617 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.082198795 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.076462905 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.077623428 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.068568508 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.07033968 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.073580229 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.071902395 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.075959787 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.076607306 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.079617006 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.076349575 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.074636909 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.07274068 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.082975567 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07999447 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.077033985 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.071929399 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.077225107 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.072547632 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.076047905 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.074569809 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.073870902 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.073331393 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.077149072 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.07584047 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.073539013 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.080430931 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.076789611 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.207099509 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.076138094 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.078604434 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.076875315 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.070054616 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.075079676 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.07721169 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.080030636 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.078209523 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.074252734 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.086514232 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.073153025 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.07510427 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.076107805 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.073221683 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.079087605 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.069042993 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.077388088 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.074300212 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.074733958 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.069070203 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.074265549 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.073097947 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.076836302 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.074448089 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.069222153 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.085136547 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.084935961 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.078497358 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.073230157 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.072765648 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.069400094 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.068429572 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.073821041 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.074934943 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.076085584 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.085026516 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.07367211 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.073578596 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.068589182 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.073587593 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.07767435 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.077650261 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.070598213 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.069033222 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.074266089 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.077412617 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.08023688 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.072258233 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.072616292 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.077317186 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.076377039 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.071574945 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.075803122 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.071144121 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.078471041 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.086716294 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.073597551 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.075347894 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.080662942 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.083196404 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.073826142 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.068915215 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.073708537 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.077301565 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.074889765 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.074495178 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.074315962 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.089392099 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.077591951 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.073653086 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.072449547 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.07982952 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.074076653 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.082639217 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.073993882 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.074328416 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.07932522 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.07625019 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.081697867 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.078017158 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.081892322 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.077257086 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.077387244 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.07238772 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.075026326 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.071850085 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.07319134 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.074367468 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.073515453 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.077958853 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.080449319 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.07387434 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.084751959 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.083737319 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.075708992 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.07022094 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.073758843 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.073848145 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.068647416 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.074066169 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.071223681 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.071473875 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.071224764 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.071455844 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.075232202 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07843485 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.075041074 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.072679251 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.071547918 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.067206093 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.076653905 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.075880439 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.074890578 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.06953916 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.072091714 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.207159301 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.078661398 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.078957529 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.0738167 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.077887772 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.077772214 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.076380285 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.070053944 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.082366227 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.073683806 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.077022532 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.07446405 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.074116408 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.07420572 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.078395017 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.078176153 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.074712481 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.077323936 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.078931236 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.075667723 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.070942911 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.071022281 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.080138491 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.071811245 seconds)
  done (took 47.171423114 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.10525774 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.070852741 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.068738267 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.068759247 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.079893002 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.069869587 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.06939977 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.069908483 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.069731472 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.072103027 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.068966186 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.06901878 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.076959878 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.085029608 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.080077261 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.073649711 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.069291187 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.070151456 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.068821006 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.070075414 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.077408206 seconds)
  done (took 2.804678771 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.078469329 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.082890754 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.082373932 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.090749434 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.078969231 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.076979622 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.08290138 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07717683 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.085913907 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.079892726 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.085713934 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.077255454 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.079757032 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.080567151 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079857612 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.077647786 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.085683335 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.078620408 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.077293871 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.082414598 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.077661946 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.082574754 seconds)
  done (took 3.022748392 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.071728753 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.071623719 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.075174832 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.068354063 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.0724188 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.068900977 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.076364676 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.070887021 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.084501916 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.073148736 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.073485538 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.073491972 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.075463785 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.06831116 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.074218904 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.070892295 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.115382909 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.0765066 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.073297229 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.07382148 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.068928157 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.075468805 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.069302945 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.069127879 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.072869964 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.075751876 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.073887237 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.072053541 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.073063202 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.07313781 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.072938621 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.071101695 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.075665913 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.07469357 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.073335705 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.072984117 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.075496566 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.073110086 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.069677681 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.071665459 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.074404428 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.069155764 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.073477836 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.075218409 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.07121506 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.071137048 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.075653365 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.07303718 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.068561403 seconds)
  done (took 4.858155809 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.083007342 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.116665826 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.075535274 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.095849135 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.087067644 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.079407857 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.077706866 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.096785734 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.070095356 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.070486641 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.087203144 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.086520035 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.072787763 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.077308011 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.080125993 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.072927022 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.073809022 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.071725751 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.076802609 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.072497957 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.075459191 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.080125359 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.087549531 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.085093953 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.076671724 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.071578454 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.072313259 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.077020571 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.08497541 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.07757381 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.07701829 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.077955243 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.087974598 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.0784921 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.072319796 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.075145723 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.08888207 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.073589593 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.075348942 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.070487218 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.075156441 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.077024602 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.080166213 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.089073903 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.072928411 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.077269242 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.073350196 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.069917401 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.085149438 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.075149567 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.080110784 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.08618772 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.076593181 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.072700661 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.077129326 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.087907819 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.073453568 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.071325446 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.075655678 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.084440081 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.070757341 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.076278198 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.085711607 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.074607973 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.079510071 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.086469249 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.078157009 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.076494595 seconds)
  done (took 6.747598124 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.080444102 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.102044342 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.090562201 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.090575672 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.08328582 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.08368422 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.083559608 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.08362138 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.092424084 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.087588496 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.084160376 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.123646066 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.079082839 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.085590421 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.083518139 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.083774387 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.083903268 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.084279759 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.084775331 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.083540483 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.084426154 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.090641487 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.08394861 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.090700683 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.086917528 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.079148042 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.083820766 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.083592653 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.090542948 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.083266072 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.086935734 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.083726622 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.083417784 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.091086052 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.087156312 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.083998209 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.07289635 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.084218347 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.083739994 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.083702697 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.079070965 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.090946216 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.083587102 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.079221015 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.084114015 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.083273859 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.090385654 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.086667326 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.085788477 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.087848352 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.084524176 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.091054347 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.08335772 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.083691757 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.089952051 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.093657987 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.090084603 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.09055381 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.084075535 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.090605281 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.090729109 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.093885274 seconds)
  done (took 6.642572261 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.086174646 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.078610351 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.091782174 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.069727095 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.071814588 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.080416432 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.072333548 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.072236144 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.081493214 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.082065234 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.083266722 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.080101129 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.082943649 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083378038 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.080136902 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08334445 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.080512393 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.080365681 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.081464389 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.080530501 seconds)
  done (took 2.876003821 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.081832033 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.092039065 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.075486843 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.079603448 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.078432333 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.079702831 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.077192246 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.077813801 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074991469 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.077985772 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.083547128 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.083590417 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07629441 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.079716222 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.083761505 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.080307309 seconds)
  done (took 2.541724843 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.08972839 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.07956515 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.086855784 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.075092621 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.075248328 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.069892574 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.073309629 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.069321324 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.069879904 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.087384644 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.073489097 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.085205822 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.073891994 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.072611457 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.070340158 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.079248401 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.06996904 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.071601677 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.073133782 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.085252163 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.078174766 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.072394276 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.076487753 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.07139952 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.074459558 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.076316095 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.071519953 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.072586978 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.069410252 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.072491678 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.077515576 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.078007013 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.07048377 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.072905425 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.07323917 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.07131649 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.074181018 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.073995297 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.079821431 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.073567697 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.0719191 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.076660529 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.0737878 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.074897508 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.070361281 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.074038805 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.069939575 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.076984364 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.071886621 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.076950473 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.074001472 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.07654695 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.073986546 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.080145887 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.075941877 seconds)
  done (took 5.389679154 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.086104186 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.078139743 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.069488368 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.071726281 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.077085704 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.076083661 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.078681301 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.075046023 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.076187161 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.072172549 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.075812205 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.076980774 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.075699006 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.078000229 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.075654307 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.077502078 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.069080274 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.075319864 seconds)
  done (took 2.638276649 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.078195013 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.073230428 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.081940832 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.075327505 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.074699365 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.076717401 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070215323 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.072416376 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072563036 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.074713916 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074803579 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.076615531 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072308479 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.077435827 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.074914856 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.074815466 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.076614434 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072524113 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.074930527 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069687639 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.076831743 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.072186826 seconds)
  done (took 2.908590235 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.100360774 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.09109055 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.165837897 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.088210661 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.09480216 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.079830092 seconds)
  done (took 1.886540774 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097025738 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106968322 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.074697349 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07709591 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.083248045 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077625284 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077587483 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078104712 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085503409 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.083228564 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.080707689 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08564009 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085250911 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.085255502 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083300807 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.083181361 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078197515 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078213678 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074692185 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.090375185 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078144582 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085885129 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078272402 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07816088 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078055768 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.085429821 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085530511 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083414591 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07852111 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086110369 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083495357 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078377313 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085990521 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08332684 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077075045 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085743307 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077991445 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.090682891 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083226281 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.084949515 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.077107205 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.083531692 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085610638 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.082047158 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08476569 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078843838 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.082602632 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077992447 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078471879 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.092667731 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.083967344 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.085336372 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083323902 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085804235 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.086204885 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.092145444 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.083151133 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.085179577 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.083555042 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.083589963 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.085499324 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083250643 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.084827708 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.083271613 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083080325 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.084859495 seconds)
  done (took 6.781744806 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110970811 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.075195801 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078916397 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.08357572 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.085446051 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078322032 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079040097 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078803482 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078322966 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075251449 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116544443 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078669112 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085431236 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.084839125 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078649293 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077891977 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078041103 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.08512398 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075231334 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.092209237 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077061626 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085039524 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084935509 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.084764197 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.083371722 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083416725 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078505451 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078125531 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07832237 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078807378 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.082362735 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078379916 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.085410548 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.074876193 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084818119 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07869188 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078400993 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.082139959 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077981284 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083353756 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.085278738 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090674715 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07828365 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078204913 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082835607 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078508526 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077979542 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074854932 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078122479 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075125431 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083357245 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.083248279 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.083183006 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.085042411 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078335403 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07868775 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078576383 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078129039 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078749403 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.083347256 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084871479 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078100363 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.092046239 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078372699 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078803012 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.085131951 seconds)
  done (took 6.708705038 seconds)
done (took 137.717326047 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.198835836 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.175203346 seconds)
  done (took 1.645514574 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.075199727 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.105075046 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.084177737 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.137273815 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.072757108 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.109280042 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.105789689 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.082896588 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.074936723 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.074455646 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.074697812 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.076403947 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.13986609 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.072107702 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.071723314 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.074537325 seconds)
  done (took 2.721821591 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.102761743 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.166740604 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.108942359 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.073057857 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.105341711 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.080296748 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.07583436 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.083221842 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.078768259 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.073177049 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.080834547 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.077958245 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.073345879 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.078023879 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.078627278 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.080185683 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.073334501 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.080760885 seconds)
  done (took 2.860081934 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.102227048 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.098754511 seconds)
  done (took 1.495872322 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.163648895 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.139186578 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.208332113 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.347036952 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.159624299 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.148619737 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.148164509 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.148430074 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.121244601 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.142323197 seconds)
  done (took 3.01552197 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.105520056 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.158469007 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.28176546 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.125634725 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.081427552 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.099995846 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.12747552 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.086903595 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.087994989 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.087281969 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.088002822 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.084278821 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.10796825 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.081489863 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.08265456 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.08437597 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.111779113 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.081812108 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.083165954 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.083581188 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.109726903 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.074903508 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.081520869 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.081975231 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.08477227 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.084836243 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.074357712 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.074134858 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.083734257 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.08294627 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.084663843 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.098672868 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.084673442 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.111418321 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.078997834 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.110938146 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.084042987 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.081643393 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.082967969 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.081043201 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.08569311 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.08561946 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.081512981 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.084176844 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.074312164 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.08486153 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.074335839 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.074278251 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.085627409 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.075840398 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.085983523 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.08417524 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.109944417 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.074703465 seconds)
  done (took 6.341080892 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.113382464 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.112713726 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.078963569 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.121680109 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.110667322 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.077669942 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.113944742 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.106544371 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.115947106 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.078445232 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.076179775 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.078091402 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.086864946 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.090090292 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.121248309 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.112730165 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.080251958 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.077747585 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.115549798 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.116084017 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.076676338 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.109408393 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.105323136 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.114821561 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.074142933 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.077915202 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.076072481 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.077709159 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.083422561 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.085357309 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.076683161 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.086698537 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.092698615 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.081770233 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.07321185 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.076390625 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.076604928 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.085642845 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.086524121 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.084198292 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.082035507 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.075815101 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.075871641 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.077203084 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.077140347 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.075599344 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.08478937 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.086691229 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.085029385 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.07629336 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.077794827 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.076731955 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.076929983 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.086066588 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.084164246 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.086719239 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.086381429 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.076302925 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.076266736 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.079188108 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.087163656 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.08654273 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.085541642 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.079698211 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.086468356 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.07637641 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.088433927 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.090766495 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.076800068 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.077604224 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.075963663 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.076252265 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.077095555 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.083462798 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.084091319 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.077634031 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.076010503 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.076158385 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.085815077 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.084361422 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.075861394 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.083384011 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.074918142 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.075781676 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.077744586 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.077232906 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.083497144 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.085246809 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.077403783 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.076291442 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.075592801 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.07529187 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.074407949 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.082028477 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.084258154 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.083652345 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.083006027 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.07659988 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.083261956 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.083134304 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.212151395 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.087766423 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.078814547 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.07989932 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.079077488 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.085777033 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.085316731 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.087486836 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.077660954 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.076860769 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.084957437 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.088135278 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.077722105 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.084759782 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.087723794 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.08596188 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.075607014 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.088287695 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.07763019 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.087522708 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.07507766 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.087389809 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.07744489 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.086381948 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.076573555 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.075437433 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.076656212 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.086283737 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.07844596 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.076436991 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.078160614 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.077246284 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.084759038 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.087525599 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.076005367 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.082422051 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.082212958 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.075316448 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.082529606 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.074175301 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.086058527 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.076194927 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.077341727 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.075450991 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.088164313 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.076893473 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.076240219 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.076256575 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.087059409 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.076672333 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.086838688 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.084373605 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.075439172 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.090123534 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.084525002 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.084133572 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.087082787 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.077962602 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.076082202 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.076271911 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.076116935 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.083887047 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.085997111 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.077831396 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.076230671 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.083885837 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.086192825 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.075524178 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.084380637 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.084462415 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.084808982 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.076389801 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.076083156 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.087794344 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.086074947 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.083732276 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.083910158 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.085167252 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.076311191 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.083645186 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.084453188 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.076145057 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.090631853 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.076610549 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.088332687 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.084334381 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.083151787 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.085319507 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.085933977 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.086155993 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.086827649 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.087482654 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.07523639 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.075084249 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.083293909 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.075187577 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.075282383 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.082367571 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.075999873 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.076493485 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.087902139 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.073217569 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.219588391 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.075550589 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.087668256 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.077316557 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.079010358 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.090768363 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.078402939 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.081330748 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.085577567 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.076769044 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.08487918 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.087871772 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.082992315 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.076591459 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.078694144 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.08626324 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.086199763 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.077010013 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.076832779 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.07828565 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.084926576 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.084827434 seconds)
  done (took 20.206579086 seconds)
done (took 39.592869801 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.202746342 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.155364516 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.169764089 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.123432028 seconds)
  done (took 2.033925007 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.116405959 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.10465853 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.098301529 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.073637612 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.103835318 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.074363516 seconds)
  done (took 1.903352903 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.284115387 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.19979579 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.18295068 seconds)
  done (took 1.994381219 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.206145237 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.193481426 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.444583165 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.273997238 seconds)
  done (took 2.547463183 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.144812735 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.09193639 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.073077161 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.089717508 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.133995943 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.162283985 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.101803252 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.126958147 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.085302359 seconds)
  done (took 2.38702362 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.15092892 seconds)
done (took 12.354698808 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.224151276 seconds)
    (2/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.13878441 seconds)
    (3/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.119205561 seconds)
    (4/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.100721351 seconds)
    (5/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.12873074 seconds)
    (6/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.076287487 seconds)
    (7/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.091091957 seconds)
    (8/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.084949351 seconds)
    (9/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.221555474 seconds)
    (10/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.246291062 seconds)
    (11/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.211957283 seconds)
    (12/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.084643367 seconds)
    (13/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.076190979 seconds)
    (14/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.09804767 seconds)
    (15/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.175339761 seconds)
    (16/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.200212232 seconds)
    (17/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.194893138 seconds)
    (18/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.083489175 seconds)
    (19/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.447593456 seconds)
    (20/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.212735638 seconds)
    (21/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.083336878 seconds)
    (22/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.082515617 seconds)
    (23/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.23881268 seconds)
    (24/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.090381209 seconds)
    (25/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.09869691 seconds)
    (26/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.09002019 seconds)
    (27/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.107292156 seconds)
    (28/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.112540385 seconds)
    (29/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.203695722 seconds)
    (30/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.087936281 seconds)
    (31/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.087001301 seconds)
    (32/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.110151219 seconds)
    (33/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.081165074 seconds)
    (34/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.097311354 seconds)
    (35/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.167719952 seconds)
    (36/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.070293146 seconds)
    (37/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.061599438 seconds)
    (38/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.081551736 seconds)
    (39/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.059922204 seconds)
    (40/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.198608525 seconds)
    (41/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.083011087 seconds)
    (42/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.088605339 seconds)
    (43/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.100661105 seconds)
    (44/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.200267182 seconds)
    (45/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.081716656 seconds)
    (46/309) benchmarking ("sort", BigInt, false)...
    done (took 0.203444264 seconds)
    (47/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.081438598 seconds)
    (48/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.074838883 seconds)
    (49/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.100845655 seconds)
    (50/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.160721957 seconds)
    (51/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.072870428 seconds)
    (52/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.172804243 seconds)
    (53/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.162038258 seconds)
    (54/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.120602361 seconds)
    (55/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.080240001 seconds)
    (56/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.169117378 seconds)
    (57/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.187826267 seconds)
    (58/309) benchmarking ("sort", Bool, false)...
    done (took 0.15403994 seconds)
    (59/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.095944338 seconds)
    (60/309) benchmarking ("sort", Int64, false)...
    done (took 0.074276041 seconds)
    (61/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.246916933 seconds)
    (62/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.090965655 seconds)
    (63/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.073135217 seconds)
    (64/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.082216556 seconds)
    (65/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.083677302 seconds)
    (66/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.201225847 seconds)
    (67/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.072473961 seconds)
    (68/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.23605635 seconds)
    (69/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.081226267 seconds)
    (70/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.229933945 seconds)
    (71/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.129456451 seconds)
    (72/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.111072829 seconds)
    (73/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.08177591 seconds)
    (74/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.062020498 seconds)
    (75/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.059451499 seconds)
    (76/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.084261525 seconds)
    (77/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.073410508 seconds)
    (78/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.080619351 seconds)
    (79/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.173028234 seconds)
    (80/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.335502026 seconds)
    (81/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.082663474 seconds)
    (82/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.063859273 seconds)
    (83/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.130104102 seconds)
    (84/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.083519083 seconds)
    (85/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.131711101 seconds)
    (86/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.081481357 seconds)
    (87/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.072527691 seconds)
    (88/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.19605521 seconds)
    (89/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.088896137 seconds)
    (90/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.100279771 seconds)
    (91/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.087644123 seconds)
    (92/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.060289147 seconds)
    (93/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.125650644 seconds)
    (94/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.086432416 seconds)
    (95/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.060208145 seconds)
    (96/309) benchmarking ("sort", Int8, false)...
    done (took 0.156897735 seconds)
    (97/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.16537097 seconds)
    (98/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.126180844 seconds)
    (99/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.10460323 seconds)
    (100/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.080475765 seconds)
    (101/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.142352519 seconds)
    (102/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.059694167 seconds)
    (103/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.100209973 seconds)
    (104/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.084434753 seconds)
    (105/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.100452516 seconds)
    (106/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.097541172 seconds)
    (107/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.073374799 seconds)
    (108/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.086930981 seconds)
    (109/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.084808592 seconds)
    (110/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.08632548 seconds)
    (111/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.091079596 seconds)
    (112/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.078418556 seconds)
    (113/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.071124442 seconds)
    (114/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.113594624 seconds)
    (115/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.10068211 seconds)
    (116/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.082085739 seconds)
    (117/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.062013684 seconds)
    (118/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.081594671 seconds)
    (119/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.092172953 seconds)
    (120/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.118293102 seconds)
    (121/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.204450821 seconds)
    (122/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.136474008 seconds)
    (123/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.081967559 seconds)
    (124/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.073644585 seconds)
    (125/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.188012279 seconds)
    (126/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.128158579 seconds)
    (127/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.074186384 seconds)
    (128/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.08035209 seconds)
    (129/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.121304859 seconds)
    (130/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.060896623 seconds)
    (131/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.120370427 seconds)
    (132/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.07679916 seconds)
    (133/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.118655193 seconds)
    (134/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.075262664 seconds)
    (135/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.082671567 seconds)
    (136/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.17690013 seconds)
    (137/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.098297656 seconds)
    (138/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.080764871 seconds)
    (139/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.180849393 seconds)
    (140/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.100387392 seconds)
    (141/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.08042182 seconds)
    (142/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.112840135 seconds)
    (143/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.081003431 seconds)
    (144/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.060829831 seconds)
    (145/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.08372315 seconds)
    (146/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.059506958 seconds)
    (147/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.059643588 seconds)
    (148/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.096829776 seconds)
    (149/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.104835809 seconds)
    (150/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.075337738 seconds)
    (151/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.061173025 seconds)
    (152/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.072509038 seconds)
    (153/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.128813884 seconds)
    (154/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.097691279 seconds)
    (155/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.086878338 seconds)
    (156/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.076369201 seconds)
    (157/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.074662847 seconds)
    (158/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.168755136 seconds)
    (159/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.059654621 seconds)
    (160/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.083836481 seconds)
    (161/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.211976321 seconds)
    (162/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.081996197 seconds)
    (163/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.156036908 seconds)
    (164/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.074324052 seconds)
    (165/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.201147636 seconds)
    (166/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.139744327 seconds)
    (167/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.061340902 seconds)
    (168/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.059677443 seconds)
    (169/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.07421707 seconds)
    (170/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.072968867 seconds)
    (171/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.059835526 seconds)
    (172/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.076601597 seconds)
    (173/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.167064257 seconds)
    (174/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.084647305 seconds)
    (175/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.059108203 seconds)
    (176/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.085655181 seconds)
    (177/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.095218897 seconds)
    (178/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.096101153 seconds)
    (179/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.060702751 seconds)
    (180/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.074032931 seconds)
    (181/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.084026906 seconds)
    (182/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.156896729 seconds)
    (183/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.079489811 seconds)
    (184/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.120729714 seconds)
    (185/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.073847478 seconds)
    (186/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.244329583 seconds)
    (187/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.075852795 seconds)
    (188/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.092463573 seconds)
    (189/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.077423722 seconds)
    (190/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.19468812 seconds)
    (191/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.076041705 seconds)
    (192/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.102226811 seconds)
    (193/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.073236758 seconds)
    (194/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.136496051 seconds)
    (195/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.060812203 seconds)
    (196/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.082191951 seconds)
    (197/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.114058131 seconds)
    (198/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.061225041 seconds)
    (199/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.101884389 seconds)
    (200/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.105433783 seconds)
    (201/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.060549465 seconds)
    (202/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.073185923 seconds)
    (203/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.081649242 seconds)
    (204/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.168901382 seconds)
    (205/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.158773357 seconds)
    (206/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.061872411 seconds)
    (207/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.090417426 seconds)
    (208/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.082954252 seconds)
    (209/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.081558013 seconds)
    (210/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.060279871 seconds)
    (211/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.077032113 seconds)
    (212/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.061867068 seconds)
    (213/309) benchmarking ("sort", Float64, false)...
    done (took 0.141625592 seconds)
    (214/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.074663622 seconds)
    (215/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.084236611 seconds)
    (216/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.082467055 seconds)
    (217/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.077181152 seconds)
    (218/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.073562473 seconds)
    (219/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.151398172 seconds)
    (220/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.085598924 seconds)
    (221/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.084852391 seconds)
    (222/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.147478355 seconds)
    (223/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.125354118 seconds)
    (224/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.061169855 seconds)
    (225/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.061769806 seconds)
    (226/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.081371878 seconds)
    (227/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.073761044 seconds)
    (228/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.077287976 seconds)
    (229/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.060309484 seconds)
    (230/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.18296838 seconds)
    (231/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.077727266 seconds)
    (232/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.060547828 seconds)
    (233/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.082890894 seconds)
    (234/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.136088684 seconds)
    (235/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.081689262 seconds)
    (236/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.080835006 seconds)
    (237/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.090650347 seconds)
    (238/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.163595835 seconds)
    (239/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.062068614 seconds)
    (240/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.062295391 seconds)
    (241/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.07432047 seconds)
    (242/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.061105802 seconds)
    (243/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.178986076 seconds)
    (244/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.072632836 seconds)
    (245/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.096982957 seconds)
    (246/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.074202935 seconds)
    (247/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.060767741 seconds)
    (248/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.151468485 seconds)
    (249/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.071660768 seconds)
    (250/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.07544568 seconds)
    (251/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.061812442 seconds)
    (252/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.061521634 seconds)
    (253/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.060572184 seconds)
    (254/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.061422631 seconds)
    (255/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.072414005 seconds)
    (256/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.061107603 seconds)
    (257/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.074604887 seconds)
    (258/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.075711043 seconds)
    (259/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.160221194 seconds)
    (260/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.073943645 seconds)
    (261/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.131171148 seconds)
    (262/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.059826117 seconds)
    (263/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.187670212 seconds)
    (264/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.062877436 seconds)
    (265/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.059921034 seconds)
    (266/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.073195961 seconds)
    (267/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.074438387 seconds)
    (268/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.059700702 seconds)
    (269/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.073782425 seconds)
    (270/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.060366697 seconds)
    (271/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.081852502 seconds)
    (272/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.079963662 seconds)
    (273/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.099440532 seconds)
    (274/309) benchmarking ("sort", Float32, false)...
    done (took 0.140271704 seconds)
    (275/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.073656252 seconds)
    (276/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.177541222 seconds)
    (277/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.081986756 seconds)
    (278/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.073259502 seconds)
    (279/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.079955945 seconds)
    (280/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.09386038 seconds)
    (281/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.080803863 seconds)
    (282/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.073109011 seconds)
    (283/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.075135969 seconds)
    (284/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.094231217 seconds)
    (285/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.07586171 seconds)
    (286/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.077590353 seconds)
    (287/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.059478035 seconds)
    (288/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.059620504 seconds)
    (289/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.058878353 seconds)
    (290/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.059318911 seconds)
    (291/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.072315667 seconds)
    (292/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.06082831 seconds)
    (293/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.061017677 seconds)
    (294/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.059181041 seconds)
    (295/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.080572402 seconds)
    (296/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.059375177 seconds)
    (297/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.125056438 seconds)
    (298/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.081287436 seconds)
    (299/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.146728757 seconds)
    (300/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.072771461 seconds)
    (301/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.079508386 seconds)
    (302/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.119448244 seconds)
    (303/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.073427587 seconds)
    (304/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.073158142 seconds)
    (305/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.059345897 seconds)
    (306/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.072230603 seconds)
    (307/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.229868095 seconds)
    (308/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.154599054 seconds)
    (309/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.079060857 seconds)
  done (took 33.876915169 seconds)
done (took 35.216219519 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.090063879 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.10209522 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.085747706 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.103814519 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.091426044 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.087192035 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.083031923 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.088409786 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.091024015 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.093419506 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.08874032 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.065379938 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.084383674 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.084434697 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.084566442 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.101425613 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.088881067 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.083072767 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.083299312 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.073503933 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.082885886 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.07434576 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.076371441 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.06481428 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.088370049 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.081337595 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.084210079 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.084713034 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.074257809 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.074655058 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.079350819 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.083486265 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.074222206 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.089079705 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.083121666 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.082919733 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.084921613 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.086388421 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.076204085 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.074692286 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.084067308 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.07394946 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.082022054 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.082733269 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.081247515 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.080541097 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.082506312 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.086485157 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.100061595 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.077147857 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.084638931 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.085012442 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.086437423 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.081919208 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.078860745 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.082676566 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.079970078 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.100381723 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.082950797 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.077425674 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.083546737 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.083092019 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.079707961 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.081952764 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.082597874 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.085521857 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.085966358 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.080038652 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.084483244 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.080551055 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.073928099 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.082327389 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.078780553 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.076847629 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.085357184 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.086952361 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.073197831 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.08084803 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.082179323 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.083064248 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.073961157 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.076684809 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.076422068 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.081449201 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.07699063 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.063846243 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.078659862 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.080921227 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.073723474 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.082577688 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.081232933 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.082077911 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.075415441 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.085648555 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.073257961 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.079289898 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.073802239 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.073585722 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.075745422 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.078486865 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.073829887 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.076839333 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.084650787 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.075513407 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.080446995 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.087307152 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.073998264 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.081213916 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.072941167 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.073138667 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.087253448 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.08444379 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.073892272 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.077202983 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.07244303 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.080516321 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.072463528 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.072790312 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.072412426 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.072728429 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.079607026 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.073282912 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.075903643 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.080767372 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.230899105 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.076415754 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.080680425 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.079401553 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.075814844 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.081461273 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.074716041 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.07500419 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.076250465 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.072556409 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.077225519 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.074139042 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.082323375 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.077162286 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.08216453 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.075754412 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.08284262 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.079701993 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.081251113 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.079627764 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.07288195 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.069059653 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.077086615 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.077544551 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.075747801 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.074376748 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.075399262 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.074785514 seconds)
done (took 13.790945589 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.073008474 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.140788932 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.102074979 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.102667261 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.093266706 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.075174403 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.083606874 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.104337762 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.076270584 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.10736848 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.096708334 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.094592377 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.119068339 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.073260622 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.074469488 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.078637882 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.075786808 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.088881568 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.1044422 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.095340143 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.121465099 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.073918341 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.099954319 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.096527459 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.095163447 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.110263744 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.075314395 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.078563101 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.077979286 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.099585704 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.100146211 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.078555946 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.075426134 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.104309234 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.100064955 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.090573293 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.074959822 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.089898106 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.074599552 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.074411868 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.076148922 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.104591462 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.088397959 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.088978588 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.078701709 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.084948148 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.075536589 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.091200576 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.096251662 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.086688131 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.09296881 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.10718807 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.077120657 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.092129023 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.073018918 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.093606201 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.084818157 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.077028832 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.075125036 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.082240001 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.074649629 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.077878864 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.088185732 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.087686126 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.078842605 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.0918298 seconds)
  done (took 7.27371016 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.089667377 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.104403951 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.092438151 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.092055891 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.074463166 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.074969223 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.0745314 seconds)
  done (took 2.04260799 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.072800821 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.094618916 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.097719328 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.097902181 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.088837237 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.098981367 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.084229193 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.075307919 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.099978243 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.076805067 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.095593116 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.105951346 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.078262119 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.08812884 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.098134928 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.074741423 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.098256244 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.075002651 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.078406858 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.09770491 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.080478471 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.103991095 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.082450565 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.075450505 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.088727832 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.075590819 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.121477436 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.079148406 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.077060011 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.077896817 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.0759817 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.115098441 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.088149039 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.082914339 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.07507789 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.089796128 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.088960867 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.0783953 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.086063086 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.084633864 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.08822786 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.075773848 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.076112015 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.076504061 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.079572481 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.084616007 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.076093232 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.079261426 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.077835367 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.094647686 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.074305489 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.088344869 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.078396401 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.081192518 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.077234835 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.08180332 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.085713446 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.076382076 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.094875875 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.07701284 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.091196613 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.090357753 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.088845361 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.090235862 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.077576225 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.088051147 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.088473237 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.077553619 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.077291337 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.079154583 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.090517212 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.073813262 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.07706677 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.084786851 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.077286809 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.098022302 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.097645233 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.076480537 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.089038248 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.075420775 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.075688311 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.07524331 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.097197533 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.080451244 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.075488682 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.079557071 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.078749403 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.077954409 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.073743138 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.078981595 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.073056453 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.081211934 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.07827516 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.07840557 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.077547537 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.090189091 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.077651427 seconds)
  done (took 9.590187212 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.075906377 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.0749356 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.077206193 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.076663065 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.077028486 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.076853493 seconds)
  done (took 1.927255327 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.095669435 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.07458326 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.085643592 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.080133426 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.112633961 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.094904736 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.094629754 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.085592314 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.092145834 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.087324709 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.094513715 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.095841248 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.099542592 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.080709799 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.094395879 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.078951507 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.095046739 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.08279045 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.086568714 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.0808892 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.094452553 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.080468639 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.080828037 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.089029539 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.084026593 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.079715516 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.086968544 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.087319474 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.0868575 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.086242139 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.080932485 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.084244576 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.079262789 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.085857149 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.094896938 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.07884966 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.082950315 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.085691804 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.080211533 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.084041167 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.095616453 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.08044251 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.082233966 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.085282991 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.085560388 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.078813059 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.085661243 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.086844017 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.094506351 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.085228919 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.085062485 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.079252937 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.083594429 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.08564696 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.078799229 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.085586916 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.085371575 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.094874956 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.080885708 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.07864029 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.077065494 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.084161446 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.085185839 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.08470814 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.086086781 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.085324727 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.078545406 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.080676513 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.080693025 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.07959026 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.086011672 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.076784217 seconds)
  done (took 7.603207532 seconds)
done (took 29.860987477 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.546051258 seconds)
  done (took 1.963291538 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.61485265 seconds)
  done (took 2.063005143 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.538493898 seconds)
  done (took 7.978870471 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.379319134 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.489095961 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.728068194 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.141747511 seconds)
  done (took 3.213736473 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.733041698 seconds)
  done (took 2.186704967 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.241794905 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.237859863 seconds)
  done (took 1.943183463 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.381165008 seconds)
  done (took 1.827529789 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.133593731 seconds)
  done (took 2.578499202 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.24580143 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.184257266 seconds)
  done (took 1.879294939 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.44856542 seconds)
  done (took 1.89757632 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.892076437 seconds)
  done (took 6.3427158 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.227006713 seconds)
  done (took 1.715601597 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.241142509 seconds)
  done (took 1.690980452 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.751756059 seconds)
  done (took 3.205247478 seconds)
done (took 41.943857744 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.090663663 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.09177048 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.091747213 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.087488228 seconds)
  done (took 1.793916789 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.082832408 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.079088505 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.082822139 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.079867952 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.084902044 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.081960665 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.083346413 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.084933868 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.081334115 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.082177949 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.081888662 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.082092876 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.084312369 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.083600461 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.080743491 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.084005121 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.084703505 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.081435973 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.084408315 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.081484734 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.079604183 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.083899867 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.084119353 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.080800763 seconds)
  done (took 3.432170643 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.085124364 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.08050828 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.082977189 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.08035465 seconds)
  done (took 1.788981055 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.084532896 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.098171076 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.098117815 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.088084557 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.09991322 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.094847019 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.078273655 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.078266904 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.079054361 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.087292912 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.076647778 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.104037054 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.096702261 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.087347504 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.089585833 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.073816281 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.07644908 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.095984858 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.08841397 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.088133115 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.078870155 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.08748761 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.07731924 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.098273601 seconds)
  done (took 3.560718043 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.087120601 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.109207612 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.089458726 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.100262409 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.101309248 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.073955844 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.08867209 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.102102731 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.136282765 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.075173734 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.080397244 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.074569358 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.083713958 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.077421863 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.089854953 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.116698939 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.12147414 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.078035438 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.107254015 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.07437423 seconds)
  done (took 3.331507113 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.078872877 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.076622455 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.077761261 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.074386614 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.086585019 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.08210501 seconds)
  done (took 1.943324224 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.074514273 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.074061206 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.074464221 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.075234333 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.081293643 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.076288009 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.074695944 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.076294401 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.076249145 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.075872173 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.075785075 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.075301681 seconds)
  done (took 2.372209672 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.190047867 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.075269477 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.076556494 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.075416087 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.080220304 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.074956262 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.091228682 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.076397479 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.101885722 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.075414083 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.075381707 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.07782359 seconds)
  done (took 2.533915736 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202638464 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.084743729 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235085415 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158816218 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115236793 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.121199278 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.120442023 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.120320713 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.145616861 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.107325292 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167525384 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171345 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.114589237 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145170324 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.098192237 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.111483365 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159681463 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17034824 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114393813 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169451043 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148796461 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133227044 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.152899813 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109786799 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113141204 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125984334 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.080188522 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.088012859 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170968836 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134501417 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149390609 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11514116 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097224066 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17465671 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168312348 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144407817 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155921579 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.092088102 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.11198529 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.139449477 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207357734 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.096416699 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.309800874 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120486478 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.090385214 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141948647 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125371476 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.12841029 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.113260666 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099114142 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151439354 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184023487 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.14101102 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.094887662 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13102648 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119207011 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.119885154 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120838204 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179084305 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165013097 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135261525 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.080029988 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.115886579 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156491301 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142451506 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.115472224 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.130942751 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099356972 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138327689 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160087203 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128318635 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148047408 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.122571026 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.096839979 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127923541 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.142474264 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134954879 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165104924 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130272224 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.081360365 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12825251 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106188952 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088756921 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.152549566 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.083573606 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176162836 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.10499103 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.113803563 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130245918 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.115506203 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114373894 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157216739 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.294113206 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113627783 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.077464666 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115489918 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.127901429 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149641497 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.096840604 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.117238323 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122281029 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.085691714 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138989578 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.082578474 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132420024 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.086955628 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131213456 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137867736 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.086501626 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130198501 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112340211 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.109822182 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138867247 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164973433 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.096523759 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.089854441 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169367494 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129884917 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.111552935 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.149162381 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.161065551 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.110827506 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107695356 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152724252 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174590831 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.098946615 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165801416 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111300523 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.089310038 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.095497055 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129890239 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11900741 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.131174761 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089869667 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.124813011 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168866247 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.083301082 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104333347 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141270032 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08710662 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089068727 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111681057 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112324898 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.105784078 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.106924068 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.109286851 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13956662 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.283426343 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.116010994 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133908558 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.10813117 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1730056 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097100242 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.112497978 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113598609 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.079396714 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.136745215 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159186854 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.088715826 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165104749 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.129211818 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124138259 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127541416 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.092461068 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.141311995 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.087387489 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.078960633 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14629906 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.1192702 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.117438399 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.156178791 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123443582 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.129822527 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.12491961 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136790118 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134578803 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.134708056 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113454486 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.097565594 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.121428657 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135102994 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.082678715 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.099050032 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.089023364 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113170739 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104045953 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.091837856 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147290138 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128774221 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.114014299 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.119416382 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103307791 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15075297 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.084534863 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132236846 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.126849935 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103505525 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.156085931 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154263687 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137236263 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106448183 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.292242175 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.082137079 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.08483861 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.096613286 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.130079478 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.093124346 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.093190914 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122670672 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150536237 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13572212 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140574356 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13108925 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127253175 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160009163 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.079654645 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.127933599 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149106494 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12723921 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.113419142 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100117545 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.108632745 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145716759 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113552747 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181415858 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122491467 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133137745 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162701791 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.111497902 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.089249757 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111396358 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139115783 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109234748 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14698524 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104169973 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.093283644 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114653342 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.084787555 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.106246638 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133661847 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125607516 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142476838 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.121250398 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137330972 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.085844152 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12093046 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.128484812 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127962887 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.073932942 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124835593 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16771361 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103229271 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123170012 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.305709315 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.088979308 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.14686641 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175898636 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151316661 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.094259096 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116124708 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.128599669 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133014129 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12777309 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141989604 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1143272 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143476072 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.118164002 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.094892807 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.095934567 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105600716 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.11256435 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.103886512 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.110402961 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.121359626 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.105529099 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13856972 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112255612 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.118895365 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125890554 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.10869884 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.102175408 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105657982 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178871383 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126660378 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173576666 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.109176598 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.145464252 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166066229 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.084736981 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088581174 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.087532618 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143619158 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.093832948 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137033005 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.119180369 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122523981 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126618227 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142810333 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103534518 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.077512061 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.115955883 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138396309 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129165987 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105355777 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.109780951 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162533347 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.102732047 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082804005 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.264945689 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123957218 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113572001 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172489123 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.071367905 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.116773672 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.086586192 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.089253341 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131151933 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.154046205 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.089269632 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.108359163 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127499091 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119305274 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132114004 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10767554 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.115427551 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131611812 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151581204 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135223321 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.098447032 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.118573292 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136647488 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15975269 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110918387 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.107499967 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175539047 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155045405 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.161744075 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.093227584 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122162749 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120147974 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.115287735 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140878557 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.091490009 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163809962 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091265778 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142542317 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109472616 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096081422 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13272777 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.118267472 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.096484917 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148589082 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124036265 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091307288 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.086186634 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121577371 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125684331 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110926647 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.082545813 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.294258946 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.085140771 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141683375 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167544159 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090801222 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.114680647 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.105602981 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090004623 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112966172 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107916553 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.092521162 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.106058973 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170181254 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.09238027 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150225584 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140126375 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118755436 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141251204 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111288419 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.649091286 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.086609542 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154540774 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.122324356 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175608748 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108227427 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125838353 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.118254635 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126904822 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.148393161 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110673117 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.185986982 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136418646 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.123549146 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.088687255 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109683519 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111779076 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.096192446 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.115933377 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121967108 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121882982 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.099686701 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.122005856 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127771674 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.089684058 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103726099 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157416839 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.121581074 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146659977 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141889491 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.092593135 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123571905 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157535842 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.240080264 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.12550445 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158295829 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11434103 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107829883 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.091202935 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.109621863 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163864455 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.082792499 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162148403 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129878528 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.118899209 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121396135 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.118253627 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135603782 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112572515 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129036531 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100257388 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.115595085 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.121972611 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090580646 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.085881993 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113364191 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118347363 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.107765114 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.104975356 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.108680734 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154165602 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.081925987 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106828828 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124814551 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146995041 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172043221 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.096758356 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.091398416 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125941057 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119481645 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.11794035 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129085509 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.088766826 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090623641 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.088750058 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.09084293 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.115548474 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.119872483 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121246227 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11696744 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162646042 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.092070553 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.234543405 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103325298 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111212341 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.079454316 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.08607302 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102991922 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102933565 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.263621997 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.115813556 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166519291 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.105780187 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.099896608 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100868937 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.086433722 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.093584964 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133623794 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119045808 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12579571 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108506331 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.072883941 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113954679 seconds)
  done (took 62.168907992 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.113735425 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.089478331 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.103991241 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.149352118 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.128290037 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.206638584 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.157336666 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.195518122 seconds)
  done (took 2.711889825 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.07510234 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.102438439 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.113915004 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.092125894 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.076068061 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.0795589 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.238583203 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.092568665 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.075958526 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.10323234 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.089507729 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.078554875 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.426749444 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.075357528 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.078531271 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.07354609 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.076814681 seconds)
  done (took 3.502582715 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.407962811 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.625933641 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.352480598 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.088145983 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 5.01715414 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.09839425 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.318593072 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.141705884 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.085991946 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.539276574 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.413717859 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.140466304 seconds)
  done (took 18.796621509 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.089457941 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.085314753 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.098519411 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.099003178 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.087564889 seconds)
  done (took 2.023759422 seconds)
done (took 111.461940299 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.090206623 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.441796168 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.063421769 seconds)
  done (took 2.095334861 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.094624057 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.094085727 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.094815477 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.092812964 seconds)
  done (took 1.946426488 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.081995865 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.0862064 seconds)
  done (took 1.736982406 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.239863747 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.18046728 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.10694343 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.090356207 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.088382047 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.090030682 seconds)
  done (took 1.842455265 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.078854345 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.08307767 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.0818039 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.085341953 seconds)
  done (took 1.898440439 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.082945376 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.061253188 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.063285157 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.066738419 seconds)
  done (took 1.843410454 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.093674524 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.092027092 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.088650509 seconds)
  done (took 1.845597771 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.106285157 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.09649568 seconds)
  done (took 1.772884357 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.087718054 seconds)
  done (took 1.659578146 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.094952538 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.107350438 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.143869315 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.123873369 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.149844047 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.124489947 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.093257591 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.093755703 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.087356531 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.096456008 seconds)
  done (took 2.684370475 seconds)
done (took 21.504481064 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.0849088 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.378981586 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.365828718 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.096860992 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.677766007 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.366872158 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.992119799 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.104095326 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.152436571 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.077603603 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.095398217 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.65893273 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.985063365 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.340150425 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.973929605 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.338601148 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.662355921 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.078724334 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.077879805 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.078504642 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.980062815 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.07843277 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.079297609 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.079157746 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.662511354 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.383384351 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.079016034 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.358676709 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.078534935 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.080665883 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.365428009 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.078754416 seconds)
  done (took 16.437942402 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.077580437 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.127503204 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.082314489 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.095485528 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.081095078 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.079820032 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.082479765 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.079516435 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.132631718 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.078634177 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.097061327 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.078544765 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.083237246 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.07967353 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.099354529 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.081410679 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.079464304 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.078833788 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.079291722 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.078920717 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.097890054 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.078951076 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.078905507 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.08003029 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.078885482 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.091582176 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.079276071 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.07898221 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.078766766 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.081217571 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.08246346 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.079912069 seconds)
  done (took 4.323834298 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.123820527 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.135107833 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.083501212 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.11632902 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.123380911 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.081198085 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.156117088 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.105535156 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.140092504 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.078957169 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.096973292 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.078638617 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.11244533 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.079900246 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.098531081 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.078373791 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.07996331 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.078901087 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.078872145 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.079570503 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.09897428 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.07880986 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.079060939 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.079667201 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.079055976 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.092994833 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.079221344 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.078928322 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.078923156 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.081794921 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.082720604 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.080020703 seconds)
  done (took 4.579893003 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.079399687 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.083581334 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.090235199 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.093429857 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.078452176 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.081137243 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.083198069 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.079110097 seconds)
  done (took 2.254228776 seconds)
done (took 29.169091446 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.085502801 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.078778501 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.082810545 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.099119793 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.083945552 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.086950305 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.076615888 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.085834351 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.083394247 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.083609955 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.085018274 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.077159872 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.081545766 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.076827076 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.0840132 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.078241066 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.088863405 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.081672731 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.088779 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.089172647 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.080343815 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.083136575 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.085463677 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.088204783 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.088143636 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.088592467 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.086667528 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.082934707 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.077859976 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.080409621 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.087095855 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.094006241 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.077320769 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.087522044 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.077483575 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.076781951 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.081026615 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.077047701 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.08780861 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.086137389 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.079079478 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.086568117 seconds)
  done (took 5.072814116 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.094607743 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.102214811 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.094349418 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.071543 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.078341074 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.07513933 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.099702796 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.069859239 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.070332766 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.099189834 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.066459018 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.069162325 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.073384444 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.064852177 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.07033576 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.067420645 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.071351286 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.064760868 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.070505705 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.069814996 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.098877179 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.064146594 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.087577013 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.072898026 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.066638226 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.072057506 seconds)
  done (took 3.60012111 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.082131049 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.089879007 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.098790769 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.154059369 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.120828354 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.087418169 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.08809576 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.101970991 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.10416561 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.076168256 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.080664644 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.103793218 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.097747789 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.083358147 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.077104258 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.094552869 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.094828239 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.078767467 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.082774659 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.104635289 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.095471079 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.09531003 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.101631981 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.091306767 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.076114522 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.079623171 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.081048644 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.091659604 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.079636468 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.086307773 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.079875884 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.080361961 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.079007496 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.088593951 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.07980232 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.07849698 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.103946826 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.087469997 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.088217687 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.077645874 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.085359343 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.078328633 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.101460133 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.134669792 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.076098189 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.083184296 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.080805207 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.087671137 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.076923185 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.104099977 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.088647416 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.076494308 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.080090081 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.07649313 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.076779646 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.080060906 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.078571451 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.079815092 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.085826279 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.082516914 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.101248554 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.082273689 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.093846718 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.076477352 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.085344805 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.075938286 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.078125285 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.075435778 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.101769056 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.079115069 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.118872899 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.077840534 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.077931713 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.087328284 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.085619675 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.08378037 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.077779365 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.094394989 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.087641954 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.080201637 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.085851721 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.080567832 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.079561081 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.105396415 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.080004536 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.079043116 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.078016337 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.082548966 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.079642697 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.078666726 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.090647023 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.077059118 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.079966517 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.094306396 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.076172198 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.07839126 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.082735298 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.080995152 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.075985048 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.088544614 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.081220207 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.077260058 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.087075001 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.076557767 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.079318671 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.088908717 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.08341237 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.075353878 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.080826557 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.081853095 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.076999134 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.078228805 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.079252892 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.078003775 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.085472734 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.084017492 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.081282161 seconds)
  done (took 11.68449394 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.17128002 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.165432497 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.081336676 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.157106278 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.087383723 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.088654572 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.158417961 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.104161092 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.077637232 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.078333068 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.077860141 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.118219762 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.113624729 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.126014537 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.087897579 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.077181814 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.100219602 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.123254432 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.15959953 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.155546569 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.100669704 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.086573005 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.07979552 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.078660961 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.079591204 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.087463501 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.097019755 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.085405236 seconds)
  done (took 4.640372647 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.08661961 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.111440983 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.084097406 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.101057112 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.099479926 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.077717946 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.079775397 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.079180913 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.094606134 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.087357168 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.07704589 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.08224586 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.083985623 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.080303124 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.078042187 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.08423528 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.084033012 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.078688322 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.080641315 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.085089256 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.087971924 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.101508117 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.08042132 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.076742308 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.081786088 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.076324598 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.071840223 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.092822291 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.077422594 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.103115031 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.075108609 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.082733076 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.091484988 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.078259583 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.077132489 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.077286743 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.076879394 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.077057405 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.078917948 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.075404154 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.075475568 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.067268101 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.076227968 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.087985542 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.090778228 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.065701419 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.081820892 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.082196019 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.083011396 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.074972638 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.080005234 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.080360009 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.08039207 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.085635273 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.081725291 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.082791641 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.078647518 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.086610443 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.085809676 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.07684445 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.073865784 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.075872865 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.082233531 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.074193628 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.092515157 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.08222604 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.076419954 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.077202897 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.079140127 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.090607385 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.076893549 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.082038698 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.074781901 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.079162685 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.081978252 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.079064891 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.07860233 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.075955726 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.07696233 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.077368967 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.064516182 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.077904507 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.062570028 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.080188986 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.075249874 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.076316879 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.07736525 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.082229675 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.088542711 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.078541498 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.082997713 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.078398748 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.076332716 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.080813804 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.069644901 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.079476044 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.088000696 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.091718784 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.077218817 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.075080764 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.090589521 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.082183274 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.076053056 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.066483875 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.081067514 seconds)
  done (took 10.125675663 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.099982957 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.079783345 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.093076643 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.099941426 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.097300175 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.084775073 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.087878877 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.078792333 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.095298387 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.084060806 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.087294285 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.078486101 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.088581957 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.087401232 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.079252521 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.087630544 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.08158225 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.092983857 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.092077696 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.077550448 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.086137659 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.090259692 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.099095057 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.090491744 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.088917297 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.090176673 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.100235114 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.0876325 seconds)
  done (took 4.128251641 seconds)
done (took 40.83020067 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.690538271 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.850942306 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.672680767 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.981075513 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.867298575 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.68882713 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.861931047 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.667637098 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.844160298 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.711040472 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.988875665 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.734923691 seconds)
done (took 64.285531431 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.749277309 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.806094363 seconds)
    (2/2) benchmarking "String"...
    done (took 1.893035647 seconds)
  done (took 5.297398515 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.881296529 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.347476543 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.904259928 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.665630751 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.6731133 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.924658767 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.474264974 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.207863011 seconds)
  done (took 29.795238521 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.845069661 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.89842641 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.372029322 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.404730274 seconds)
  done (took 15.17086251 seconds)
done (took 61.58381265 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.661498396 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.713025668 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.711802482 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.653097236 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.725840152 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.680478487 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.022545985 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.715904388 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.666972311 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.656048205 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.668985873 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.100320398 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.675071392 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.914666218 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.672654136 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.676462396 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.743694133 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.144055305 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.824064841 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.683027333 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.672687186 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.668499111 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.675262232 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.679049926 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.708392063 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.668362258 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.066582206 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.678847891 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.292913408 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.670203038 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.700885392 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.056438148 seconds)
  done (took 200.44498098 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.66779307 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.715082694 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.774069661 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.682248316 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.209008898 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.855429033 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.768544875 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.236118055 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.675189192 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.689538637 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.925268785 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.670991806 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.945405088 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.613231427 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.718160023 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.668651906 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.888908525 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.935936736 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.722174073 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.836208005 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.696011219 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.803158088 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.759468027 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.892521197 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.709936903 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.773177979 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.84337453 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.693583833 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.868657723 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.873971405 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.675433082 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.699676531 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.891853601 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.542539517 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.67132557 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.679587728 seconds)
  done (took 166.871027437 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.861946738 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.670963869 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.669088167 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.669339177 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.682196395 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.67039868 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.795243064 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.799745426 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.31756014 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.968520707 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.726539363 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.670847891 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.480459116 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.671166845 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.736998771 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.682908315 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.676139436 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.684469693 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.696066517 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.675044585 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.671821319 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.797633334 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.683406332 seconds)
    (23/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.66935048 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.677700148 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.670994651 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.676656434 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.043173817 seconds)
    (28/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.671158837 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.748483966 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.670478286 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.676272331 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.92725947 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.671753896 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.670583794 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.527718338 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.753207536 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.766241563 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.671964032 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.675565723 seconds)
    (40/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.671206517 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.887922122 seconds)
    (42/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.672098434 seconds)
    (43/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.671133861 seconds)
    (44/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.672805199 seconds)
    (45/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.675551132 seconds)
    (46/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.821400621 seconds)
    (47/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.67145619 seconds)
    (48/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.79860095 seconds)
    (49/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.672407024 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.156140784 seconds)
    (51/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.672338834 seconds)
    (52/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.671767992 seconds)
    (53/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.350224593 seconds)
    (54/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.271003701 seconds)
    (55/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.675923258 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.672069512 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.674761091 seconds)
    (58/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.672337045 seconds)
    (59/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.672456625 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.678004443 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.38978338 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.747549497 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.674586893 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.676689435 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.678926507 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.673221992 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.711019129 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.673234052 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.487619245 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.738768402 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.788820958 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.794543638 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.677478939 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.739267605 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.766528762 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.673368183 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.672308752 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.673521371 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.672654898 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.753182696 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.673818876 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.804597161 seconds)
    (83/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.672732558 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.680123134 seconds)
    (85/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.674964187 seconds)
    (86/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.724559879 seconds)
    (87/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.74172797 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.673056992 seconds)
    (89/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.512990494 seconds)
    (90/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.677627866 seconds)
    (91/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.672907611 seconds)
    (92/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.937462119 seconds)
    (93/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.74021242 seconds)
    (94/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.67336521 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.673953186 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.802456637 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.799236702 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.384567217 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.679336886 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.415004056 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.815961911 seconds)
    (102/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.674110562 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.674962646 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.819635809 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.680566722 seconds)
    (106/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.673859174 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.755798877 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.679437219 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.675419488 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.70751032 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.675995652 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.729670773 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.679085416 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.049211715 seconds)
  done (took 390.834771866 seconds)
done (took 761.668308197 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.279024106 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.248115756 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.350671837 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.275228137 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.245056178 seconds)
  done (took 13.002675871 seconds)
done (took 14.605945427 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.761297769 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.76694818 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.698141956 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.765776848 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.69489781 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.762655158 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.747687607 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.699585754 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.731797321 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.698973765 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.733672396 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.69954895 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.687588395 seconds)
  done (took 24.053874247 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.90420729 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.910921085 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.745660992 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.906410644 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.721566899 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.902897404 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.835015404 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.824305328 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.830374898 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.692236404 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.687365513 seconds)
  done (took 21.566610242 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.906646309 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.911058645 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.751988165 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.907820023 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.724891879 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.90978937 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.837145207 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.827502186 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.82630201 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.692577738 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.688539591 seconds)
  done (took 21.590045209 seconds)
done (took 68.813342824 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.684290799 seconds)
  done (took 3.290093346 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.712625477 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.881287848 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.689987607 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.68863798 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.684373308 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.6866885 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.688882057 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.684398154 seconds)
  done (took 15.324305319 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.684072741 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.684597467 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.683301 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.681516152 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.683578904 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.683134311 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.680996404 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.681343771 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.68146863 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.681076517 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.684188364 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.681009879 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.681368349 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.684752549 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.681850783 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.683650919 seconds)
  done (took 28.529222603 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.682847482 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.680569331 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.682057907 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.681687598 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.681579917 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.682241475 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.683241127 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.681830849 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.681338571 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.682921 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.682084746 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.680990292 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.68143407 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.680956218 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.682221858 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.682967355 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.682010958 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.682525707 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.686571657 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.68221388 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.683473605 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.681930849 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.682499379 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.68361936 seconds)
  done (took 41.985491808 seconds)
done (took 90.733151479 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.39500194 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.446602135 seconds)
  done (took 9.450331534 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.685111214 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.685869562 seconds)
  done (took 4.982304129 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.686239113 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.68524507 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.68619382 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.684980685 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.684477623 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.685525067 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.685227798 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.685029023 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.685991524 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.685833905 seconds)
  done (took 18.463027429 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.685241846 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.684874961 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.683238002 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.685338316 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.685918514 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.682369534 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.685145987 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.686718482 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.685580797 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.68341584 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.685817999 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.68315984 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.686398848 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.683342037 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.685604757 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.683312371 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.683471107 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.684069358 seconds)
  done (took 31.931672814 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.686042732 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.68692801 seconds)
  done (took 4.981817424 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.683375203 seconds)
    (2/7) benchmarking "second"...
    done (took 1.683874212 seconds)
    (3/7) benchmarking "month"...
    done (took 1.683792222 seconds)
    (4/7) benchmarking "year"...
    done (took 1.683284469 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.683800167 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.683518829 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.683929581 seconds)
  done (took 13.394483195 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.687902104 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.830721364 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.89493455 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.337474118 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.690513774 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.690745292 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.599841972 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.69104581 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.691938228 seconds)
  done (took 18.725292719 seconds)
done (took 103.53655173 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.525839362 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.687932426 seconds)
  (3/8) benchmarking "parseint"...
  done (took 2.911641685 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.736568291 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.7434492 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.981331209 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.721495981 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.975428575 seconds)
done (took 41.894252886 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.686599963 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 3.37342457 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 3.452146503 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.710189814 seconds)
  done (took 15.14695291 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.681688187 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.085944729 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.690394862 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.548278777 seconds)
  done (took 21.791833849 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.056160368 seconds)
    (2/2) benchmarking "read"...
    done (took 2.035184598 seconds)
  done (took 5.707050796 seconds)
done (took 50.943369067 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.689327099 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.68921019 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.690532991 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.686549274 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.690020719 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.68732904 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.687182603 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.689911721 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.690143055 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.690762249 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.689176604 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.689701281 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.687814754 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.687460733 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.690450104 seconds)
    (16/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.687073822 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.685967146 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.6869412 seconds)
    (19/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.687714324 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.687058466 seconds)
    (21/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.68933592 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.689464309 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.687310188 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.688019301 seconds)
  done (took 42.136630841 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.689555899 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.687819435 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.690175934 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.689706518 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.686915302 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.689388637 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.689753763 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.687154316 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.689885163 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.690080337 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.687910116 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.687720043 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.691278733 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.688143235 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.690215233 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.688182796 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.689743393 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.687091247 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.691007272 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.688024303 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.68989528 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.687980514 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.688461832 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.690234119 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.688341672 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.688523542 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.693904139 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.688553726 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.690047769 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.689013729 seconds)
  done (took 52.287436299 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.695793381 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.699802757 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.690739025 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.690965341 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.690740551 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.69131884 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.691254503 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.691842045 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.691481315 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.691643055 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.692752811 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.692220436 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.691768063 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.692058478 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.691797334 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.692627137 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.69242212 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.693091047 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.691214705 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.691385757 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.691227496 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.69196091 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.691396435 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.691519475 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.691161111 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.692501408 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.692197121 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.692047641 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.692185496 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.69207089 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.692423293 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.692779382 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.69201982 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.691776531 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.693418713 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.69289313 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.698946089 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.699918914 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.69157687 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.693024208 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.692698254 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.693430817 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.692051701 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.692956085 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.692275837 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.692758958 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.693066099 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.692748063 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.693214598 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.693066565 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.692898555 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.693145699 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.693537151 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.693305029 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.693801466 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.693868405 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.693870334 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.693752183 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.693603351 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.694046223 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.694191042 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.693536599 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.693831872 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.693610106 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.693609536 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.694383041 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.693418357 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.694443007 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.693846426 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.694211518 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.69480709 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.694013946 seconds)
  done (took 123.511972542 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.695059239 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.691259623 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.691308877 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.691466424 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.691438206 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.694325643 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.693367906 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.695429739 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.692473438 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.69542618 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.694631268 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.692946994 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.692896639 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.695499583 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.694154315 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.69196809 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.694931256 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.692775264 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.69555198 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.695256376 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.695498678 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.693337436 seconds)
  done (took 38.877745608 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.695291823 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.695347431 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.693416123 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.695773023 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.692165638 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.695436046 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.694950205 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.695694458 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.695988359 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.692066104 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.693870748 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.69571635 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.692865993 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.693490691 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.692495306 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.693872218 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.696575557 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.693553137 seconds)
  done (took 32.116728311 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.693636204 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.69364058 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.696685632 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.693734138 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.69442748 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.696505054 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.694525905 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.696157157 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.695931922 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.694742132 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.696968993 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.69610229 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.697133534 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.693894923 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.697320266 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.694697744 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.697042796 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.69446498 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.697161672 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.694628821 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.69508286 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.698032395 seconds)
  done (took 38.921576918 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.696463283 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.697690195 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.695200931 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.696458454 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.698588938 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.697515751 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.697283324 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.694946761 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.696413799 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.697558496 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.694659443 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.697091124 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.694755406 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.695484872 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.695326743 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.694666219 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.697656604 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.69545239 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.698740066 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.695343727 seconds)
  done (took 35.54720285 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.701992264 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.700387095 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.69986663 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.699551759 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.699398071 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.699526794 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.699680729 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.699191719 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.700150029 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.700310943 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.699530159 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.699730348 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.699860775 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.699544117 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.700006339 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.699830186 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.699912155 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.700318842 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.702826485 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.700336217 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.701037589 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.701727535 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.700563949 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.70065351 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.699964927 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.701833487 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.701026831 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.701647393 seconds)
  done (took 49.231680907 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.699571658 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.699491684 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.697436644 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.697015307 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.696747984 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.697464547 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.69703031 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.701379343 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.699457329 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.697528757 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.699107254 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.699220732 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.700539163 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.699961827 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.700815043 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.700241633 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.699953197 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.697348953 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.697581828 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.696843831 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.699720966 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.700259775 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.70037777 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.69772424 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.698927609 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.704625281 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.697577578 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.698167801 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.700193497 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.698278359 seconds)
  done (took 52.593195295 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.719535318 seconds)
    (2/2) benchmarking "in"...
    done (took 1.718742321 seconds)
  done (took 5.061417577 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.697071993 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.70096061 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.701034816 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.698879798 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.698453453 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.70082966 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.701621022 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.697803113 seconds)
  done (took 15.21983152 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.702841467 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.702023448 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.701660198 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.70188463 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.70256163 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.702006402 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.709467019 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.702492509 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.70332924 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.703886566 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.709381424 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.710558514 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.704952218 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.703369874 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.701642662 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.703430924 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.701794113 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.708781824 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.703014553 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.702380737 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.703791985 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.704535544 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.704990648 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.700254707 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.705059193 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.713884953 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.707442925 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.70267951 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.70388008 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.70616234 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.702650269 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.700284281 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.7037346 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.703539751 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.703824959 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.708310029 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.711475475 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.70351707 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.709072459 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.704642539 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.703633442 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.701277246 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.704826991 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.704667507 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.703702426 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.70400739 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.704219648 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.700450129 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.703120006 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.706987592 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.709092339 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.703370228 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.705098558 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.7077892 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.705526316 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.711986583 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.705638734 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.70739493 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.713096053 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.715154965 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.718026865 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.712073417 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.705266265 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.705709259 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.715248089 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.729535524 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.711808621 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.702423422 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.701928718 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.705502356 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.715815252 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.718747224 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.715337848 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.706638567 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.706114354 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.705070736 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.706261298 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.70586795 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.713385021 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.709464114 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.705882792 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.706626606 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.715255405 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.729198083 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.705183803 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.705608423 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.706981395 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.708898567 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.707295905 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.717316918 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.707351981 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.705784929 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.705047788 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.706793826 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.707403657 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.70711346 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.70516864 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.707371798 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.702829032 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.706325485 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.70745356 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.708910428 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.715689049 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.707672328 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.707101158 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.715885257 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.706182575 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.706665133 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.712660418 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.705825578 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.706967904 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.708483327 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.713569984 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.703623385 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.709863929 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.715879997 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.707135352 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.707777355 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.708051053 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.707775866 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.716745314 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.733694753 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.708597492 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.710496787 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.712020693 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.722362274 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.708617585 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.710514937 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.708069692 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.704997299 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.705266615 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.710005246 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.707603691 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.708452638 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.70917695 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.709664915 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.705735016 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.708342998 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.708924229 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.71053575 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.713813179 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.708202635 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.710427415 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.710622641 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.710295316 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.710934421 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.715150877 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.709156777 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.709177292 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.709945034 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.706019914 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.70884799 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.708875334 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.709965934 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.709064741 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.709676129 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.708505774 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.709322615 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.712461189 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.710078363 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.710129955 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.710791046 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.714380899 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.711491892 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.712510807 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.709133093 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.706590772 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.709106491 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.708852204 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.70920647 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.709757913 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.708645147 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.712459465 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.718602119 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.709600286 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.713650175 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.712885135 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.711288667 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.711244513 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.711407237 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.713096491 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.718024759 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.710996149 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.716931378 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.711099618 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.711316842 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.71066276 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.710908145 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.710237165 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.711742887 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.713971624 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.719241391 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.725207111 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.722848391 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.712264272 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.716005784 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.712080253 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.716127923 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.714901501 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.712291291 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.711803956 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.713221731 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.710059843 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.7117348 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.713533649 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.711385739 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.711310875 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.711405185 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.71172549 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.712333171 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.71458828 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.713510134 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.712438393 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.708998692 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.711965567 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.712635353 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.711703663 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.708608627 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.710921391 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.711620414 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.711894376 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.712854238 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.718280948 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.709413692 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.712543709 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.713049496 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.713282319 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.711497417 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.715374282 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.714046656 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.711714748 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.720247343 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.712898649 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.714903667 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.721192023 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.712670853 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.711788322 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.714663764 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.712518814 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.709974215 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.715963446 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.721198435 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.713019567 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.714735152 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.714160518 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.716016617 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.714343853 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.72042838 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.710489664 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.713603801 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.71344886 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.715497358 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.710300765 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.713789544 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.71357376 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.714472653 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.715879439 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.713871732 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.712920382 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.715277127 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.715599264 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.714857842 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.714197463 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.718584327 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.722452155 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.719121727 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.714691465 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.71599353 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.714775067 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.717835894 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.71448644 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.714038121 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.714279333 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.727465915 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.723698033 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.721956746 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.71537289 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.714674534 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.719748541 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.717102717 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.719840734 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.716141401 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.715447822 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.715307172 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.714157742 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.711926387 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.716324625 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.715499975 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.716724424 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.716781529 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.71816874 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.716378686 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.714540158 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.715296446 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.716480954 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.715709903 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.715090873 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.715014317 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.719828914 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.717244416 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.715172138 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.715215294 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.722716092 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.716361734 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.717909666 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.715657101 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.715842132 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.715672608 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.716916676 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.717939425 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.719593514 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.725526643 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.720013354 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.726260738 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.717836727 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.726637657 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.719406918 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.720906911 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.725753707 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.714285742 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.716988881 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.716207253 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.717630713 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.724604078 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.717836414 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.717842689 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.72188288 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.71754764 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.717993676 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.716688429 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.71830917 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.717267821 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.717854694 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.72731646 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.719067029 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.720932934 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.719088139 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.714737809 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.718391068 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.717060927 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.717542688 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.721166297 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.718307868 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.717808812 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.716782886 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.718086707 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.717427373 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.719478317 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.717812656 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.716288347 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.718392623 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.72447555 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.720255157 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.723422091 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.718368405 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.726541979 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.719375236 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.726328148 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.719891179 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.719079477 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.719475224 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.718155996 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.720632066 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.718265605 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.720626932 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.719407003 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.721264308 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.722316694 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.720497098 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.722791052 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.719968905 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.720358103 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.718691374 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.729390242 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.744113766 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.720939893 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.723925154 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.715990956 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.721203811 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.724544937 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.72051753 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.718636498 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.723518254 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.731034092 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.72754591 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.722005916 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.721376475 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.720283127 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.720238932 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.72049744 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.719896086 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.720860529 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.719414169 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.719946078 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.721246098 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.724124982 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.719910102 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.721851535 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.721292004 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.720621764 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.730999548 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.721116157 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.722316448 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.72629858 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.720696094 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.721622773 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.720674192 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.720879611 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.721424854 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.721996877 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.722439963 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.728842162 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.728384192 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.725214016 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.720928622 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.721547655 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.721631289 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.721677295 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.723480808 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.722327215 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.723842845 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.723948194 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.722378782 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.722359576 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.72050511 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.721832331 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.723133315 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.723250123 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.72560117 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.730053321 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.721581712 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.719023889 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.723025849 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.722040656 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.721505727 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.723472377 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.729995058 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.725803045 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.737149107 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.731952553 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.728159888 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.722991581 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.725914418 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.731548264 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.722333144 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.724273819 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.723258273 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.723178689 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.723506048 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.72667987 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.723294597 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.729174389 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.723296335 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.724174093 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.731835202 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.728906477 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.723438734 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.72445185 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.728482316 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.723077704 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.720583128 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.723568842 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.722085996 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.730823545 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.724524633 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.724640541 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.725662663 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.722547199 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.725560804 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.729260194 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.72362993 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.725673476 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.72060407 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.728512889 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.724758825 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.726915457 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.721321953 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.724195639 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.723632583 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.728299594 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.731909469 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.72073014 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.726238662 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.724735843 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.726109323 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.726395133 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.725669209 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.721790107 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.72223104 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.724468065 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.731631785 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.726307317 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.727864408 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.72512442 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.72672193 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.726146285 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.7268396 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.728320625 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.736429372 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.733365446 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.722279012 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.725442574 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.726724268 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.728644742 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.726144046 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.725256981 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.725868779 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.729332204 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.72534888 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.72607886 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.725465262 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.72927231 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.741845064 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.726171576 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.725909089 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.72614062 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.729972281 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.726926063 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.723198526 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.72628104 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.729026732 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.729045908 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.734797148 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.728239898 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.732947488 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.72765182 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.727029023 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.729971667 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.731014606 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.735041468 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.729664029 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.727367621 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.726893124 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.731140414 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.744338349 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.728124191 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.736270045 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.758648837 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.728621629 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.728336512 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.727272775 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.727278016 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.732197718 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.729763004 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.727632638 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.727748136 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.727075059 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.728410268 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.728351044 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.733851467 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.72941076 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.728234493 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.728599231 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.727976446 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.72922055 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.725329646 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.729112813 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.728512256 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.728951659 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.729713668 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.733704396 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.72874419 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.741640673 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.738305738 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.728295169 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.728578459 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.72621508 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.732664104 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.731225918 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.74021459 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.735905731 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.729360914 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.729246471 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.729695014 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.72926161 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.725548428 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.729931677 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.732887025 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.729233039 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.725939021 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.74197755 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.739103843 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.734015332 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.728837364 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.730240662 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.729151994 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.730174573 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.729886202 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.730756663 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.731120062 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.729960176 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.734202595 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.729534596 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.729656569 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.73612756 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.739568102 seconds)
  done (took 1025.576571761 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.727486247 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.727571585 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.726715074 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.727540049 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.728740136 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.727372139 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.727587603 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.729180404 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.728340162 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.727003321 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.72712252 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.728312767 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.727893305 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.728362458 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.727752253 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.731412693 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.728801406 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.728913331 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.728397628 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.727780557 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.727152678 seconds)
  done (took 37.941493116 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.731230359 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.727504268 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.728687383 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.730594248 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.728576941 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.732041087 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.728300284 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.731201456 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.73145069 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.728856373 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.734989377 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.731336796 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.728705388 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.728760994 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.72936293 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.73128972 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.731961593 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.728692969 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.731193423 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.728329382 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.731569568 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.730089984 seconds)
  done (took 39.717157569 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.732619188 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.733098319 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.731066379 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.729654011 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.731657215 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.7336806 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.733128717 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.732627838 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.732438249 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.733505885 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.731699895 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.733622469 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.740751692 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.739289236 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.735211791 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.733034497 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.87595002 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.733753638 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.734004278 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.735364112 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.729333837 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.738640956 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.733251326 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.730979597 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.732028629 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.734054152 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.733575293 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.733629264 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.733874488 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.734373013 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.738964894 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.734378352 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.732989693 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.735129679 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.733231234 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.734628339 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.738512682 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.73434456 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.730415792 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.738428637 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.744855268 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.754637944 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.734902061 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.741986486 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.735054249 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.733965567 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.737964163 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.742859288 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.731904079 seconds)
  done (took 86.813986503 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.73391904 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.734685417 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.730834903 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.733928464 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.734963621 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.733420952 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.735207042 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.73735786 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.734408957 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.731397658 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.733293226 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.731658635 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.730411323 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.733219513 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.734270461 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.729578134 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.731300113 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.72994382 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.729636064 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.730526159 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.73064966 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.732595591 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.732537169 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.730030485 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.736947211 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.730409011 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.730347624 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.732669917 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.730665798 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.729416454 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.733451407 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.734133495 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.733145915 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.732046612 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.730596619 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.733883378 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.733919225 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.731531839 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.732700136 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.729710851 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.733612908 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.733323808 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.732109044 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.734850821 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.730527683 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.729831993 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.730114048 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.729177337 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.731113522 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.733841737 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.732783713 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.731532531 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.732884778 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.730660487 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.733863238 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.732494768 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.729913814 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.731048893 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.732350915 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.730870523 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.731143646 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.7326287 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.730751455 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.732749776 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.732153868 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.730299224 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.728239367 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.72631021 seconds)
  done (took 119.435490825 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.727308524 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.726741768 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.727391608 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.727615516 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.725647109 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.727465579 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.726419405 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.728505363 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.726235231 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.725991221 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.72479979 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.724251505 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.725011442 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.724329597 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.7252666 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.724796759 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.725181217 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.726286561 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.726023768 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.724577405 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.725625201 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.726002006 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.726146714 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.725746754 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.727288642 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.727906108 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.725651456 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.725995378 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.725958959 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.724797506 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.725603553 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.725620952 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.726043988 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.726382032 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.726629833 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.725758096 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.725774433 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.725789587 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.725997003 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.726034956 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.72556187 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.72594586 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.728415366 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.726472716 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.725452458 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.725225673 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.72626495 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.7266931 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.72503179 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.726874964 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.725476785 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.725715285 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.725560892 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.72511876 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.725453734 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.726591979 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.724968008 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.725885559 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.726231249 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.727446604 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.725838288 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.726694374 seconds)
  done (took 108.662640755 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.724313672 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.725537202 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.722854833 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.722952068 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.725800365 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.723123505 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.725475493 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.724974731 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.72708847 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.726374425 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.72512864 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.722238682 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.723391115 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.726093646 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.723992203 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.725333314 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.722686775 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.724598455 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.725091184 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.723906886 seconds)
  done (took 36.137105545 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.72414232 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.725026724 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.722373286 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.722263292 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.725857138 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.722771736 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.725931676 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.725771606 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.722478937 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.726060958 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.727598391 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.72512476 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.723612434 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.722919492 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.72549376 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.722930231 seconds)
  done (took 29.237259894 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.725390691 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.724989616 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.724488993 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.724115466 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.722475221 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.721981592 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.725813894 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.716712524 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.717786232 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.720488938 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.719965863 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.722225475 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.720788947 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.720209729 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.718200468 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.719902221 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.716809039 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.718089671 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.719958454 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.721000964 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.718135851 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.717810457 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.720147132 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.720398203 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.717444332 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.717802746 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.716461369 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.716478015 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.720175195 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.72319066 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.716419123 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.71670362 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.716807258 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.717316797 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.720310265 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.71757081 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.719708599 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.719434334 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.719928979 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.719159723 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.719935751 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.719025116 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.719473536 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.719005734 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.717644585 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.71991236 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.721402241 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.718448358 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.716230865 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.716505372 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.719206169 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.720270648 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.719592415 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.720833753 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.719576038 seconds)
  done (took 96.228629057 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.719070757 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.71921221 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.717511956 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.720839464 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.720524899 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.717659369 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.720583948 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.719852657 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.719022022 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.720604734 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.718162838 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.720208053 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.718956296 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.720276844 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.719443008 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.72032994 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.71786222 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.7176444 seconds)
  done (took 32.588393737 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.719217332 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.719727211 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.719948068 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.717659045 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.717336629 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.719542362 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.720004286 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.721034239 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.719123483 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.717835798 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.716651562 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.720025885 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.719633173 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.720456857 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.716191343 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.715750931 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.719259488 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.718683448 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.714776242 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.715695411 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.717793175 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.717525502 seconds)
  done (took 39.445314063 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.717122448 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.720750986 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.731575295 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.736176691 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.737551645 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.750752284 seconds)
  done (took 12.031348205 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.717666407 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.714534254 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.712536446 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.714946602 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.714992487 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.713184868 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.714476247 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.712550927 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.715003187 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.713032108 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.712203917 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.721185786 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.717016876 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.710702805 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.713288615 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.712976586 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.710524945 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.711348697 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.710394302 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.712622408 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.710266851 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.711890747 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.709933898 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.709771838 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.711102316 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.710125977 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.713164156 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.709671516 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.710797933 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.717604616 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.712172033 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.711949818 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.712667673 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.711214163 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.712976369 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.713695745 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.709755952 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.712488535 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.713013158 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.710096393 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.71379117 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.71417627 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.712937837 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.709942271 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.712772304 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.709928881 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.715206293 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.7112943 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.709023675 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.713562581 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.713025081 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.710424577 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.712475665 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.713413655 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.712734035 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.713383769 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.710485254 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.710173491 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.713175194 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.711325253 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.709633926 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.71346047 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.710775247 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.710196244 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.717744751 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.70974032 seconds)
  done (took 114.662892659 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.71046985 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.710062895 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.709777212 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.710269043 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.708766714 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.709629592 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.708970213 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.709168606 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.710196866 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.710428383 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.713102756 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.708877408 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.70955926 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.70951234 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.711521264 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.711378773 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.709324013 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.70889966 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.709227853 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.712687623 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.709805315 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.710017515 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.708798327 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.709005284 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.709406927 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.7116915 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.710126367 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.709711154 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.708323368 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.708851793 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.708087682 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.70921395 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.709447825 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.710538615 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.709317324 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.709778036 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.708731875 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.71045705 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.710496823 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.711253116 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.70879658 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.711088912 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.709296083 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.709172723 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.710240578 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.708640745 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.707285884 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.708206608 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.70904681 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.709245969 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.71209084 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.708704087 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.709283973 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.708666752 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.708075892 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.708333883 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.710705641 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.708410235 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.708893848 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.710514885 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.708481842 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.708095781 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.711830368 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.708234251 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.707838599 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.708365048 seconds)
  done (took 114.466912251 seconds)
done (took 2380.063929271 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.720060023 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.695781451 seconds)
  done (took 15.051498746 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.871612223 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.823386217 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.709179094 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.747771809 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.709515726 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.736823718 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.72803194 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.709463095 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.709751828 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.708581218 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.708366442 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.896047026 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.764210964 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.708549366 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.711827331 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.801026095 seconds)
  done (took 49.679165551 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.710976471 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.713306231 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.722904955 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.716364932 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.711415771 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.723864744 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.74545163 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.715068465 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.745438835 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.727257192 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.782045778 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.727983647 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.711012531 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.760595485 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.730963983 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.725765223 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.800658773 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.787939241 seconds)
  done (took 32.890556456 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.788261283 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.728668273 seconds)
  done (took 10.154180922 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.729553092 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.750867375 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.761756552 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.724682885 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.729077284 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.742776516 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.735909857 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.731787197 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.725026103 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.740925179 seconds)
  done (took 69.005959248 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.714638371 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.710787497 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.710839749 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.708058581 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.702928899 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.707678988 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.70801239 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.702928961 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.373287152 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.746114568 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.719055785 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.714294466 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.708474828 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.710775292 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.707260623 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.731529888 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.813670773 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.707048658 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.707737562 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.71421873 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.708998862 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.760927216 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.723794611 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.71036663 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.738903881 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.374134657 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.719498556 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.716822689 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.827551475 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.706765138 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.708874628 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.709258139 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.711072072 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.103833477 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.988749316 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.710734093 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.72513437 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.717549283 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.707925975 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.811570824 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.709714399 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.721272975 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.434274313 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.971696859 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.806991817 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.751045118 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.027939456 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.727064595 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.711390923 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.739234333 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.713789409 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.711830361 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.723307752 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.197120717 seconds)
  done (took 123.484350576 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.707250878 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.056834897 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.87738507 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.707290566 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.992217102 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.918764685 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.708155687 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.758128894 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.708350506 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.941529807 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.963512571 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.81493955 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.707715676 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.709693805 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.706929571 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.705300091 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.864100919 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.781312554 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.707966278 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.706869487 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.737847534 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.952540656 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.831584976 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.708589341 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.737775836 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.919688392 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.831241567 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.812475055 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.509336909 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.706402945 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.772214698 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.712957369 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.708664361 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.706533471 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.864808046 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.804648324 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.79255856 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.709610966 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.70708796 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.706598943 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.459732936 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.911383696 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.806859082 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.839173762 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.96161224 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.914642242 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.489982202 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.71154475 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.445707446 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.876460676 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.937154592 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.943265702 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.82945602 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.710499331 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.25403183 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.712030143 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.706283667 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.95913806 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.931509296 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.80735484 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.714890607 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.709005358 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.706224137 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.004039712 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.711333664 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.805973226 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.716552677 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.709103994 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.806918445 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.809293001 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.94263619 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.923949913 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.74189659 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.052590951 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.222417278 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.957902378 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.777566641 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.961442321 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.711120074 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.707609127 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.789466984 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.557614649 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.963300129 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.992381956 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.956036386 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.745946237 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.430681457 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.707754646 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.936764008 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.932263012 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.971444113 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.960540243 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.948247479 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.036812584 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.708669433 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.708525617 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.028455808 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.836735163 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.711014893 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.062820106 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.943163637 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.262778573 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.738571384 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.014251194 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.840870685 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.71234789 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.343197335 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.710614358 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.940534758 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.751104909 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.710347692 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.709803736 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.933254835 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.707548184 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.710336905 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.615412934 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.774574928 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.713366373 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.944201366 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.71196774 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.980121263 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.713451787 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.944972006 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.73800895 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.745390657 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.941839966 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.961184017 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.71249204 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.951546603 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.955849124 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.828036242 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.985391098 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.615407199 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.712932617 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.997535811 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.713019176 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.711703342 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.882761004 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.712433968 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.854445303 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.712849052 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.006512891 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.734695893 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.945544021 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.71782804 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.971822886 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.747853645 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.177733703 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.713028118 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.839066976 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.715280975 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.544577416 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.877163216 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.712509123 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.712422125 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.581257902 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.713233254 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.864503817 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.942462249 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.735558989 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.786512943 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.383467545 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.712564789 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.796230246 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.736641461 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.106270123 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.711317515 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.967746138 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.71609272 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.71142425 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.714332906 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.000914566 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.951605477 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.712574372 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.714853081 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.621630617 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.711850718 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.712605766 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.896356167 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.047621812 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.71326505 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.915747824 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.716657619 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.842836295 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.716193047 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.793177902 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.061171989 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.713496391 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.713246314 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.712827871 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.712780938 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.713630038 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.977467431 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.74120744 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.210891685 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.852843221 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.986479306 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.026959889 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.956371697 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.757829158 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.717406825 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.976318224 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.717277635 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.778962608 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.71731128 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.736908991 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.942718396 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.716424672 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.979782161 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.98591744 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.657442235 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.762991414 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.715296292 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.714977826 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.713787919 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.861773036 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.804906393 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.716675002 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.71434472 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.831388483 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.836652297 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.925987108 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.714925674 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.748021687 seconds)
  done (took 869.755284472 seconds)
done (took 1171.652207865 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.715643581 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.714459961 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.705094729 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.715017424 seconds)
  done (took 28.492973413 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.721602468 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.717798912 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.717793422 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.715127641 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.717198546 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.715010347 seconds)
  done (took 11.939276551 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.73323677 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.712093192 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.715351263 seconds)
  done (took 20.799347529 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.784074501 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.101072695 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.819521945 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.141259396 seconds)
  done (took 9.482634418 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.719292599 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.717763043 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.718379567 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.718616558 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.722189389 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.721360654 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.718264683 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.719894556 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.722347477 seconds)
  done (took 17.115237325 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.702383667 seconds)
done (took 93.172675495 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.909370872 seconds)
    (2/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.717990576 seconds)
    (3/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.301293319 seconds)
    (4/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.78737693 seconds)
    (5/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 2.790721886 seconds)
    (6/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.816425885 seconds)
    (7/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.866874882 seconds)
    (8/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.798779453 seconds)
    (9/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.812385646 seconds)
    (10/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.698749126 seconds)
    (11/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.574828818 seconds)
    (12/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.732892831 seconds)
    (13/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.850721466 seconds)
    (14/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.720665046 seconds)
    (15/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.697532735 seconds)
    (16/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.116530426 seconds)
    (17/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.943971613 seconds)
    (18/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.881022252 seconds)
    (19/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.134958224 seconds)
    (20/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.918578358 seconds)
    (21/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.721665117 seconds)
    (22/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.736854379 seconds)
    (23/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.198431867 seconds)
    (24/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.853864912 seconds)
    (25/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 2.793574365 seconds)
    (26/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.281947243 seconds)
    (27/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.03896838 seconds)
    (28/309) benchmarking ("map", identity, BigInt, false)...
    done (took 1.987091124 seconds)
    (29/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.188596047 seconds)
    (30/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.368506205 seconds)
    (31/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.718911201 seconds)
    (32/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.414312026 seconds)
    (33/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.80737713 seconds)
    (34/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.06287536 seconds)
    (35/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.948705598 seconds)
    (36/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.155915263 seconds)
    (37/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.115319209 seconds)
    (38/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.859683899 seconds)
    (39/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.884868575 seconds)
    (40/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.0190556 seconds)
    (41/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.80133149 seconds)
    (42/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.849315245 seconds)
    (43/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.01210188 seconds)
    (44/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.718243536 seconds)
    (45/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.888716064 seconds)
    (46/309) benchmarking ("sort", BigInt, false)...
    done (took 6.714873548 seconds)
    (47/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.10131054 seconds)
    (48/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.718015602 seconds)
    (49/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.473010048 seconds)
    (50/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.746318651 seconds)
    (51/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.825213798 seconds)
    (52/309) benchmarking ("map", identity, Int64, true)...
    done (took 1.952836994 seconds)
    (53/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.951208321 seconds)
    (54/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.745126018 seconds)
    (55/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.810831827 seconds)
    (56/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.835985432 seconds)
    (57/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.72142593 seconds)
    (58/309) benchmarking ("sort", Bool, false)...
    done (took 1.937520742 seconds)
    (59/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.057668166 seconds)
    (60/309) benchmarking ("sort", Int64, false)...
    done (took 5.456652622 seconds)
    (61/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.58490366 seconds)
    (62/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.972166238 seconds)
    (63/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.874324368 seconds)
    (64/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.739388695 seconds)
    (65/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.871659486 seconds)
    (66/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.954657181 seconds)
    (67/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.811368186 seconds)
    (68/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.118504387 seconds)
    (69/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.743487343 seconds)
    (70/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.701305949 seconds)
    (71/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.931141115 seconds)
    (72/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.805363759 seconds)
    (73/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.73864267 seconds)
    (74/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.701682381 seconds)
    (75/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.170416246 seconds)
    (76/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.739575778 seconds)
    (77/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.11951639 seconds)
    (78/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.748887984 seconds)
    (79/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.159521964 seconds)
    (80/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.088008002 seconds)
    (81/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.742190946 seconds)
    (82/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.007616703 seconds)
    (83/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.214656565 seconds)
    (84/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.742847533 seconds)
    (85/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.715163081 seconds)
    (86/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 3.225472934 seconds)
    (87/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.704844828 seconds)
    (88/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 3.2703251 seconds)
    (89/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.405436472 seconds)
    (90/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.627592907 seconds)
    (91/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.719163346 seconds)
    (92/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 3.426160948 seconds)
    (93/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.176052188 seconds)
    (94/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.729647425 seconds)
    (95/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.105081306 seconds)
    (96/309) benchmarking ("sort", Int8, false)...
    done (took 4.628305611 seconds)
    (97/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.898600873 seconds)
    (98/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.840899819 seconds)
    (99/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.757834112 seconds)
    (100/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.734544623 seconds)
    (101/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.753816961 seconds)
    (102/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.026827729 seconds)
    (103/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.723111823 seconds)
    (104/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.994664095 seconds)
    (105/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.896817538 seconds)
    (106/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.624559746 seconds)
    (107/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.98961852 seconds)
    (108/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.740050536 seconds)
    (109/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.852175532 seconds)
    (110/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.034042185 seconds)
    (111/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.557933628 seconds)
    (112/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.787109733 seconds)
    (113/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.818781088 seconds)
    (114/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.810760711 seconds)
    (115/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.358973859 seconds)
    (116/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.751438924 seconds)
    (117/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.703676494 seconds)
    (118/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.083797381 seconds)
    (119/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.919984372 seconds)
    (120/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.861816254 seconds)
    (121/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.709344442 seconds)
    (122/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.960134755 seconds)
    (123/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.742802288 seconds)
    (124/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.100268933 seconds)
    (125/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.721684451 seconds)
    (126/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.721242898 seconds)
    (127/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.196325912 seconds)
    (128/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.815731681 seconds)
    (129/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.839051385 seconds)
    (130/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.816109107 seconds)
    (131/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.709026899 seconds)
    (132/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 2.891422195 seconds)
    (133/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.638572937 seconds)
    (134/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.723706091 seconds)
    (135/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.8343033 seconds)
    (136/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.231052762 seconds)
    (137/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.72478757 seconds)
    (138/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.066196317 seconds)
    (139/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.573693041 seconds)
    (140/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.491019691 seconds)
    (141/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.978912744 seconds)
    (142/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.814762891 seconds)
    (143/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.749310533 seconds)
    (144/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.187490425 seconds)
    (145/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.809059723 seconds)
    (146/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.807969535 seconds)
    (147/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.865720844 seconds)
    (148/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.649430799 seconds)
    (149/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.74435841 seconds)
    (150/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.723845071 seconds)
    (151/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 3.441779572 seconds)
    (152/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.746520988 seconds)
    (153/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.719961597 seconds)
    (154/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.735330077 seconds)
    (155/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.72252985 seconds)
    (156/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.944969148 seconds)
    (157/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.720516311 seconds)
    (158/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.939695772 seconds)
    (159/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.212261609 seconds)
    (160/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.727012992 seconds)
    (161/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.790541211 seconds)
    (162/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.84244304 seconds)
    (163/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.721260368 seconds)
    (164/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.977512371 seconds)
    (165/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.821764295 seconds)
    (166/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.909329566 seconds)
    (167/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.786098166 seconds)
    (168/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.815426356 seconds)
    (169/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.725387 seconds)
    (170/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 3.555340739 seconds)
    (171/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.791361236 seconds)
    (172/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.741168278 seconds)
    (173/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.707233365 seconds)
    (174/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.503747232 seconds)
    (175/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.872162341 seconds)
    (176/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.217433922 seconds)
    (177/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.726202713 seconds)
    (178/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.754874295 seconds)
    (179/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.708076998 seconds)
    (180/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.817322865 seconds)
    (181/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.959866929 seconds)
    (182/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.72156392 seconds)
    (183/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.740678925 seconds)
    (184/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.841961456 seconds)
    (185/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.830113067 seconds)
    (186/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.745936706 seconds)
    (187/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.81292423 seconds)
    (188/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.604936694 seconds)
    (189/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.412225133 seconds)
    (190/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.725129659 seconds)
    (191/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.814651698 seconds)
    (192/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.725329291 seconds)
    (193/309) benchmarking ("map", identity, Float64, true)...
    done (took 3.106255323 seconds)
    (194/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.841479375 seconds)
    (195/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.851173225 seconds)
    (196/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.810558847 seconds)
    (197/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.79980868 seconds)
    (198/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.676636755 seconds)
    (199/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.365071917 seconds)
    (200/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.85438496 seconds)
    (201/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.57874097 seconds)
    (202/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.791499546 seconds)
    (203/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.792696056 seconds)
    (204/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.904713734 seconds)
    (205/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.72932154 seconds)
    (206/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.712515948 seconds)
    (207/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.672111219 seconds)
    (208/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.726480056 seconds)
    (209/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 3.441747247 seconds)
    (210/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.289161217 seconds)
    (211/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.787092331 seconds)
    (212/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.174933972 seconds)
    (213/309) benchmarking ("sort", Float64, false)...
    done (took 5.505993022 seconds)
    (214/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.079247674 seconds)
    (215/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.467670792 seconds)
    (216/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.927582892 seconds)
    (217/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.857951428 seconds)
    (218/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.905508062 seconds)
    (219/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.729373949 seconds)
    (220/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.729225254 seconds)
    (221/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 7.030109227 seconds)
    (222/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 2.193160487 seconds)
    (223/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.064233326 seconds)
    (224/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.725063887 seconds)
    (225/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 3.244011652 seconds)
    (226/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.774823045 seconds)
    (227/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.940468287 seconds)
    (228/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.805090073 seconds)
    (229/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.106618734 seconds)
    (230/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.740454359 seconds)
    (231/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.790280899 seconds)
    (232/309) benchmarking ("map", identity, Float32, false)...
    done (took 2.131487435 seconds)
    (233/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.758952598 seconds)
    (234/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.832933176 seconds)
    (235/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.758660279 seconds)
    (236/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.817774818 seconds)
    (237/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.740778696 seconds)
    (238/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.974041606 seconds)
    (239/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.7267381 seconds)
    (240/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.152559689 seconds)
    (241/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 7.354033592 seconds)
    (242/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.015924423 seconds)
    (243/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.165116943 seconds)
    (244/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.88485624 seconds)
    (245/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.680833205 seconds)
    (246/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.06586651 seconds)
    (247/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.040896859 seconds)
    (248/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.741756546 seconds)
    (249/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.898702293 seconds)
    (250/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.841252754 seconds)
    (251/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.037052845 seconds)
    (252/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.139899906 seconds)
    (253/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.86343529 seconds)
    (254/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.069392398 seconds)
    (255/309) benchmarking ("map", abs, Float64, true)...
    done (took 1.983656071 seconds)
    (256/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.040887868 seconds)
    (257/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.741564951 seconds)
    (258/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.830047776 seconds)
    (259/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.93013169 seconds)
    (260/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.15506128 seconds)
    (261/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.846333374 seconds)
    (262/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.051567009 seconds)
    (263/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.743798357 seconds)
    (264/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.870678428 seconds)
    (265/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.938942452 seconds)
    (266/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.088333611 seconds)
    (267/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.738940225 seconds)
    (268/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 3.118040004 seconds)
    (269/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.056228288 seconds)
    (270/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.813402049 seconds)
    (271/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.074480747 seconds)
    (272/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.753319011 seconds)
    (273/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.846595624 seconds)
    (274/309) benchmarking ("sort", Float32, false)...
    done (took 5.430477239 seconds)
    (275/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.15241629 seconds)
    (276/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.92203281 seconds)
    (277/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.749983661 seconds)
    (278/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.070685223 seconds)
    (279/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.985995723 seconds)
    (280/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.695201218 seconds)
    (281/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.78167172 seconds)
    (282/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.954955272 seconds)
    (283/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.861905804 seconds)
    (284/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.758560538 seconds)
    (285/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.826624369 seconds)
    (286/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.834484884 seconds)
    (287/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.929925798 seconds)
    (288/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.945535006 seconds)
    (289/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.811434531 seconds)
    (290/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.036448457 seconds)
    (291/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.875773062 seconds)
    (292/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.648250673 seconds)
    (293/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.010448172 seconds)
    (294/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.114883326 seconds)
    (295/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.537811374 seconds)
    (296/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.839756323 seconds)
    (297/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.855316882 seconds)
    (298/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.817381269 seconds)
    (299/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.73985631 seconds)
    (300/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.876690173 seconds)
    (301/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.768339012 seconds)
    (302/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.724590721 seconds)
    (303/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.180494913 seconds)
    (304/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.438058801 seconds)
    (305/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.843815467 seconds)
    (306/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.966849235 seconds)
    (307/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.093724558 seconds)
    (308/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.740244252 seconds)
    (309/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.757293586 seconds)
  done (took 962.631104541 seconds)
done (took 964.336791017 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.769231635 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.763994304 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.74754917 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.768995851 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.859022746 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.777262292 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.75744048 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.750211881 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.795567647 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.79723488 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.745178258 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.775035767 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.748894228 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.748086409 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.74718501 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.766795382 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.068044269 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.782391024 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.766154928 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.756526118 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.765755299 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.745365828 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.799172218 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.776245014 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.754073752 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.751670008 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.750800583 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.768639887 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.860639963 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.752934604 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.751880348 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.759945656 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.070469874 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.778636276 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.743970303 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.769038073 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.75946362 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.757789511 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.753156753 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.780382899 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.154239662 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.791562395 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.749716787 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.749912489 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.751137753 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.753289336 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.752690604 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.756337313 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.764433901 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.767192418 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.145824263 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.806983575 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.752703762 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.749841416 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.7608959 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.75053294 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.753155498 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.766104361 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.769700758 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.765949447 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.051731632 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.787078988 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.752628692 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.767547673 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.758837119 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.184035558 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.786592199 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.754365942 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.15343933 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.795952888 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.180572564 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.80149695 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.753359293 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.76611036 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.783484977 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.070312347 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.779572293 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.751155288 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.759545866 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.748776713 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.760739287 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.766478689 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.757496023 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.752440966 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.765756472 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.779947829 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.761968518 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.752836704 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.7607816 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.770977763 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.760278527 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.762679437 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.754375698 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.747935881 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.761797838 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.75452654 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.75434828 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.755266985 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.759607313 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.763611383 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.153158284 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.811238223 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.74911285 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.749391015 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.751880016 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.766936361 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.152264442 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.793581568 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.775226326 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.801289803 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.754261083 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.050258409 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.78788718 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.769075515 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.762709956 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.760453834 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.749738114 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.053027668 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.178900964 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.810220959 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.755446007 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.749573299 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.76922796 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.755912516 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.750878089 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.071713553 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.787198107 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.768089487 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.877733215 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.764911156 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.786070096 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.755796259 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.758524339 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.786635775 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.770313208 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.78551812 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.757622494 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.770578282 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.769532503 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.751625216 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.765489987 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.764701748 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.755452682 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.760743448 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.749490249 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.787020796 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.766429938 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.767299382 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.779659859 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.876092496 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.752267477 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.053228921 seconds)
done (took 275.91201222 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.82673778 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.747737025 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.856966122 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.750524448 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.836404204 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.838077984 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.747599378 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.74845946 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.752103484 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.126574837 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.748196916 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.748981631 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.753724428 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.74894332 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.838365377 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.751019388 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.749033567 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.092824569 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.752690248 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.828998446 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.748083201 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.749677296 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.753213641 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.122410987 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.750265706 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.747835389 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.822976607 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.75258518 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.08752483 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.747164819 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.746062657 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.087665284 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.84289525 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.770642353 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.761750032 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.758631251 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.833513711 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.757227371 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.833660111 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.839613416 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.849135482 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.794172536 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.748509248 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.746000532 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.755946104 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.754241575 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.749817934 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.781274799 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.750087477 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.750890871 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.097425609 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.76308833 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.752047286 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.750549404 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.751276016 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.783623425 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.75061009 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.754804909 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.849874865 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.755368071 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.814688579 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.144383391 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.129769332 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.753645918 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.751231755 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.751441714 seconds)
  done (took 176.46269334 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.818882325 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.834168907 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.819691203 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.759037396 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.804283028 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.820314364 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.759786731 seconds)
  done (took 14.289096291 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.759689172 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.753428376 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.805374458 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.805424117 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.755202868 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.909288182 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.754461447 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.765062129 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.75210602 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.805214719 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.756005057 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.75463165 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.762627121 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.749544565 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.804246422 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.765101364 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.872182412 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.755163932 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.756496939 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.908416893 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.762241691 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.761803248 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.78814027 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.765957613 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.755643397 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.761246483 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.348195346 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.758001374 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.752402973 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.754274598 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.751301864 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.79675673 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.75663157 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.751255562 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.752902582 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.868303511 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.7576738 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.752478857 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.756290352 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.753946506 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.755687322 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.757117196 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.756345766 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.7530965 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.75651217 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.777939241 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.755791479 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.75873038 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.756841586 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.756795767 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.7903844 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.756119977 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.753331405 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.754460996 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.809499193 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.764518132 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.758508206 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.753264153 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.756655945 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.755207831 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.907671082 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.80638992 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.757333421 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.806601776 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.758189727 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.757448277 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.756476778 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.757530001 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.852172345 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.756923923 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.807617425 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.753762689 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.914308579 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.779272712 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.7583535 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.759564649 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.759792147 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.758681157 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.752110543 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.763452986 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.754393971 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.760588276 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.763747485 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.755573722 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.754900825 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.870632852 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.863486768 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.756425815 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.770725341 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.764345236 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.755395993 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.791755224 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.759412263 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.755087617 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.815265998 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.877144767 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.812741161 seconds)
  done (took 194.672541773 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.763255947 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.76609366 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.759022383 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.774412307 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.758302806 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.7588529 seconds)
  done (took 12.256230578 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.761183036 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.759824902 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.758280958 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.758686278 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.760750246 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.759285463 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.760642698 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.763706655 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.764200552 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.759574142 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.761005616 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.760399671 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.760011828 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.759648149 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.760991271 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.76037549 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.762056633 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.757321617 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.759294172 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.760410921 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.913439376 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.760573613 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.760610663 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.760702931 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.770024262 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.759816576 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.768690693 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.760339524 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.7601838 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.76865853 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.765517378 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.760074029 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.762141296 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.766030954 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.766682385 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.761799078 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.764251278 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.764925034 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.757479504 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.761429241 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.761748767 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.767062591 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.761125715 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.762338598 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.76288263 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.766838403 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.76646751 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.768019178 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.763277273 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.763977005 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.762621954 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.76161974 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.761969393 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.763517245 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.764694178 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.766726307 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.766453391 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.76332462 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.766589731 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.762055952 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.763253314 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.761441614 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.762729997 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.76702084 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.759028148 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.762303483 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.76327575 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.766755815 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.762273704 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.760851971 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.762025739 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.759331592 seconds)
  done (took 129.733089267 seconds)
done (took 529.101624616 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.888904818 seconds)
  done (took 8.568382336 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.929493602 seconds)
  done (took 8.654535502 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.291235376 seconds)
  done (took 9.972930919 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.775058423 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.801705409 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.771110494 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.76659924 seconds)
  done (took 28.822179141 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.865790017 seconds)
  done (took 8.546570261 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.782540092 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.756712335 seconds)
  done (took 15.262558512 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.848526856 seconds)
  done (took 8.52937846 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.869536213 seconds)
  done (took 8.576712578 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.770412301 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.795584464 seconds)
  done (took 15.262942844 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.743011849 seconds)
  done (took 8.423317306 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.498869907 seconds)
  done (took 11.28312338 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.782817909 seconds)
  done (took 8.574729616 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.826329981 seconds)
  done (took 8.508322609 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.882895067 seconds)
  done (took 8.563870477 seconds)
done (took 159.228318711 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.761105842 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.755861664 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.756657519 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.756224434 seconds)
  done (took 28.710960378 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.796135134 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.795948454 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.797333118 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.806361466 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.798557187 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.795966132 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.787976796 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.788625255 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.80627809 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.799550062 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.799557355 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.798940959 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.796740024 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.790289329 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.801679393 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.799622197 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.808267936 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.798109469 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.789128859 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.799909004 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.764465744 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.810053003 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.799447199 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.764542763 seconds)
  done (took 44.776481345 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.963885199 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.835501838 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.91755786 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.817008562 seconds)
  done (took 9.215671373 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.819716125 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.81717926 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.830072886 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.869745513 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.892745428 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.827632503 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.791286782 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.787635455 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.77260416 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.8175409 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.893622685 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.811658009 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.903261294 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.767063929 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.962054414 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.764265022 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.765600364 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.819612956 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.869403383 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.880784368 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.764665267 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.816712717 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.819722058 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.812722381 seconds)
  done (took 45.560192498 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.763576054 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.774240088 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.771003553 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.765425881 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.76865909 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.765892849 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.770808507 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.766162685 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.789121687 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.769103273 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.764849842 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.76508595 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.766012625 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.765611132 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.764639337 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.777854107 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.780229894 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.764533399 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.768104994 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.771991414 seconds)
  done (took 37.077817722 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.761604003 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.648028662 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.113110343 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.016413668 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.760270248 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.765271384 seconds)
  done (took 30.749209512 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.780543678 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.772798344 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.768750359 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.823810239 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.914565159 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.775953111 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.767918398 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.778060432 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.813858634 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.836991168 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.791625457 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.796851779 seconds)
  done (took 23.306801636 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.762045206 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.771578398 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.767300688 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.784995583 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.777979393 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.775030404 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.773921916 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.762315735 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.781545872 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.786216283 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.776145852 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.778805746 seconds)
  done (took 42.986398102 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.851740566 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.655956119 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.435776423 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.574739993 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.297293058 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.972991896 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.40394943 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.943206141 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.766529751 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.035796932 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.465200529 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.01853773 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.014997811 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.763934085 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.839838764 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.244054466 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.064899012 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.001963604 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.797502286 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.50134294 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.890765733 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.297950444 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.581447399 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.897696144 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.973242482 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.89607779 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.025514035 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.713287423 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.901371499 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.804020192 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.772748779 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.764004679 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.037200175 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.98601382 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.857022504 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.774625597 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.418732187 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.485912302 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.791759973 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.509926854 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.55983374 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.909517709 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.772133611 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.764290095 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.696456969 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.298386565 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.952105128 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.769407012 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.466400812 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.765667632 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.778125595 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.850750502 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.768881492 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.58310079 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.719612064 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.042650402 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.763216253 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.771441876 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.327485478 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.905565408 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.41948471 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.709314761 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.855992206 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.555308099 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.256241405 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.927006306 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.768538553 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.768530722 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.70008194 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.556343549 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.897841526 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.909330521 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.78491401 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.414148085 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.077048179 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.529745577 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.860543212 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.066798309 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.588154147 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.706899942 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.993113529 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.715767386 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.700000161 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.622550768 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.700771881 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.044605321 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.81041233 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.435492418 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.816997041 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.942987736 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.777483063 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.78740644 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.774595986 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.991433439 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.648985731 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.768614462 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.415923799 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.065011537 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.789057371 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.945432777 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.701041494 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.770518731 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.022043267 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.977750343 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.035504844 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.254116228 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.941489771 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.768714617 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.852999038 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.714918906 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.790022116 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.059267564 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.836661245 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.904970913 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.906711179 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.723723022 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.079591239 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.804609543 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.941740519 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.487606851 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.045261836 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.1090196 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.027399813 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.854935007 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.771325358 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.769606652 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.576335082 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.401707024 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.992639889 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.770305662 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.295261044 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.791032393 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.771214421 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.702610866 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.434568067 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.481125953 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.894742077 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.991415341 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.754253351 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.047963827 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.70162204 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.914153141 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.761957366 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.991269605 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.449462176 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.859794849 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.027223564 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.283386225 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.037551937 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.787969406 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.78813907 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.85094917 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.791688599 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.210468732 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.02676081 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.773762615 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.774085974 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.587282778 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.856058775 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.771911195 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.774372326 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.567713886 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.068699618 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.809890726 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.774550865 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.66517762 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.784440878 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.854218531 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.775415594 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.779726785 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.29788073 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.623983817 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.781255476 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.417749695 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.995631616 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.779479467 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.573808035 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.977221869 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.861710124 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.061357194 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.843154701 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.7049808 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.473437306 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.473106408 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.77338682 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.710235385 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.77334009 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.779140542 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.780838933 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.036583632 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.070203855 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.825429415 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.567484835 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.898868076 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.784429611 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.778624035 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.772140547 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.26996528 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.923315138 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.413875576 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.783264659 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.908087205 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.7858648 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.708082502 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.775498163 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.776824667 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.772419868 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.727401482 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.824826263 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.56453281 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.117669619 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.030436883 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.419143932 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.793016391 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.545292288 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.911808483 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.79655574 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.43025198 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.77090379 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.90498229 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.832898843 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.785679852 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.579563592 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.564694567 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.336581579 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.091467894 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.110210634 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.238176507 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.171491942 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.101327505 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.955696062 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.006649185 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.30127938 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.835050825 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.962293516 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.717028844 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.865767154 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.454531687 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.14469524 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.789217948 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.000429587 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.177391035 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.502828236 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.949146221 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.985808031 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.810599994 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.606557445 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.811292571 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.299471607 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.929335704 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.465299409 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.010599727 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.953457665 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.43641034 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.896002538 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.774763927 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.259034076 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.867726828 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.486530055 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.136849129 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.329488529 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.495931423 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.163462014 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.783194949 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.223766602 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.143191121 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.119907203 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.875781266 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.711213278 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.786578192 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.785424721 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.776041736 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.755355157 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.671458913 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.049339979 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.787660893 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.014421601 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.076949184 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.061651382 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.688409156 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.782820031 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.778031071 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.085734812 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.465312728 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.021821054 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.140841393 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.360167428 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.789388019 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.710077734 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.711035691 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.480101606 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.785553616 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.752228698 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.01297637 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.889660361 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.732306116 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.182265384 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.096646695 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.030372456 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.791714642 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.067787265 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.067771498 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.513721254 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.806614825 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.878440152 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.428662982 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.491351074 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.000007284 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.01194404 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.605205023 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.008777812 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.433964496 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.762200358 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.778115702 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.992322729 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.999500961 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.485011453 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.041476171 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.504776582 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.787128611 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.133228237 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.843659003 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.492002513 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.005042927 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.869738404 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.789342449 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.861482263 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.788350618 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.790192172 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.789681665 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.824314952 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.505596334 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.927558305 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.792715403 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.8694824 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.929663559 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.381428616 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.789602698 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.072401833 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.159462993 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.132253855 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.847980996 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.780462113 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.786769853 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.712151772 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.917885996 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.226314729 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.053427388 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.90970595 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.97375979 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.805038295 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.434354894 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.093950121 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.098215583 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.05562752 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.677189609 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.781861273 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.868486052 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.005235047 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.792137417 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.990971333 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.019782342 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.117434132 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.26107881 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.925168494 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.067371291 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.055055575 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.160535005 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.782870096 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.373605072 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.791013062 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.293518183 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.833066344 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.488865333 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.080861132 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.790868941 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.003346146 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.805975485 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.977356563 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.239830415 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.543601846 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.157392812 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.788838726 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.851735223 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.072704568 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.206791762 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.104614106 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.864251138 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.793887762 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.481157891 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.922310626 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.720267277 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.045242939 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.784678852 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.994730471 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.494586986 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.792706775 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.083416321 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.103440334 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.781019234 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.75701972 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.839909112 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.792658718 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.005973954 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.062744298 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.041279998 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.792928643 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.791658712 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.601360603 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.080412272 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.855985408 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.716547778 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.787645794 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.880856847 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.033625023 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.804642712 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.300721528 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.487463149 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.093287374 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.709375567 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.805518573 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.20930599 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.248907614 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.144671503 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.319744116 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.027933608 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.347147686 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.642973829 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.164389615 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.78946191 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.203485751 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.167606331 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.78849364 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.314111193 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.90069399 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.075124938 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.118690719 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.80667461 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.641035582 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.848023917 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.00865264 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.388636156 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.727859948 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.788370968 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.847504177 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.786410162 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.784019643 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.800125908 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.786257823 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.67866126 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.629613929 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.278178063 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.791721594 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.908745745 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.434254459 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.36593377 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.897287455 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.945416727 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.792124988 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.497647767 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.076553878 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.038783025 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.30685849 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.863381211 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.792100914 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.78737553 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.713910032 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.984094828 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.052652055 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.09745475 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.157293812 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.901515598 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.789829851 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.001693119 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.997797398 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.505214463 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.957655183 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.191211633 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.902658289 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.718880414 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.500199763 seconds)
  done (took 1637.281140207 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.798131883 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.805988864 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.801180162 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.860962886 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.810821375 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.810024592 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.858477861 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.802618399 seconds)
  done (took 56.258656835 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.790465965 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.977546795 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.799394584 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.790921499 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.817826379 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.790798318 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.988748697 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.803865129 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.806671574 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.799767329 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.790886151 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.812944708 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.109311736 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.815861188 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.792788677 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.835025968 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.817076126 seconds)
  done (took 73.060739601 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.79117268 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.969055204 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.815714668 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.817916051 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.669335227 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.797410971 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.747969812 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.804582077 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.796012175 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.962359943 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.131492048 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.795372691 seconds)
  done (took 88.811709984 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.807651176 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.797519096 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.79801607 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.79700528 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.798060493 seconds)
  done (took 10.718331276 seconds)
done (took 2130.2163756 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.030608792 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.979196914 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.025660664 seconds)
  done (took 5.717196547 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.939281245 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.989693717 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.104350886 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.113923937 seconds)
  done (took 9.863780031 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.081120348 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.186876755 seconds)
  done (took 5.97982744 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.118575077 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.80833652 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.178918909 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.790459862 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.795638086 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.796797539 seconds)
  done (took 22.099065974 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.795841135 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.798660479 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.796709409 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.799651185 seconds)
  done (took 8.901772972 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.776276521 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.48141842 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.781105534 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.794308551 seconds)
  done (took 20.54707817 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.945418329 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.922365338 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.939558595 seconds)
  done (took 7.520210703 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.343669442 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 3.142380587 seconds)
  done (took 9.199132037 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.965493311 seconds)
  done (took 3.677691073 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.826104267 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.069166886 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.317157039 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.378388543 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.442958832 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 3.047271327 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.146869019 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.030460418 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.250475572 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.289807473 seconds)
  done (took 24.514153292 seconds)
done (took 132.871097492 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.35028767 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.830189338 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.995097191 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.167056013 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.034136875 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.99710185 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.012002636 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.166346103 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.855468872 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.843664786 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.178008806 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.03255531 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.964893584 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.815075487 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.973146972 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.816544325 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.059279629 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.175589638 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.846434731 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.084771239 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.027211683 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.809115488 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.999830368 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.820087782 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.044444348 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.948233877 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.354061758 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.822900542 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 3.984788473 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.362594745 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.951289233 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.223778169 seconds)
  done (took 166.260542081 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.799891448 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.798678676 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.796888784 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.800239151 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.254694168 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.798912628 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.796512815 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.796258249 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.222430478 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.21572301 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.799757932 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.235051028 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.800178352 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.798747142 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.799400083 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.798732822 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.379797263 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.798524478 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.796937731 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.797198655 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.795870568 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.07713663 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.797205087 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.088337612 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.370012392 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.799258817 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.796563887 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.799154908 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.797741653 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.796735869 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.798604655 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.798081228 seconds)
  done (took 206.722517958 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.795843512 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.799136336 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.799533399 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.799867206 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.799745802 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.800405457 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.800236984 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.797637749 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.564215235 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.562805211 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.800454354 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.800501184 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.801649103 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.797540983 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.799881261 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.798227972 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.798994114 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.799295264 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.804457587 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.805576044 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.811159554 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.571953687 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.812890379 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.640543011 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.815305367 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.807731101 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.800918713 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.814250282 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.81170366 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.813665873 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.818435612 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.799656312 seconds)
  done (took 218.564506617 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.055671509 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.803870397 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.805866587 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.800885436 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.80659924 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.805416609 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.798965254 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.053865734 seconds)
  done (took 18.670585959 seconds)
done (took 611.943564448 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.291672442 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.147021184 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.986580243 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.82842801 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.068826233 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.864015706 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.824717628 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.892834269 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.439678161 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.903425379 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.499292681 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.849144572 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.579724472 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.853752962 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.952298322 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.887266553 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.371290497 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.46135293 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.006390526 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.911355281 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.001509342 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.767005483 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.912885075 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.48313285 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.604790817 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.819887765 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.912388992 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.389625206 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.838406308 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.993706227 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.584168314 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.128966043 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.848764413 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.8249539 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.882932602 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.860007282 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.109207627 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.842455081 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.95094796 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.583599777 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.89550646 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.352692467 seconds)
  done (took 99.928676309 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.797278667 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.795558455 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.79412328 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.794945667 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.795309043 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.794204264 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.794772691 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.793882927 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.796432768 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.794846782 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.795236895 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.795927214 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.795224884 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.795104331 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.79733092 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.795144556 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.795682474 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.798199555 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.795067614 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.795091681 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.795544235 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.797076587 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.812569005 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.795700002 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.796021296 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.795013165 seconds)
  done (took 48.435607704 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.807831753 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.972203953 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.046949507 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.833948055 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.808485619 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.812273158 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.82791466 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.813418604 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.810727081 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.8096586 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.916461505 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.815479529 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.828671475 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.046167606 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.827635051 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.808224627 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.808610448 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.810603724 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.97933893 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.827780748 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.830593611 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.815296977 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.828987652 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.823221495 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.810510668 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.809590528 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.81354301 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.238787453 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.818955901 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.913224655 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.868115889 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.838713845 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.17815721 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.054915899 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.869666113 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.825294865 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.811014147 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.917570754 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.817314994 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.810321636 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.827850738 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.816264688 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.044747212 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.298272685 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.827519747 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.810308262 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.245813741 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.933810045 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.852348151 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.823501867 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.050111301 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.831247255 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.811557176 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.810902256 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.848252076 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.816132001 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.811252881 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.108209766 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.823946139 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.827746958 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.81706688 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.811266611 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.982636259 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.821480913 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.973994553 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.822501772 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.817968473 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.813026015 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.048108087 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.830365307 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.300940144 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.830378396 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.811347466 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.916009048 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.978634631 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.276844587 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.826278508 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.984416541 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.196243992 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.836503706 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.819620275 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.228782641 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.842547862 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.819492156 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.814773636 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.813513121 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.812425137 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.854133495 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.828194209 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.235373728 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.308142419 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.13209959 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.840957343 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.831631823 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.813613373 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.10707253 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.823258915 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.81463765 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.043029308 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.312492869 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.828379554 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.819910598 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.286144904 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.836840531 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.833030076 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.826806588 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.05274112 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.831653369 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.853852189 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.81434551 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.81954818 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.81629211 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.832237293 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.824856356 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.817588724 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.280437896 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.944401403 seconds)
  done (took 224.964775107 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.811284258 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.828904732 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.808693514 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.829435553 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.808320208 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.812770739 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.809929894 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.80752265 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.813221665 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.813644915 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.806341694 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.808615724 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.810709186 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.810408832 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.823615641 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.816042229 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.414142477 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.812127215 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.809736266 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.809763413 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.468680894 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.821068906 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.809498074 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.810515606 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.811895913 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.812743168 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.818608176 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.834251055 seconds)
  done (took 165.784158242 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.815766381 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.931770267 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.839851722 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.849692723 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.82985498 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.815689562 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.83999993 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.83305975 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.821402778 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.814897684 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.814027105 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.877726487 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.828312454 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.913424155 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.851223031 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.846210558 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.920226215 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.825759722 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.815950612 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.813687852 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.850310794 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.813300752 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.877025293 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.948632973 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.839584166 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.933778605 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.821052458 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.818355619 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.816316799 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.936142374 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.836508604 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.877183613 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.850008941 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.834918896 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.936080271 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.935947813 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.927946903 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.845473942 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.821969397 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.814655142 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.816752863 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.805202719 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.933658482 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.839506906 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.817951171 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.922961657 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.841179713 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.819642611 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.825592073 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.815962233 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.832606488 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.835171485 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.888639227 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.954269066 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.857197181 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.843277457 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.841841381 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.115362582 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.8278436 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.916084264 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.810087459 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.933493129 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.837921607 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.80492784 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.816779513 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.82203859 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.846752948 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.849005905 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.926548371 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.82416648 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.916821104 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.852693596 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.825372757 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.817528708 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.819651723 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.933095631 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.938475655 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.853799079 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.855765321 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.849538493 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.81403882 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.817676078 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.807103106 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.836228981 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.824429192 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.936281766 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.935037796 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.826357163 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.821171753 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.820346267 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.820931661 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.843221473 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.944575227 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.854953642 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.912900868 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.886308677 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.893552466 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.837875183 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.830724691 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.822719016 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.883071685 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.839003738 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.829595082 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.165361353 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.891266841 seconds)
  done (took 197.149707397 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.277448657 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.874361887 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.878183443 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.132673293 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.257346786 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.759225838 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.871360318 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.869825011 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.892201565 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.058939824 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.9413059 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.88701544 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.855208428 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.841382616 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.866062746 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.889265017 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.879157272 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.212020711 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.973839447 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.030647965 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.85040529 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.159460174 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.143247637 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.262724101 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.909274436 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.192259243 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.540224637 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.023029221 seconds)
  done (took 60.072565247 seconds)
done (took 798.055731027 seconds)
SAVING RESULT...
DONE!
