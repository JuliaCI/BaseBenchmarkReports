cset: moving following pidspec: 1734
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.966652187 seconds)
loading group "string"... done (took 0.586790653 seconds)
loading group "linalg"... done (took 9.361093022 seconds)
loading group "parallel"... done (took 0.181583214 seconds)
loading group "find"... done (took 1.492230218 seconds)
loading group "tuple"... done (took 2.18399131 seconds)
loading group "dates"... done (took 1.467132308 seconds)
loading group "micro"... done (took 0.2336887 seconds)
loading group "io"... done (took 0.63887031 seconds)
loading group "scalar"... done (took 45.833748962 seconds)
loading group "sparse"... done (took 14.110264391 seconds)
loading group "broadcast"... done (took 1.138187113 seconds)
loading group "union"... done (took 12.56858823 seconds)
loading group "simd"... done (took 2.641259953 seconds)
loading group "random"... done (took 10.678453209 seconds)
loading group "problem"... done (took 1832.014611739 seconds)
loading group "array"... done (took 26.819081788 seconds)
loading group "misc"... done (took 1.195649421 seconds)
loading group "sort"... done (took 3.958826862 seconds)
loading group "collection"... done (took 19.670499186 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.680300563 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.141004617 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.171963591 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.354575002 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.197585162 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.165075047 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.167566525 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.567601046 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.987279068 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.219019334 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.148102772 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.570297184 seconds)
done (took 6.072596793 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.294077693 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.443302857 seconds)
    (2/2) benchmarking "String"...
    done (took 0.132487032 seconds)
  done (took 1.232540938 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.078635505 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.178616725 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.098269796 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.113311566 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.114930672 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.114763992 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.097038431 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.114556453 seconds)
  done (took 1.48480173 seconds)
done (took 3.750964307 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.497158901 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.908004514 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.540309128 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.142252975 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.163322361 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.153820842 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.31071862 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.174020885 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.123625545 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.088517316 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.17671036 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.391622912 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.490710245 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.995796716 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.088009262 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.131831047 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.096213583 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.761929585 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.091041775 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.143972924 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.537276289 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.113264021 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.124441646 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.144479252 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.19220626 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.135203636 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.172240948 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.097500421 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.724569246 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.106549746 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.192571787 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.102304231 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.170702446 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.247448305 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.098947029 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.095736752 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.725755567 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.181043218 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.116553606 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.112366541 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.739725509 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.084741443 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.207363865 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.101517896 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.11331517 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.196299341 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.120816262 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.081976757 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.106537047 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.094773736 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.172862826 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.521700718 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.11064213 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.156123815 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.111927681 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.742242916 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.100660378 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.161692812 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.153916407 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.110334261 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.096721585 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.111078527 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.166470929 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.111172464 seconds)
  done (took 20.28754378 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.119331054 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.145654615 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.097678457 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.14386639 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.146876876 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.09997317 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.087127245 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.097967386 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.113335705 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.192041842 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.142059629 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.149089119 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.094743702 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.082748664 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.122128683 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.254047532 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.108845788 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.1258039 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.083074217 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.109967752 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.144908487 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.09972451 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.113274972 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.112695611 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.173508021 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.208921689 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.113150895 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.127724496 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.097292981 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.103276809 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.146582639 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.167233919 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.078488836 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.098110308 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.188904857 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.124082863 seconds)
  done (took 5.285061607 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.202362746 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.120093747 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.192912599 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.177826397 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.147593666 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.165544969 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.120529988 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.271550914 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.26349373 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.184314478 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.117805439 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.117557296 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.080790282 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.099133326 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.079624277 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.696943974 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.183889737 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.151228564 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.127975223 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.104565002 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.083283254 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.742457874 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.104417841 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.085069038 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.106554946 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.074831638 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.178435391 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.104027606 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.316440951 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.121415234 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.090034846 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.135980751 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.215320014 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.122013919 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.144324663 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.103033172 seconds)
    (37/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.137416412 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.083355688 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.216975183 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.113143019 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.096159968 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.111200226 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.134976531 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.136969663 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.101124381 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.094795883 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.243434586 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.084515363 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.123623362 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.122904881 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.203237789 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.100122427 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.102807539 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.360757403 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.117467135 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.087196754 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.101509612 seconds)
    (58/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.082101672 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.321720599 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.136921799 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.1018575 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.081403507 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.107387523 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.081450264 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.758031215 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.111295141 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.387476528 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.096528303 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.159380237 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.101006393 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.106803232 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.087310618 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.104097145 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.10213024 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.098357762 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.079749423 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.098555768 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.081029547 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.104311624 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.116226702 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.086548256 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.096974457 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.148624958 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.122207301 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.103556946 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.129927018 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.105476049 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.083999298 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.132448434 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.085400738 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.104770761 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.15154138 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.089918638 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.119561489 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.102597372 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.146944533 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.085587112 seconds)
    (98/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.212735402 seconds)
    (99/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.118050593 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.102167562 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.128936408 seconds)
    (102/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.086472106 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.10413372 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.131520839 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.109505904 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.102188096 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.08713926 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.100821283 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.082574002 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.1675285 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.084871491 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.101037587 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.085882266 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.114875945 seconds)
  done (took 25.330926744 seconds)
done (took 51.55658235 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.467761004 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.096156912 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.114820325 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.113784029 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.113117165 seconds)
  done (took 1.640401118 seconds)
done (took 2.347520359 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.359849306 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.183676427 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.102229156 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.199824236 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.088556825 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.206362646 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.173522296 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.121595616 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.199281797 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.102352576 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.179955763 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.102262473 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.089029944 seconds)
  done (took 2.842129036 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.095683344 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.12297665 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.083944125 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.114578885 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.078249523 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.113147547 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.094849976 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.144502274 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.095055141 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.107900229 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.078452369 seconds)
  done (took 1.832775029 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.09197618 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.117262044 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.085085327 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.111102675 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.078719397 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.092213221 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.112664832 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.120399282 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.094323456 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.107008154 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.078607933 seconds)
  done (took 1.793879031 seconds)
done (took 7.164120731 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.072973585 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 8.656535512 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.121432473 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.169747022 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.346078557 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.213525548 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.540017034 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.135299824 seconds)
  done (took 12.145955493 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.116390087 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.099570576 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.082853917 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.121102349 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.085300677 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.105324156 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.087786575 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.103843242 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.083656669 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.101152613 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.087231766 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.100108736 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.087601071 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.102455863 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.082274758 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.100549293 seconds)
  done (took 2.309884948 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.120302879 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.119246425 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.104927065 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.110124314 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.086350139 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.103090769 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.088758323 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.106306696 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.086442973 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.105904824 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.111121121 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.094427417 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.109516133 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.086868806 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.107515308 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.094487381 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.105066533 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.107296972 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.091441847 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.109025063 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.094694894 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.105885004 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.108749348 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.093177174 seconds)
  done (took 3.261967305 seconds)
done (took 18.423152542 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.17351242 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.087229318 seconds)
  done (took 0.965951604 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.104564144 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.125766584 seconds)
  done (took 0.943361126 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.110924823 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.099034749 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.138091432 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.118603434 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.084527854 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.102123827 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.119335548 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.103368742 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.085015923 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.103405037 seconds)
  done (took 1.777495313 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.086493782 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.103340134 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.092200947 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.125165487 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.114355634 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.086789601 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.107342643 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.089359861 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.108571728 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.083324468 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.110876817 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.122858244 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.092912159 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.12546757 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.090393263 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.109502097 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.112491799 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.090578506 seconds)
  done (took 2.567831768 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.08265771 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.085169738 seconds)
  done (took 0.88553619 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.085852381 seconds)
    (2/7) benchmarking "second"...
    done (took 0.099697998 seconds)
    (3/7) benchmarking "month"...
    done (took 0.088013709 seconds)
    (4/7) benchmarking "year"...
    done (took 0.104045155 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.083437262 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.100676594 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.083414553 seconds)
  done (took 1.362319159 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.51827082 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.262467524 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.34341104 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.104293644 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.159236703 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.373571394 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.137641923 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.115620644 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.115929298 seconds)
  done (took 2.8915683 seconds)
done (took 12.104973359 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.093624064 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.195631084 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.556752614 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.120326164 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.080260983 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.16121587 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.276148857 seconds)
done (took 2.201581344 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.357475719 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.127066111 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.09144014 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.082051952 seconds)
  done (took 1.373636537 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.08211704 seconds)
    (2/2) benchmarking "read"...
    done (took 0.105118886 seconds)
  done (took 0.910208558 seconds)
done (took 3.011062947 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081016868 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.080138886 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.116941294 seconds)
    (4/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.09671274 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.079094706 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.100594134 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.078782796 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.078710192 seconds)
    (9/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.099093515 seconds)
    (10/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.08160422 seconds)
    (11/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.100547388 seconds)
    (12/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.082460777 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 0.100400993 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 0.08258889 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.099523457 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.080531822 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.080108785 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.10004365 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.080093203 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.097897379 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.08069714 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.100005987 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.079752122 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.207063167 seconds)
  done (took 3.039192207 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.102776464 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.099092818 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.086310588 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.103655672 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.085855974 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.10445952 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.104030681 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.081011898 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.104455751 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.085058749 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.104657928 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.08751491 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.102468741 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.086589915 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103609728 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.105546117 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.089562364 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.101588747 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.085926006 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.10535045 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.088759419 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.101463864 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.087485266 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.107171077 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.105759089 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.087167024 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.103524946 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.08446051 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.107856299 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.088412368 seconds)
  done (took 3.617538214 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.090184715 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.077369402 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.096859744 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.089858543 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.095627836 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.082381572 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.096757927 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.079953216 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.10025555 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.080441588 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.10014002 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.079841229 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.098171302 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.08203033 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.082574571 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.105968064 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.11779893 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.07911172 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.079704929 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.099228379 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.085634003 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.096171843 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.081777049 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.096544861 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.078927888 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.095359503 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.078766286 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.078641626 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.096558865 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.07792261 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.100666755 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.08518483 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.096033942 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.091645364 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.1027679 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.078694191 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.108183607 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.080487 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.101000391 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.08064784 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.098002567 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.080638559 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.079770661 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.111238604 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.084004177 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.100233835 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.081255645 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.100441786 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.081557075 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.102827585 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.080904964 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.098979378 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.083712095 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.09995112 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.08714694 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.080758419 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.101053246 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.079964664 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.099460382 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.08148373 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.097995342 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.080781465 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.106288296 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.081962963 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.124512248 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.092639599 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.098934251 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.0831589 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.103184479 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.089734004 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.10180972 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.101704068 seconds)
  done (took 7.311075603 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.083586833 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.106529533 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.081360663 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.100127855 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.080013173 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.081774323 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.107662993 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.099144817 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083579571 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.118919904 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.081851558 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.101101244 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083661484 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.102708411 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.081530475 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.101174134 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.092170434 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.0977766 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.081369017 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.102376553 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.082823988 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.106374681 seconds)
  done (took 2.791298642 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.229241612 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.106033184 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.145839412 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.116698847 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.100123915 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.114702264 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.104525657 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.088925841 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.106716845 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.092628201 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.110702399 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.088636161 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.121653101 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110329987 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.091903424 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.112154248 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.107985175 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.09455189 seconds)
  done (took 2.775852766 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.095668018 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.100248893 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.108013908 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.100407176 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.082583243 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.10551093 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.08962427 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.117982412 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.105516089 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.085391376 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.11400907 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.087846961 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.105532578 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.085181554 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.105732956 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.085309961 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.105567812 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084829723 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.114603173 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.109574418 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.092500358 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.113764775 seconds)
  done (took 2.933278356 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.099677465 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.101763429 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.116630522 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.103748413 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.07918469 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.097977807 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.089485665 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.100148237 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.108123899 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.084225998 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.100195131 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.081288899 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.107933897 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.082967793 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.106710131 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.083174285 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.106356845 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.085745285 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.104947819 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.081079693 seconds)
  done (took 2.657827645 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.126851962 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.117425644 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.098828329 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.128515764 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.116679825 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.099620898 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.128577538 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.119419477 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.100981463 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.134410803 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.102866213 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.120925093 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.133477191 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.109220166 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.121755725 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.131969749 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.114085779 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.133353379 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.121270703 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.103208556 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.134896215 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.120703756 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.113905412 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.121262934 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.102258127 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.12227909 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.12059749 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.110306992 seconds)
  done (took 4.050487433 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082398023 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.082989215 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.101035838 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.081627187 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.100581784 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.082441447 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.100691604 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.082416019 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.084613887 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.10142746 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.084678132 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.102581074 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.084572013 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.10372414 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.084355171 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.102507264 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.085329987 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.081827451 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.100165075 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.082114818 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.102940271 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.084458324 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.103457821 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.082263117 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081729767 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.102638201 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.082557662 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.100705246 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.085056405 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.100263618 seconds)
  done (took 3.481638345 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.091043867 seconds)
    (2/2) benchmarking "in"...
    done (took 0.106937807 seconds)
  done (took 0.939320166 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.080010167 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.118439982 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.080170507 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.106550827 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.091653494 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.104254335 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.096887652 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.111002855 seconds)
  done (took 1.53075757 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.107839145 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.12124845 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.089073286 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.113016504 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.102867092 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.120321918 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.170066568 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.088812071 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.10809133 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.083947152 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.122060018 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.082529964 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.111803342 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.106597491 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.092112474 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.117011375 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.082665089 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.115375697 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.094543816 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.107519233 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.092583686 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.122256848 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.09752186 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.112930928 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.088355813 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.11631304 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.114413697 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.095008927 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.106168704 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.095417374 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.108221305 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.077310209 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.108271181 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.088758796 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.101385741 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.104662151 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.122366682 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.08946886 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.114387152 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.09062058 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.111499171 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.097387885 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.097861689 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.112382934 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.100410696 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.111421304 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.092890965 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.100892559 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.087091423 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.109123022 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.081932087 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.109237272 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.080862921 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.114607687 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.097083818 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.124400252 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.089625268 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.110717665 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.090614673 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.10916588 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.094629538 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.110732547 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.116237135 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.090684969 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.11541431 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.106855777 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.114777259 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.082811203 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.098653891 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.084795524 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.114767292 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.113907642 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.117539063 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.092916438 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.111601426 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.085208238 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.111579778 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.093712616 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.11363102 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.117658207 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.092485746 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.114711469 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.097988133 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.109668813 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.091000291 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.113809701 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.089568869 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.109327904 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.087374504 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.126804079 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.089844733 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.104091042 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.088464507 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.117580963 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.091608794 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.114364222 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.088273751 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.115934802 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.081129649 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.111945101 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.092930097 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.11359463 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.101243977 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.113572915 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.09284239 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.115446211 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.11889639 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.09223565 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.109699106 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.083795054 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.111917685 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.089423773 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.114117631 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.081135386 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.111229957 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.092409742 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.111414716 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.09817538 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.107559546 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.092563826 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.116850663 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.099507026 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.108739709 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.083348871 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.111203419 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.092389378 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.115522658 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.099429699 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.109827341 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.082860267 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.10123959 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.096187957 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.110735738 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.09452258 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.111903991 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.092319571 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.101105404 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.085154119 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.112451062 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.099373699 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.11076915 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.113397815 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.098655331 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.113813942 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.091310463 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.117694386 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.091660103 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.10679626 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.09761227 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.111096588 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.082642996 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.116777882 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.092538923 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.109353805 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.092639388 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.11663556 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.091637726 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.112692226 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.090114981 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.112888891 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.092214059 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.107332602 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.093100617 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.108978755 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.0999932 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.111798534 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.081253555 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.103991716 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.094553662 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.107765732 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.091297311 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.106639952 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.092948632 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.11298784 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.085875393 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.109901976 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.090784028 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.122744876 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.098389409 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.109725944 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.110853874 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.097860738 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.1096301 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.093479697 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.109791167 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.092903601 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.111645941 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.098736291 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.114059678 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.094339365 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.110698369 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.087820512 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.113572082 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.099930725 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.107610892 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.086338284 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.106425742 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.093826952 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.119148074 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.093922005 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.113252751 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.09077193 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.114164947 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.09764087 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.11169708 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.092263188 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.107226407 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.093371319 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.117650124 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.095050993 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.113415936 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.098939098 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.11297931 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.081170063 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.117929503 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.088531266 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.116655969 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.081827409 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.108055523 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.089801956 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.112051077 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.087555457 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.105965906 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.078925866 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.11838387 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.098418259 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.113157779 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.088720661 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.113180677 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.103328021 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.112518721 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.114307823 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.09322489 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.114907596 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.10844231 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.1079914 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.093762283 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.121089521 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.093735565 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.101418799 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.096715092 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.110826491 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.086269926 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.111503946 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.089566531 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.113545544 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.094670044 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.111521036 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.079255713 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.109323943 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.087445133 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.10511378 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.083977794 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.119152863 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.094614351 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.112369662 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.10296507 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.11506779 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.091327888 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.11039298 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.090220854 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.110611256 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.090609274 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.109459961 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.109524135 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.088586683 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.083799932 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.108354485 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.085843903 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.104658694 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.090253139 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.112539778 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.092584216 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.112443185 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.087873845 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.114422537 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.110239402 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.094239626 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.131547894 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.088684579 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.108853141 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.093942695 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.116519895 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.111721341 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.09371609 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.103228297 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.099807788 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.11256464 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.099504164 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.112223921 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.085428145 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.113364922 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.094058463 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.114871516 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.094843441 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.11299808 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.0890661 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.108629133 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.090170791 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.120062713 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.090555614 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.120422636 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.096573639 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.115113554 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.090387838 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.110825531 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.088823769 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.105195092 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.091554765 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.113194825 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.09049021 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.108897026 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.09164055 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.109674684 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.088481964 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.106746458 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.090103905 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.110189369 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.1105551 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.079051221 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.085087719 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.105918912 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.08934314 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.112485803 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.108979668 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.088470835 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.087500892 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.111151269 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.08780586 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.100105352 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.093689766 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.11084997 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.090873394 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.118939588 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.103447748 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.090952419 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.119189204 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.079184953 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.10633511 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.083831582 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.10480774 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.095911954 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.109480273 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.09693709 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.10896885 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.08623959 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.102034782 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.091009832 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.106117772 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.07942165 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.083445797 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.114177741 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.10991135 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.092362343 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.094760664 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.113636181 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.109970219 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.09425666 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.107413733 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.09023647 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.109933781 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.083459476 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.104721884 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.085264901 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.108951376 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.09155102 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.105162466 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.083104379 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.089836193 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.109831596 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.089289047 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.108772982 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.088316239 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.11485694 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.108361727 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.090336947 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.113552103 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.080455682 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.108817185 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.08947001 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.1077572 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.086327711 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.110348404 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.092414573 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.11087493 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.095478641 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.108272082 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.093418707 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.108279375 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.083615095 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.108868258 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.089848108 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.108687072 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.086536324 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.110235414 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.097300051 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.101898524 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.090721569 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.108856892 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.087592617 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.11022398 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.091915242 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.110200185 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.094052653 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.110302398 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.091676352 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.11267255 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.090725538 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.110298096 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.092183226 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.107272383 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.094765601 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.10530296 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.096554585 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.111317345 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.110483341 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.089989492 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.085971052 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.108918048 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.088904012 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.108773569 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.114865719 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.092541793 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.104547082 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.085714374 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.083384722 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.112395928 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.11334735 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.09750525 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.109554375 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.091090394 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.098994583 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.082601783 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.110491829 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.087033968 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.107895179 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.093366608 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.113797375 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.090691782 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.106510988 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.089327376 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.114007994 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.095915948 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.112348354 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.087876839 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.112086856 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.091411963 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.109935041 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.088505484 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.107927136 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.091262797 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.111444819 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.088587566 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.106121105 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.118076344 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.09678894 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.110896513 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.089725894 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.112182513 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.090111441 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.100417422 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.093161888 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.109183283 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.093864141 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.110140909 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.090472009 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.119387072 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.085757066 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.108202569 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.098907253 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.108518853 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.096147028 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.101478267 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.091692654 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.111609113 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.091157051 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.102636759 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.087214581 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.106424158 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.090620997 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.105306558 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.082505377 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.122664192 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.114353779 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.092400766 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.108637885 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.088951194 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.081386014 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.101488477 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.087157332 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.111954389 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.089562891 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.1194547 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.105924828 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.08683382 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.081624055 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.110653277 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.090901442 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.112959408 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.083401097 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.101754788 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.087229478 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.111199818 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.098088563 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.108699786 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.090524131 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.112832508 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.089355595 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.104025349 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.114755533 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.083349442 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.110973227 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.103320583 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.111027334 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.09374772 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.113462164 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.097254757 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.111873557 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.081868967 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.112088518 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.091146686 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.112345709 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.091848452 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.112739348 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.125742217 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.092268407 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.105511092 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.090371473 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.109277994 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.087293035 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.117954567 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.09305322 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.111396635 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.093481926 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.108460674 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.093279284 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.116904752 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.093388603 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.110592662 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.091460375 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.109818963 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.09093194 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.108218916 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.089155848 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.112779803 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.092603079 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.110239018 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.094166358 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.107467232 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.100672467 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.118205287 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.112987787 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.083181639 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.086436413 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.107328075 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.081958617 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.111817217 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.084597127 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.108147201 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.089122661 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.108893753 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.093681354 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.113188565 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.091081528 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.11271142 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.090224663 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.100725361 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.094450688 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.111900083 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.093602281 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.103833316 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.091167092 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.112532204 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.095322192 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.11699838 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.087947647 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.112073002 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.108504824 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.094002655 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.101080133 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.095708405 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.108042943 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.09051276 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.086548281 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.112008595 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.091499399 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.113163913 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.09183294 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.114158031 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.11057833 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.096414344 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.112347299 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.08519031 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.103030627 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.095300703 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.104270745 seconds)
  done (took 61.241970226 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.156098475 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.089489593 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.101498308 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.08215405 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.129153506 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.083273599 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.101745117 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.083771812 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.103498494 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.096907105 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.102886341 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.082003518 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.125410113 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.131504534 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.128331512 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.116760961 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.082073468 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.10281018 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.082614121 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.10260638 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.103455839 seconds)
  done (took 2.979235683 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.108121675 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.121207812 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.119888405 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.104658752 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.114515162 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.120231938 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.099922455 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.121895645 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.124641802 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.115132124 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.105593489 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.120679951 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.114109751 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.095096876 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.115505566 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.117176823 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.105562321 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.113667447 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.122339957 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.100087048 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.118107667 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.119080961 seconds)
  done (took 3.291332072 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.096239778 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.088841449 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.115878657 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.083846096 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.109362885 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.085130315 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.115063814 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.088123983 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.115882916 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.091623758 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.107711001 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.091373079 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.115118872 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.084628788 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.108863843 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.08740012 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.114350847 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.091158968 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.11226745 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.085350491 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.130806348 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.104309114 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.086925218 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.087673023 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.12077882 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.090929483 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.111503795 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.090279791 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.10822399 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.090535441 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.106262434 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.093127043 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.114857176 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.088829569 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.108187643 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.090595875 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.109975002 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.08541341 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.10666998 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.09426426 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.106001276 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.092219253 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.118779695 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.087730895 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.106419116 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.092821963 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.110675912 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.085291814 seconds)
  done (took 5.601812526 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.126629226 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.164775775 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.099481658 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.160406867 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.127274637 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.125791824 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.092741422 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.152681169 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.109746557 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.090933295 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.129919162 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.127621598 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.092835796 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.121732556 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.097812328 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.112641421 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.111919294 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.096511567 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.12235562 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.091454676 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.121680226 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.114888588 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.106297505 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.12429842 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.11594492 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.090365293 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.110908689 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.100874949 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.127271298 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.117571068 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.097831777 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.120725531 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.133243153 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.095477005 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.114761313 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.113786616 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.109410426 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.112593568 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.093823037 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.110064654 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.113416324 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.101611116 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.117828993 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.12844358 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.093590538 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.114474229 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.099303073 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.114125538 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.127657361 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.095488366 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.121806918 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.126302055 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.097531794 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.112763334 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.09776354 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.132508807 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.114670804 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.090592027 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.116150449 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.123630282 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.098416103 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.118546064 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.110907379 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.117218269 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.12093263 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.107035054 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.115139811 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.116432693 seconds)
  done (took 8.677711797 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.099755057 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.13708919 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.128743764 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.108705529 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.118353428 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.116223854 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.098237229 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.117311867 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.09756966 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.124117974 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.116864646 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.169341025 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.090910239 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.123543235 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.097291434 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.118001593 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.116840549 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.097938296 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.117792598 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.096879668 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.117044842 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.128906346 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.096945265 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.128787908 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.130744003 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.109774925 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.099410586 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.117368231 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.109026131 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.11939456 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.131208639 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.117581928 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.098126684 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.129051403 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.131957052 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.097904681 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.107353898 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.097421579 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.117675067 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.116302981 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.091517393 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.12911565 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.096865615 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.11133934 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.116818863 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.098566432 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.128962245 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.130652354 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.123348048 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.105595244 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.117233989 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.128654017 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.097918505 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.117375731 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.129502747 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.117377274 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.129911598 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.129080371 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.117094647 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.108516864 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.129975051 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.137804456 seconds)
  done (took 7.992668824 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.088889242 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.087270566 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.106265499 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.085802585 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.108707306 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.086219703 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.107449159 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.088228524 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.087036091 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.109380902 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.087871529 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.10674571 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.085820346 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.107790067 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.086513998 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.105007805 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.08653435 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.084908459 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.109565896 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.085665447 seconds)
  done (took 2.706726334 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.09759002 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.130448059 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.08947296 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.117840041 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.091324733 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.117935785 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.110671997 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.09220731 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.109044232 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.091943184 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.123592898 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.102382123 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.111970951 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.117953841 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.103036917 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.1165323 seconds)
  done (took 2.532172218 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.11085241 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.123457115 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.135749864 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.094714164 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.107702653 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.097395333 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.109156997 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.08501049 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.104778758 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.098389614 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.115433426 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.100647769 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.110081565 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.087854774 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.109333104 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.095766403 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.104571318 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.093190495 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.109476705 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.1152695 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.116132902 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.111745918 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.090703153 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.111189185 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.09184347 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.114434267 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.097215041 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.106788609 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.086989048 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.110141991 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.092024162 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.119377521 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.084512965 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.115699919 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.086431643 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.106455947 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.088140929 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.110434288 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.09432847 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.110966967 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.085652889 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.111934045 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.088071808 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.111371819 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.084064083 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.110917246 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.083774541 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.117752484 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.090346061 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.113576354 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.108782541 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.098336141 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.116747446 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.100713694 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.119883 seconds)
  done (took 6.505822122 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.10365106 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.112598438 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.093928928 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.106948924 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.093061427 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.119045441 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.093226299 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.111832961 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.091753337 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.106768207 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.091471679 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.113930042 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.091599641 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.113098608 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.091288604 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.11343931 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.083622679 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.111397628 seconds)
  done (took 2.654093307 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.095598798 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.109035187 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.096990709 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.109709567 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.0902277 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.09004306 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.10648405 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.086604188 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.108712502 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.089255799 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.109549168 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.090848083 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.108168894 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.091537642 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.109520403 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.089035188 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.112171251 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.086913148 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.110033496 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.08485046 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.111320793 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.088188394 seconds)
  done (took 2.987332233 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.10763448 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.143841371 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.10374396 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.15347998 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.114972694 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.092761287 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.126304641 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.093509631 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.133882063 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.112466971 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.093541024 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.112851005 seconds)
  done (took 2.205942383 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116581589 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.149958061 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.086665513 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113530734 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.123417591 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.095644837 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114719747 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.094552654 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.128635602 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.128430165 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.094864813 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128971588 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.127217758 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.125925008 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.102375457 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.124082904 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115468685 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.096044921 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.111623925 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.137006288 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.095780287 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.128834898 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115242869 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.095913229 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116237665 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.127091976 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108082926 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129281191 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115690409 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106971639 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.124540628 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115186272 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107162368 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.130472547 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112755059 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.128223651 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.095883542 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.137871484 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.124123748 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105647347 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.113954076 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122897161 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106989462 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.123845732 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.128367304 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.094774817 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123230285 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115411513 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09582312 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.144612676 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.12412043 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.128627402 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.103470364 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128398726 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.128614167 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.144871924 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.129150914 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.126683848 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.103143916 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.129993416 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.126490693 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.102537003 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.128964917 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129341826 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123067111 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.129983912 seconds)
  done (took 8.612283053 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.131376459 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.109845293 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.095159802 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.132462325 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12830108 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115597665 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.095235197 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115699272 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.095038966 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112413185 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.164756453 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115484277 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106485195 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.127672332 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115836759 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.095472758 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115722443 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.127568001 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092569734 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.144285025 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116262044 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128049166 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.106334847 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.12731077 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.1311255 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.123784188 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.095448073 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115917725 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.095515454 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116937191 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.123573905 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.095888835 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.127459491 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.108221667 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.10753219 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116173259 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.093576799 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.125616799 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115419776 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.103659103 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.128724275 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.138504944 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116583576 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.095766299 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.13003895 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116551716 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.094788091 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112279936 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094604648 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113332328 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.129953212 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.130260216 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108429504 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.12806745 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116756378 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.095279782 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117174302 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116400609 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.09582143 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.124015744 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.127763086 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.095558517 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.146221077 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116398762 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096197927 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.128731593 seconds)
  done (took 8.4491731 seconds)
done (took 162.286117238 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.109474774 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.148646489 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.105131617 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.180814649 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.089358287 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.146755439 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.123455826 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.127898956 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.089305047 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.112077524 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.089763813 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.114576113 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.156747267 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.111667034 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.089344858 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.114354084 seconds)
  done (took 2.729021566 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.186724862 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.294592395 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.109145805 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.116555632 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.097077387 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.114762621 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.093623711 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.119152469 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.090907491 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.125377434 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.112549284 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.093639132 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.123952823 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.093907494 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.11335059 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.092984008 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.124941048 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.0922286 seconds)
  done (took 3.021855888 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.115741042 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.163579542 seconds)
  done (took 1.112351239 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.128481249 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.191856694 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.312890446 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.169259342 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.12057115 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.134958338 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.169554689 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.13088456 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.200973336 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.133608328 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.113655053 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.119087188 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.142599814 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.103482004 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.121480023 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.096989121 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.145742795 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.11965878 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.099017351 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.11846555 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.119059682 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.120043786 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.123015974 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.10037126 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.189975443 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.133978121 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.097109515 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.120740258 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.120531182 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.099611383 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.124527868 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.132669211 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.112599139 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.198528185 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.102948543 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.193098082 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.105188833 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.117949574 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.097952402 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.118303715 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.121579585 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.100879483 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.134188137 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.095710757 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.120401065 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.125609083 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.099110968 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.119265422 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.104905351 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.128686384 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.126223558 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.102904515 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.191723156 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.105099573 seconds)
  done (took 7.907824387 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.849885601 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.162784524 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.117893987 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.968826445 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.150455909 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.132035847 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.853724065 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.119280809 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.271730145 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.11601718 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.137348658 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.131306822 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.218048081 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.287012151 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.157567723 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.348192476 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.730154777 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.132609507 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.125623099 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.161515528 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.124889201 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.145927323 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.115974358 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.421567718 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.119249273 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.094384704 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.124258234 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.129182118 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.172313679 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.094992006 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.121783676 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.191605925 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.299183024 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.1909449 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.119735219 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.093821413 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.116699972 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.180165949 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.283860992 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.228805541 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.180649379 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.091982983 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.115698088 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.109010769 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.138172421 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.09066125 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.198919572 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.184080997 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.183365305 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.120937079 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.130170515 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.104399877 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.1283716 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.172830071 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.115161532 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.348113797 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.329357568 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.11732749 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.12651409 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.11393845 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.280125131 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.116890771 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.215781287 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.145126351 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.225260609 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.093102074 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.832349367 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.177893896 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.117819686 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.104131451 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.125975682 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.123073219 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.106752504 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.176034004 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.386665081 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.133022097 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.120529421 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.095460074 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.236129965 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.095093334 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.116145239 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.175570589 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.095088603 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.126983381 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.1332388 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.108225027 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.205636679 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.262687584 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.132028589 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.103414741 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.123083179 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.129043708 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.098242116 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.224927352 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.229945132 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.168938666 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.245978611 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.107939253 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.199869615 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.177331652 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.129197692 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.18305195 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.125270323 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.113942645 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.131075552 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.225882263 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.152588738 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.095364772 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.122439416 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.102155213 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.156416658 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.121482778 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.124019648 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.181869605 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.450756312 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.197376417 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.094577452 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.098126105 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.127954747 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.173115583 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.125745159 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.273395226 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.10493729 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.200550693 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.102883635 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.114295714 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.103869377 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.196413417 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.110516774 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.126684449 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.132092127 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.103406905 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.282350345 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.211189734 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.133650652 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.245005684 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.184604727 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.10527117 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.184260467 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.127798813 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.179523009 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.12921137 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.129878506 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.096312324 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.817256024 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.131032946 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.103139044 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.123694641 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.199582962 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.093751271 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.119651179 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.093727972 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.11467465 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.792826904 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.121108101 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.091922162 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.119493624 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.105118104 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.125989896 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.12393106 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.100109158 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.194348271 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.222003155 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.131816422 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.125257279 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.094315433 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.172654353 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.120219104 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.093781431 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.120042746 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.094362911 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.126863982 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.120714709 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.097174334 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.183043795 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.192568373 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.232389609 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.520803529 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.116623996 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.096022432 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.243083611 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.095183675 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.329784268 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.128854127 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.246244979 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.192400633 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.100296987 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.351545909 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.202808041 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.202895503 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.105036025 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.182781123 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.115822767 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.101043051 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.196746927 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.095529164 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.126399671 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.170434199 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.135367643 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.110014577 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.166736081 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.118827037 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.23963603 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.113639229 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.182373244 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.097174768 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.130615218 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.319719569 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.094724757 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.13937598 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.174123341 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.12401863 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.096295374 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.623618597 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.095519108 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.130150148 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.12770876 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.234826448 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.178556083 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.102893729 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.127074335 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.131904187 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.175675195 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.221209664 seconds)
  done (took 46.387908907 seconds)
done (took 61.982355892 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.316917728 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.28433681 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.322294458 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.206770083 seconds)
  done (took 2.066415281 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.190273577 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.163565213 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.133431708 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.117890269 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.165413234 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.093563746 seconds)
  done (took 1.723129746 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.508492731 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.39380366 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.359514116 seconds)
  done (took 2.123582385 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.268060064 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.297891456 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.37561696 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.468958539 seconds)
  done (took 2.380300268 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.216730289 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.133440775 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.106761634 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.148917017 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.182197063 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.187957298 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.152263345 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.163005326 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.137844628 seconds)
  done (took 2.337490837 seconds)
done (took 11.493958749 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/224) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.292568747 seconds)
    (2/224) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.187815308 seconds)
    (3/224) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.154637819 seconds)
    (4/224) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.250246399 seconds)
    (5/224) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.289798298 seconds)
    (6/224) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.177026978 seconds)
    (7/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.172264579 seconds)
    (8/224) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.291020325 seconds)
    (9/224) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.16445457 seconds)
    (10/224) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.138269871 seconds)
    (11/224) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.098257233 seconds)
    (12/224) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.258258592 seconds)
    (13/224) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.120565803 seconds)
    (14/224) benchmarking ("map", identity, Bool, true)...
    done (took 0.203858691 seconds)
    (15/224) benchmarking ("map", abs, Float32, true)...
    done (took 0.246463149 seconds)
    (16/224) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.220577081 seconds)
    (17/224) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.297039429 seconds)
    (18/224) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.111121438 seconds)
    (19/224) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.156136975 seconds)
    (20/224) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.228344746 seconds)
    (21/224) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.28680053 seconds)
    (22/224) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.214080963 seconds)
    (23/224) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.151370531 seconds)
    (24/224) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.219088182 seconds)
    (25/224) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.222383855 seconds)
    (26/224) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.140363777 seconds)
    (27/224) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.097623407 seconds)
    (28/224) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.120430859 seconds)
    (29/224) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.247257689 seconds)
    (30/224) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.11087191 seconds)
    (31/224) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.144608521 seconds)
    (32/224) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.178162785 seconds)
    (33/224) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.097720665 seconds)
    (34/224) benchmarking ("perf_sum", Bool, true)...
    done (took 0.13352007 seconds)
    (35/224) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.219363631 seconds)
    (36/224) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.101240875 seconds)
    (37/224) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.135859266 seconds)
    (38/224) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.108983945 seconds)
    (39/224) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.116950223 seconds)
    (40/224) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.210100082 seconds)
    (41/224) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.229756679 seconds)
    (42/224) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.1218912 seconds)
    (43/224) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.137429865 seconds)
    (44/224) benchmarking ("perf_countequals", "Int8")...
    done (took 0.149273876 seconds)
    (45/224) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.115119988 seconds)
    (46/224) benchmarking ("map", abs, Float64, true)...
    done (took 0.173089915 seconds)
    (47/224) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.241002654 seconds)
    (48/224) benchmarking ("map", abs, Int64, false)...
    done (took 0.138599099 seconds)
    (49/224) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.195894388 seconds)
    (50/224) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.267302258 seconds)
    (51/224) benchmarking ("perf_sum", Bool, false)...
    done (took 0.122320145 seconds)
    (52/224) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.20246433 seconds)
    (53/224) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.10030677 seconds)
    (54/224) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.21272064 seconds)
    (55/224) benchmarking ("perf_sum", Float32, true)...
    done (took 0.136171729 seconds)
    (56/224) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.109438114 seconds)
    (57/224) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.157663963 seconds)
    (58/224) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.133874168 seconds)
    (59/224) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.20313392 seconds)
    (60/224) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.080807792 seconds)
    (61/224) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.252512586 seconds)
    (62/224) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.124014624 seconds)
    (63/224) benchmarking ("map", abs, Bool, false)...
    done (took 0.148869924 seconds)
    (64/224) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.208217917 seconds)
    (65/224) benchmarking ("map", abs, Float64, false)...
    done (took 0.103536192 seconds)
    (66/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.101599477 seconds)
    (67/224) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.103585119 seconds)
    (68/224) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.099356492 seconds)
    (69/224) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.160343723 seconds)
    (70/224) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.100810764 seconds)
    (71/224) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.164399612 seconds)
    (72/224) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.172172974 seconds)
    (73/224) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.162479624 seconds)
    (74/224) benchmarking ("perf_sum", Int8, true)...
    done (took 0.129384562 seconds)
    (75/224) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.200871937 seconds)
    (76/224) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.150899848 seconds)
    (77/224) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.152368973 seconds)
    (78/224) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.106805209 seconds)
    (79/224) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.123500993 seconds)
    (80/224) benchmarking ("map", identity, BigInt, true)...
    done (took 0.148088258 seconds)
    (81/224) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.103866738 seconds)
    (82/224) benchmarking ("map", abs, Int8, true)...
    done (took 0.150229923 seconds)
    (83/224) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.104506468 seconds)
    (84/224) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.119815081 seconds)
    (85/224) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.106609609 seconds)
    (86/224) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.100350097 seconds)
    (87/224) benchmarking ("map", abs, BigInt, false)...
    done (took 0.173629075 seconds)
    (88/224) benchmarking ("perf_countequals", "Float32")...
    done (took 0.131375967 seconds)
    (89/224) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.082702292 seconds)
    (90/224) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.14676815 seconds)
    (91/224) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.198640878 seconds)
    (92/224) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.113383344 seconds)
    (93/224) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.104430085 seconds)
    (94/224) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.090175604 seconds)
    (95/224) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.093511839 seconds)
    (96/224) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.12461665 seconds)
    (97/224) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.08129603 seconds)
    (98/224) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.121598501 seconds)
    (99/224) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.093702439 seconds)
    (100/224) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.105229459 seconds)
    (101/224) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.081952629 seconds)
    (102/224) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.124327614 seconds)
    (103/224) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.221694875 seconds)
    (104/224) benchmarking ("map", identity, Bool, false)...
    done (took 0.081899341 seconds)
    (105/224) benchmarking ("map", abs, Bool, true)...
    done (took 0.0879572 seconds)
    (106/224) benchmarking ("perf_countequals", "Int64")...
    done (took 0.150834634 seconds)
    (107/224) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.104743607 seconds)
    (108/224) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.083407372 seconds)
    (109/224) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.123892262 seconds)
    (110/224) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.11016672 seconds)
    (111/224) benchmarking ("perf_countequals", "Bool")...
    done (took 0.132073103 seconds)
    (112/224) benchmarking ("map", abs, Float32, false)...
    done (took 0.081205126 seconds)
    (113/224) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.119547435 seconds)
    (114/224) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.176398649 seconds)
    (115/224) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.153435544 seconds)
    (116/224) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.133849997 seconds)
    (117/224) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.102776099 seconds)
    (118/224) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.117257341 seconds)
    (119/224) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.099001863 seconds)
    (120/224) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.124009625 seconds)
    (121/224) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.131736025 seconds)
    (122/224) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.10575305 seconds)
    (123/224) benchmarking ("map", identity, Int64, true)...
    done (took 0.169749375 seconds)
    (124/224) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.100948742 seconds)
    (125/224) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.096975862 seconds)
    (126/224) benchmarking ("perf_sum", Int64, true)...
    done (took 0.13467331 seconds)
    (127/224) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.117267066 seconds)
    (128/224) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.082781272 seconds)
    (129/224) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.097104741 seconds)
    (130/224) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.213220236 seconds)
    (131/224) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.125473044 seconds)
    (132/224) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.132939091 seconds)
    (133/224) benchmarking ("map", identity, BigInt, false)...
    done (took 0.083922421 seconds)
    (134/224) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.080482923 seconds)
    (135/224) benchmarking ("perf_sum", Float32, false)...
    done (took 0.12335912 seconds)
    (136/224) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.081976387 seconds)
    (137/224) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.138383662 seconds)
    (138/224) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.082014654 seconds)
    (139/224) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.148139765 seconds)
    (140/224) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.147088206 seconds)
    (141/224) benchmarking ("perf_sum", Float64, false)...
    done (took 0.110445174 seconds)
    (142/224) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.106005031 seconds)
    (143/224) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.101720405 seconds)
    (144/224) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.12233358 seconds)
    (145/224) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.179622131 seconds)
    (146/224) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.107520956 seconds)
    (147/224) benchmarking ("map", identity, Int64, false)...
    done (took 0.081099864 seconds)
    (148/224) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.105557321 seconds)
    (149/224) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.204941847 seconds)
    (150/224) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.099388048 seconds)
    (151/224) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.105546897 seconds)
    (152/224) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.083416064 seconds)
    (153/224) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.096274442 seconds)
    (154/224) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.136219848 seconds)
    (155/224) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.147536401 seconds)
    (156/224) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.098631319 seconds)
    (157/224) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.201957943 seconds)
    (158/224) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.101504822 seconds)
    (159/224) benchmarking ("map", abs, Int8, false)...
    done (took 0.104563065 seconds)
    (160/224) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.081332009 seconds)
    (161/224) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.105216739 seconds)
    (162/224) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.082053162 seconds)
    (163/224) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.104325899 seconds)
    (164/224) benchmarking ("perf_countequals", "Float64")...
    done (took 0.108033695 seconds)
    (165/224) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.209791289 seconds)
    (166/224) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.134037079 seconds)
    (167/224) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.102723442 seconds)
    (168/224) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.10518722 seconds)
    (169/224) benchmarking ("map", identity, Float64, false)...
    done (took 0.139401485 seconds)
    (170/224) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.105681488 seconds)
    (171/224) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.082733254 seconds)
    (172/224) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.147964876 seconds)
    (173/224) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.111731181 seconds)
    (174/224) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.106323264 seconds)
    (175/224) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.106200942 seconds)
    (176/224) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.118247292 seconds)
    (177/224) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.080891828 seconds)
    (178/224) benchmarking ("perf_sum", Int64, false)...
    done (took 0.120754911 seconds)
    (179/224) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.099479563 seconds)
    (180/224) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.104293784 seconds)
    (181/224) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.082830517 seconds)
    (182/224) benchmarking ("map", identity, Float32, true)...
    done (took 0.172090724 seconds)
    (183/224) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.090669239 seconds)
    (184/224) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.105221785 seconds)
    (185/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.101593695 seconds)
    (186/224) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.105040858 seconds)
    (187/224) benchmarking ("map", identity, Int8, true)...
    done (took 0.1469588 seconds)
    (188/224) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.1051505 seconds)
    (189/224) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.1020873 seconds)
    (190/224) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.124653267 seconds)
    (191/224) benchmarking ("map", identity, Int8, false)...
    done (took 0.080780515 seconds)
    (192/224) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.125587958 seconds)
    (193/224) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.099035412 seconds)
    (194/224) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.115922389 seconds)
    (195/224) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.082497491 seconds)
    (196/224) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.130049204 seconds)
    (197/224) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.100902339 seconds)
    (198/224) benchmarking ("perf_sum", Int8, false)...
    done (took 0.124395257 seconds)
    (199/224) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.094979257 seconds)
    (200/224) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.117773446 seconds)
    (201/224) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.082478386 seconds)
    (202/224) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.147187575 seconds)
    (203/224) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.098404005 seconds)
    (204/224) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.105292118 seconds)
    (205/224) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.10136168 seconds)
    (206/224) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.133584263 seconds)
    (207/224) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.081763687 seconds)
    (208/224) benchmarking ("map", identity, Float32, false)...
    done (took 0.10444906 seconds)
    (209/224) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.122661246 seconds)
    (210/224) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.105350703 seconds)
    (211/224) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.107013911 seconds)
    (212/224) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.105532135 seconds)
    (213/224) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.097264656 seconds)
    (214/224) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.105511903 seconds)
    (215/224) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.082914434 seconds)
    (216/224) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.081775177 seconds)
    (217/224) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.147381818 seconds)
    (218/224) benchmarking ("map", identity, Float64, true)...
    done (took 0.089974411 seconds)
    (219/224) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.134235753 seconds)
    (220/224) benchmarking ("map", abs, Int64, true)...
    done (took 0.089945831 seconds)
    (221/224) benchmarking ("map", abs, BigInt, true)...
    done (took 0.115373417 seconds)
    (222/224) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.106936974 seconds)
    (223/224) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.106049652 seconds)
    (224/224) benchmarking ("perf_sum", Float64, true)...
    done (took 0.098202933 seconds)
  done (took 31.258242634 seconds)
done (took 32.12438736 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.415635248 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.13670616 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.130277717 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.105935692 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.151219669 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.109095199 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.131513747 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.108366869 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.130101431 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.095830841 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.12078345 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.130040172 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.105754513 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.148067523 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.107233823 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.122483807 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.097117184 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.132515224 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.105567017 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.133259374 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.150487627 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.099301317 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.128971868 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.097282519 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.151193813 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.098125662 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.130626234 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.105319927 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.128897343 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.096164395 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.132048453 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.121912861 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.108358377 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.134190986 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.096863377 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.122107217 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.096220721 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.112659634 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.098009793 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.12363152 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.105409776 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.12215312 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.107537433 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.12301389 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.099859794 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.120650906 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.09572768 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.13271871 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.09536581 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.13094658 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.098323947 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.135388245 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.120528373 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.096260277 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.119320935 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.099783254 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.131031966 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.0966935 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.130615895 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.096329766 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.121956526 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.09756991 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.124450391 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.09660686 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.121862001 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.098625965 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.122649725 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.099762805 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.119989186 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.099634137 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.119577461 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.098889071 seconds)
done (took 9.537415563 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.102036766 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.178141906 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.153772936 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.129245408 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.150315079 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.136881841 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.111932846 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.145975324 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.130375321 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.120975342 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.148730045 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.14296745 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.135190202 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.130307717 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.137835838 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.101943769 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.128943599 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.109346849 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.157523988 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.145076496 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.153724774 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.104091694 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.152160201 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.142463927 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.104683979 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.148674943 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.104884535 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.126976565 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.103302768 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.145190227 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.146067535 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.104101705 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.128939921 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.116094066 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.136154772 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.12710167 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.112902116 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.125306526 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.102258067 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.125717474 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.139471566 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.116765546 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.125957731 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.113350584 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.125657045 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.105721609 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.129248701 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.128549858 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.106374601 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.123499299 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.105953362 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.150816793 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.127703672 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.10508935 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.127164947 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.106133765 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.128360754 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.105456058 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.129322401 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.129424003 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.10284374 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.127156951 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.106409741 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.145905138 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.128686145 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.104331298 seconds)
  done (took 9.256372016 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.121301735 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.161065938 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.136931509 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.113003137 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.13340104 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.093793241 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.119427608 seconds)
  done (took 1.797767833 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.095893742 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.151637741 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.130248359 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.154819111 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.142870629 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.133115986 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.137330184 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.094806397 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.14520048 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.130597793 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.12525514 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.1778879 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.12111345 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.108690483 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.156963236 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.119916601 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.133336556 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.119842514 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.103488565 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.15513103 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.125700894 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.119585021 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.134744333 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.096837505 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.14336257 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.098046558 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.190439058 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.133534308 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.095701779 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.127867796 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.101249712 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.217202548 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.119544332 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.131659289 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.094978739 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.150846906 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.117822467 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.12748102 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.149405151 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.101241518 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.143214226 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.10286299 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.129192725 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.12667759 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.104338245 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.136230647 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.108621177 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.130345556 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.103191745 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.150238448 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.131102512 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.119569708 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.122052674 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.101584424 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.131454791 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.103245155 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.136304818 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.102454482 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.15077746 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.128647902 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.12377072 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.149591805 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.143774878 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.124401088 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.139633498 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.120748868 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.145594143 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.126144113 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.104523244 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.128965745 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.124515564 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.125497179 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.132132762 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.113787764 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.129138263 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.125842857 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.149782928 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.100483621 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.134993328 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.101082079 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.124652625 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.096427728 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.138740907 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.099348098 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.123552683 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.138607707 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.109290524 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.126781002 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.103695827 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.144248111 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.125137632 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.10995018 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.13256879 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.101805611 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.138153035 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.152131249 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.10711598 seconds)
  done (took 13.213923339 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.099354278 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.097049651 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.12859004 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.122704492 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.098519702 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.097813385 seconds)
  done (took 1.573736618 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.129692334 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.127836997 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.115516367 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.132605719 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.186518077 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.149473013 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.127357979 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.132452972 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.147046572 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.115173511 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.149096487 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.151937225 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.124992426 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.133507322 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.126976995 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.132375888 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.152257982 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.102341212 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.138442351 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.102459067 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.139758515 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.132948962 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.103017016 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.146213632 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.107507846 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.132834805 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.105998993 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.1400057 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.138763726 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.107102698 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.133273103 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.106708636 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.13070088 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.131676132 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.126901039 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.130292734 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.125920095 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.110512292 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.130979653 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.107276695 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.151736714 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.101923051 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.139390393 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.134822404 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.107560026 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.131007554 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.135159667 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.107096999 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.152024265 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.108866239 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.135816001 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.131147447 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.107810927 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.134847993 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.105621993 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.133215967 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.134590167 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.127973587 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.134129992 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.129928079 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.103726622 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.132478373 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.107513807 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.135136556 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.105160309 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.135858145 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.129818817 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.10710362 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.127516583 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.107544302 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.135393587 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.128970446 seconds)
  done (took 10.101589653 seconds)
done (took 36.853215222 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.155788097 seconds)
  done (took 2.080169174 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.964737671 seconds)
  done (took 1.890647134 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.99025249 seconds)
  done (took 18.950099874 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.546132294 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.62955967 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.994725779 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.172977504 seconds)
  done (took 3.268758572 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.0012831 seconds)
  done (took 1.947954819 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.327067456 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.276578247 seconds)
  done (took 1.536935678 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.902412907 seconds)
  done (took 1.84032097 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.411860688 seconds)
  done (took 3.351190685 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.366147811 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.207597042 seconds)
  done (took 1.523703303 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.598535064 seconds)
  done (took 1.544887633 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 36.976532017 seconds)
  done (took 37.925405595 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.237743237 seconds)
  done (took 1.194883967 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.311119991 seconds)
  done (took 1.254896061 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.805357039 seconds)
  done (took 4.750422531 seconds)
done (took 83.989039649 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.1081287 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.135497598 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.111699413 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.132902077 seconds)
  done (took 1.428618176 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.112287624 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.13005112 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.109835088 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.130218159 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.11393131 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.13037122 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.103745493 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.137641082 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.105418556 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.133587254 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.13066621 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.104870772 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.132415714 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.104052219 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.129432768 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.10630498 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.134324822 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.105059821 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.131387482 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.105286244 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.130648124 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.131200155 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.108221726 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.130483642 seconds)
  done (took 3.839773154 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.10858041 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.101356912 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.13033384 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.100539175 seconds)
  done (took 1.389002186 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.113058051 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.146220145 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.119301735 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.13873159 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.145664596 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.119368588 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.12738189 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.101676145 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.128855104 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.111827855 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.128147008 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.120882007 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.147458054 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.121583185 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.114693317 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.120047872 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.098029334 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.145446641 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.112034233 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.140276153 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.100959017 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.138580089 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.108457372 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.1423392 seconds)
  done (took 3.945332953 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.177929483 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.141877015 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.151059725 seconds)
    (4/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.176665217 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.127867921 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.125632316 seconds)
    (7/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.127267819 seconds)
    (8/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.135246277 seconds)
    (9/20) benchmarking ("sum", "Int64")...
    done (took 0.130485832 seconds)
    (10/20) benchmarking ("mean", "Int64")...
    done (took 0.100931041 seconds)
    (11/20) benchmarking ("mean", "Float64")...
    done (took 0.126385732 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.156571401 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.132711205 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.131400346 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.10200757 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.133065832 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.108287287 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.132225105 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.103709145 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.141342866 seconds)
  done (took 3.618165937 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.108799603 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.126812599 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.097320679 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.126585924 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.108569544 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.128596774 seconds)
  done (took 1.653476584 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.097998985 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.096153174 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.122702423 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.095696693 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.127155854 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.09646895 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.120684064 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.097035362 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.096120825 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.123773334 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.096559523 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.121180965 seconds)
  done (took 2.244177206 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.227608826 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.126608433 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.128064638 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.101846896 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.131590113 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.100015471 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.141984052 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.099814016 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.184005443 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.128514416 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.116103524 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.182130701 seconds)
  done (took 2.624280553 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220965853 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106130355 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.278957241 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.391488723 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142564916 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.177351262 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.311369696 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.178408289 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.197522529 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.120975856 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233471473 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140653004 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.166473696 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18959437 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.150755196 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.196000742 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185738301 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.211398321 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158342841 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.217159066 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174728139 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.178037887 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.191606385 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.161905722 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.147494986 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16652449 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.101041056 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136983615 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183761331 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181284977 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184876515 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159024643 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147457987 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212030694 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224921385 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.213936152 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.316613475 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.118122542 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.226475266 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.194989045 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.256366923 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.152234619 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20510832 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164861249 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.142028833 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192652613 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167336146 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.191443411 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.1142429 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.152761303 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1945456 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186104936 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.220808058 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.121165138 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.336604576 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130476023 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.157885353 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19089795 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200108964 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.230479665 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177306587 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.106206576 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.198306548 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219636076 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19208115 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.129018083 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.178959217 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134145244 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187732884 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.206589737 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188398382 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178343836 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.222063709 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1151653 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175540281 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.181188151 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164054695 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190572566 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171437672 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.13154907 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13445799 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146647855 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137929408 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.171168785 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.134279302 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.216151162 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14558048 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.195449552 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218113338 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.169560455 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.171453165 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175304998 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178271117 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157735324 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.101422205 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156909584 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.17294472 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167832721 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113244753 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.16888335 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155616962 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.13600144 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161810149 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.106047806 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170532913 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.143219278 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177900973 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173189935 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.111693828 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.17564125 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.160572695 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.171941448 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182604875 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198279681 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114166317 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143703678 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205537495 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167778184 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.146170688 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.187703488 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.199420362 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.176535031 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119773628 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20773934 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206354355 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.124184594 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.226059883 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125217224 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144319119 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.161649401 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170143732 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.169290182 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.138650599 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139849222 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.162466923 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20487375 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.137851109 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.119696287 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184296156 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137123448 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108751672 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154548062 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147621917 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.15130757 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.133188195 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.149678248 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166392446 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170379274 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.165813524 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168406056 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123641263 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232411034 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114379656 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.170635295 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.159397544 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.099412504 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.220240323 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197542462 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112351209 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196736523 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.179473456 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236317716 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174306432 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112787908 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.19148609 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141118175 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.101233003 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177563531 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.171744102 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.172815138 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.193130507 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.232325056 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.17820943 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.163020705 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159599052 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177213498 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.186134808 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137997542 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.156046015 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.17271989 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178447032 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.133310756 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.10540612 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.137990545 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148945137 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11369941 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.143690384 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191836526 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174786652 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.200646062 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.171191462 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149895829 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.195432629 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.135528821 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175996911 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.183362067 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12061634 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.195345701 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192126636 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178561683 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.153009512 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181047835 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.130777803 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107470218 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.143610467 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.177554863 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.114096449 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.146421464 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153649269 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.195179918 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185855877 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160153254 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215252622 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177797941 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.233896817 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.10402227 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.174756245 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183530731 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16719537 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.171391855 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141536633 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.172004905 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.190980911 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154564948 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20426186 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175414111 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179799415 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211055114 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.168208713 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.14100895 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.134817988 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178967939 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150248746 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.174210591 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156583047 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116656494 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163827255 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.146696845 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135732025 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192037904 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125127963 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.22062634 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.168047395 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185923571 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107867737 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153545276 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.172872266 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156163203 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.099294357 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181483193 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.226990155 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125572636 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169216725 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186169994 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.141622148 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.329766869 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200231408 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195161709 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149781462 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152674254 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.173095226 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.17146505 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174992342 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.195907955 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123792171 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193182492 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.170941617 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.155051872 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145061998 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.130945329 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.162209864 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.161944654 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.144930396 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.163820888 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.124392063 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.223627132 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126664727 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.171272098 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175891664 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.158560915 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.13654759 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151189892 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213467655 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16964374 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188562437 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.16833408 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.179232709 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198599447 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135268009 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110630669 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.137669316 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.195038298 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114381786 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170253511 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.195790518 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236922961 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169868242 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180239344 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.119324719 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.134425858 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.171443146 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158646767 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210876152 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152795864 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.117852753 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.233527818 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.132797263 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.143472813 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.176210801 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.300386826 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.155577501 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186157783 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.10009827 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.291565987 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.136219795 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142931636 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.143457307 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182489001 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.143894191 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.196300333 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175818973 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125987108 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.174793364 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149315783 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.202293961 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.248652188 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184134853 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187351418 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.153740935 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.142037824 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173224475 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216314 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125111031 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.156995232 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17340611 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195343941 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.198872314 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.142723974 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145123183 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175023763 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.170418471 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183991556 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147480886 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198219798 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141879178 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178420997 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121392862 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134983862 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171340742 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.195080742 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143683317 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188336356 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168835217 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11299636 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138048065 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163052384 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170005482 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126507487 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.141263072 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190697264 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.138713596 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144338434 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193420889 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141614616 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.170092106 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.157227849 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.114096272 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153539048 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155255305 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116145886 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.184040756 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194870399 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.140966588 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189608799 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183957547 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176763697 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171427799 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.126193554 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.674679434 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.138664395 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194131369 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.129698466 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.228681725 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131252766 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176865201 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.173959007 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161174659 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179474635 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161784379 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.230721818 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177213652 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.168993385 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.114186798 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154855552 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155266583 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.112756254 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.164199278 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173591165 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151961154 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.119033441 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.168206114 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157701073 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.154922789 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.121699669 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196829848 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160304125 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193064956 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.19544976 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.151014572 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177126093 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186031727 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140373371 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.172682619 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184673828 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.124066225 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162225664 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.142162873 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.116285836 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191088139 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.136291543 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172795749 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171298149 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.143565209 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175230072 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.146991053 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171413334 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153800031 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171820107 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.108257819 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.167349942 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.170343094 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.112210611 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.139647121 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.166862511 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171035939 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.170504443 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.108605162 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.184905792 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194497258 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.106369907 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145404747 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.296963731 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170209979 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205720492 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.166674246 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145964975 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126044389 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16712013 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.164650457 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171112229 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.11006616 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143603652 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.142598261 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.192420169 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.138175118 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.169436819 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196221635 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172062388 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201160627 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.158157666 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.27619769 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.121528647 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.168415286 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.141181004 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.110140804 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151722968 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146099465 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126877832 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.233070114 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192162639 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.163896619 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.127029873 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138743964 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.105662404 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14501341 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.173916527 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165611947 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140117827 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154594282 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.129256278 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154170651 seconds)
  done (took 81.813920695 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.208773641 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.228973699 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.179755183 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.221866053 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.201897376 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.286927614 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.239079217 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.257895127 seconds)
  done (took 2.861807136 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.109980024 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.14597243 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.152616791 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.135208846 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.134978684 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.365851025 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.146673164 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.107349323 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.195247602 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.147253827 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.132565321 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.639391927 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.103182748 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.137228634 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.123638005 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.133999262 seconds)
  done (took 3.948090039 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.505161686 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.56301638 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.391369088 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.262112977 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.239168269 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.165132523 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.78206337 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.197652643 seconds)
  done (took 13.14758576 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.13887737 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.154315902 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.273123927 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.186243921 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.171555999 seconds)
  done (took 1.974259977 seconds)
done (took 125.427817091 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.105192508 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.135266158 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.106016204 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.136381003 seconds)
  done (took 1.51926464 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.12011524 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.089773004 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.12273557 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.088786337 seconds)
  done (took 1.465983389 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.507328029 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.089551238 seconds)
  done (took 1.681014734 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.130922179 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.148262996 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.128859729 seconds)
  done (took 1.464903216 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.112727399 seconds)
  done (took 1.167465701 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.116980361 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.112806243 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.153889676 seconds)
  done (took 1.437392736 seconds)
done (took 9.784651085 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.133663913 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.445872908 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.396132283 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.15027694 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.730850503 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.389117586 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.049907084 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.165318541 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.175838549 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.100463786 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.148512004 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.682437773 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.033330775 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.354413841 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.018597369 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.353419756 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.713375993 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.103157931 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.136698792 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.102609182 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.027845139 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.098742802 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.131044984 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.102574073 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.710512677 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.405081542 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.130955113 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.393656403 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.101320704 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.133638081 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.391370586 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.129783786 seconds)
  done (took 17.180475136 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.146083478 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.191510117 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.13792797 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.103525488 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.133852718 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.103019592 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.13881644 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.114563549 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.191646032 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.129907675 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.121036069 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.130120973 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.106405414 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.131058311 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.123834945 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.12990791 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.1033616 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.132810342 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.107528141 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.132933069 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.120738017 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.12941312 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.1025579 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.132514916 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.100396028 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.143980603 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.101803897 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.141963189 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.100296784 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.136498422 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.135477297 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.102460091 seconds)
  done (took 5.110612168 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.152201948 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.201795341 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.139582432 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.136896022 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.181494019 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.131948748 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.218543604 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.138941798 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.195127243 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.130969964 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.121163578 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.131868875 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.168532418 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.103050921 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.152784718 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.100694683 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.134028419 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.103966737 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.137588577 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.103401722 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.150718562 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.100428412 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.132796398 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.103601544 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.130608768 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.115381177 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.130987166 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.141309852 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.10190101 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.134542189 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.109102133 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.12966021 seconds)
  done (took 5.427696488 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.108775359 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.137564828 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.119556188 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.148460473 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.107143392 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.136939576 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.109687707 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.13295686 seconds)
  done (took 2.058354198 seconds)
done (took 30.828677705 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.123221976 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.144057853 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.115794204 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.140704573 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.138089285 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.129155914 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.114064321 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.099458239 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.141875886 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.118375832 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.131479774 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.102591511 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.145868729 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.106847423 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.14739864 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.111099461 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.153089413 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.117926775 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.132585224 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.111702388 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.131933055 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.123746179 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.137841796 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.102971481 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.157392887 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.133355309 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.120145483 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.135333573 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.107549684 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.103386362 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.149247977 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.107978188 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.132930335 seconds)
  done (took 5.219969669 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.131412884 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.178864126 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.10020755 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.129569658 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.172936803 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.101111626 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.158798431 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.099708933 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.129306948 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.100368164 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.099201028 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.157668332 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.163739786 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.133758384 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.179588976 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.168430414 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.130712636 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.170876815 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.15349794 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.140651937 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.161346456 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.098803289 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.164795173 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.172696448 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.099703843 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.129332455 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.1461202 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.161525877 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.174559862 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.134596192 seconds)
  done (took 5.309970133 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.111775462 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.148796239 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.129285257 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.206602714 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.174310814 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.11790853 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.146009369 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.121515507 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.161186496 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.101932893 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.144442936 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.164330379 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.12038346 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.143512439 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.108059297 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.147116466 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.123048265 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.133722646 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.110531439 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.151790628 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.121818738 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.146828716 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.11751964 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.143411228 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.101774114 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.142954269 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.107822182 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.146788446 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.138621631 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.11310202 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.135281463 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.107154253 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.134636238 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.114132149 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.135958874 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.111387569 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.155379974 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.112157386 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.146778618 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.168564645 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.113419723 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.136499001 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.126009807 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.181485345 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.104303727 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.140472631 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.113554009 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.143559433 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.101788656 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.152843445 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.118255544 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.134279766 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.148337133 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.103195035 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.131233887 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.112048583 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.10396302 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.135919121 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.1417626 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.107540971 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.152657757 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.113382432 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.140301875 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.104991184 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.139009842 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.103358751 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.131106626 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.108504041 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.157382604 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.10881771 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.166028672 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.103321674 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.139338869 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.112292002 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.139660209 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.112184171 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.132896006 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.109796933 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.14202446 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.108957334 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.143029241 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.106182458 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.13792973 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.121256778 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.148849684 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.140975201 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.108729262 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.140146467 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.105829485 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.134841168 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.117976295 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.134965252 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.107604034 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.144010774 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.103623753 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.135708825 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.110343074 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.138348316 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.101237689 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.153734452 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.108288655 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.132497896 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.12185932 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.135189727 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.106424496 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.142542542 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.115656222 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.13294366 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.107820389 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.139763763 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.102399395 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.138875693 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.10673103 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.132853721 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.115131694 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.144628909 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.108031643 seconds)
  done (took 16.147754042 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.257822276 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.236763086 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.208710001 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.324671141 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.157762977 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.130575373 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.233272672 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.188635653 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.134718518 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.175701642 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.19257576 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.198242815 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.103351228 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.167701987 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.23737712 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.331275334 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.168769998 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.17607274 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.144448892 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.158315622 seconds)
  done (took 5.013734721 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.119961965 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.175350396 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.164459754 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.130554163 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.135569401 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.118031697 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.136208526 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.150347223 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.105504918 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.141559804 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.103198575 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.143427663 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.106493141 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.137228486 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.121712629 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.151933807 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.107887078 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.141975587 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.151411112 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.109966672 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.135352298 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.156739114 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.113854554 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.164260339 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.111380237 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.149979011 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.101722731 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.142489011 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.100855303 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.1349576 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.108982512 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.151800225 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.141120159 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.105697075 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.139365197 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.104244387 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.131065654 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.105795043 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.136202484 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.108516628 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.150780712 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.106806834 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.134588584 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.104957681 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.143081889 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.10075273 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.108989989 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.141470685 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.139193895 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.112993462 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.140302569 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.108425872 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.142723859 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.116517728 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.131383356 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.113366837 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.147813823 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.138809514 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.111108525 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.132218354 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.102151934 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.10688557 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.133922836 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.108761648 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.140718999 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.151593922 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.112700448 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.134316468 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.112171494 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.138828133 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.108045398 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.153346465 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.154492092 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.102648785 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.130904626 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.125846054 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.13073504 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.092126189 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.113356093 seconds)
  done (took 11.168766867 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.133047159 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.134917375 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.124075914 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.171112617 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.118399099 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.144191375 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.103979306 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.155922236 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.110919707 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.143506037 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.110546534 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.15079555 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.162684613 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.117755782 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.134821333 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.119577416 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.138511805 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.145688228 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.154930207 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.166143349 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.115240162 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.140033714 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.117673176 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.147002192 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.137155777 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.148175149 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.169500736 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.109183583 seconds)
  done (took 4.922014392 seconds)
done (took 48.837751769 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.185283656 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.382898237 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.154592743 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.154571641 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.175364861 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.204073718 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.157999326 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.348342666 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.907292516 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.149106453 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.154202887 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.155031222 seconds)
done (took 27.211384786 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.251933162 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.754066621 seconds)
    (2/2) benchmarking "String"...
    done (took 1.512353574 seconds)
  done (took 4.365744994 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.154074789 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.155575253 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.399939495 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.154621038 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.173158558 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.176318513 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.165834463 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.172219985 seconds)
  done (took 15.477215356 seconds)
done (took 25.328841594 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.162269043 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.442449702 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.432809154 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.175753501 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.157381486 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.157446513 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.144537034 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.210586144 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.176568343 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.144033689 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 2.172802076 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.440773199 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.150684467 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.55972059 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.14484605 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.175089869 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.182898854 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.443310783 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.164781132 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.219370656 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.143180251 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.166627076 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.168951626 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.180081848 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.178971096 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.166583332 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.213531217 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.14379968 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.464855044 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.167247529 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.204089584 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.161012349 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.22105641 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.160183227 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.292473704 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.193249855 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.450901388 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.163438152 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.150364834 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.17288414 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.470513434 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.581784189 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.171259764 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.155193773 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.160114345 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.236949352 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.144837394 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.897108756 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.165769504 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.156943599 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.200023264 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.635992767 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.181720919 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.190926607 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.162138744 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.501507177 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.169077711 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.241190618 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.192078079 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.16337894 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.160438001 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.170884145 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.210020705 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.171763659 seconds)
  done (took 141.596388652 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.160542843 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.168915963 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.165952797 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.184095265 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.172018811 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.170932059 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.160109341 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.160006024 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.164412048 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.175990638 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.170923824 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.159996344 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.171484663 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.138564854 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.161730669 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.187843064 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.17099955 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.188879675 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.181631343 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.161895456 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.183644198 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.171441763 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.172892112 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.169799931 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.186348905 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.260507213 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.216523497 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.215053006 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.169546563 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.162421675 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.191625426 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.185740313 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.8272266 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.015234993 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.179264102 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.176516558 seconds)
  done (took 78.946527353 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.163386374 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.163682215 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.16332645 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.197121012 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.163662687 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.755851369 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.756303071 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.941134028 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.453482125 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.71013606 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.553930141 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.173207539 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.259892232 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.177453215 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.172878527 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.180351535 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.190075435 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.17404931 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.163590936 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.757007999 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.176833836 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.155561886 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.362544343 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.182008806 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.198500878 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.562623132 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.16403368 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.19718832 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.504698464 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.218364412 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.164479007 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.648508548 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.947537343 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.287735604 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.166260866 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.198525813 seconds)
    (37/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.166244606 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.166414206 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.452449544 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.165287325 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.166029403 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.168315682 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.9414268 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.175411138 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.759049306 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.16544444 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.248852054 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.171059807 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.166332945 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.46998975 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.066761891 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.191566595 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.165780805 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.167449932 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.166197624 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.165156439 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.200028313 seconds)
    (58/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.165511921 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.564965536 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.292234325 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.167214825 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.169874513 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.200666792 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.166836945 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.418413679 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.177778986 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.253281333 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.249464508 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.385065701 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.762466284 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.166972814 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.265877508 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.28857994 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.16724288 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.166648615 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.167302638 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.16769039 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.280706739 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.167878937 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.61503798 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.348102485 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.185855565 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.721557416 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.277369499 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.168388955 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.624667622 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.174193115 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.167043263 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.959712995 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.267808824 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.167953098 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.168666797 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.16772255 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.619751488 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.763813439 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.50057935 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.177495739 seconds)
    (98/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.89695559 seconds)
    (99/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.180041875 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.168346929 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.632096214 seconds)
    (102/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.16908758 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.760609779 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.92948616 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.178879252 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.284429354 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.35176905 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.187668821 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.1676197 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.725577427 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.179020115 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.226812915 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.175038652 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.569898592 seconds)
  done (took 365.677524253 seconds)
done (took 587.298805817 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.895002753 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.842250626 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.977873322 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.870687303 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.840173282 seconds)
  done (took 10.516863326 seconds)
done (took 11.606735683 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.368042926 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.369617741 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.232685957 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.371501493 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.207776187 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.389806151 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.356059541 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.193157323 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.286208124 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.259612463 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.282639077 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.228888603 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.210666883 seconds)
  done (took 17.849851558 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.466712325 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.175555609 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.261911965 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.422302056 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.215269693 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.443421778 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.47570663 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.175640959 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.325433215 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.188959685 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.187241858 seconds)
  done (took 17.436415074 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.450974442 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.177075917 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.245746545 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.435964101 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.216419402 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.451941368 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.490823042 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.178392609 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.322302112 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.190369577 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.189468555 seconds)
  done (took 17.446576691 seconds)
done (took 53.822793792 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.219350747 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.347915037 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.203978841 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.190143717 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.185250681 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.18611336 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.191177781 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.185332175 seconds)
  done (took 10.808408095 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.182348549 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.182352202 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.181610531 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.184631073 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.185374331 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.184664529 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.18553808 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.184879769 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.182294978 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.181765278 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.185164998 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.182026414 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.186133347 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.185352625 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.18348662 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.183207402 seconds)
  done (took 20.041457421 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.184571475 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.182603242 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.182453749 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.182077241 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.18299235 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.183419717 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.183209851 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.183279482 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.183201496 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.183849709 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.182946799 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.183229948 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.182997269 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.183906902 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.183579619 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.184798045 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.184089138 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.183855083 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.188010127 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.183909848 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.184891663 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.186136329 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.18403464 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.184071293 seconds)
  done (took 29.513495537 seconds)
done (took 61.46027517 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.177630125 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.203698445 seconds)
  done (took 5.481436203 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.245938043 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.249875179 seconds)
  done (took 3.597805553 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.188406154 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.187541496 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.188071958 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.188095513 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.185742702 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.186604164 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.187331234 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.188643551 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.186002596 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.187370842 seconds)
  done (took 12.974594148 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.188084123 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.187322707 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.185327009 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.186772919 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.188607095 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.186814073 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.187577446 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.18705854 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.186951215 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.185288299 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.188487444 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.185900708 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.188028485 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.185210997 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.187442258 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.18662172 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.18602094 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.185959507 seconds)
  done (took 22.465716698 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.201630397 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.209185059 seconds)
  done (took 3.512103985 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.329981867 seconds)
    (2/7) benchmarking "second"...
    done (took 1.228005395 seconds)
    (3/7) benchmarking "month"...
    done (took 1.301569234 seconds)
    (4/7) benchmarking "year"...
    done (took 1.293595504 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.227789336 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.206575025 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.227823399 seconds)
  done (took 9.917535216 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.19158736 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.394739382 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.507851308 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.727077627 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.190153486 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.234813284 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.064444004 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.234571582 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.222432887 seconds)
  done (took 13.871291848 seconds)
done (took 72.918038433 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.18106599 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.251728786 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.207711515 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.196641403 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.52530383 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.233243199 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.187820295 seconds)
done (took 15.88438971 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.176786462 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.19266027 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.186316156 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.192432087 seconds)
  done (took 9.851442163 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.191736082 seconds)
    (2/2) benchmarking "read"...
    done (took 1.541094848 seconds)
  done (took 4.836515587 seconds)
done (took 15.790174839 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.191236473 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.189676411 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.190070274 seconds)
    (4/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.188653545 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.187714735 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.190836136 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.18961637 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.188480371 seconds)
    (9/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.189114254 seconds)
    (10/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.190884727 seconds)
    (11/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.191099493 seconds)
    (12/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.192416698 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 1.191320761 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 1.191759571 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.191890348 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.188266482 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.19005293 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.191823835 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.189625167 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.18967172 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.189336763 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.191310447 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.190316197 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.189292633 seconds)
  done (took 29.67066666 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.192398126 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.190967404 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.192049228 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.192561351 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.189732626 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.192983132 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.193413203 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.190752498 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.193007937 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.1913494 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.190285297 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.189857397 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.193219068 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.189903875 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.193184679 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.191690319 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.192629601 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.189582293 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.193466549 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.19134206 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.194279077 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.190765615 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.19123285 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.193727845 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.190076034 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.190557198 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.193863397 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.191084322 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.194322035 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.192379595 seconds)
  done (took 36.863248927 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.200083105 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.201012314 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.195094784 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.194597668 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.193784534 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.193174606 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.196230939 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.196040037 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.195465462 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.194845093 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.195416812 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.195144795 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.194634425 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.196796636 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.19532826 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.195817498 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.19650759 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.195049309 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.195418495 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.197004556 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.196547337 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.196319595 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.196860957 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.195788594 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.196291628 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.197742206 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.195939946 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.195520033 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.195480464 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.195961055 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.196118252 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.198297702 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.197669375 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.197690427 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.196974956 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.197834836 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.202263988 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.204989174 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.197786342 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.197499411 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.196971394 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.198081527 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.198354031 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.197887878 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.196147462 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.199909356 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.199716276 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.198568402 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.199051367 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.197989551 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.197796693 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.199512178 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.198446829 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.198082735 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.197697162 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.197879976 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.199049829 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.198269601 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.197715177 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.19834614 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.198064309 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.197911374 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.199919568 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.19899808 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.199568834 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.198933951 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.199902854 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.199707703 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.198917315 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.20012448 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.197786086 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.199857054 seconds)
  done (took 87.332601058 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.198501381 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.197036907 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.196683843 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.196185463 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.196803451 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.19979435 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.195760377 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.199424049 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.19688626 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.198444447 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.198432623 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.197188519 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.196026213 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.200548458 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.199679683 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.197105127 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.198105753 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.196264342 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.199753754 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.199675837 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.200331827 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.197738724 seconds)
  done (took 27.469961624 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.20120729 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.201502029 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.198358556 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.203293915 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.19984307 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.201716631 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.200558883 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.201949752 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.200264661 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.198125118 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.198812688 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.201129608 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.201116988 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.199039606 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.199040939 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.200168321 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.201358848 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.200078704 seconds)
  done (took 22.721768759 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.199269162 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.199989873 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.201051303 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.200113785 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.198679447 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.202489702 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.199439412 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.202869998 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.202988816 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.200278466 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.203164939 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.201711206 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.202210749 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.200074278 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.20145394 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.200012376 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.203165217 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.199613608 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.202342674 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.200601025 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.200880251 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.202948674 seconds)
  done (took 27.542100269 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.202595625 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.202288916 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.199607842 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.200380733 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.200250157 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.203551147 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.203236219 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.200941737 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.20607661 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.201382197 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.199692735 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.203446521 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.202397566 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.200322482 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.201124149 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.200179039 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.203492749 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.200247306 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.203568755 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.201644031 seconds)
  done (took 25.153605043 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.204071398 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.205958717 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.206014863 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.205647395 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.204833531 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.204770017 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.20527363 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.206115037 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.206200142 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.206830801 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.20624079 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.205579306 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.205423573 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.205185485 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.20622666 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.204661672 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.206247819 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.205681136 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.206706476 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.206985336 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.207760561 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.206914625 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.206114845 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.2068515 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.206649137 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.206501348 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.206944722 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.206679167 seconds)
  done (took 34.887461642 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.20610993 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.205895565 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.203395199 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.203866117 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.204033112 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.205359173 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.203817032 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.205031414 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.206885537 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.20516316 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.207151569 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.206516443 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.206323006 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.206885248 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.207521965 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.206836878 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.206718508 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.204902031 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.205232425 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.205376653 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.208419472 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.207669939 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.208063808 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.205474853 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.207308065 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.209059099 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.206844006 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.207201899 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.210028188 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.205802618 seconds)
  done (took 37.309763101 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.253857471 seconds)
    (2/2) benchmarking "in"...
    done (took 1.253749689 seconds)
  done (took 3.628423138 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.207074729 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.208471898 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.207793497 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.208013867 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.206399182 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.209168642 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.21104474 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.208429661 seconds)
  done (took 10.787773459 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.208047185 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.209634753 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.209139605 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.208808816 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.210139239 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.211022492 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.216576563 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.231055102 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.210640656 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.211200766 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.217101723 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.217715951 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.21299265 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.210364261 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.209721003 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.210344435 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.210535822 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.210583272 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.211118253 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.211172048 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.210825965 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.212625638 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.212048168 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.208860784 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.211835007 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.221934101 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.214051964 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.212664251 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.211610834 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.213449808 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.211282512 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.207969957 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.211665623 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.212638872 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.212309376 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.210996849 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.219309511 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.235077142 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.217893207 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.213255142 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.211638846 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.211026673 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.211929203 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.2140962 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.213946949 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.213281186 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.213215963 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.21126346 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.212034476 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.215993583 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.218167017 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.212277107 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.211603313 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.215285726 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.214368671 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.219732035 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.236846602 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.217821718 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.222592848 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.22471331 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.226669101 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.239327907 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.21557211 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.215646747 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.224734333 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.239519575 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.219217845 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.232919134 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.210555461 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.214872717 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.22150857 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.22677983 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.243119912 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.214187438 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.214974483 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.214301726 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.215673219 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.216788803 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.220860298 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.238981725 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.2154475 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.215723319 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.225502492 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.239839595 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.21528282 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.21484595 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.215620903 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.217088567 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.215996158 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.226557323 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.237626521 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.217447926 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.216102757 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.216119868 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.216086003 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.216227822 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.215210175 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.21570803 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.213328686 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.217072182 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.215091995 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.22052194 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.226449859 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.215937143 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.216289825 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.223716213 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.216767966 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.216608724 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.222513031 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.216351389 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.216476157 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.218762167 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.223980181 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.215239439 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.219994882 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.226039855 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.216599471 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.218260498 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.218196741 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.219022455 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.228299132 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.245552198 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.218114692 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.218790756 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.224046627 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.231930773 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.219776037 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.219730063 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.219208776 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.216723448 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.215741021 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.218441987 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.218212749 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.221304267 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.218679661 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.219018146 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.216590435 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.219269467 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.21979471 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.220461627 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.219794729 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.219673255 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.218898422 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.220468294 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.2213006 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.219132288 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.225403377 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.218438022 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.220328797 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.220632601 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.218148244 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.219607902 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.220083749 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.221663772 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.219475413 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.220836352 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.220070589 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.220035678 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.221001401 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.219732554 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.221223935 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.220909066 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.228264917 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.220812879 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.2240638 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.220695492 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.21778177 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.220194142 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.221200527 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.220235312 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.220454405 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.218727665 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.223619761 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.230374989 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.221683072 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.220860422 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.224260918 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.22151497 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.222440661 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.22199878 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.225583112 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.230894536 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.221512085 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.227769664 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.222340173 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.223496051 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.222578021 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.222209903 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.221496034 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.222502478 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.227453186 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.231273497 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.234689081 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.248895344 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.222804362 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.226843724 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.223066501 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.227363062 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.225946329 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.224518288 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.222861011 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.222316676 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.221615866 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.222783812 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.224652856 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.223352131 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.223551713 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.225281968 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.2254779 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.22306786 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.224509793 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.22336318 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.224779505 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.221500388 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.224942184 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.223384614 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.223729484 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.222895131 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.223121893 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.223793675 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.225463551 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.22580213 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.230933897 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.222238655 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.224769988 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.225658549 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.224190734 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.222739194 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.22593317 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.225991003 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.224365276 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.232411489 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.245668743 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.225519282 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.231245004 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.245735219 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.225388345 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.227508584 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.226232674 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.222847076 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.228959654 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.235469278 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.227324757 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.226462697 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.226334928 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.225619762 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.226851658 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.233334412 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.2231196 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.225204499 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.227057615 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.227353865 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.223983666 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.227992155 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.22745623 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.226914114 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.22777821 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.227354425 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.227172175 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.227775849 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.228470093 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.22738872 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.229188179 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.231146852 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.2353779 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.230596642 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.227758257 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.229625282 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.229199855 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.231859012 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.235560614 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.226652145 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.228060195 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.240164491 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.254578989 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.234342022 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.249588538 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.230190619 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.233219913 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.250258754 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.230461606 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.2283372 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.228119479 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.228901848 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.228017801 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.227021337 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.227253948 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.229014019 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.231097268 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.231200516 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.234478459 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.229988224 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.229251225 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.231371576 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.229893336 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.230150778 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.227719396 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.230676677 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.231470619 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.231111199 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.2278733 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.230734307 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.23587265 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.252568855 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.231101942 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.229677553 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.229721134 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.228846483 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.230913643 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.231145021 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.234949253 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.240855771 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.23505039 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.240678598 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.231207842 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.240421864 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.231648213 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.234974295 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.241819013 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.230015925 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.229617713 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.232080325 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.232375586 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.238209196 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.252527557 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.232170563 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.236713992 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.230167663 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.232576614 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.23101898 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.231974047 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.232149077 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.231303219 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.238960838 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.254961974 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.237332165 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.232196013 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.229561729 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.232223227 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.234444632 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.231129751 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.233675101 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.232904495 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.234216647 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.232373007 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.232897833 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.232637395 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.233333709 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.234353107 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.230173433 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.234420989 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.238719992 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.257973763 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.238724794 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.236220835 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.239995652 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.233439111 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.240119104 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.255032986 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.234209 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.234523171 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.234806246 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.234410006 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.234279911 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.2346124 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.233867047 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.236134294 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.240364841 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.234954444 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.237305867 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.235225656 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.23530024 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.234216609 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.245311375 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.26116232 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.237767749 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.241679527 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.233481084 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.236958137 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.240135119 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.236960708 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.233962699 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.239859112 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.246763751 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.244658092 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.234712726 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.235080925 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.236282139 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.235410173 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.236775233 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.236416745 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.235964025 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.237192281 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.235981536 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.236705284 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.238019119 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.236996974 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.236485284 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.237304461 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.237016139 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.246146227 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.237475663 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.2379623 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.238591142 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.23932688 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.23698548 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.237014374 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.23794489 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.238339708 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.237897557 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.239921059 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.24422174 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.245845463 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.239566133 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.238171989 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.238168419 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.237928468 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.238104914 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.237776604 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.239172798 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.237793746 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.772929977 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.237855184 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.238678504 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.237318091 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.239261218 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.238909153 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.240596583 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.241272629 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.246676584 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.238132324 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.234412577 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.239951128 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.23837761 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.23773924 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.239300456 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.244645227 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.243366994 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.250763195 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.250291464 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.244617369 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.239868676 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.243597358 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.249421815 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.237785351 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.240018608 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.240797181 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.241663472 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.241271221 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.24626682 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.242402125 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.247393723 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.239753084 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.239379679 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.246530839 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.265207155 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.24006372 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.243522501 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.245414612 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.242185522 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.237810159 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.241308057 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.241792024 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.247295325 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.263962668 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.242389679 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.242045554 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.242398709 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.243327873 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.247463444 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.242617606 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.243742553 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.239195149 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.242909158 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.241768054 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.244633047 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.240900079 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.241616965 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.241477345 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.245412856 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.249095098 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.240132049 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.243934028 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.241920743 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.242536816 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.243413882 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.24172113 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.239622281 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.241025547 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.24280172 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.243164866 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.243615047 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.245566521 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.241857494 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.244159242 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.245083214 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.242445213 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.246945267 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.256337045 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.251070073 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.240106232 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.242607081 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.243071165 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.246074934 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.24504009 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.243259152 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.245087746 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.245680703 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.244946631 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.243745758 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.244250416 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.247633134 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.260872588 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.267807862 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.243804293 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.244299847 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.247607986 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.245783799 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.242662232 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.246209573 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.245094215 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.248947783 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.254145871 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.246691111 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.250886586 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.266937391 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.246911642 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.251089087 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.247661548 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.253921278 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.247831799 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.246769028 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.246303557 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.251501433 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.262302623 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.247708968 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.256046029 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.278249989 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.268420534 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.246149282 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.247348193 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.245137425 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.246636513 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.248200611 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.248242765 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.247908264 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.247949963 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.249371308 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.248068101 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.254118143 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.246621584 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.249185807 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.247396758 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.24625758 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.247608407 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.245493388 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.24707118 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.247814433 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.248503908 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.247984297 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.248543691 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.247286504 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.260612533 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.276615954 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.248249802 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.247796221 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.245775417 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.250601573 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.251861084 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.261537814 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.25646463 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.247437998 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.249149248 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.250111115 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.248443153 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.248427782 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.249084702 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.248026846 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.247231621 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.247225584 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.26186755 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.277531236 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.253159482 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.247518229 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.249501985 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.249977991 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.249239738 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.251261987 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.251245589 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.250269421 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.252351836 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.256303112 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.250437285 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.250261072 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.253142936 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.259164884 seconds)
  done (took 736.359133685 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.246658323 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.247321423 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.247479011 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.248675312 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.24810783 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.248385802 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.24798304 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.248460631 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.249122902 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.247700453 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.248076247 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.248316996 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.249882992 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.249851972 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.247499292 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.249327918 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.249913287 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.248605246 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.249852152 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.248932942 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.249881566 seconds)
  done (took 27.378631912 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.251544571 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.249853395 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.248684122 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.25249171 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.248282148 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.25369422 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.249653045 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.252888464 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.253651096 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.250057626 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.252811534 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.253259374 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.249214737 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.250387061 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.250313788 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.252974884 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.252859378 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.250658656 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.25300151 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.250063346 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.252466202 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.252315597 seconds)
  done (took 28.691623024 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.253323752 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.254242051 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.252510847 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.249510191 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.252884988 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.25159043 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.256467592 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.254367186 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.252963977 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.254182991 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.253442474 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.255220964 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.261844711 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.261464419 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.257313551 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.255204125 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.254400194 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.254282292 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.25322794 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.252372633 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.259241547 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.27439735 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.252629556 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.254009369 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.254702406 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.255390446 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.25548802 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.25516624 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.255832012 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.261048618 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.255314749 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.254630232 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.257507471 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.254671954 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.257105092 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.261787715 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.256022484 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.253967268 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.256859331 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.266408482 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.280228033 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.256677379 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.261728772 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.279460735 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.257886322 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.259679918 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.264747436 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.253874915 seconds)
  done (took 61.521036644 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.867086631 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.889124855 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.883060929 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.891095762 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.889277643 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.89055207 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.898885063 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.895560242 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.884477156 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.887244806 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.892921145 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.888083265 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.893477017 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.894319252 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.893114494 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.891158205 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.89038099 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.890192418 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.898780542 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.900325775 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.890403091 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.902117742 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.894236709 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.898593467 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.898652791 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.89249707 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.8961807 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.893913967 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.893278308 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.89791941 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.900351099 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.906588028 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.904523075 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.892527304 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.893472548 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.895718119 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.901959664 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.89798583 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.898005553 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.899113685 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.902417738 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.905299648 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.906516116 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.902200181 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.911845134 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.901272781 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.898329495 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.895939316 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.896363595 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.900462599 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.904371597 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.903964889 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.89984982 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.89683857 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.90083191 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.90366785 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.909898718 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.907543499 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.902086496 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.901514476 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.90265837 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.900181226 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.904767511 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.904226542 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.904451761 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.900353395 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.907089248 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.900792833 seconds)
  done (took 130.201395027 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.262922483 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.26241374 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.261329594 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.260534545 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.262537901 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.262512603 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.26231529 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.262549769 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.261888916 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.262854157 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.263001048 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.263150272 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.261939228 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.26249485 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.261848389 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.262007917 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.262856348 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.262929473 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.262554422 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.263728038 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.262000661 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.263055464 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.263408601 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.262286654 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.262076131 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.263927187 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.262684954 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.26374331 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.264186505 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.263766472 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.263680845 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.263919462 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.264357204 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.264033228 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.264542553 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.26454708 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.264648778 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.265573943 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.263559851 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.263653961 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.263966423 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.263830865 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.26482308 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.264863671 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.263584512 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.264254936 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.264538551 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.266368487 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.26551639 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.265221201 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.263621787 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.265639364 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.264725725 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.265417592 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.264661136 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.264856894 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.266256973 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.265399095 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.265686038 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.265303853 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.26647905 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.266220729 seconds)
  done (took 79.527960852 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.26691763 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.265484568 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.263758291 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.263349965 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.264198921 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.264970174 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.266442209 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.266806879 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.26768697 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.266518054 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.267772643 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.264395837 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.266354735 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.268779753 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.265199 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.266322914 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.266574078 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.266316995 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.268452861 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.265363606 seconds)
  done (took 26.495822788 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.264673354 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.26808434 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.266463375 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.266084383 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.268344558 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.265390285 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.268705535 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.268131187 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.265405207 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.266547894 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.27059208 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.268825776 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.265969868 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.26506196 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.266578384 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.266227637 seconds)
  done (took 21.444860623 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.267018005 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.269769514 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.268604604 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.268703816 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.267174993 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.266156083 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.269876919 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.265950422 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.265893853 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.269873002 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.268337981 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.268626311 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.269323719 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.267540182 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.26687091 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.269938283 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.266541549 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.266686202 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.271182063 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.271675282 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.267082945 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.267892708 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.269364489 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.27010216 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.268016474 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.268902523 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.269644228 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.26878852 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.267185299 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.270050395 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.268358879 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.268136394 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.267504534 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.267642699 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.270905616 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.269754049 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.269645802 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.269884599 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.269537837 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.270938608 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.270654839 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.268603752 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.27119125 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.270672944 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.268403745 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.271481849 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.269780668 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.269885152 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.269074701 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.27050573 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.272688562 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.272740183 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.274080969 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.272440014 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.273236266 seconds)
  done (took 70.985664668 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.272647968 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.273560669 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.271886413 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.27284535 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.273769837 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.270827201 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.274801731 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.272934981 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.270927378 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.274276745 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.268099417 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.27409232 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.270860419 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.27334723 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.270970963 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.273449678 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.270521175 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.272125368 seconds)
  done (took 24.080312777 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.271068903 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.271254815 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.273308721 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.270260482 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.271876753 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.272750009 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.271028803 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.272502782 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.273477308 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.272547792 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.272186361 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.274414806 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.276497796 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.273941702 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.271622081 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.273288866 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.274399581 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.274145222 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.272788165 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.272259159 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.274070863 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.275815017 seconds)
  done (took 29.18557976 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.272480548 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.273840982 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.274844603 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.289965911 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.293369366 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.273358409 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.274501616 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.273686797 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.297626799 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.33461773 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.326095154 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.296634515 seconds)
  done (took 16.660631594 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.2742732 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.27735878 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.271991416 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.275250899 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.276056563 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.27454349 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.273475959 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.274573735 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.276041333 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.273324575 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.275139532 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.27735561 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.275733428 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.273852909 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.276787413 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.276241295 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.275215719 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.274038659 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.274562345 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.278808148 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.275802031 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.278391684 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.274910053 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.276108137 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.274618474 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.274206545 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.276497584 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.273473807 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.273939684 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.277227014 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.276256597 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.274964257 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.27686099 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.275793963 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.279214455 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.277900824 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.275717747 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.277091899 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.27814486 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.276824698 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.277626683 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.27865726 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.278111291 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.278067209 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.277586706 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.275976483 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.276246786 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.277470937 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.275816131 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.277910266 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.278266721 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.275469109 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.2785619 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.279142295 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.279074863 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.278820858 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.277109424 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.277387712 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.279937797 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.277160683 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.275978305 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.279593048 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.277692661 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.277408937 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.280038702 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.277034283 seconds)
  done (took 85.436229247 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.277165933 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.277639133 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.277522648 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.278582246 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.277457594 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.278827709 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.278011788 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.276805186 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.278228425 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.27801935 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.280813066 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.27960953 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.277158073 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.27942682 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.277755509 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.278123731 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.27869696 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.277806991 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.2795366 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.281553587 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.277122236 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.279063117 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.279292932 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.279946723 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.279385005 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.281102901 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.278432776 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.279243999 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.278378607 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.278598861 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.279534176 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.279374206 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.27874428 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.28075217 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.279997083 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.280756909 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.279579245 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.279700697 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.280652226 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.283001225 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.280692262 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.283966099 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.282072129 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.280824842 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.281362635 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.280144589 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.281030173 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.281934092 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.281149868 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.280104781 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.282751097 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.281974164 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.281455825 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.281516114 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.281545721 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.281095505 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.282162308 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.280351524 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.280566445 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.282657093 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.282246757 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.281519289 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.283964308 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.281746882 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.281303006 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.2814823 seconds)
  done (took 85.672571967 seconds)
done (took 1768.111812348 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.448543889 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.40387857 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.282000391 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.328320256 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.282937852 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.29109329 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.291082534 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.282589202 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.283138482 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.283191133 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.282467517 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.47303416 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.290146613 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.284369395 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.284240546 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.379145901 seconds)
  done (took 26.358423534 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.314604668 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.289506536 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.416767458 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.308150939 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.314332783 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.50018928 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.346255563 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.288597054 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.484544626 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.310592325 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.279509043 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.315097988 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.288751521 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.279150455 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.311662316 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.497740767 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.562987005 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.281159435 seconds)
  done (took 28.580352954 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.810955466 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.384050055 seconds)
  done (took 5.38630233 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.312531727 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.290203173 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.291062241 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.287665417 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.279474369 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.279481608 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.288576023 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.280527575 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.292780337 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.435923081 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.291858447 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.300374174 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.311171203 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.290588005 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.287321369 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.333612987 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.446665467 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.288720131 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.286149456 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.2960699 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.289146251 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.388630918 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.337762995 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.28873935 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.433462446 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.296587259 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.298422372 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.298961798 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.429435967 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.290618742 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.29004068 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.291640032 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.292189887 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.209233825 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.774737224 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.301801605 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.340115097 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.299061899 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.288133703 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.466245869 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.293176464 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.299581977 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.282314928 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.791890296 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.432545761 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.424877143 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.302682149 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.312544688 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.293565645 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.363608244 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.294066486 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.293450658 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.340582105 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.147671354 seconds)
  done (took 83.155019032 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.321421466 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.284104403 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.467846439 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.309674699 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.284235464 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.283473145 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.285822756 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.614672274 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.288648531 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.285406764 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.602027284 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.906080497 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.309076496 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.333293775 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.131551159 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.349963238 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.286373064 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.304778107 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.287288393 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.29062192 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.867407669 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.286244182 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.304827582 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.35647155 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.328980577 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.847640081 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.293584839 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.284429962 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.305733091 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.284552249 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.855587977 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.311749631 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.339788798 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.288955099 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.58118357 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.714189898 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.674351023 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.289091116 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.327291684 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.289568763 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.313002955 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.833537592 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.691617048 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.288876924 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.286783712 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.845887023 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.287020718 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.29759994 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.295282406 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.54145582 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.285775937 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.290316192 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.315081225 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.287887525 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.288335593 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.364033545 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.367501413 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.852154087 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.290026111 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.288527169 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.323929568 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.288044498 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.298711251 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.292774102 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.288446355 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.697378111 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.495756314 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.295097694 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.69386461 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.851160153 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.308593265 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.917183413 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.306718241 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.303945783 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.474881229 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.288959557 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.288483124 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.844153071 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.301136033 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.288991695 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.675307565 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.292252358 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.601517499 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.325746771 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.28958163 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.884828178 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.290025498 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.29320901 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.288588182 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.289280582 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.28993794 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.306512625 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.589374748 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.321366292 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.289818826 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.288515645 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.316253432 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.29790043 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.288541073 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.296425226 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.919320653 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.316855104 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.29013981 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.29395179 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.307842448 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.290539397 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.293895851 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.291023551 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.563062074 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.290387024 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.314216053 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.292675099 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.291467879 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.300612548 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.361903735 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.291261125 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.645893054 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.291302269 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.291708372 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.315702493 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.289899418 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.323404716 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.291778547 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.298662975 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.221368598 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.55595371 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.314988846 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.292651028 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.292802731 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.292648714 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.292097446 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.295613315 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.328335462 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.294171818 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.136367528 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.316389703 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.299517042 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.292722508 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.303804723 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.29380148 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.300760585 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.294289218 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.602403591 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.593701492 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.479395872 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.301837332 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.292520274 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.115049417 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.338221002 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.479284243 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.315618141 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.294774616 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.550039382 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.500527088 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.294087114 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.294197651 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.297131623 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.557000432 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.295393094 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.615402435 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.887924489 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.314875793 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.304047494 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.160971869 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.058850546 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.301966618 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.296155556 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.60610463 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.316858548 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.295916312 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.295876157 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.296580614 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.295876291 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.317819208 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.302855319 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.294892527 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.294235298 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.620432287 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.490961538 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.315998938 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.298118711 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.853497189 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.308124663 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.296790649 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.318703301 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.300093934 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.294548987 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.360519345 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.301777541 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.329624471 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.300026098 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.299151224 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.873717417 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.297597393 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.303847164 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.494493882 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.060312466 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.323208809 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.298847692 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.317603634 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.177578776 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.882716319 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.318134725 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.654464077 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.30863627 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.340604178 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.297075912 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.298118581 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.880172154 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.302465574 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.319451772 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.000080492 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.316330147 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.710414437 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.298186268 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.297756404 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.95708848 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.317913821 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.297676556 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.299278018 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.305277184 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.602659349 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.298123102 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.303573072 seconds)
  done (took 491.118124265 seconds)
done (took 635.782733133 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.299948058 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.303775456 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.288231403 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.302627131 seconds)
  done (took 10.403594245 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.308481786 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.307409182 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.307708989 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.305488784 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.307715415 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.306169996 seconds)
  done (took 9.052912329 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.299629012 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.301700382 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.304492359 seconds)
  done (took 8.115345089 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.545530383 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.326914418 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.705546042 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.34126425 seconds)
  done (took 9.130563631 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.30892621 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.307892071 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.308917105 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.307790394 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.309885929 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.309934009 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.309546526 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.309305543 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.312163923 seconds)
  done (took 12.99109626 seconds)
done (took 50.89955598 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/224) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.502603219 seconds)
    (2/224) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.343498598 seconds)
    (3/224) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.325005892 seconds)
    (4/224) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.413334496 seconds)
    (5/224) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.077508437 seconds)
    (6/224) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.368761585 seconds)
    (7/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.480771213 seconds)
    (8/224) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.304861132 seconds)
    (9/224) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 2.305108587 seconds)
    (10/224) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.343523402 seconds)
    (11/224) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.315359503 seconds)
    (12/224) benchmarking ("map", *, Int64, (true, true))...
    done (took 1.499963903 seconds)
    (13/224) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.340327503 seconds)
    (14/224) benchmarking ("map", identity, Bool, true)...
    done (took 1.349046217 seconds)
    (15/224) benchmarking ("map", abs, Float32, true)...
    done (took 1.411148505 seconds)
    (16/224) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.436033812 seconds)
    (17/224) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.432028632 seconds)
    (18/224) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.315226357 seconds)
    (19/224) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.386740666 seconds)
    (20/224) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.291070486 seconds)
    (21/224) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 1.521743894 seconds)
    (22/224) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.390163611 seconds)
    (23/224) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.362450112 seconds)
    (24/224) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.457638696 seconds)
    (25/224) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.440568721 seconds)
    (26/224) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.388373767 seconds)
    (27/224) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.313667063 seconds)
    (28/224) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.31631554 seconds)
    (29/224) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.293627107 seconds)
    (30/224) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.324690129 seconds)
    (31/224) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 1.53430431 seconds)
    (32/224) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.308024551 seconds)
    (33/224) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.317109863 seconds)
    (34/224) benchmarking ("perf_sum", Bool, true)...
    done (took 1.311181013 seconds)
    (35/224) benchmarking ("map", *, Float32, (true, true))...
    done (took 1.440298254 seconds)
    (36/224) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.406562336 seconds)
    (37/224) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.304487043 seconds)
    (38/224) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.289360535 seconds)
    (39/224) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.408460582 seconds)
    (40/224) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.390688826 seconds)
    (41/224) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.969974836 seconds)
    (42/224) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.321938255 seconds)
    (43/224) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 1.524516953 seconds)
    (44/224) benchmarking ("perf_countequals", "Int8")...
    done (took 1.341848229 seconds)
    (45/224) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 1.410238956 seconds)
    (46/224) benchmarking ("map", abs, Float64, true)...
    done (took 1.476917303 seconds)
    (47/224) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.217543566 seconds)
    (48/224) benchmarking ("map", abs, Int64, false)...
    done (took 1.405288303 seconds)
    (49/224) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.966044181 seconds)
    (50/224) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.351926576 seconds)
    (51/224) benchmarking ("perf_sum", Bool, false)...
    done (took 1.313367812 seconds)
    (52/224) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.068037194 seconds)
    (53/224) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.38200438 seconds)
    (54/224) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.02243404 seconds)
    (55/224) benchmarking ("perf_sum", Float32, true)...
    done (took 1.317484054 seconds)
    (56/224) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.360858851 seconds)
    (57/224) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.313859593 seconds)
    (58/224) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 1.50866352 seconds)
    (59/224) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.46001341 seconds)
    (60/224) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.406139605 seconds)
    (61/224) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.290225064 seconds)
    (62/224) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.407171364 seconds)
    (63/224) benchmarking ("map", abs, Bool, false)...
    done (took 1.324592974 seconds)
    (64/224) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.409685579 seconds)
    (65/224) benchmarking ("map", abs, Float64, false)...
    done (took 1.380113571 seconds)
    (66/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.507796742 seconds)
    (67/224) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.438179015 seconds)
    (68/224) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.339670534 seconds)
    (69/224) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.39217216 seconds)
    (70/224) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.435328792 seconds)
    (71/224) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.450816137 seconds)
    (72/224) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.503511374 seconds)
    (73/224) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.402606839 seconds)
    (74/224) benchmarking ("perf_sum", Int8, true)...
    done (took 1.315850558 seconds)
    (75/224) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.375770065 seconds)
    (76/224) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 2.326660464 seconds)
    (77/224) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.39507001 seconds)
    (78/224) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.317349094 seconds)
    (79/224) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.470079157 seconds)
    (80/224) benchmarking ("map", identity, BigInt, true)...
    done (took 1.478463787 seconds)
    (81/224) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.439579637 seconds)
    (82/224) benchmarking ("map", abs, Int8, true)...
    done (took 1.37928734 seconds)
    (83/224) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.435440126 seconds)
    (84/224) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 1.727150261 seconds)
    (85/224) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.965357615 seconds)
    (86/224) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.369256297 seconds)
    (87/224) benchmarking ("map", abs, BigInt, false)...
    done (took 2.363066749 seconds)
    (88/224) benchmarking ("perf_countequals", "Float32")...
    done (took 1.35372882 seconds)
    (89/224) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.293717569 seconds)
    (90/224) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 2.322160566 seconds)
    (91/224) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.025067986 seconds)
    (92/224) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 1.436251735 seconds)
    (93/224) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.450171926 seconds)
    (94/224) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.598149286 seconds)
    (95/224) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.400009963 seconds)
    (96/224) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.404706764 seconds)
    (97/224) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.96594836 seconds)
    (98/224) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.323798165 seconds)
    (99/224) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.349462809 seconds)
    (100/224) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.294012638 seconds)
    (101/224) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.305349615 seconds)
    (102/224) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.428240708 seconds)
    (103/224) benchmarking ("map", *, Float64, (true, true))...
    done (took 1.504158808 seconds)
    (104/224) benchmarking ("map", identity, Bool, false)...
    done (took 1.349140877 seconds)
    (105/224) benchmarking ("map", abs, Bool, true)...
    done (took 1.358719622 seconds)
    (106/224) benchmarking ("perf_countequals", "Int64")...
    done (took 1.338032837 seconds)
    (107/224) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.019013121 seconds)
    (108/224) benchmarking ("map", *, Int64, (false, false))...
    done (took 1.41461284 seconds)
    (109/224) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.430598776 seconds)
    (110/224) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.361963057 seconds)
    (111/224) benchmarking ("perf_countequals", "Bool")...
    done (took 1.343352881 seconds)
    (112/224) benchmarking ("map", abs, Float32, false)...
    done (took 1.366454085 seconds)
    (113/224) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.394089072 seconds)
    (114/224) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.088594468 seconds)
    (115/224) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 1.56102543 seconds)
    (116/224) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.429759724 seconds)
    (117/224) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.310237093 seconds)
    (118/224) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.438035623 seconds)
    (119/224) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.32378467 seconds)
    (120/224) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.372552256 seconds)
    (121/224) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.33019142 seconds)
    (122/224) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.228579634 seconds)
    (123/224) benchmarking ("map", identity, Int64, true)...
    done (took 1.499782053 seconds)
    (124/224) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 1.688923782 seconds)
    (125/224) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.344365966 seconds)
    (126/224) benchmarking ("perf_sum", Int64, true)...
    done (took 1.317455351 seconds)
    (127/224) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.373392683 seconds)
    (128/224) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.303721777 seconds)
    (129/224) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.32552196 seconds)
    (130/224) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.967826206 seconds)
    (131/224) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.364989321 seconds)
    (132/224) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.326242509 seconds)
    (133/224) benchmarking ("map", identity, BigInt, false)...
    done (took 1.399825851 seconds)
    (134/224) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.450208285 seconds)
    (135/224) benchmarking ("perf_sum", Float32, false)...
    done (took 1.341905048 seconds)
    (136/224) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.295462365 seconds)
    (137/224) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.39499264 seconds)
    (138/224) benchmarking ("map", *, Int64, (false, true))...
    done (took 1.511706312 seconds)
    (139/224) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 2.331337977 seconds)
    (140/224) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 1.478583705 seconds)
    (141/224) benchmarking ("perf_sum", Float64, false)...
    done (took 1.342739289 seconds)
    (142/224) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.29468286 seconds)
    (143/224) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.429963082 seconds)
    (144/224) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.325612565 seconds)
    (145/224) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.296041085 seconds)
    (146/224) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.397048507 seconds)
    (147/224) benchmarking ("map", identity, Int64, false)...
    done (took 1.388292977 seconds)
    (148/224) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.297445588 seconds)
    (149/224) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.254666002 seconds)
    (150/224) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.407997706 seconds)
    (151/224) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.081146138 seconds)
    (152/224) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.387258261 seconds)
    (153/224) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.322390899 seconds)
    (154/224) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 1.543944371 seconds)
    (155/224) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.3374508 seconds)
    (156/224) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.32337278 seconds)
    (157/224) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.163015955 seconds)
    (158/224) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.314978632 seconds)
    (159/224) benchmarking ("map", abs, Int8, false)...
    done (took 1.33913615 seconds)
    (160/224) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.470772471 seconds)
    (161/224) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 1.706315615 seconds)
    (162/224) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.15314854 seconds)
    (163/224) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.038374742 seconds)
    (164/224) benchmarking ("perf_countequals", "Float64")...
    done (took 1.338470927 seconds)
    (165/224) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.093239927 seconds)
    (166/224) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.435532832 seconds)
    (167/224) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.318966706 seconds)
    (168/224) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.083849506 seconds)
    (169/224) benchmarking ("map", identity, Float64, false)...
    done (took 1.413478658 seconds)
    (170/224) benchmarking ("map", *, Float32, (false, true))...
    done (took 1.473204688 seconds)
    (171/224) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.965230046 seconds)
    (172/224) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 1.536272027 seconds)
    (173/224) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 1.518981439 seconds)
    (174/224) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.556596003 seconds)
    (175/224) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 1.659567584 seconds)
    (176/224) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.478665427 seconds)
    (177/224) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.088680691 seconds)
    (178/224) benchmarking ("perf_sum", Int64, false)...
    done (took 1.347587975 seconds)
    (179/224) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.325891886 seconds)
    (180/224) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.520180123 seconds)
    (181/224) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.337124607 seconds)
    (182/224) benchmarking ("map", identity, Float32, true)...
    done (took 1.435862314 seconds)
    (183/224) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.483488456 seconds)
    (184/224) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.967123314 seconds)
    (185/224) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.498693453 seconds)
    (186/224) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.306726367 seconds)
    (187/224) benchmarking ("map", identity, Int8, true)...
    done (took 1.363916877 seconds)
    (188/224) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.395265679 seconds)
    (189/224) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.359022924 seconds)
    (190/224) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.426963508 seconds)
    (191/224) benchmarking ("map", identity, Int8, false)...
    done (took 1.335064477 seconds)
    (192/224) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.40386408 seconds)
    (193/224) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.32950857 seconds)
    (194/224) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.211370471 seconds)
    (195/224) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.477702549 seconds)
    (196/224) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.327165668 seconds)
    (197/224) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.429597535 seconds)
    (198/224) benchmarking ("perf_sum", Int8, false)...
    done (took 1.324291201 seconds)
    (199/224) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.402876372 seconds)
    (200/224) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.37659325 seconds)
    (201/224) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.968854857 seconds)
    (202/224) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 1.423490634 seconds)
    (203/224) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.32990134 seconds)
    (204/224) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.088461422 seconds)
    (205/224) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.370467531 seconds)
    (206/224) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.362555421 seconds)
    (207/224) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.405041474 seconds)
    (208/224) benchmarking ("map", identity, Float32, false)...
    done (took 1.375015749 seconds)
    (209/224) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.338360076 seconds)
    (210/224) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.466977834 seconds)
    (211/224) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.351231217 seconds)
    (212/224) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.318307631 seconds)
    (213/224) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.326432915 seconds)
    (214/224) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.400007737 seconds)
    (215/224) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.401912363 seconds)
    (216/224) benchmarking ("map", *, Float64, (false, true))...
    done (took 1.52060113 seconds)
    (217/224) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.363843539 seconds)
    (218/224) benchmarking ("map", identity, Float64, true)...
    done (took 1.482864571 seconds)
    (219/224) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.522533595 seconds)
    (220/224) benchmarking ("map", abs, Int64, true)...
    done (took 1.488850923 seconds)
    (221/224) benchmarking ("map", abs, BigInt, true)...
    done (took 2.305361754 seconds)
    (222/224) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 1.556326043 seconds)
    (223/224) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.422551395 seconds)
    (224/224) benchmarking ("perf_sum", Float64, true)...
    done (took 1.345111911 seconds)
  done (took 365.303563117 seconds)
done (took 366.510752583 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.371002492 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.500814662 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.324211458 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.326231563 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.370339832 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.320563888 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.361975655 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.332975798 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.328638924 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.329991557 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.320736452 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.332519941 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.337623428 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.360104425 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.439277672 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.335485266 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.325775333 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.327471366 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.365830248 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.385299701 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.37077204 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.371413608 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.337528267 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.325383952 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.373889375 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.373590095 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.333378979 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.319803892 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.326084974 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.367356041 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.326549486 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.333312723 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.375349561 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.378691017 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.369176402 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.327906206 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.370698116 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.504276614 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.363269806 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.362410799 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.331765261 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.376669085 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.347445551 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.337752866 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.379685515 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.339248137 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.374827463 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.451328282 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.327841861 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.316813497 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.376845882 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.389766831 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.331156396 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.31894442 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.319667185 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.450857017 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.329232411 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.375671478 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.330512323 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.371614047 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.442768642 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.376561357 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.389953974 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.37596462 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.331878885 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.341564743 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.329923918 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.386871841 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.328482284 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.371852241 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.374229349 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.336003222 seconds)
done (took 107.097656951 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.453320873 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.328601719 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.489661205 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.331724295 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.495108513 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.4779796 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.327050239 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.327400715 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.327308321 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.121647475 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.328213814 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.32691403 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.321960066 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.326967061 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.457938637 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.330457434 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.327775337 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.02136657 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.332260946 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.466999402 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.331832562 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.328039677 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.331565475 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.12223855 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.324244108 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.326572796 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.46742961 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.329949265 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.021144952 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.324673327 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.32748868 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.022486252 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.470298764 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.346333088 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.340402768 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.338732946 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.497950806 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.35350815 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.45098657 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.451985513 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.491333988 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.368949415 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.326142699 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.329392883 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.331793456 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.332966056 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.33107505 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.358183708 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.330434924 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.330765083 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.024199915 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.342619893 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.330876926 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.330833029 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.329234174 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.361519678 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.332330107 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.33375163 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.471738822 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.334024322 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.457032803 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.124435494 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.125442118 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.333532918 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.330650066 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.33230376 seconds)
  done (took 108.086701691 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.398109887 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.408944044 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.455455191 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.354170621 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.386765001 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.459753388 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.354027456 seconds)
  done (took 11.049194673 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.339999719 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.336898936 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.384497092 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.384575059 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.334991485 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.548346822 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.336388428 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.34629745 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.332099989 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.411690994 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.337751752 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.335970266 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.341171241 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.329480918 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.383025969 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.34723766 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.451057421 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.335888181 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.33591831 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.489712377 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.334071929 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.341867395 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.413185164 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.347865634 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.336871826 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.342563214 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.28706755 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.335922941 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.334184936 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.338381259 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.334178927 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.444446651 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.339186606 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.331258413 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.335445411 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.494985418 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.337427194 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.334955711 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.336948681 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.336442411 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.337263106 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.337699871 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.338087081 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.335674052 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.339210056 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.361973272 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.337510255 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.339020026 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.337283589 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.33871446 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.413111644 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.339856765 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.336014862 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.334783523 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.41585327 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.344655389 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.338199991 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.335780308 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.340187651 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.336987687 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.491960682 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.387135016 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.339896706 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.386477425 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.338433098 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.340417484 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.34052647 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.341176227 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.43087239 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.339024732 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.387889577 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.336587927 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.561105125 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.362402691 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.342561522 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.34256077 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.341978691 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.339739217 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.336879321 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.345885345 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.337890474 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.339927027 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.346538113 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.33739317 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.338365324 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.521545613 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.497956217 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.338301519 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.352275948 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.347336611 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.339211619 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.415684143 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.342090052 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.339067324 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.392609704 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.455246745 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.418408259 seconds)
  done (took 138.550662994 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.35254089 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.352638692 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.345556246 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.369187291 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.343480138 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.341528604 seconds)
  done (took 9.344560319 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.34494225 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.343309916 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.34186651 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.341804916 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.340921651 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.342775988 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.343326702 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.344100846 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.345639461 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.342359335 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.343912393 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.345124967 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.343957056 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.342546282 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.342187433 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.343005039 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.34371072 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.341061182 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.344168964 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.343187817 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.342058635 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.343418337 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.343165977 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.344831473 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.347692027 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.345783493 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.363010503 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.34378292 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.345060735 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.352217853 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.366600062 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.34459585 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.347078936 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.350842718 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.34969602 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.346062877 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.348708851 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.343820405 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.342334596 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.344006984 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.345631452 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.345845981 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.345150902 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.346076824 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.345598451 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.351980614 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.349354435 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.365424871 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.347783585 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.346677228 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.34692665 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.345419834 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.346134629 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.34661676 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.348265084 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.371202903 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.350054985 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.346916726 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.3451586 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.347633737 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.347284443 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.346465077 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.349149769 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.351913168 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.344420618 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.345443995 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.349065342 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.351477815 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.345964473 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.347785632 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.347771702 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.344003564 seconds)
  done (took 99.218748674 seconds)
done (took 367.476086437 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 3.240629807 seconds)
  done (took 4.483983474 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.613474448 seconds)
  done (took 3.859558822 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 24.279583698 seconds)
  done (took 25.531987662 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.364310247 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.401040846 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.345197805 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.347618063 seconds)
  done (took 10.70212526 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.726923829 seconds)
  done (took 3.972497648 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.353580404 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.349654738 seconds)
  done (took 5.950233914 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.732884078 seconds)
  done (took 3.977585423 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.909910262 seconds)
  done (took 4.165072553 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.362931841 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.355308418 seconds)
  done (took 5.97091117 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.324726174 seconds)
  done (took 3.570217829 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 38.696561197 seconds)
  done (took 39.941202068 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.352012163 seconds)
  done (took 3.599939135 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.368924412 seconds)
  done (took 3.6139274 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.467118996 seconds)
  done (took 6.712641687 seconds)
done (took 127.294823304 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.340093366 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.346626653 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.346203117 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.346075682 seconds)
  done (took 10.625492675 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.400781867 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.400953542 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.401195011 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.401162825 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.399838525 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.399681437 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.374073277 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.374647753 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.401352666 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.401078461 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.407998464 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.402390534 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.401107517 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.376364962 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.402309991 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.409520891 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.401400858 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.402286315 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.374468512 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.403173968 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.350800571 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.401888544 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.402203486 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.350746218 seconds)
  done (took 34.689378984 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.845365481 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.421716348 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.503517348 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.401975798 seconds)
  done (took 7.419391227 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.427795731 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.427909361 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.444176109 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.481099878 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.49373988 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.44151125 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.379649529 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.371978813 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.357988667 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.427457379 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.481225732 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.419499351 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.506985043 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.351433923 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.559213656 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.350603143 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.34965035 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.427868965 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.482058342 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.49794125 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.352636563 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.430058009 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.433797001 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.420247767 seconds)
  done (took 35.565348676 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.357467548 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.364232667 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.351489138 seconds)
    (4/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.365942464 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.352151022 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.350853006 seconds)
    (7/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.353243363 seconds)
    (8/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.35880665 seconds)
    (9/20) benchmarking ("sum", "Int64")...
    done (took 1.351331828 seconds)
    (10/20) benchmarking ("mean", "Int64")...
    done (took 1.350333623 seconds)
    (11/20) benchmarking ("mean", "Float64")...
    done (took 1.350144863 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.364479448 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.35536773 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.352176195 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.358777076 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.35204744 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.357704764 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.354408299 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.352455933 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.359086176 seconds)
  done (took 28.361942283 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.345857895 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.342747188 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.69707022 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.603167193 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.343628385 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.351178783 seconds)
  done (took 13.934366418 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.436470439 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.612180502 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.353846227 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.773538398 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.856636482 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.355152751 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.35608234 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.638641728 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.019760239 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.014252254 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.421317871 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.435290216 seconds)
  done (took 20.524697081 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.351779347 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.351397788 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.349732914 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.367766815 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.418493141 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.375286965 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.359995181 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.345573473 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.42369311 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.441656575 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.376741388 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.417967218 seconds)
  done (took 21.834255878 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.444488934 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.350069422 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.354825437 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.391636596 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.35426717 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.199852155 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.354872838 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.116760981 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.3775157 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.624403772 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.366005588 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.448650786 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.608995672 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.35914425 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.356194857 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.353481886 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.587736205 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.912987999 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.354227251 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.351197943 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.389015987 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.362688055 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.352636202 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.602588536 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.352760825 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.351096734 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.611131474 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.353329881 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.683824074 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.366993523 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.362283745 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.351666211 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.625558849 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.065503841 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.472688118 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.597156686 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.371034324 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.353658172 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.377754189 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.35670827 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.360410973 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.352944677 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.362768797 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.3519671 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.349623317 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.365473896 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.122582963 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.381211057 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.349484143 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.352440759 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.663228973 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.45246767 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.358027645 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.351943743 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.431875517 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.35728132 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.357212254 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.45837431 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.93724357 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.360310744 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.369047648 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.354847538 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.357474263 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.356309217 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.053990398 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.361451215 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.357291906 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.358229825 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.354351571 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.354513426 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.378012561 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.353643622 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.378235688 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.355111597 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.197706442 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.375354004 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.357052003 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.985132926 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.363161274 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.357776601 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.588847781 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.355646565 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.356119554 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.355612173 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.353839483 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.209413899 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.369280769 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.339963332 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.381836565 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.119725398 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.625960487 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.375536388 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.387696029 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.579840494 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.339417324 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.356601941 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.369619404 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.357893204 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.376529518 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.124790616 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.378510405 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.360367589 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.618555748 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.569781359 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.363790777 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.341233726 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.897736195 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.391291806 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.371979076 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.363027313 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.606272781 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.028127757 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.375013875 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.371027362 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.375444744 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.355626475 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.257314834 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.376127729 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.45915437 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.372068873 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.659478177 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.321956973 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.364747106 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.427053073 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.363509634 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.35754088 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.361539211 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.36402055 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.358464681 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.597847168 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.38921836 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.370857763 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.360310162 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.360084369 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.361383399 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.364579176 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.36127053 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.583968337 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.368588285 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.634386346 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.36073258 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.359941505 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.361671109 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.584721542 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.36490475 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.696348319 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.623847834 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.366181806 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.366564442 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.377170615 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.380093447 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.463942807 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.381457065 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.377273129 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.625112782 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.363886214 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.363444293 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.366964277 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.367719092 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.366026508 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.369950824 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.367808626 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.05558973 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.335759081 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.367898999 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.25547937 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.374703837 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.429805745 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.368860747 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.611558041 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.374760578 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.365239194 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.390148619 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.367410374 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.592968 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.374268013 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.365539423 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.446188826 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.895877782 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.081843182 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.382591606 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.362725263 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.359913788 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.358261359 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.362222214 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.36249945 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.364659031 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.611075547 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.378611006 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.381154196 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.043345629 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.367782559 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.368952543 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.372861983 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.375712473 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.369105246 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.363777993 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.37251868 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.37158106 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.386497765 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.380904921 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.509247643 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.378573999 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.365031082 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.881686199 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.370128902 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.365536517 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.364024754 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.399845 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.368447435 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.244308161 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.629543009 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.367332809 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.715885764 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.366178827 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.402515559 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.363871596 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.364796434 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.408748887 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.391084242 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.374387924 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.378618293 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.372797621 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.371078633 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.946565462 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.211076337 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.991319501 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.386648267 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.382907337 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.370022482 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.141708956 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.389258411 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.365747657 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.633627448 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.138188248 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.38801638 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.903977511 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.402964619 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.287905525 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.684156948 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.602366526 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.382018917 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.368391451 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.705621961 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.580777304 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.401575242 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.381190371 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.373392828 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.353127951 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.984818062 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.405336046 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.449383685 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.142986581 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.389800985 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.39377028 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.402047785 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.37772749 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.833884429 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.390687086 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.368879199 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.368493436 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.374037515 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.268501867 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.375024323 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.368346608 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.07582042 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.370646992 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.931403876 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.391803469 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.619692949 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.381587768 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.374261402 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.367687206 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.381267813 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.630556312 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.682059702 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.371510175 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.381500955 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.004439278 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.249802798 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.37567358 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.371069293 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.269552638 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.389469144 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.706985884 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.387742396 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.373692811 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.378062302 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.369992641 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.369222351 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.36857667 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.378353365 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.342170087 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.940576351 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.387569167 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.391846292 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.390085175 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.375843452 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.630329876 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.387247241 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.04824201 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.604065961 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.369589869 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.417410779 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.374550033 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.37310529 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.35799509 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.372743361 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.372256541 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.409683972 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.598201817 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.392427396 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.356594652 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.378485056 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.584350726 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.372705687 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.371410918 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.648990104 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.370682362 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.373758401 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.227921591 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.407003917 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.371743307 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.374576015 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.373744297 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.393808024 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.444469889 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.623669471 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.386481702 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.385421299 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.837424468 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.395812261 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.376648522 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.390097316 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.471529891 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.373096837 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.373863288 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.15096705 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.055110595 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.209803402 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.060201189 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.691431035 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.376798864 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.382861215 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.375232372 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.539192142 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.376045563 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.648155676 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.376232419 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.375969587 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.398408425 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.417355609 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.392679371 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.59258963 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.651970024 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.374167264 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.375135264 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.38258706 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.374539631 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.38892136 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.589266031 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.94666384 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.009321296 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.378502807 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.391122875 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.156815421 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.673425786 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.377749808 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.377119163 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.376285695 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.378969121 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.406506754 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.384400377 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.384165891 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.522578174 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.68934672 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.098309608 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.411007259 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.407088187 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 1.89400477 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.389630739 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.639904656 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.376281408 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.631394643 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.05929172 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.229927202 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.65157208 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.447275463 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.631230595 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.378934528 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.542079643 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.390111524 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.383489546 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.378444362 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.378779253 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.376689792 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.389608692 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.064991877 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.648097184 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.381663914 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.390756487 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.414387276 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.389124636 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.604636996 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.251410033 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.610106079 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.391719222 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.384994738 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.379669728 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.065568017 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.694460396 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.380075187 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.383560175 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.653401566 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.382630504 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.404846125 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.069817063 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.377704498 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.019305984 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.358120424 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.40335953 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.39119842 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.239560719 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.072587605 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.381174755 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.956950673 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.383942787 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.391999824 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.66222969 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.387755932 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.391220168 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.663925483 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.384817473 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.391819457 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.639994028 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.085538102 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.281586988 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.382501234 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.418923683 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.388903439 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.382232649 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.442954469 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.383265812 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.384052878 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.867059118 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.405348694 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.3834595 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.394699462 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.379932563 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.403506971 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.385760153 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.384289546 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.390796282 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.372364349 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.399396106 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.401514587 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.486014858 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.011794738 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.407469602 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.05406921 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.711721174 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.64366663 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.403499866 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.374170182 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.388719975 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.385132787 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.386364194 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.385802285 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.384444271 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.018107356 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.400210322 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.402389237 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.389530602 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.386720869 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.59733671 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.386702116 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.640553324 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.387169336 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.426044764 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.371234056 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.386104198 seconds)
  done (took 980.517766641 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.436724322 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.44069644 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.441382191 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.447854617 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.450715974 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.418862665 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.455546039 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.48331616 seconds)
  done (took 20.86003009 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.385067582 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.395619208 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.401047761 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.395939758 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.390455665 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.920545116 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.419232918 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.396559253 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.402916778 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.397485506 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.401271871 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.385607649 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.395936263 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.394650899 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.373718735 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.397240229 seconds)
  done (took 33.147616878 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.912385897 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.693515586 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.401265761 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.407757502 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.431878365 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.401454431 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.817130483 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.406509524 seconds)
  done (took 28.759757822 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.399842328 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.397243801 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.397510459 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.398328961 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.399053512 seconds)
  done (took 8.279822101 seconds)
done (took 1245.764846881 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.39320215 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.395533156 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.391277669 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.394586507 seconds)
  done (took 6.862646795 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.374740902 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.374810437 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.378423959 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.391695615 seconds)
  done (took 9.808943076 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.226486973 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.130757433 seconds)
  done (took 5.645242305 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.907740939 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.905297083 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.905260437 seconds)
  done (took 7.008208921 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.707441139 seconds)
  done (took 2.996075913 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.319612873 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.387120427 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.099408503 seconds)
  done (took 8.095559506 seconds)
done (took 41.700930411 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.387027798 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.64329899 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.544280498 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.389426342 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.550518329 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.546890048 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.142905512 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.398691009 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.402984265 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.398619549 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.388386585 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.550871751 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.12241394 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.643989605 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.126029236 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.642603977 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.552486043 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.398710593 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.400171749 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.389761327 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.144044485 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.394404295 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.397393836 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.399937032 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.552727387 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.536461528 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.40184079 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.643267097 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.402577972 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.406612271 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.537598889 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.390508832 seconds)
  done (took 83.118956348 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.406071019 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.405541112 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.391575462 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.407837091 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.427173942 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.39087862 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.41635126 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.389988315 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.389393337 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.412868911 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.39327587 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.422728717 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.404198692 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.391476652 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.410277967 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.389952738 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.401290508 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.391646531 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.409960192 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.412869183 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.40351048 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.393887789 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.399503836 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.399663885 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.393298704 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.394404461 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.412055579 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.397322672 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.391651816 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.392519369 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.392554217 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.418673603 seconds)
  done (took 78.147072073 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.400570438 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.391082132 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.403476772 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.393321734 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.392919711 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.402458987 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.392040567 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.404053569 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.395850714 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.39530421 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.392669826 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.39312511 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.39446896 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.410612058 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.394181766 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.393302619 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.393001653 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.430527409 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.394273644 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.40847424 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.3957343 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.394076331 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.404680869 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.394159282 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.413118063 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.395737959 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.412791035 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.406831991 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.398937389 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.394408772 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.397078125 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.415336218 seconds)
  done (took 78.093105979 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.676033679 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.402923111 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.405653673 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.39658748 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.404343887 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.403049444 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.397514985 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.682933152 seconds)
  done (took 15.062824328 seconds)
done (took 255.710239745 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.396440275 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.985980469 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.443846884 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.406359938 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.424162427 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.424644121 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.648588808 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.442949538 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.647032583 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.417084575 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.423682949 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.395663051 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.339587067 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.566205491 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.338690955 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.3991108 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.40555088 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.394743022 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.087135177 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.701195124 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.422631472 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.40543235 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.318941038 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.430578552 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.399854946 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.49628742 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.518037802 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.631667673 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.573716995 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.494527743 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 2.012608226 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.398561358 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.41830749 seconds)
  done (took 66.10599574 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.403936173 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.523958674 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.40640062 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.405558498 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.523536198 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.405347141 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.405376481 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.405901682 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.405480309 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.40626074 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.40714285 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.407310588 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.407939758 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.450344439 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.528890425 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.42534369 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.406453364 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.51855663 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.406825929 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.400534593 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.46482305 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.407557287 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.408853284 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.45681452 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.407604925 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.409299458 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.52575538 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.408262794 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.404124899 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.521745244 seconds)
  done (took 44.365715479 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.406963367 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.083639828 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.242322963 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.41452489 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.408264144 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.414305224 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.752993479 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.409694963 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.41163503 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.411228014 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.99701068 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.411881892 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.447390717 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.282967326 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.411515849 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.409983517 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.410498228 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.410286802 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.100026675 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.418646406 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.774675475 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.411289146 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.753772076 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.421167257 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.434859092 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.41130619 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.413617828 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.348299018 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.412264388 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.994343175 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.382873616 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.755669098 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.291196614 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.251377634 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.381261504 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.417860222 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.412094637 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.999670198 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.414120555 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.41377907 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.753162006 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.411139493 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.259059259 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.14328956 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.432244899 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.411625029 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.36695213 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.997469377 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.704207278 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.418208695 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.286247764 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.414736825 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.412998765 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.413715229 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.702085914 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.412119888 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.409921398 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.395393773 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.417471667 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.754533143 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.412291471 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.411976182 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.096568422 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.413244504 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.09302743 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.414577976 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.421406153 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.436565648 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.256551318 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.416024309 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.176963815 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.434918011 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.413074975 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.995235059 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.093645965 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.418961471 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.414866371 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.101568626 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.321274549 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.756728303 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.419168748 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.325324288 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.761808705 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.417099353 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.417899758 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.416928817 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.415273705 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.490886217 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.754333307 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.095473527 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.169430545 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.420144535 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.760834321 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.422348646 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.415751354 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.401297806 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.413800158 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.415757793 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.262822278 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.165962338 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.438115054 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.423478714 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.18788918 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.439415415 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.761997934 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.420676385 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.30150826 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.422595948 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.494702077 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.417189834 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.422305025 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.440859456 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.761959352 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.419121514 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.418810101 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.15817692 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.036583132 seconds)
  done (took 202.001794195 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.413726249 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.409830234 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.410699517 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.408708656 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.409568552 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.417319129 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.410656351 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.40962552 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.417550966 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.410077014 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.409483498 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.419519294 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.41883543 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.410001868 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.413611542 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.410351138 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.411455192 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.435805593 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.411489652 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.411651735 seconds)
  done (took 45.578679321 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.417684083 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.083954688 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.059563094 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.419063651 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.415168284 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.418779166 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.485281982 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.417333973 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.417713845 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.774080395 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.627960273 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.439959111 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.417027191 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.416507693 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.057815657 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.410104192 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.775138183 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.086812629 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.420094865 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.087231394 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.408093396 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.421195667 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.417850409 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.087322767 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.776696585 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.764874613 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.487728959 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.08935515 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.419502093 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.41630006 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.086646162 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.421917529 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.420214143 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.079094748 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.441495711 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.436259511 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.417642145 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.489797338 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.490289711 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.779424269 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.1648277 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.765414354 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.433929492 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.602142854 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.422411689 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.407381709 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.090637044 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.443854887 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.410005189 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.421207809 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.42838137 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.065287225 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.443909707 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.066498645 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.44026917 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.423713559 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.091308898 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.066030774 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.085586514 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.629821984 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.440120918 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.765180107 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.420398409 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.090945918 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.44269075 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.422130061 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.42268896 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.630853208 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.11369976 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.767547961 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.781494502 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.782302249 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.424969726 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.491900647 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.442576767 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.846659014 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.490549053 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.859849448 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.784226237 seconds)
  done (took 131.635037816 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.729694396 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.547913988 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.886137166 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.094545158 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.417457386 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.558164554 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.546221512 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.707489613 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.416645841 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.495001314 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.170053307 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.528884542 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.226656534 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.499740155 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.525679262 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.580310776 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.867969936 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.438759766 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.131686686 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.153512609 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.421210026 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.542424491 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 2.002653465 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.645559563 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.418751528 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.028100914 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.450238456 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.167662543 seconds)
  done (took 55.514945572 seconds)
done (took 546.494069159 seconds)
SAVING RESULT...
DONE!
