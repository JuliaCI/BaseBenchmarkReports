cset: moving following pidspec: 12319
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.331679098 seconds)
loading group "string"... done (took 0.591703658 seconds)
loading group "linalg"... done (took 7.391108515 seconds)
loading group "parallel"... done (took 0.174164474 seconds)
loading group "find"... done (took 1.189034725 seconds)
loading group "tuple"... done (took 1.810239353 seconds)
loading group "dates"... done (took 1.246267243 seconds)
loading group "micro"... done (took 0.234522436 seconds)
loading group "io"... done (took 1.175750637 seconds)
loading group "scalar"... done (took 41.277280081 seconds)
loading group "sparse"... done (took 13.377993444 seconds)
loading group "broadcast"... done (took 1.02153921 seconds)
loading group "union"... done (took 14.548745119 seconds)
loading group "simd"... done (took 4.996842662 seconds)
loading group "random"... done (took 9.922041754 seconds)
loading group "problem"... done (took 2.009619562 seconds)
loading group "array"... done (took 22.917328041 seconds)
loading group "misc"... done (took 2.058414775 seconds)
loading group "sort"... done (took 3.438271084 seconds)
loading group "collection"... done (took 19.445420907 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.568715846 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.148835967 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.120404776 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.145028307 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.192680135 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.134146005 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.14674698 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.085772396 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.039245419 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.171462253 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.143928904 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.520559649 seconds)
done (took 5.258778698 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.218311114 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.088773615 seconds)
    (2/2) benchmarking "String"...
    done (took 0.099423697 seconds)
  done (took 0.97596219 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.067736226 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.129658519 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.082643573 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.068577861 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.068869617 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.085720307 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.068890713 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.068236398 seconds)
  done (took 1.365697294 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.075378088 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.069471337 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.086692051 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.069079046 seconds)
  done (took 1.0934982 seconds)
done (took 4.518091247 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.94394402 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.263858086 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.197058515 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.482499783 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.159575941 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.196388369 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.682856483 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.355340342 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.220041118 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.107141819 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.110881986 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.405800517 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.111128324 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.685106765 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.079722403 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.113908577 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.175027939 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.438617 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.086624086 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.08582906 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.108678664 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.149238495 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.108063201 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.078735217 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.174674715 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.070950497 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.155021483 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.099692811 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.069526935 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.255433006 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.193950535 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.695445842 seconds)
  done (took 10.893173432 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.100384721 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.122116203 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.070298092 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.144846765 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.125569659 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.074645421 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.074876172 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.088837074 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.096156747 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.166744191 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.122731503 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.129166382 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.069534365 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.072441749 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.107724605 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.235060052 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.09546015 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.105547507 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.074892058 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.078592849 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.129486265 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.103095247 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.084178245 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.099563381 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.156076061 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.199250277 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.102003094 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.117086059 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.072100173 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.102549025 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.133943145 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.136661088 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.068068107 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.087797023 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.163337589 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.098523616 seconds)
  done (took 4.808674683 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.120522561 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.178663138 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.094206589 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.158606391 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.088225753 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.131940354 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.067463153 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.103456213 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.256291239 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.10619246 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.505352866 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.133006583 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.090025259 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069005497 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.090349245 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.068631473 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.649360558 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.150331608 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.108574658 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.107329008 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.077387489 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.092506884 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.368063204 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.071540917 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.068774672 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.08897319 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.062477062 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.154530661 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.070909641 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.301503329 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.114889335 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.072562726 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.125537724 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.19057597 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.102272001 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.131080021 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.086906566 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.070012004 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.181344628 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.077315012 seconds)
    (40/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.12919031 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.09059555 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.092714532 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.12816238 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.129446151 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.072446694 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.087654944 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.189220451 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.069949028 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.10547564 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.974394619 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.170069866 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.082711801 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.068800079 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.307403257 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.107922815 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.070717331 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.067299983 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.278751718 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.166288562 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.07076278 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.088749312 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.074216459 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.089444729 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.374293307 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.072169305 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.739301697 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.073515812 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.080287501 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.090623013 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.071317431 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.095411748 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.076268331 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.107323638 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.071050816 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.070820704 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.089125006 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.068536018 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.08941303 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.091031027 seconds)
    (80/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.215699144 seconds)
    (81/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.08961527 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.070018668 seconds)
    (83/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.088522661 seconds)
    (84/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.08999638 seconds)
    (85/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.115626506 seconds)
    (86/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.074081416 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.06837831 seconds)
    (88/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.12212654 seconds)
    (89/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.073104921 seconds)
    (90/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.089814816 seconds)
    (91/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.106265562 seconds)
    (92/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.090426027 seconds)
    (93/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.10723369 seconds)
    (94/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.074333406 seconds)
    (95/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.133846754 seconds)
    (96/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.070530827 seconds)
    (97/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.084863887 seconds)
    (98/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.134910447 seconds)
    (99/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.069156382 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.066872225 seconds)
    (101/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.083736347 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.102908336 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.093707452 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.120428564 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.091314688 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.090230698 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.161773977 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.067444764 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.067085224 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.089742736 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.068360685 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.089113349 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.072206101 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.102893833 seconds)
  done (took 21.94905213 seconds)
done (took 39.559895146 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.317719812 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.101080764 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.1008641 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.099162908 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.081566365 seconds)
  done (took 1.568380433 seconds)
done (took 2.403295714 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.152632064 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.104313597 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.08353767 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.098918538 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.083874219 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.104109256 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.119879519 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.083019881 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.122209825 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.065494159 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.116924432 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.065213041 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.084002033 seconds)
  done (took 2.151387221 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.083580201 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.0865273 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.090201339 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.083393281 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.084358302 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.08531768 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.081985586 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.111055399 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.082887676 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.093912173 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.067453197 seconds)
  done (took 1.780891098 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082880693 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.085549732 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.090612886 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.083563671 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.083838899 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.083966563 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.082637495 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.108035501 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.083356063 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.094296538 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.067848549 seconds)
  done (took 1.782342705 seconds)
done (took 6.541259733 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.080632198 seconds)
  done (took 0.908239433 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.75566181 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 8.017721505 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.086158755 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.13804972 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.231918617 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.164139569 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.468561745 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.11689329 seconds)
  done (took 11.016806134 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.115215005 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.094672612 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.071716882 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.091721552 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.075379927 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.095303943 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.074092806 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.073523048 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.09195924 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.074190692 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.090475042 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.072333094 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.092257803 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.072989017 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.092287729 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.074091189 seconds)
  done (took 2.245305104 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.10609724 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.104842406 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.098279462 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.079357513 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.096185584 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.077277866 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.099325815 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.077781506 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.093275539 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.076598602 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.09804039 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.078108593 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.094473099 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.068430585 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.097508338 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.079570562 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.09393332 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.077856358 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.09793695 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.079634216 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.098220003 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.067487239 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.094612138 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.077893572 seconds)
  done (took 3.064940966 seconds)
done (took 18.06618358 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.136837435 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.078239306 seconds)
  done (took 1.051037322 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.085312467 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.101700205 seconds)
  done (took 1.026660247 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.085364991 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.084123308 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.092103556 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.097583639 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.084700571 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.068417142 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.105798057 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.06876628 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.084380708 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.068625884 seconds)
  done (took 1.679135484 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.071226584 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.096430788 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.073052832 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.10052078 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.075956057 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.084901821 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.07741826 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.089921328 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.082618223 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.084832862 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.07464248 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.104955141 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.075173065 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.106592768 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.09462214 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.072523435 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.092407656 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.07115357 seconds)
  done (took 2.372362429 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.068352968 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.068472016 seconds)
  done (took 0.979542779 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.069383534 seconds)
    (2/7) benchmarking "second"...
    done (took 0.06415868 seconds)
    (3/7) benchmarking "month"...
    done (took 0.086657524 seconds)
    (4/7) benchmarking "year"...
    done (took 0.069598857 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.086045084 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.06587816 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.084744937 seconds)
  done (took 1.368368615 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.425384967 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.110533086 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.278652518 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.074762282 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.111377877 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.308359666 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.069604932 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.073674297 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.094781013 seconds)
  done (took 2.431709913 seconds)
done (took 11.747537657 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.081450168 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.087270533 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.119003126 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.451188759 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.111021292 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.068320542 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.151046118 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.223335438 seconds)
done (took 2.133290394 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.128363709 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.63618886 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.42590165 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.225348745 seconds)
  done (took 2.138472604 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.392715424 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.093031852 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.078590174 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.071102631 seconds)
  done (took 1.488812217 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.068418261 seconds)
    (2/2) benchmarking "read"...
    done (took 0.070493119 seconds)
  done (took 0.99040814 seconds)
done (took 5.588671823 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.069376463 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.067825621 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.08512203 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.07066021 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.066675818 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.08514845 seconds)
    (7/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.101277276 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.090397648 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.069382005 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.088543796 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.069625421 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069458621 seconds)
    (13/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.086925178 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067690311 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066103766 seconds)
    (16/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.087739361 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069294748 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.065914975 seconds)
    (19/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.087407182 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067103801 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.084132051 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071115967 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.066870346 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.085912247 seconds)
  done (took 2.730873137 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.08806541 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.085958393 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.074168596 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.091493072 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.073099179 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.095465292 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.076008924 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.06878536 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.093852561 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.072526349 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.09221506 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.073839826 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.089594561 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.074345194 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.08988833 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.074571976 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.093623079 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070603455 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07047365 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.093253313 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.074788195 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.089133753 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.072545917 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.094074264 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.072536505 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.092638713 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.071675948 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.088924849 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.075146819 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.092245696 seconds)
  done (took 3.317679168 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.073119017 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.064939401 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.085733414 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.074971467 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.06581206 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.087983208 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.067410889 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.085762854 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.069245218 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.066728143 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.087459361 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.067527921 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.066430299 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.086989771 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.067599681 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.089029659 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.085406615 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.066764588 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.086009534 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.068368773 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.08884873 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.068062122 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.066680101 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.085917807 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.067176275 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.065743745 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.086499807 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.066985382 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.085523084 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.067298928 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.070334442 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.088970874 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.06781783 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.072308123 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.089718227 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.067338558 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.070481945 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.08675226 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.067398328 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.084686493 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.067519023 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.06600318 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.085598373 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.073593112 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.066347966 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.088795079 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.067003546 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.086789965 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.068404154 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.069350834 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.086084663 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.067425121 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.0869339 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.069546255 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.070415135 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.085370089 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.069091728 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.066441487 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.087669748 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.066862579 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.084843822 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.067906093 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.069269293 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.08654847 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.082978411 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.091805721 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.068327557 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.068044059 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.087449149 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.07042312 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.068106744 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.10053708 seconds)
  done (took 6.325360917 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.122145424 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.094008215 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.086479125 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.068741874 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.083998138 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.068331285 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.071195421 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.086487107 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069230658 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.091929858 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068212453 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.087028854 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070613434 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.082182611 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.086825579 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.069795091 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.092350343 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.066602033 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.066918961 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.089948842 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.068335988 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.08957932 seconds)
  done (took 2.640863517 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.193326512 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.091960265 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.115172477 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.09729652 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.089456988 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.078662072 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.091093871 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.074180203 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07325128 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.090997817 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071931657 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.092668107 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.071182956 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.090681069 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.072188904 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.091502325 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073973598 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.0909041 seconds)
  done (took 2.509595524 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.081298169 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.067007443 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.109767627 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.06858873 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.090264574 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.072561954 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.095391621 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.078568243 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.091569088 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.069495991 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.097620299 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.184052094 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.090638328 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070497878 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.089212311 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.071848556 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.071375033 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.089015827 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.078099359 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.094695783 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.074458816 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.098046088 seconds)
  done (took 2.79364388 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.084124581 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.06909413 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.105343025 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.090426333 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.066895133 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.067479465 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.095463202 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.07051649 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.095074293 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.072111147 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.087820724 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.07154876 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.074883031 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.089297664 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.074750544 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.089190318 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.072486507 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.08808894 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.072412951 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.065591444 seconds)
  done (took 2.464070586 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.089919815 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.08783682 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.070759299 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.099006323 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.07193099 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.089675521 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.079997269 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.090130304 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.071435864 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.114648026 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.071321711 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.09046131 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079552978 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.096175632 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.071454139 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.098957677 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.07829068 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.099710941 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.088860043 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.072699957 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.114678932 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.07203006 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.098744864 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.071006251 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.089276197 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.071894601 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.088795041 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.078119124 seconds)
  done (took 3.263965532 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.069294442 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.068184609 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.086844049 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.068198831 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.066976344 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.086975243 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.067570101 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.066605658 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.089361199 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.067061435 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.087831766 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.070872411 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.069116551 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.088007274 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.071039502 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.068658736 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.089804121 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.067921622 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066850121 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.086555809 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.06961973 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.087456451 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.070537002 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.067776333 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.086056208 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.070356395 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066985294 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.086752016 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06988635 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.06618536 seconds)
  done (took 3.113171609 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.078879765 seconds)
    (2/2) benchmarking "in"...
    done (took 0.093835411 seconds)
  done (took 1.041129498 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.066716171 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.082397956 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.085232229 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.073126325 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.09351582 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.070919575 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.097628176 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.075027427 seconds)
  done (took 1.510564327 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.085735491 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.080184347 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.092249509 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.100995797 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.083189379 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.08715043 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.166058933 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.09152463 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.077093053 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.088047062 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.08550804 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.087972026 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.077036788 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069510258 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.095426994 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.076383178 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.085209945 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.076748824 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.072453434 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.088522596 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.071357771 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.10122702 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.072624183 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.085838728 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.072237665 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.078926664 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.102962646 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.070650516 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.093815356 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.077336552 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.095524979 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.064501079 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.068624771 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.092077144 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.067214426 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.100848148 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.086519246 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.092930587 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.08004369 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.090752984 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.080688226 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.085101643 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.075059046 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.094676569 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.08217301 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.069495958 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.090734712 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.064525452 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.086743988 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.073923981 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.06515815 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.089892469 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.06565538 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.096421473 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.074050325 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.080064246 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.088816366 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.071516403 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.092452141 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.074191733 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.095669032 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.073511655 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.072564661 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.088942315 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.077007184 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.093829385 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.081093888 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.0835687 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.065743324 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.068298948 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.10023418 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.094020133 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.096626295 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.071457272 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.090117567 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.068095841 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.073006208 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.092382662 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075485487 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.09611657 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.069764611 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.095128088 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07868768 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.089099824 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.073444892 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.09592445 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.06930136 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.071886943 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.08736422 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.087466239 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.088164379 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.068396314 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.067385723 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.100937774 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.07256064 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.089722433 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.068397366 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.095878312 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.065449484 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.070467788 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.091455083 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.07150311 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.101762988 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.075730122 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.095879047 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.079134761 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.097657813 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.071108281 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.092111491 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.06713392 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071371995 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.089439735 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.078441322 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.081720207 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.074771817 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.070231385 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.090783647 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.0793215 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.087026857 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.07097136 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.096353805 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.076857813 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.067928486 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.086754835 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.073755222 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.088293611 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.074219396 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.096947373 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.069780104 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.064586407 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.084857063 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.074172719 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.069158406 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.094250636 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.076052039 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.092991871 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.065237998 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.086826987 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.075198837 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.099158148 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.070807429 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.070185133 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.096358799 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.07154438 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.089141085 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.07706274 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.091497832 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.070359844 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.075365819 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.09070015 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.065236738 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.093320879 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.07371021 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.067754992 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.093914298 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.073021265 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.092482885 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.071404456 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.087398496 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.076764856 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.070653625 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.089151685 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069279283 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.087535098 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.082995496 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.090795737 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.067013872 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.066901338 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.096811172 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.06833562 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.088911194 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.069838422 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.072565415 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.090939702 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.068200732 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.088510086 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.073134939 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.10015936 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.07637209 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.071046291 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.096254243 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.081867066 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.090032761 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.072135393 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.088859716 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.072506191 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.070982976 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.100561252 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.075811623 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.095404585 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.073331171 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.086538696 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.077474973 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.09633405 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.070435574 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.067391688 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.088743666 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.074438184 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.094987978 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.074779412 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.089539361 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.070156667 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070203692 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.093838689 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.073738544 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.088818531 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.070356156 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.074487775 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.089220709 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.075804543 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.091796197 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.080444082 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.093522574 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.065466254 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.093081199 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.069268833 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.076082342 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.085844039 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.067697762 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.087771468 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.073379393 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.068519691 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.093510231 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.065010573 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.096731408 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.078767878 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.069781611 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.089886775 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.070232897 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.096990544 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.072046118 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.091979354 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.074782571 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.076031958 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.10111644 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.068844121 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.093258316 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.081424842 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.089416279 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.065110553 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.075693607 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.089627852 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.06978421 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.088109103 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.069384941 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073199704 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.099844542 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.077752786 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.08479786 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.072851231 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.087825731 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.070416597 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.06549565 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.094831084 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.073833458 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.090014861 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.077750253 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.070182499 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.091532855 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.073863507 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.090292755 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.071614532 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.089957715 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.07561385 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.0698309 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.093273104 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.069433351 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.092786166 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.069186421 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.06758202 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.092235842 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.070010541 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.089372297 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.076598348 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.068617657 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.090511068 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.073009146 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.090958201 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071381186 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.089250457 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.071119008 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.073435082 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.090916265 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.070434109 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.091395673 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.06682538 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.077563812 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.09090371 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.078086964 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.090098497 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.06844893 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.074811284 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.092747898 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.074759632 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.091556652 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.070986647 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.090895601 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.07026306 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.072478081 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.097476028 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.067821999 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.101321137 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.079005389 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.091232499 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.073554324 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.06932192 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.092711546 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.068816379 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.09038255 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.071168613 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.070377826 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.090589214 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.074440988 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.093280965 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.070766316 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.091487345 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.07272519 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.069680202 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.091758274 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.065162091 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.087572028 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.071357566 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.070247773 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.101175597 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.070791735 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.08988805 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.069656631 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.07022266 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.090838818 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.067078334 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.099245799 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.079861252 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.090792168 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.077189082 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.089347783 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.072592784 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.100022383 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.068323068 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.067707331 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.088257245 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.068256168 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.097051252 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.072191805 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.079685708 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.091503928 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.070193002 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.086878507 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.072792968 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.068474992 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.08514095 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.067978493 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.093604775 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.070280747 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068809485 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.090729088 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.074591947 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.091037413 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.08158681 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.088370924 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.072296113 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.069864457 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.087707715 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.070273591 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.068627334 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.093309359 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.071068228 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.088189527 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.068400561 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.06892728 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.091142221 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.071727731 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.089241915 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.072472319 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076209017 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.092121335 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.072931576 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.093595388 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.06539728 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.093056618 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.070968158 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.069908965 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.090272792 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.073763161 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.093232467 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.071495502 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.099494014 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.07041995 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070370741 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.091379068 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.068532241 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.088843391 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.071300514 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.069143995 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.090430713 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.071411347 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.098556894 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.069035181 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.072452802 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.091090154 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.070198944 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.098291002 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.07099576 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.093197581 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.078587101 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.070103244 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.093450745 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.077917725 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.094748759 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073252027 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.092058359 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.072440478 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.095629447 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.07047093 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.075884784 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.091352879 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.071836768 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.091526294 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.069246678 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.069167586 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.090537714 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.069789613 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.097295954 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.072269001 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.068387244 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.090682376 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.06777451 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.090576218 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.074054879 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.096643341 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.073578319 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072776624 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.086223192 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.067610687 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.090691988 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.068502312 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.071236806 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.093871841 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076717646 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.092240932 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.071695901 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.068240859 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.101375298 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075835253 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.09459062 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.068482835 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.093468797 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.072421032 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.071915833 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.092258374 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.07073848 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.091048599 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.075301858 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.071512055 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.090524255 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.077965112 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.093781701 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.072059289 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.091654295 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.072276619 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.07015148 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.086762159 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.071159255 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.091498807 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.076792067 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.07163523 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.091378868 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.080892298 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.08872232 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.071693143 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.09392492 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.070658669 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.073940602 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.086144605 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.072021014 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.091491413 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.072677179 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.064852922 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.090387092 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.068004501 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.092612112 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.070606096 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.065707345 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.10246807 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.079020125 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.094478563 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.06952586 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.08871943 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.0667653 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.065108122 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.090081518 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.072051989 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.091819766 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.082982374 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.069324153 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.091041862 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.065478172 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.090433486 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.074426492 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.07320693 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.088299948 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.065615525 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.089144828 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.074310569 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.075174766 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.089699373 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.069942098 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.094065172 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.072963353 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.067514947 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.096074577 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.066671235 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.09446482 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.084132031 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.092046981 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071875999 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.096519526 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.079996277 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.070513284 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.087624689 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.071423077 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.094493262 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.071072366 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.090846048 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.072969924 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.10697286 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.074825289 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.068649433 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.090460683 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.074089831 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.089530085 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.080486171 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070930452 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.092263347 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.074946545 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.094299314 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.080393566 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.093909844 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.079690622 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.093973772 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.075329572 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.068496832 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.092004866 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.067962305 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.089039212 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.072022928 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.070466842 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.096665612 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.077777633 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.090466909 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081715861 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.102077829 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.072481165 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.087526148 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.071155222 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.069662123 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.08662551 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.072451535 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.087598905 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.070406069 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.069072623 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.089891037 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.071871902 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.095592969 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.072689738 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.070158232 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.0915743 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.065196436 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.071205614 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.094950413 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.071680626 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.087656362 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.071836434 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.090053159 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.076552848 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.073849592 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.089264576 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.072904783 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.092256469 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.072202347 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.066034239 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.098882092 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.069895612 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.092545181 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.070944959 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.069525411 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.092278183 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.075046293 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.096622429 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.072276283 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.092778555 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.079689211 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.073638199 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.089542722 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.067876862 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.096199474 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.069400597 seconds)
  done (took 49.100057846 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.110191609 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.086030753 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.063420911 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.085794924 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.078906079 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.088038611 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.067262422 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.065601161 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.088031753 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.068721546 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.086559843 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.066110239 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.095962257 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.089963624 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.100381013 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.09140495 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.065882865 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.066344901 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.086335396 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.06680544 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.096317533 seconds)
  done (took 2.627668515 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.089575974 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.1044209 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.079760317 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.104581777 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.094491037 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.080631345 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.101546334 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080595933 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.106049027 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097042125 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.085016817 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102087694 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.076658929 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.099061939 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.076985227 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.100516969 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.105282591 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.076217679 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.103329322 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.082157609 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.10025076 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.100946022 seconds)
  done (took 2.956276027 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.069922681 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.068106643 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.089723295 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.063622159 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.068345152 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.085667107 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.073119271 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.0880081 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.073882994 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.067589765 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.091184661 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.068942379 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.100366157 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.069161016 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.06868157 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.088615828 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.137292293 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.073802524 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.090239617 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.072295322 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.065041913 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.094118909 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.065537807 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.085429027 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.069880604 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.072914662 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.092840625 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.067780213 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.08933581 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.069380927 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.069231721 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.088832346 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.071941565 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.069659803 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.090521666 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.069049054 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.090544095 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.070033596 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.064729563 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.088967473 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.070636014 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.085818376 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.071316099 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.071073339 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.089647392 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.068354516 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.07079621 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.092148799 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.065239531 seconds)
  done (took 4.751397428 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.087160486 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.145170451 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.093950771 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.126245359 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.084796914 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.09841184 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.07362817 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.126680316 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.087587488 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.068288577 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.107105556 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.083838615 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.091190435 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.073049126 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.09325828 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.07010576 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.092216802 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.069670375 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.094236251 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.070331731 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.095068741 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.077086739 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.105866741 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.083406723 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.095255776 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.068483436 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.090896708 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.074879352 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.104359092 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.096414004 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.076645161 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.096150691 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.085830514 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.096963412 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.070375653 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.093540267 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.087674761 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.092094341 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.072674458 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.088420464 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.072619725 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.095107491 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.077897412 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.109124717 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.070446923 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.096780709 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.069805161 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.0875457 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.084058404 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.093242134 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.078869814 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.106751866 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.073574813 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.092575087 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.073427757 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.106858474 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.089731769 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.06909656 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.072789458 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.104513858 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.087596967 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.075416966 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.105027667 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.071639019 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.098469529 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.085496419 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.097552621 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.072940081 seconds)
  done (took 7.05470711 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.078413342 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.094816012 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.083837563 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.104640262 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.095201349 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.076398944 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.095119927 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.076864744 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.098011222 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.081769648 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.097574085 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.121602342 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.071628196 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.100944693 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.076917376 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.098735904 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.075968631 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.099810992 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.096781997 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.077041076 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.097739697 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.085305687 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.098481566 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.106088597 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.107646829 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.093368944 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.076987843 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.098311307 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.10647508 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.077784967 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.110147247 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.076561352 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.098469826 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.106880568 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.088886943 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.098531367 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068249374 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.097680772 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.076491422 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.098385694 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.070720471 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.106110308 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.0970577 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.072097365 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.09756968 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.076905041 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.10621554 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.110215956 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.079861158 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.102588374 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.075849581 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.10633399 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.097873187 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.077829647 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.106751482 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.132464368 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.085179506 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.107855962 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.097806491 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.085572151 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.10723303 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.113139298 seconds)
  done (took 6.707298982 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.091067974 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.098311131 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.099373315 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.066107306 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.066975334 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.095389684 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.068049397 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.089569199 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.079785403 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.101321323 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082237205 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.096423385 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.076847009 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104220819 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.095461736 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.078572834 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.095172203 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.073050585 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.100853648 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.073550922 seconds)
  done (took 2.652636693 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.078111328 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.106202378 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.070270241 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.095256221 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.072576631 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.074174077 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.093024158 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071207002 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.09047589 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07212155 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.100299418 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.079114809 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.090496841 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.075113293 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.100538617 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.074490504 seconds)
  done (took 2.269745733 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.081771471 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.100507614 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.083786392 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.091625054 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.068547379 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.088697734 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.071597019 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.066060299 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.089798278 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.085037847 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.093948533 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.072735399 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.092427878 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.06987885 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.066711905 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.097467619 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.066677721 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.090725482 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.069982916 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.107631812 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.081699856 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.091058738 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.071343782 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.094355427 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.071612672 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.097371728 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.072412784 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.06741288 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.092298783 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.071099087 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.0934726 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.077787242 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.089333691 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.069096504 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.090015059 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.068985465 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.070218756 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.093395968 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.073917603 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.092455209 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.069642296 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.090964933 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.072111992 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.071082923 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.089032126 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.070910624 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.087278604 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.077803513 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.067510182 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.094210681 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.0704971 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.094892647 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.07164873 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.103578195 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.074546519 seconds)
  done (took 5.419211762 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083714704 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.071606566 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.086060396 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.066563959 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.093101162 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.071612911 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.072447257 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.093364765 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071697025 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.090827554 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.07302228 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.094253755 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.074085603 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.073980984 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.094864411 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.074125639 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.088342654 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.072467336 seconds)
  done (took 2.377162098 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.076166626 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.068200275 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.097474773 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.069171824 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.090673887 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.073838807 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.065734132 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.092479525 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069138301 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.092021561 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071441877 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.07231288 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.092050803 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.074107021 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.091724838 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071310682 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.071403518 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.09151858 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.07068932 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.08795028 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.074273858 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.068375145 seconds)
  done (took 2.664823744 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.075495082 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.09546551 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.170838897 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.1136571 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.084644856 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.105611636 seconds)
  done (took 1.578729202 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.094290518 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10436024 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.069864677 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114037131 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079776926 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.093588058 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073227841 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093379404 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082450801 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108577125 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071582957 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.104127338 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.103218144 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.084929416 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.101168584 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077367681 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.094964187 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071985285 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.094148303 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112937717 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073445618 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.102918489 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073493768 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.094300807 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072365341 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.103512022 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.102316021 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.086722554 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.094539276 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082401983 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.101221689 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072064199 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.103918569 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108202481 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074728513 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.103898382 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072290423 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112807362 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.099494064 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081953203 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.09626004 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079038982 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.103724709 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07636729 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.104343192 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.093753943 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077968884 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.094176106 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072692489 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119999887 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.098649167 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079835812 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.100154138 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079930218 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.104167919 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119603035 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108062827 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081469981 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100147636 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105225472 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.080271178 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.0973629 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078130835 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105847988 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09805774 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078169474 seconds)
  done (took 7.013995845 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085859283 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.11036383 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071705194 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106798467 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.100534188 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073198316 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.093107534 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073362515 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.094441316 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073027169 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.138236798 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072764241 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.103872027 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.102341348 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072673452 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.094239489 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073197647 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10426089 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072231645 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119264858 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094561713 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080936535 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.104254255 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.102306604 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.085960795 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.101372974 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072372609 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.095496199 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071482825 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.096166199 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.099670405 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074147735 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.103226211 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.072335131 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.103444966 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07284031 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.095726906 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077514026 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.095280163 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.098694856 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.082639075 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113573705 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071418271 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.094674925 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107528623 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073272237 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.093991213 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072992082 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.093755604 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073868424 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109272379 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086940825 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108759656 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.102510299 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073223974 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.095317692 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072852977 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.094765609 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072415229 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.101125582 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.102217629 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073688059 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.120991274 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071955354 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.095784679 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.102095346 seconds)
  done (took 6.935408649 seconds)
done (took 136.668284885 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.212355724 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.190091794 seconds)
  done (took 1.3352932 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.071558322 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.119745351 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.082612769 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.131275962 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.090984239 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.103223258 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.121987055 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.083334666 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.068902524 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.091361325 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.069620646 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.091864376 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.134381262 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.068649258 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.09118745 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.070824964 seconds)
  done (took 2.432162827 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.106507722 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.203447169 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.114492236 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.067876974 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.105866722 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.08255405 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.092492179 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.082765828 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.099228024 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.07005805 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.104306329 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.081861368 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.068722224 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.103959338 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.098551304 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.083288973 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.068605939 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.105386062 seconds)
  done (took 2.683850792 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.109802179 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.151360883 seconds)
  done (took 1.205241583 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.206832899 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.128358868 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.214324966 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.442668412 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.218822739 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.302564464 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.182218124 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.18289264 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.162329573 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.175894957 seconds)
  done (took 3.154321729 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.102362796 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.177182416 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.323850755 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.145499699 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.092155454 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.124238979 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.148162166 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.117164922 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.087444857 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.110303238 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.108310826 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.083283226 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.126457736 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.080506249 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.101956392 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.082694997 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.130460374 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.077412939 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.104105688 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.079860151 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.126765835 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.071139261 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.102621469 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.077584619 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.106313619 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.083178384 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.092666281 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.070196955 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.102748456 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.079421978 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.106313133 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.121564227 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.084644923 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.140918039 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.11092886 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.142483695 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.102408856 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.078716478 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.078259133 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.100064976 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.081815733 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.105486835 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.110947395 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.083549159 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.069824128 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.105405344 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.070117906 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.092972109 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.084930875 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.105662779 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.083546292 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.106464138 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.139596371 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.104909358 seconds)
  done (took 6.667190716 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.774694357 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.141784651 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.076757801 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.847397371 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.122406317 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.087580398 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.767352115 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.097823202 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.24360161 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.777813252 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.119342083 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.081057172 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.216022999 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.222505615 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.910826727 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.2893643 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.646629347 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.107840402 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.111074594 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.136451169 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.1661335 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.161158413 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.153171311 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.414626839 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.099165748 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.073848712 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.140782847 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.101766549 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.143428196 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.107526286 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.076212941 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.163199664 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.255047957 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.164495309 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.076264627 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.094420416 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071417309 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.151411527 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.245267578 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.195202197 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.162563472 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070671743 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.0723536 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.170376354 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.137261411 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.071822585 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.148752679 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.160403776 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.178256405 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.075975442 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.103602977 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.151256718 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.147958171 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.150729458 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.108276967 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.296842769 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.273273986 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.094860045 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.12476045 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.085923178 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.242609166 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.10583707 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.185558801 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.142169147 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.193377607 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.072349794 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.761750735 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.154279191 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.072043817 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.100769111 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.126661491 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.078545009 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.170711187 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.129929067 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.392419296 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.174901243 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.078498833 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.07363468 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.214197403 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.085683646 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.096718467 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.148805186 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.079421546 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.130978667 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.176379085 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.155610807 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.157017935 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.214130447 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.175924925 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.149584799 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.078184951 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.132746773 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.102456476 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.198001112 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.204870928 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.150694861 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.195392275 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.146328901 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.148947758 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.178316472 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.082605738 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.157811761 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.128238095 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.11011888 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.149242679 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.20442612 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.130574086 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.087567188 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.101369546 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.15037228 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.133911832 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.089988969 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.172026766 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.158431682 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.440087887 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.153838244 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.09542422 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.091787153 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.167662933 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.149239025 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.07998504 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.25301664 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.129354061 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.157005329 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.130416005 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.071267213 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.128791171 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.149917817 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.107567128 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.130802996 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.147605245 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.103833317 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.221885776 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.178970288 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.107577838 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.202771789 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.169656317 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.103950349 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.158591332 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.130387774 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.155886516 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.105194057 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.149755839 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.079605123 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.757664602 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.148183291 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.128728526 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.100619473 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.149814959 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.095323954 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084803639 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.107338199 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068499671 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.789035421 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.112497582 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.085571658 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.111103295 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.080105552 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.12930447 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.14316836 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.101247077 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.149089088 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.217199546 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.081734372 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.127925189 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.111525972 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.148132365 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.101146488 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.088673749 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.111415106 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.087610344 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.130401848 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.101341061 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.087733076 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.178351873 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.150113037 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.182472079 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.580715912 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.07366316 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.110607079 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.21190873 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.075285872 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.275710201 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.145005311 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.210934519 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.149378242 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.082465896 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.307503017 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.147918094 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.171459248 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.113715867 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.157097174 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069780174 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.165291788 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.152283897 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.074713428 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.103357847 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.151216621 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.15620549 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.152911164 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.958096683 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.093368511 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.211409277 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.072164999 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.157996058 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.102660536 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.081654649 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.274790486 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.074937168 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.181242193 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.153137151 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.07742795 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.112064365 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.832334712 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.113290971 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.147091589 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.103279496 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.184028889 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.173206165 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.146162215 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.14775852 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.080704502 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.173234763 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.194845425 seconds)
  done (took 42.393095067 seconds)
done (took 60.804266063 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.292955649 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.201260966 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.261861511 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.151151194 seconds)
  done (took 1.949533563 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.152024828 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.108943682 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.128583547 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.092551531 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.133770931 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.070779312 seconds)
  done (took 1.650977383 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.440197268 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.283139485 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.24413777 seconds)
  done (took 1.935902941 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.308905776 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.238021528 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.465825772 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.309689275 seconds)
  done (took 2.398623874 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.197956681 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.122972631 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.095908148 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.090744125 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.170152254 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.27503726 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.13433815 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.200653036 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.082450163 seconds)
  done (took 2.385385869 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.214313869 seconds)
done (took 11.496210521 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.343926168 seconds)
    (2/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.149460919 seconds)
    (3/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.30766086 seconds)
    (4/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.196240266 seconds)
    (5/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.078982577 seconds)
    (6/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.213551645 seconds)
    (7/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.084839016 seconds)
    (8/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.114238082 seconds)
    (9/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.077008736 seconds)
    (10/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.107102735 seconds)
    (11/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.096434888 seconds)
    (12/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.237871536 seconds)
    (13/309) benchmarking ("sort", Float32, false)...
    done (took 0.160033171 seconds)
    (14/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.079327632 seconds)
    (15/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.127766654 seconds)
    (16/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.136591365 seconds)
    (17/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.152768399 seconds)
    (18/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.202582329 seconds)
    (19/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.165385357 seconds)
    (20/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.082121158 seconds)
    (21/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.075531377 seconds)
    (22/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.319761316 seconds)
    (23/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.087720495 seconds)
    (24/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.095533325 seconds)
    (25/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.147633286 seconds)
    (26/309) benchmarking ("sort", Float64, false)...
    done (took 0.130085944 seconds)
    (27/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.104945717 seconds)
    (28/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.246890188 seconds)
    (29/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.085962656 seconds)
    (30/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.2698702 seconds)
    (31/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.100206376 seconds)
    (32/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.180656974 seconds)
    (33/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.1186512 seconds)
    (34/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.275193513 seconds)
    (35/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.089336036 seconds)
    (36/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.103370841 seconds)
    (37/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.081997023 seconds)
    (38/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.145065757 seconds)
    (39/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.169618875 seconds)
    (40/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.180847007 seconds)
    (41/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.109172898 seconds)
    (42/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.161905732 seconds)
    (43/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.241963217 seconds)
    (44/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.21249087 seconds)
    (45/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.250090867 seconds)
    (46/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.096518772 seconds)
    (47/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.077443431 seconds)
    (48/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.150125761 seconds)
    (49/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.081892787 seconds)
    (50/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.100890171 seconds)
    (51/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.140337081 seconds)
    (52/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.079892275 seconds)
    (53/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.236598031 seconds)
    (54/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.107553171 seconds)
    (55/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.072573809 seconds)
    (56/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.275774665 seconds)
    (57/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.131324593 seconds)
    (58/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.103511815 seconds)
    (59/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.128773857 seconds)
    (60/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.130809938 seconds)
    (61/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.238896048 seconds)
    (62/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.189742281 seconds)
    (63/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.074388592 seconds)
    (64/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.137417838 seconds)
    (65/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.152760819 seconds)
    (66/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.077658075 seconds)
    (67/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.095489454 seconds)
    (68/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.221850028 seconds)
    (69/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.096228153 seconds)
    (70/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.179783126 seconds)
    (71/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.097408703 seconds)
    (72/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.169397404 seconds)
    (73/309) benchmarking ("sort", Int64, false)...
    done (took 0.070300276 seconds)
    (74/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.164324446 seconds)
    (75/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.124849509 seconds)
    (76/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.142931774 seconds)
    (77/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.105803343 seconds)
    (78/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.25677996 seconds)
    (79/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.209893332 seconds)
    (80/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.079241248 seconds)
    (81/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.069853522 seconds)
    (82/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.128995832 seconds)
    (83/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.261450794 seconds)
    (84/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.154877853 seconds)
    (85/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.118600469 seconds)
    (86/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.099118592 seconds)
    (87/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.095917943 seconds)
    (88/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.096219852 seconds)
    (89/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.107827474 seconds)
    (90/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.097516291 seconds)
    (91/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.094028648 seconds)
    (92/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.079215091 seconds)
    (93/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.269276736 seconds)
    (94/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.173032064 seconds)
    (95/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.158560861 seconds)
    (96/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.123038314 seconds)
    (97/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.084732168 seconds)
    (98/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.124132089 seconds)
    (99/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.082328452 seconds)
    (100/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.104490129 seconds)
    (101/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.262949398 seconds)
    (102/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.121592126 seconds)
    (103/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.06708757 seconds)
    (104/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.107542016 seconds)
    (105/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.151115955 seconds)
    (106/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.140332187 seconds)
    (107/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.055948131 seconds)
    (108/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.126137767 seconds)
    (109/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.056616548 seconds)
    (110/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.078050625 seconds)
    (111/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.138610954 seconds)
    (112/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.124701064 seconds)
    (113/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.082658386 seconds)
    (114/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.264915104 seconds)
    (115/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.07499171 seconds)
    (116/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.140296842 seconds)
    (117/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.081146441 seconds)
    (118/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.151256666 seconds)
    (119/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.122911552 seconds)
    (120/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.144955096 seconds)
    (121/309) benchmarking ("sort", Int8, false)...
    done (took 0.176269107 seconds)
    (122/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.070873903 seconds)
    (123/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.107353757 seconds)
    (124/309) benchmarking ("sort", Bool, false)...
    done (took 0.167850548 seconds)
    (125/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.080337776 seconds)
    (126/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.056655452 seconds)
    (127/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.102822089 seconds)
    (128/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.078084095 seconds)
    (129/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.107791335 seconds)
    (130/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.077767163 seconds)
    (131/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.077937242 seconds)
    (132/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.101753916 seconds)
    (133/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.070428251 seconds)
    (134/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.100736921 seconds)
    (135/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.08000972 seconds)
    (136/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.055709781 seconds)
    (137/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.093613554 seconds)
    (138/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.085463864 seconds)
    (139/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.076677509 seconds)
    (140/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.094818395 seconds)
    (141/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.092016876 seconds)
    (142/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.080530391 seconds)
    (143/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.097190382 seconds)
    (144/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.079758126 seconds)
    (145/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.111372348 seconds)
    (146/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.078113796 seconds)
    (147/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.336480831 seconds)
    (148/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.063995521 seconds)
    (149/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.094914395 seconds)
    (150/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.12348069 seconds)
    (151/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.068945126 seconds)
    (152/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.102942545 seconds)
    (153/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.077186835 seconds)
    (154/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.09945847 seconds)
    (155/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.057520241 seconds)
    (156/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.055682165 seconds)
    (157/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.250689033 seconds)
    (158/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.070809277 seconds)
    (159/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.142886229 seconds)
    (160/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.096157589 seconds)
    (161/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.140585829 seconds)
    (162/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.071345746 seconds)
    (163/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.103082842 seconds)
    (164/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.073946491 seconds)
    (165/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.069382592 seconds)
    (166/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.111645856 seconds)
    (167/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.066193905 seconds)
    (168/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.138647996 seconds)
    (169/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.158312192 seconds)
    (170/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.102223902 seconds)
    (171/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.14536027 seconds)
    (172/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.233256724 seconds)
    (173/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.095979254 seconds)
    (174/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.056523067 seconds)
    (175/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.261866191 seconds)
    (176/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.130601262 seconds)
    (177/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.101493548 seconds)
    (178/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.123063533 seconds)
    (179/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.097025075 seconds)
    (180/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.056241303 seconds)
    (181/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.253571952 seconds)
    (182/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.103414537 seconds)
    (183/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.08259823 seconds)
    (184/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.079035661 seconds)
    (185/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.069198951 seconds)
    (186/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.091745389 seconds)
    (187/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.056877201 seconds)
    (188/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.173408586 seconds)
    (189/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.077862892 seconds)
    (190/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.075773176 seconds)
    (191/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.103873109 seconds)
    (192/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.087380883 seconds)
    (193/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.079416706 seconds)
    (194/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.056498598 seconds)
    (195/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.077417879 seconds)
    (196/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.094012367 seconds)
    (197/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.069858991 seconds)
    (198/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.054995907 seconds)
    (199/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.260521719 seconds)
    (200/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.10766102 seconds)
    (201/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.244907054 seconds)
    (202/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.12079875 seconds)
    (203/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.252005281 seconds)
    (204/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.058954391 seconds)
    (205/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.055368423 seconds)
    (206/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.10580483 seconds)
    (207/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.072024589 seconds)
    (208/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.055104943 seconds)
    (209/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.252440611 seconds)
    (210/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.116291116 seconds)
    (211/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.05836477 seconds)
    (212/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.055822711 seconds)
    (213/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.078139862 seconds)
    (214/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.08226861 seconds)
    (215/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.078492137 seconds)
    (216/309) benchmarking ("sort", BigInt, false)...
    done (took 0.219710367 seconds)
    (217/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.097607775 seconds)
    (218/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.056830349 seconds)
    (219/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.068639745 seconds)
    (220/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.100153519 seconds)
    (221/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.057172881 seconds)
    (222/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.074955601 seconds)
    (223/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.080156798 seconds)
    (224/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.056052011 seconds)
    (225/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.069437768 seconds)
    (226/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.09349831 seconds)
    (227/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.072942469 seconds)
    (228/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.064205273 seconds)
    (229/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.092252384 seconds)
    (230/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.072921673 seconds)
    (231/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.069478616 seconds)
    (232/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.145814218 seconds)
    (233/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.070557857 seconds)
    (234/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.177514255 seconds)
    (235/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.055334733 seconds)
    (236/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.131395749 seconds)
    (237/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.069317443 seconds)
    (238/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.055428764 seconds)
    (239/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.171941998 seconds)
    (240/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.055119688 seconds)
    (241/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.083200035 seconds)
    (242/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.055946714 seconds)
    (243/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.056198588 seconds)
    (244/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.17865462 seconds)
    (245/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.072588075 seconds)
    (246/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.209194745 seconds)
    (247/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.080122125 seconds)
    (248/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.058179592 seconds)
    (249/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.108960226 seconds)
    (250/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.16968075 seconds)
    (251/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.075764968 seconds)
    (252/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.081898358 seconds)
    (253/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.095305668 seconds)
    (254/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.103626297 seconds)
    (255/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.055973756 seconds)
    (256/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.068733614 seconds)
    (257/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.082169768 seconds)
    (258/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.185495999 seconds)
    (259/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.082083702 seconds)
    (260/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.056423466 seconds)
    (261/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.055229118 seconds)
    (262/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.101594501 seconds)
    (263/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.058510732 seconds)
    (264/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.058754752 seconds)
    (265/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.085763648 seconds)
    (266/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.071895446 seconds)
    (267/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.078666098 seconds)
    (268/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.097051717 seconds)
    (269/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.079384285 seconds)
    (270/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.096823209 seconds)
    (271/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.07455197 seconds)
    (272/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.178689023 seconds)
    (273/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.076673209 seconds)
    (274/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.165762082 seconds)
    (275/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.092994458 seconds)
    (276/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.080689335 seconds)
    (277/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.066743591 seconds)
    (278/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.075268128 seconds)
    (279/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.096362009 seconds)
    (280/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.05839655 seconds)
    (281/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.055385923 seconds)
    (282/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.102196756 seconds)
    (283/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.075083243 seconds)
    (284/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.056658414 seconds)
    (285/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.079170225 seconds)
    (286/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.176104357 seconds)
    (287/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.094317581 seconds)
    (288/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.071281845 seconds)
    (289/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.067314808 seconds)
    (290/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.096683828 seconds)
    (291/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.097241116 seconds)
    (292/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.104128021 seconds)
    (293/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.076056931 seconds)
    (294/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.054663916 seconds)
    (295/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.080631571 seconds)
    (296/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.086438332 seconds)
    (297/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.202754123 seconds)
    (298/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.055329304 seconds)
    (299/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.055288765 seconds)
    (300/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.081499818 seconds)
    (301/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.077193085 seconds)
    (302/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.117638684 seconds)
    (303/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.098653654 seconds)
    (304/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.070404667 seconds)
    (305/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.099832542 seconds)
    (306/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.091545252 seconds)
    (307/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.093083875 seconds)
    (308/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.071486739 seconds)
    (309/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.057288828 seconds)
  done (took 37.148281433 seconds)
done (took 38.116103476 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.084642367 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.121589835 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.08070876 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.123665569 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.087024186 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.109127538 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.078924542 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.108354711 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.086887712 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.111968378 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.084845162 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.058128574 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.106477337 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.080002507 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.105222846 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.099580937 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.109757644 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.077133017 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.103464622 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.070723254 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.078214373 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.095717579 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.071923457 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.057631542 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.109295652 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.078484993 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.103854071 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.080187006 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.069692978 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.096938907 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.073063724 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.102666871 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.070317099 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.083141727 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.102783665 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.078760541 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.105560116 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.082099356 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.071345748 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.096723834 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.078115578 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.095022541 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.078360316 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.077794112 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.10224613 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.076730766 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.102871327 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.086260243 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.124551136 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.0741052 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.078427317 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.108433321 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.081936146 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.103888124 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.074525175 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.102873355 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.076355233 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.098843253 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.106115374 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.07313845 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.104528227 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.080218276 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.074550693 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.106083278 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.07873323 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.106688454 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.081472243 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.101284879 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.081164623 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.074857882 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.095917272 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.079072576 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.098202579 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.071243032 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.08066891 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.107562269 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.069601769 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.075055119 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.103458851 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.076481199 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.094863522 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.073982136 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.07100414 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.102250891 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.073770283 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.058428999 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.099865698 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.076278063 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.068657359 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.105411515 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.076392179 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.102517964 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.072955846 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.104916539 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.071540645 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.075533099 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.095872882 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.071676161 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.071934288 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.100034762 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.070809022 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.072257486 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.105296317 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.072112266 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.10116314 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.086030124 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.069859569 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.102386969 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.069797002 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.093410126 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.088318999 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.080231208 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.096792761 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.07324389 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.094312752 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.078142216 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.069265465 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.095258483 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.070037041 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.0690985 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.10234335 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.070040532 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.096456456 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.078557874 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.083681346 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.099183178 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.073884345 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.072529935 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.096210959 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.076612957 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.095073352 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.071746444 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.071654004 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.093370789 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.074459326 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.070339606 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.103930263 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.072910057 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.102552422 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.074133542 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.078897234 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.100247408 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.076538904 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.074671859 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.095167874 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.063833967 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.072071907 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.10017541 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.072386914 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.094904504 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.073701039 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.069581951 seconds)
done (took 14.146779148 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.070024126 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.17825364 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.132459875 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.10322847 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.12145304 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.070267426 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.109090127 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.13866397 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.073593027 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.1382485 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.094099737 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.117821133 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.148988712 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.071018048 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.070651058 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.10073779 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.073302311 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.121349817 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.110126337 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.119010433 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.152989859 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.069685507 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.13149804 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.096772491 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.121697328 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.136995481 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.071622695 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.099524039 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.075709016 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.12525579 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.09315506 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.073550539 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.096820593 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.13266138 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.102429283 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.117986519 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.071073368 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.115879429 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.071478957 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.069929794 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.124505493 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.134365595 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.08702177 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.11619681 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.073209986 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.099283082 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.072212302 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.118674016 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.096782651 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.113301009 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.121027107 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.145341963 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.075113168 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.114694971 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.070406061 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.119269449 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.089829812 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.098626695 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.071846518 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.07275656 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.096796306 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.075185132 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.121870332 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.09805071 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.102117651 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.087798042 seconds)
  done (took 7.805260185 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.088449864 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.119973583 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.088983269 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.115503228 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.07138485 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.070981738 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.097965605 seconds)
  done (took 1.6857819 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.070699378 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.092863796 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.123144353 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.095748609 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.119154694 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.092702842 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.108466001 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.071492307 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.116216114 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.07347239 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.119414768 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.113495692 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.099256715 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.07974745 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.12334406 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.072639991 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.096475871 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.098437083 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.074545585 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.123167783 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.075255121 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.117988719 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.074314185 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.071626205 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.114283561 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.071923756 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.149508313 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.076291354 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.099400012 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.076499663 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.069025942 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.150781922 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.114315714 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.083460644 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.097086052 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.088878544 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.113183289 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.071550982 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.088075117 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.104178153 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.087829507 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.097862519 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.073130026 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.069836408 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.10282014 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.083590989 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.097984415 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.073614495 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.074460874 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.119722234 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.072978463 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.112270114 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.073059707 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.07526779 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.100114978 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.07808959 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.107241904 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.074445089 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.092694343 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.100133893 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.090240561 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.116511506 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.087226508 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.117446636 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.074586333 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.112351714 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.087669576 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.073490201 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.10106371 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.075264276 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.116084426 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.070038372 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.072456413 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.110270547 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.073313739 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.123860199 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.097370618 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.099526816 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.083880863 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.071337019 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.099451693 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.072163703 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.123424303 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.076470311 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.070498584 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.104223672 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.074169708 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.095315741 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.072312915 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.075129074 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.097252899 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.074039689 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.074172936 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.098886125 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.075020836 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.115746386 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.072986101 seconds)
  done (took 9.997193333 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.072256974 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.070382036 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.100358782 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.073513166 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.071945935 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.099207996 seconds)
  done (took 1.532497589 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.102921865 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.097414483 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.08535849 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.100737945 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.112598255 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.11466222 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.088475356 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.116217365 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.090788932 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.11289912 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.088385284 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.116292703 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.093285174 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.106277192 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.087651135 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.105262555 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.088974731 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.110309938 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.084856444 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.10600731 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.094205771 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.105300675 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.079235503 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.11669131 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.075945147 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.104493315 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.084752159 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.111007431 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.086266013 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.115418855 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.079800462 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.09982516 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.079026563 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.114546528 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.090229362 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.103027941 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.078833508 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.07559357 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.110956397 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.075476337 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.117205033 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.079275467 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.111835129 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.076857777 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.116688369 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.077676809 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.104530079 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.082790577 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.114745884 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.076612922 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.104372771 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.078402503 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.101122227 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.078715831 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.077003392 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.116415145 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.101997525 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.089726926 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.078312135 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.105690871 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.075546709 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.102880828 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.088193608 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.103162084 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.08571321 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.104374882 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.077478479 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.105387086 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.079383653 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.104323863 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.077950112 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.075252888 seconds)
  done (took 7.90595408 seconds)
done (took 29.950503643 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.668162846 seconds)
  done (took 1.706474253 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.828962631 seconds)
  done (took 1.868121946 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 16.802978157 seconds)
  done (took 17.847509587 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.664083125 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.858664142 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.836989561 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.165176564 seconds)
  done (took 3.564166775 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.911513927 seconds)
  done (took 1.970604772 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.249716714 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.259788064 seconds)
  done (took 1.554020141 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.766822642 seconds)
  done (took 1.817818559 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.349984728 seconds)
  done (took 2.395637049 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.346410763 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.189828224 seconds)
  done (took 1.58981907 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.544362674 seconds)
  done (took 1.598342231 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.288248357 seconds)
  done (took 8.346627305 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.237562005 seconds)
  done (took 1.305237677 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.276817942 seconds)
  done (took 1.333494405 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.471758545 seconds)
  done (took 4.528552808 seconds)
done (took 52.471759616 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.082214293 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.083362465 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.109982395 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.081650874 seconds)
  done (took 1.409135469 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.082775656 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.075939129 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.11031808 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.077969572 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.110490115 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.078428071 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.106313811 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.083846463 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.101886459 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.080998064 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.077842638 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.10444879 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.081585685 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.105936767 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.07696445 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.079809177 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.109107688 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.077755251 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.109005334 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.078340832 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.102074583 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.081787257 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.080696889 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.104579991 seconds)
  done (took 3.241109982 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.08129739 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.075650202 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.104731583 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.075647745 seconds)
  done (took 1.401368965 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.081654923 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.119686605 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.095147928 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.104926791 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.098488971 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.116097638 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.073456965 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.072610796 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.102177865 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.080195347 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.097334283 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.104069247 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.117645728 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.079743847 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.107041215 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.070020048 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.095824084 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.092675932 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.079123632 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.107030533 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.07375128 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.104162818 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.071255876 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.119747976 seconds)
  done (took 3.328065997 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.08176171 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.129974658 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.08304626 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.116474156 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.097525494 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.068350846 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.106868919 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.094598272 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.157589856 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.068473241 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.099651662 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.068284762 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.100659215 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.069290157 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.078603276 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.13913492 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.141365508 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.072266896 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.126183962 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.070188826 seconds)
  done (took 3.032063153 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.079744582 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.072313923 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.095932005 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.073375851 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.079887206 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.104427971 seconds)
  done (took 1.574608861 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.0728128 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.069297736 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.095229587 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.070219224 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.073667285 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.09764435 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.069890678 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.070622492 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.099059115 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.071799354 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.096748454 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.071870853 seconds)
  done (took 2.026282013 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.471162545 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.072610838 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.095202426 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.07013008 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.0738622 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.095146195 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.083915324 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.07005673 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.121356174 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.068385092 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.096600688 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.071958741 seconds)
  done (took 2.460720736 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.273225542 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080750142 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.339982145 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173743579 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144300484 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161599289 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106294462 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.14613764 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.206754575 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144127037 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.237066214 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205818998 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140115657 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174031279 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.120009601 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.13781686 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192770354 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.22969874 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13540233 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.233969379 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190076787 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.161823346 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.21489713 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132096137 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114310678 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177282421 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.076199816 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082650436 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.265568731 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172222133 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183551616 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143244228 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.126074501 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242494905 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228753389 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17743105 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168509811 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.115362658 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.161853701 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.173325579 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.272115149 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.117882157 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202732071 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139710962 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110643574 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181238866 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152755045 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.152885687 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.141258978 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.119443225 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182366698 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.249200535 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.172171378 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.117728991 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142178419 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145580916 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.148624898 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131997235 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.256122 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201322437 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191269949 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.074264149 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127638593 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194031693 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164671602 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.171291713 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.162683807 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097193988 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203542146 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.194873401 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149622597 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209584684 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.165772417 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119838134 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152912244 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.177448079 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18706159 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213401763 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159486944 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.102575297 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158249251 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133085619 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086057573 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.174131013 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.078366359 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.245061438 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129786454 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.145442347 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143645897 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141141451 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.116040995 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.22961858 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.213097602 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134199763 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.070647917 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134896804 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.156828586 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182431264 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118998408 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.141016722 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152839251 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.081130261 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202075889 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.07867998 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158618926 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.108504214 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158567035 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167374182 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.10456968 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159985196 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106339787 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.133492502 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196960625 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203855459 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121275732 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.085760015 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235819924 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160152983 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.137384043 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.209535947 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.199326436 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.132374786 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132508025 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185087138 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.252976914 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.121412919 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.23293729 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109382218 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115120481 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.117967876 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162637675 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.14683686 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.155872856 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086677771 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.158560094 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236930341 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.104592779 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.099722593 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19882508 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.086469274 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11253928 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146545157 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130594618 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.100381244 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.133046394 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.138983748 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174380378 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18497416 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.114138452 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186103884 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105187285 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230565879 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121494709 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.136392932 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108674346 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.101258106 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.171036408 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.229265258 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082646534 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236010689 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.160787832 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137127916 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153293993 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112599545 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.179497904 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.081891117 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.101088351 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1788978 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144740961 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143327747 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.191839516 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136509338 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.161308272 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.183311108 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170171402 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168023124 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.168990192 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13930918 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.118320347 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.14514476 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163512843 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.076019146 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.125386201 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.112882426 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134841193 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100642765 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.114314016 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179049435 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160708034 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129489039 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146566353 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128675769 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.189031938 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.10769021 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166282029 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.154601358 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12573629 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.194736964 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.227374461 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170998579 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132465104 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208939369 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.07604055 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.0766599 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.121721367 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.162582616 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.114336991 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.08654139 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150832561 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.216497451 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164042095 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171396852 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143397916 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155938779 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.225565066 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.074252293 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.14906006 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188271091 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187456142 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.139918222 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122419232 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.103562069 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.212201421 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136693997 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.260229811 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149455426 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159445503 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220342741 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.113450853 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112084897 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136325805 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175881688 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137450211 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.218731404 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104147451 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12067849 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142544204 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.110652896 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136110299 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164200304 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15350846 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172443495 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.151186841 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196855049 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.081139568 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150029814 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158557581 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155963039 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.094945162 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155404693 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.232350716 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099751773 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152755489 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.223457528 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108605888 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.129934152 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.249816594 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.21147602 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.115317051 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140723924 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.155597381 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.166981263 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154565976 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.178382787 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142362324 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171110776 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.144103354 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.11506108 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.09341277 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131101495 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140546735 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.099216586 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.1487219 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.151971938 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.099890995 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195871806 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146605351 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.142019349 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153720258 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.103212255 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.123599327 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102408807 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.247588591 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155597429 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.243932818 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.134000744 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.216786431 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210353729 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106689384 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082238318 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.112396024 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.177081517 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115807994 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170180276 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.127871194 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10930835 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189303023 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182549419 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.127454833 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.072434901 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14354196 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169936381 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14510105 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132110373 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.138988108 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204003855 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.137211945 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110746412 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.161450388 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108398433 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136209939 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24586046 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.092102699 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.1027562 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105926839 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.085335423 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.165036868 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224884841 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.114123184 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.135885394 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154049271 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182755339 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.16869387 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132212475 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103104683 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146206704 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211541262 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165952997 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.094578131 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.147233718 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193788943 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19894496 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139898747 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.128814699 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239861137 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195602196 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.235832431 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.11936239 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151283191 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150222014 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.146211921 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182080022 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.11535458 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236364976 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08721558 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200390793 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135181882 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099003094 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16348873 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.129265223 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12021569 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18906636 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154896274 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113815516 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.12646808 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1490201 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157625292 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136083508 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.080153278 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175533 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.1039672 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173373115 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238867033 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085263253 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14013216 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129197782 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.111853428 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140122486 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109323973 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120123421 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.150015764 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.218112013 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.123687443 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220345986 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177979204 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148863225 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203352481 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133181722 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.669525876 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.082790561 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.224703326 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154421746 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.251543659 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131820594 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155237808 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.144322813 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158356182 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180420119 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13979696 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.209608268 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169334216 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.156055644 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110771199 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136470942 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146080776 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.09408839 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.14117463 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14951745 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151268043 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.132947879 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.155187544 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190983315 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.087107667 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130270272 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199431776 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.154316817 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211218547 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.178854522 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.118150721 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154538449 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180008878 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11290661 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.157234824 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225473946 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.142226329 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131800837 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.086931821 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.140309115 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241533632 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.077289759 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.231979846 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16074692 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.144815963 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148965576 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.155170537 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199704164 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140154958 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162766887 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.127163749 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.148716434 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.151434912 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089822003 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.109695161 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139604756 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148380858 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.104640671 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13574216 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.152970897 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197415312 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.10281952 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098983321 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136697247 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210052104 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.251458753 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.093793916 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.115019149 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152420581 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148583205 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.151607917 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161601836 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.11264642 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088552265 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.11414705 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.117477518 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.146657368 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.151814563 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136760046 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146766535 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.239123921 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.089501263 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.257908861 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127305527 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.115407801 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.101381035 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.082584422 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1294039 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129520229 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137215131 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102150605 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241814615 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.129401419 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.094836214 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.12653957 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.104008536 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088342569 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.166625039 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146197818 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156626059 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131918017 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.092535305 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142165112 seconds)
  done (took 74.621486897 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.141163141 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.111214703 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.126715709 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.181757142 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.155736896 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.246574466 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.189379993 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.231263397 seconds)
  done (took 2.522272518 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.072975442 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.125265999 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.108346485 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.124184455 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.096517641 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.072841385 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.312174969 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.115537168 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.0694334 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.121668118 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.123875968 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.098819952 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.495571885 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.070685972 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.102305104 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.090690248 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.071476741 seconds)
  done (took 3.40314604 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.453584667 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.684847818 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.457454745 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.103099266 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.024892343 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.115010858 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.548862724 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.172483717 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.097689085 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.442081302 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.73043947 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.159715728 seconds)
  done (took 18.133172531 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.078794532 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.071805002 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.115713376 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.086938 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.104229581 seconds)
  done (took 1.598253964 seconds)
done (took 119.795952062 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.084004015 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.383795153 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.057872516 seconds)
  done (took 1.618312684 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.088624748 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.089445092 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.117958303 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.088786452 seconds)
  done (took 1.540559645 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.078752108 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.07895473 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.117683183 seconds)
  done (took 1.428690051 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.300933693 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.17247435 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.093588525 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.087617624 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.080181552 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.108976562 seconds)
  done (took 1.428901464 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.077013876 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.078046686 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.105318932 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.079311017 seconds)
  done (took 1.484645968 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.080763325 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.057172981 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.058717531 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.089168121 seconds)
  done (took 1.438041488 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.094578411 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.10974134 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.085324323 seconds)
  done (took 1.438721869 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.113209164 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.11800409 seconds)
  done (took 1.383530398 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.086825691 seconds)
  done (took 1.235701274 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.097299627 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.147703721 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.168650048 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.143563349 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.176635154 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.144281413 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.118098793 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.092436566 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.110177009 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.12159019 seconds)
  done (took 2.47374092 seconds)
done (took 17.256908731 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.082239425 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.404304993 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.365079432 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.122387517 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.67180251 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.386548404 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.983380859 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.12481565 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.111767881 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.101894619 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.087704546 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.680344593 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.972264066 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.352584887 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.960143071 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.320531675 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.680469916 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.07097868 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.097355397 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.072292711 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.966303603 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.099612723 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.071129237 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.098459152 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.651783995 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.37505551 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.09991009 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.319608358 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.098236207 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.073722199 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.357553101 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.099313908 seconds)
  done (took 16.103804698 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.074794495 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.149575826 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.077973005 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.08623216 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.103256606 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.072466998 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.103259975 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.073138666 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.153884884 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070964549 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.118455955 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.071856613 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.102431564 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.073326041 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.090058541 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.099651865 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.071843655 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.09880607 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.072786863 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.070475411 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.118916525 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.071382971 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.098800139 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.072669159 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.070852146 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.112106278 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.071524122 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.098456295 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.07251139 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.07255857 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.102707632 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.071832047 seconds)
  done (took 4.017387224 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.11988747 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.158582657 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.078620803 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.13727647 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.14892394 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.074684422 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.175822963 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.096172276 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.158159245 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.072409557 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.118559625 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.071189905 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.135434731 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.071511388 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.120780387 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.071468715 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.098273007 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.072713087 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.07056591 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.099451529 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.09028349 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.098148769 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.072342204 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.071042329 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.10015702 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.084198986 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.099832505 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.074172249 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.09757656 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.07433722 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.07340049 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.099555655 seconds)
  done (took 4.34298519 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.07639714 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.077143786 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.115088024 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.087163538 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.101671863 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.07635944 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.075267886 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.10121139 seconds)
  done (took 1.863374186 seconds)
done (took 27.471126377 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.083510156 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.0731333 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.106060507 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.084229236 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.10259211 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.082936254 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.069511176 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.107132161 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.077968863 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.102603343 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.080132246 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.07034312 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.102394659 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.070430569 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.077577675 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.098779217 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.082597909 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.104194541 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.083872324 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.112136647 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.073833388 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.077497703 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.105741759 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.082390525 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.113524522 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.083554103 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.112872727 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.078141307 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.072812233 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.104249577 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.080109053 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.119671579 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.074040953 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.084285792 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.10230433 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.070481288 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.101075914 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.071910414 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.08387826 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.108444691 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.074298406 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.109680477 seconds)
  done (took 4.90468559 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.093690814 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.098324037 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.122559084 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.067125862 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.10272609 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.065336108 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.121629429 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.064191135 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.065042482 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.124059572 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.060457782 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.063033634 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.093641449 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.05827551 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.062052967 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.061059377 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.095061155 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.060099646 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.062337376 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.092699353 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.065148411 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.057965583 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.09430481 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.064891709 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.060058049 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.066297987 seconds)
  done (took 3.198801344 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.07944132 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.084866133 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.120692421 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.131703683 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.138637605 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.078850746 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.11110815 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.089056492 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.116676835 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.070596652 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.103259171 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.102024003 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.090433035 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.1069628 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.070073752 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.115282953 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.085322264 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.071169825 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.107063224 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.091199282 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.118074688 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.080668345 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.120578483 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.083789304 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.069697004 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.102418149 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.073915192 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.112972608 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.076540055 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.079355497 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.104384098 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.074131747 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.101556326 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.082971222 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.103226951 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.073599145 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.090133312 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.110009307 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.079573286 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.099164724 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.075176562 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.071515975 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.122085466 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.117806789 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.101804154 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.078299349 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.107768328 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.082070802 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.071427992 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.119840061 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.080364748 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.099689005 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.074626518 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.069275663 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.10044429 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.085349486 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.100378453 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.074992697 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.079238165 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.103649605 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.083783312 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.102515889 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.088083941 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.070575772 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.108519956 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.070762015 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.099565642 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.071216461 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.092829903 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.10435921 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.112325521 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.104236631 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.073303338 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.111890847 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.081165959 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.077716052 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.102688874 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.085974 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.110108712 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.077744201 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.081295486 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.107073526 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.07554673 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.120251457 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.075596027 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.073681212 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.10380873 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.078865345 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.103635801 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.074862181 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.086665209 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.102746591 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.07431979 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.11847657 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.07362223 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.074315994 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.109162144 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.076127405 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.100160043 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.085636131 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.076847782 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.101852392 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.079638199 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.099925007 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.074127248 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.080832532 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.107929082 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.069669119 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.105678177 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.078535035 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.072712726 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.104167419 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.074425027 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.102495874 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.082498746 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.078072383 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.107220242 seconds)
  done (took 11.909258884 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.201985101 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.195588038 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.073186567 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.186115695 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.08067027 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.122734606 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.188199023 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.132718358 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.071843441 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.07078354 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.101179184 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.109873132 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.134758363 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.142289254 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.084340594 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.070490455 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.11928624 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.141793395 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.190062022 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.153211677 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.121684148 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.079471772 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.104692075 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.072203414 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.10285392 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.081704954 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.121204977 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.083412664 seconds)
  done (took 4.510558885 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.085789207 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.130734647 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.077172485 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.11929658 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.096471314 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.098703273 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.076542336 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.071882648 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.114505049 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.083342407 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.102569406 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.079112436 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.10727713 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.084160248 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.07349199 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.11354581 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.082975661 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.103896332 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.077418672 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.077204593 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.110348257 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.085905422 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.107072827 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.070876173 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.079115909 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.103049498 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.069427587 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.121627788 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.071698722 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.125088404 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.07026891 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.110018718 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.083525983 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.07315617 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.103551842 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.074645099 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.103807326 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.075934318 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.073850401 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.100656597 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.071046481 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.061514791 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.101586422 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.084019411 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.107652766 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.063688227 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.076509712 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.107367437 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.076883082 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.096058205 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.075149812 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.073337441 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.103677545 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.078999416 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.076199832 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.108055746 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.074344162 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.099514374 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.07850651 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.073314012 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.098554781 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.072404426 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.076614847 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.102362157 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.080944198 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.107355452 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.071003777 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.073672852 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.108164804 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.077686749 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.073823594 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.106285854 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.069994101 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.105116961 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.078740418 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.077147275 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.107777666 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.072356906 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.071594432 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.104125589 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.059936234 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.102709687 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.060224342 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.076151156 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.10080465 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.071731758 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.075208333 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.111460656 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.08653471 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.104443768 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.077666051 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.102493931 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.07344816 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.076017208 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.097876287 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.075864093 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.086772963 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.119785314 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.07209575 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.101322901 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.084907591 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.10617507 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.070668416 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.059130289 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.108803139 seconds)
  done (took 10.439372115 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.096931142 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.124684882 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.07473806 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.084759599 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.127739659 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.095015459 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.107550219 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.077917174 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.073559154 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.120524433 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.072094725 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.11231376 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.076833891 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.080879098 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.127734163 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.078328364 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.103105917 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.080800967 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.106511628 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.109358171 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.082319922 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.115015701 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.080385638 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.101759145 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.076079286 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.083608515 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.128674952 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.081250172 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.113016351 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.085828477 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.113110114 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.10157629 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.087535973 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.109309446 seconds)
  done (took 4.473224631 seconds)
done (took 40.582326531 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.246997292 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.476457057 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.221877463 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.191969606 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.248027214 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.226050563 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.236656254 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.231882401 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.475801429 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.227434251 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.474022608 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.920455464 seconds)
done (took 59.347145552 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.240391124 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.365270577 seconds)
    (2/2) benchmarking "String"...
    done (took 1.499098975 seconds)
  done (took 4.02999253 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.570511963 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.265701865 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.52019246 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.228999491 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.228910644 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.682745636 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.929071617 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.109450905 seconds)
  done (took 28.130232013 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.237049077 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.609654491 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.752953993 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.75136034 seconds)
  done (took 18.518093819 seconds)
done (took 60.656709449 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.238183847 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.284924394 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.237182873 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.212141643 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.33736547 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.249144165 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.500414133 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.464174933 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.227035465 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.215985387 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.249140092 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.242988378 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.232132376 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.537671329 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.230095836 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.229029551 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.281220455 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.710625985 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.624402931 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.234232814 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.260378847 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.245046757 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.249316315 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.233921491 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.293826887 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.230406056 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.236478132 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.229054891 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.638382747 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.23427974 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.329674405 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.699560406 seconds)
  done (took 192.5856372 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.228731899 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.256018625 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.355477772 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.289459615 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.718277911 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.428486982 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.363372029 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.815245248 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.248997458 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.254530671 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.501924582 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.231269926 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.562045496 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.217879975 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.237816794 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.334006307 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.534706836 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.556761205 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.250065023 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.458284495 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.236747799 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.466590943 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.386105969 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.444994869 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.254238392 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.272406899 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.243489126 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.260060804 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.420118341 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.479708034 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.268201705 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.238938392 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.83169334 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.088282975 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.240514506 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.25621957 seconds)
  done (took 151.400259627 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.514152655 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.228975118 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.22785558 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.230347001 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.260439489 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.229198431 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.783150093 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.788843784 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.735701666 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.826250906 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.290981305 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.494141651 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.232313617 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.322993906 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.241960309 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.231402937 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.245619281 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.257038428 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.233438593 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.231438321 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.787020866 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.245418171 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.425267696 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.235784899 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.230943977 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.26118354 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.624308081 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.231077394 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.260650712 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.549273563 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.277907476 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.230346928 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.560703379 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.900897922 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.342261355 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.231575587 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.261854143 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.230691649 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.499505397 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.232024639 seconds)
    (40/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.230464798 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.231934885 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.234223676 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.847506014 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.234292271 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.785527096 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.234953635 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.153779626 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.23470811 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.230342787 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.877370723 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.762892324 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.234215093 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.231913722 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.235151253 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.23156229 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.231937861 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.263833929 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.860746594 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.330140401 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.233399496 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.235673515 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.262523179 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.231568072 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.457576298 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.232199065 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.132181892 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.284942417 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.337314682 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.790726876 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.235569816 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.326712458 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.350772948 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.233533225 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.232421276 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.233298317 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.232525514 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.339001456 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.234146549 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.639208792 seconds)
    (80/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.238479383 seconds)
    (81/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.233657876 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.292442779 seconds)
    (83/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.32590709 seconds)
    (84/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.232418026 seconds)
    (85/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.560199381 seconds)
    (86/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.236525155 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.233545441 seconds)
    (88/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.985045532 seconds)
    (89/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.329111485 seconds)
    (90/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.234210586 seconds)
    (91/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.233062433 seconds)
    (92/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.233697442 seconds)
    (93/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.644401754 seconds)
    (94/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.792113775 seconds)
    (95/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.433356614 seconds)
    (96/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.237276688 seconds)
    (97/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.233056711 seconds)
    (98/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.747152277 seconds)
    (99/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.23742547 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.234269242 seconds)
    (101/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.233770271 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.653138917 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.76462351 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.861670777 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.23824475 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.341390459 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.237680957 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.235505109 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.234326268 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.26332532 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.233150501 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.292949621 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.234283997 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.632344527 seconds)
  done (took 351.202982569 seconds)
done (took 697.870747564 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.926334249 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.873623163 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.012568579 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.88961078 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.871847137 seconds)
  done (took 10.747442205 seconds)
done (took 11.922128328 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.42488691 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.425616406 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.294570367 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.4266233 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.263900615 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.44388993 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.405411513 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.254336914 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.339320555 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.313075586 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.339198522 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.285479355 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.263099676 seconds)
  done (took 18.653473905 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.562657064 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.575784691 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.297402045 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.562989628 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.274361879 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.582061723 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.435658178 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.462684115 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.431534465 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.248661837 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.248345136 seconds)
  done (took 16.857118557 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.565826936 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.572012841 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.302311793 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.564816157 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.274992465 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.600104331 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.44703498 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.451808559 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.434021133 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.248245609 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.247635557 seconds)
  done (took 16.883520416 seconds)
done (took 53.569368059 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.244264342 seconds)
  done (took 2.419647995 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.277943212 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.4407813 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.259897483 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.248279379 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.245647883 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.244660687 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.249385822 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.245050069 seconds)
  done (took 11.388725044 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.244083325 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.24366105 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.241451913 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.240766685 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.244841411 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.243795733 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.239990042 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.243334869 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.241069795 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.244947136 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.241729554 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.240595191 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.242760335 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.241067625 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.244047795 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.2422703 seconds)
  done (took 21.056620594 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.244906698 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.240383391 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.24095403 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.242053568 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.242217345 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.241805344 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.24256349 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.241725204 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.242479862 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.242640122 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.24387078 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.242039216 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.242257227 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.241602186 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.242475978 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.242435283 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.241479332 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.241573788 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.246165891 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.242221025 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.242758754 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.241897214 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.24252564 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.242217502 seconds)
  done (took 30.996471439 seconds)
done (took 67.03893216 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.388856937 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.89403637 seconds)
  done (took 9.460114084 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.244744173 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.244669715 seconds)
  done (took 3.668809263 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.245485248 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.245459386 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.245088631 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.244966285 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.245304282 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.245345377 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.244492499 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.244761975 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.245020387 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.2451074 seconds)
  done (took 13.628579066 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.245976457 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.245165491 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.243233447 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.246079055 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.246702266 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.24286554 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.245342232 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.245596329 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.246197868 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.243839002 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.246119869 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.244394597 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.245305363 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.243810427 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.245788784 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.244142921 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.242462809 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.243966707 seconds)
  done (took 23.586187582 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.245803828 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.246583005 seconds)
  done (took 3.672292392 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.244198713 seconds)
    (2/7) benchmarking "second"...
    done (took 1.244500002 seconds)
    (3/7) benchmarking "month"...
    done (took 1.244443767 seconds)
    (4/7) benchmarking "year"...
    done (took 1.244131251 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.245572437 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.24486931 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.243748731 seconds)
  done (took 9.891076585 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.248235143 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.432022 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.513766179 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.863898124 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.248637192 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.249370161 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.101987057 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.250845585 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.252718242 seconds)
  done (took 14.341438304 seconds)
done (took 79.427691161 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.264312442 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.240883554 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.148824471 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.24719496 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.257906663 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.582233269 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.263487091 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.36224455 seconds)
done (took 37.54909955 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.239364451 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.956765834 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.957873809 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.240514115 seconds)
  done (took 11.335757409 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.23154579 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.206819646 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.233485316 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.289326756 seconds)
  done (took 18.142767817 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.87943573 seconds)
    (2/2) benchmarking "read"...
    done (took 1.577445079 seconds)
  done (took 4.637096286 seconds)
done (took 41.536380575 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.249881621 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.249302634 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.247238767 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.249064671 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.246150632 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.246340837 seconds)
    (7/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.249293733 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.249518902 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.249081159 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.249049811 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.248862044 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.249204824 seconds)
    (13/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.246695764 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.245400728 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.246858869 seconds)
    (16/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.248419863 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.248707886 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.246514808 seconds)
    (19/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.246810691 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.246431536 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.246948873 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.248839148 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.247475234 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.246017724 seconds)
  done (took 31.12998476 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.250563617 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.247275256 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.249485433 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.249166427 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.246769831 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.24880949 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.249462021 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.246241672 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.250239071 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.249190058 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.247430531 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.247903015 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.249130115 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.247657812 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.249308283 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.247237807 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.250651715 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.24751631 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.250341389 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.247585971 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.249058219 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.247251859 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.246890066 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.250780421 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.249397405 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.247781734 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.250017089 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.248384462 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.250667597 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.24834942 seconds)
  done (took 38.64395414 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.256717823 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.258063928 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.250382076 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.251070752 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.250936205 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.250657015 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.251107438 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.250757621 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.251284402 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.251249884 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.250648835 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.251065358 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.250174088 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.251322776 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.251013028 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.250477816 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.250904134 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.250737188 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.25150418 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.250786579 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.250761261 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.251411541 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.25124071 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.250435046 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.250779365 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.251615769 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.251673077 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.25184664 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.251253268 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.25198764 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.252062829 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.251723422 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.251927271 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.251639894 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.252141463 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.252283896 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.256518313 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.258833987 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.252457513 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.252037479 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.252151146 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.25296606 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.251595068 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.25319101 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.252533917 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.251694736 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.25288846 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.25354788 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.253169074 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.252052862 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.252507516 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.253184267 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.252799885 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.252548208 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.252314471 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.252822446 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.25299363 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.253603974 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.253527487 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.252536093 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.253353449 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.254095246 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.253423181 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.253236626 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.254289164 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.253004863 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.254128614 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.25242106 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.253280953 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.25329239 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.253672931 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.253803224 seconds)
  done (took 91.358245806 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.252976633 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.251606853 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.251188965 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.251115053 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.251649302 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.253883588 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.250798248 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.253581453 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.251652801 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.25311623 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.254545397 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.251882405 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.252121579 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.25488784 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.254280452 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.251555906 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.254706794 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.252257338 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.254943949 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.254780589 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.254688552 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.252110296 seconds)
  done (took 28.750916042 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.255527225 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.25562929 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.252369816 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.255087489 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.252708579 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.255217173 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.25593256 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.255620517 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.255893015 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.252988564 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.253304841 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.255379401 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.25359647 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.253370604 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.25260691 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.253180188 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.25566475 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.253419555 seconds)
  done (took 23.765395653 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.253463869 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.253405435 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.255821025 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.253678171 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.253996297 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.256125111 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.252284824 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.256335045 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.255607795 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.253407821 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.256938112 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.256424136 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.257542553 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.254052363 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.255691322 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.254446803 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.256431952 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.252798319 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.256277659 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.254148039 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.253541232 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.256437379 seconds)
  done (took 28.798272102 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.257541206 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.256088512 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.254304975 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.255379421 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.254098759 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.256471155 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.25733588 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.254484115 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.256862361 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.25678803 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.253910893 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.259062644 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.254889459 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.255197675 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.254808892 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.254976632 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.257164627 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.255398916 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.257561189 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.255180632 seconds)
  done (took 26.307862048 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.258331263 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.258062904 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.259634541 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.258775809 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.259320771 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.259290313 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.259635384 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.259582966 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.258240678 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.260130176 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.259947925 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.26055469 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.258819822 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.25972922 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.259793572 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.260067109 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.260117683 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.260004009 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.260581665 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.259545074 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.259175057 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.259610249 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.260330675 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.260694789 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.259367712 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.260111341 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.261086902 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.260443659 seconds)
  done (took 36.461136077 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.260111919 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.258712564 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.256560674 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.256805043 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.256783578 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.256343512 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.256992203 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.257142445 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.258632648 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.256869364 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.259083429 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.25959382 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.259531392 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.259944859 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.259319544 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.260183318 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.259142908 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.257854555 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.257726988 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.256208825 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.260202048 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.259714928 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.260822731 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.257586776 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.258234029 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.260277218 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.257677126 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.257968919 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.260115938 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.258148275 seconds)
  done (took 38.947695116 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.278590925 seconds)
    (2/2) benchmarking "in"...
    done (took 1.278839706 seconds)
  done (took 3.750785339 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.258211564 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.260390445 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.259386313 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.258561267 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.258117078 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.261541352 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.260904373 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.258465965 seconds)
  done (took 11.268178738 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.261131018 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.2604528 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.260614339 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.26106466 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.261796013 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.262598162 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.268501936 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.278900279 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.263481619 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.263338371 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.268885257 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.269407795 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.265144013 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.262668504 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.261108363 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.263948928 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.261732309 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.261976662 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.262971864 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.263099878 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.261223706 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.26501661 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.264660107 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.260483001 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.264266561 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.274088369 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.266514162 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.263493256 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.264234864 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.266552271 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.262703179 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.260393912 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.263430677 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.263020935 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.263139203 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.264159167 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.27157066 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.281358878 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.269454088 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.26462533 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.264133115 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.261601419 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.264797663 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.265543373 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.264658899 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.264558197 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.263693141 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.260106172 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.262670575 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.267948556 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.26808199 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.263353788 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.260825527 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.267501115 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.264787855 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.271032287 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.281755569 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.268120212 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.273379254 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.275397509 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.276907491 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.272395041 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.265823104 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.264542437 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.27444782 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.288726747 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.270773136 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.27940948 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.262600889 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.264736575 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.272435026 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.276847202 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.274457048 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.264465819 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.265169801 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.265187011 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.265437219 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.264496773 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.272387987 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.286237262 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.265453618 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.265307428 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.276510976 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.287715667 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.265453653 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.265297034 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.265753052 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.26482119 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.267431803 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.276111158 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.282898925 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.266010439 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.265460518 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.266217417 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.266695939 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.266445005 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.26557029 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.268239 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.264024646 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.265566214 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.267509187 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.271417724 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.275934532 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.266031261 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.266166269 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.274030868 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.265955899 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.266160528 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.273529347 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.266481781 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.266823028 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.267434436 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.273981848 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.264322162 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.270351606 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.276181971 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.267202411 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.269182171 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.26640915 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.266985743 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.27706995 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.293513689 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.266560536 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.266708821 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.27233403 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.277993769 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.267212485 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.271714929 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.266727828 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.264857665 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.265048528 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.269484128 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.268421617 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.269296937 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.26817868 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.269942335 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.264607174 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.267620664 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.268937537 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.269595654 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.269332711 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.268296268 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.269692009 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.270652013 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.268284013 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.270442969 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.275544929 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.269884549 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.269979558 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.270216017 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.267064997 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.268047127 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.270240862 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.26864936 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.268825776 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.268675793 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.268706608 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.268741678 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.269190665 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.268712469 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.269053047 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.270010422 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.274010083 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.269891599 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.273421001 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.268711413 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.266329531 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.26915464 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.268212484 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.270538946 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.269710849 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.269428747 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.27439497 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.278250194 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.269455621 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.270792864 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.27306973 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.270120104 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.269659199 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.269636016 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.274063687 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.278357969 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.270007623 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.277495795 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.27116082 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.270453454 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.270607388 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.271303984 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.271103531 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.270292376 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.273215074 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.277525246 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.283128472 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.279676891 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.272203373 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.274177478 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.272963005 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.275248061 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.275369619 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.270481733 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.271179668 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.271185312 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.271968208 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.271161333 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.272479776 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.271355588 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.271211402 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.27135585 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.271712478 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.270936589 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.271297446 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.273131354 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.273860312 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.268228746 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.27188393 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.272478529 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.272347679 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.268901498 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.271696311 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.272004491 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.27132736 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.271809002 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.278362177 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.269203158 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.273274216 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.273416878 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.273525914 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.271851037 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.272178769 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.274948866 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.272254363 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.279086951 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.29133961 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.274520432 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.279517707 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.290945135 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.272533894 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.275934902 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.271848862 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.270646127 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.276272582 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.280757901 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.272505814 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.273440815 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.272568119 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.273647123 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.272313614 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.27961133 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.270929777 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.273173771 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.272431455 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.274777649 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.272527856 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.275601077 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.275418875 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.275190678 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.275457798 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.273143714 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.274539904 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.274875162 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.274037122 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.274924436 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.275341013 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.278531319 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.281652018 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.279777366 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.275537926 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.276429052 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.27724514 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.278296507 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.274805928 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.27516616 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.275079582 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.287471096 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.283882937 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.281764335 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.277427687 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.275524524 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.280008953 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.27622081 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.279765371 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.275243959 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.2765578 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.275157927 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.274623334 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.272936124 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.276716702 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.274976138 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.275686544 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.276745333 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.279180624 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.274733255 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.276125022 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.274902137 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.275927085 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.275477037 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.275556917 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.276182021 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.278163443 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.27691126 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.275948 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.276532747 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.282812918 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.294186557 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.277520794 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.275870748 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.27535581 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.275842665 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.276542077 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.275599904 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.280026097 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.284751203 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.280824947 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.285932277 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.278408458 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.286120857 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.276514281 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.280371299 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.284239848 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.273412031 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.276533727 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.276784117 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.277032991 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.284605926 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.295139512 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.27805697 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.281053988 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.277213628 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.276897003 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.277176618 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.277683388 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.278140157 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.277366635 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.286502274 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.297268942 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.281826382 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.280812316 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.274692527 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.276504509 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.277936798 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.276604797 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.281748052 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.277834918 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.277837426 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.27752933 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.279453496 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.277680005 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.27863244 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.278512556 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.276970427 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.277900008 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.284775485 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.297136209 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.282036504 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.277513646 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.286128687 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.278164234 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.285585487 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.296745184 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.279675861 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.278215416 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.278095825 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.280812496 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.279143266 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.279244586 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.279001075 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.279361937 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.281907155 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.279798212 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.280737507 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.278374284 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.278600165 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.278461484 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.28971218 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.302689766 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.281077262 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.283626433 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.27539047 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.281791685 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.283456475 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.279743695 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.278057819 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.282994035 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.290896893 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.28771953 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.280375617 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.279574537 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.281013935 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.280314985 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.279550583 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.279158622 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.280089835 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.280458354 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.28157908 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.27908433 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.283860403 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.280270859 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.281094639 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.281639776 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.282269907 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.290643732 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.279596218 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.282037687 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.280630211 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.280327388 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.280952832 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.281017913 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.280532989 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.281611444 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.280628278 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.282509605 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.287937144 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.289023249 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.285020921 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.281014009 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.281218343 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.281754472 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.281554373 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.28174969 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.28075438 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.282081716 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.283124751 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.281944104 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.28394489 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.281889012 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.281830639 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.283592552 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.282025886 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.285183823 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.289690197 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.282623599 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.279372804 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.282833483 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.281999677 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.282522387 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.283099186 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.289979915 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.285313988 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.29331322 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.291413923 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.286351896 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.28317076 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.286329217 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.290813329 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.282457905 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.283472916 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.282387039 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.284694973 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.283719076 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.286269812 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.282518462 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.28986417 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.283689059 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.282046764 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.291126722 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.302803247 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.283372582 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.285743049 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.289057602 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.283808166 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.280535447 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.284193963 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.283843598 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.290864836 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.304031587 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.283660389 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.286434286 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.282327319 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.286207417 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.287915028 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.284104649 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.285504335 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.281253626 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.285555807 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.284173165 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.284129067 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.281828699 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.284892769 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.284598402 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.288212294 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.291581184 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.281463517 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.287320389 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.285049907 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.28564945 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.284815111 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.285225181 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.282954649 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.282476108 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.2857378 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.284699295 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.286159188 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.288360534 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.285460931 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.286994152 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.287293365 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.285215792 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.289535959 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.296529701 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.292687696 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.283864806 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.286625842 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.286766718 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.287885807 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.286000013 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.285981767 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.287075729 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.288412111 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.28572915 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.286003682 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.286033127 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.290228735 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.302394565 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.304267655 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.286528838 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.28719747 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.289211419 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.287188625 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.283850611 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.285576803 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.288544441 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.290431682 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.29363567 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.286947476 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.293856462 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.304398194 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.288564882 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.291644971 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.29041364 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.294645974 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.289726442 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.286093802 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.286158715 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.292497259 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.303366051 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.286294293 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.297333639 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.317150043 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.305740626 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.288730136 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.287815429 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.286603671 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.287124386 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.288852779 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.287496492 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.288386797 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.288263806 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.288161595 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.289831357 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.294250309 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.288473096 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.287701865 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.287293294 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.28832365 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.290089328 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.285089756 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.287912832 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.287472945 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.288062371 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.28783612 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.288089193 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.288288719 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.30050671 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.299038228 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.288674118 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.289377551 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.286803592 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.292531885 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.291228557 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.299742289 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.297283235 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.288984567 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.289106726 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.292186356 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.288492258 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.286999228 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.290352987 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.288580302 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.288829217 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.286768919 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.30170431 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.298232809 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.294586736 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.289066269 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.289916638 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.290125253 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.291591109 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.289162318 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.289824403 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.292165939 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.291518656 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.294475335 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.290189681 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.290235917 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.29272745 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.29756736 seconds)
  done (took 763.050437907 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.287515793 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.287426041 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.286390529 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.287424356 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.287122586 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.287144585 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.287355195 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.288030747 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.288653645 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.287955157 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.288462113 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.288847265 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.287738621 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.288514169 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.288604531 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.288489471 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.288278405 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.288644869 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.288253111 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.288709502 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.287461888 seconds)
  done (took 28.269499183 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.291900408 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.28855806 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.28802594 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.291553333 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.288282897 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.29055148 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.289084714 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.290943105 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.291737473 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.288361918 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.290959955 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.291034103 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.288770744 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.288895738 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.288647 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.291120331 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.291793443 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.28837286 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.290799132 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.289596004 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.290542129 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.290452766 seconds)
  done (took 29.603072101 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.292721299 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.291748029 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.292122137 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.28966185 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.292104299 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.288445892 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.29176906 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.292580147 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.293324875 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.293589423 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.291387653 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.29438616 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.300122429 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.297148067 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.294978344 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.292083055 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.436243408 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.293523805 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.293369325 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.293278705 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.290560309 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.298701313 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.289351497 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.289734777 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.293624677 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.292720957 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.293318762 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.293327701 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.292585653 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.295066427 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.297603541 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.292974808 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.29317772 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.294477704 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.293139335 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.295282236 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.297347277 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.293870097 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.290642633 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.294249508 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.303454881 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.315164741 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.293762439 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.300639184 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.293326776 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.293486345 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.298340036 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.301997846 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.293109935 seconds)
  done (took 64.794390475 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.294036709 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.294465028 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.292291082 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.293572604 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.294617161 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.294009658 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.293933818 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.294092575 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.291154569 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.291896912 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.294828386 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.292621642 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.292602177 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.294500272 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.296011567 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.291300803 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.29220103 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.292303555 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.292127001 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.292105694 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.292443175 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.295466614 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.294806455 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.291857175 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.294631985 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.292128485 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.292853288 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.295693948 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.293181812 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.293220466 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.295246765 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.295403783 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.296167922 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.293125793 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.294111577 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.296632754 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.295814885 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.293328814 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.295853928 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.294451713 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.297093176 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.296932945 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.296572168 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.296317662 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.29342378 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.294411703 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.294201637 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.294420907 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.294165598 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.29697452 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.297307188 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.293752703 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.295861449 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.293810085 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.295315395 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.29673415 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.294403246 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.295073731 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.296730371 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.294379669 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.29378474 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.297000306 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.295228265 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.296639109 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.296607989 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.29497399 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.295510757 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.298112383 seconds)
  done (took 89.255073864 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.298090775 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.297643252 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.297289292 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.298364426 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.298693041 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.297985046 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.29757311 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.298189176 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.297619192 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.298126558 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.298962162 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.297789969 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.297834772 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.297923238 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.297781964 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.297914533 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.298925908 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.298347899 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.297718931 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.298592257 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.298404118 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.29809669 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.298235359 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.298872998 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.300111743 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.298470208 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.297536633 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.29880335 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.298367134 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.299481704 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.299387937 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.298619768 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.298951418 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.298493199 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.299977885 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.298607543 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.297924875 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.299650126 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.2993776 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.298319961 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.299153747 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.299639822 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.299497872 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.299556756 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.300042515 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.299574225 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.299812652 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.300299396 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.299564828 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.30034075 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.299726108 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.299162742 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.300037216 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.300498419 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.301199582 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.299941093 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.300013115 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.30051285 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.301040998 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.300598737 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.300826952 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.301156947 seconds)
  done (took 81.770111871 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.300829269 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.300937464 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.297987229 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.29777547 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.299681708 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.297486007 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.300569057 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.299993163 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.300397789 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.300004876 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.299585785 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.298056121 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.298011505 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.300676647 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.297540366 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.298323066 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.297358193 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.298642082 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.300916296 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.297183109 seconds)
  done (took 27.212578412 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.298276158 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.301950028 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.29770934 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.29906279 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.301022352 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.298456933 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.30194927 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.300698383 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.29887004 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.300904161 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.30066798 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.301248872 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.298993729 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.299136534 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.301172105 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.299117744 seconds)
  done (took 22.031960056 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.299932067 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.301977423 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.301654361 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.301497801 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.299499124 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.299249057 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.300969932 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.299666201 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.300313833 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.30245953 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.302659371 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.302551647 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.302447796 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.302253521 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.299574416 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.303680714 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.30045048 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.300867739 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.303052744 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.303793988 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.302240827 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.299909187 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.30217889 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.302213447 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.300527984 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.301172662 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.301191 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.300707263 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.300605721 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.302088777 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.301081106 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.301260231 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.29997157 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.301283168 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.303047312 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.301721829 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.303209987 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.303492886 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.304406632 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.303810238 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.303407491 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.301777141 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.302802417 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.30317101 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.300833159 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.303984771 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.301934134 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.301770548 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.301194149 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.301301856 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.303709732 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.304276691 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.303313268 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.304844028 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.303503741 seconds)
  done (took 72.841361961 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.303531723 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.304775572 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.30205337 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.304788617 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.304286311 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.301505232 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.304977437 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.301434978 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.302304136 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.303943811 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.30316607 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.304502012 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.302554343 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.30419335 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.302717211 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.304945043 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.30239687 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.302261945 seconds)
  done (took 24.695752694 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.303179886 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.303116731 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.305143133 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.302499905 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.302483612 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.306965556 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.302520008 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.304081183 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.304401274 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.302699984 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.302516619 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.306181361 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.304762992 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.305965909 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.302317932 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.302428771 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.305387604 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.305127468 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.302309007 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.303470032 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.305249237 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.305528437 seconds)
  done (took 29.923903098 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.304828707 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.304324251 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.321630814 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.345742275 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.335123064 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.305346867 seconds)
  done (took 9.152926164 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.30272415 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.303903678 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.302254713 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.304846633 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.305603519 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.302515484 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.303290499 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.302607289 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.306119117 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.302567204 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.302996427 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.304886388 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.305858018 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.303436548 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.306355228 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.30433042 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.303523325 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.302937469 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.303877332 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.30573623 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.303059629 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.305659317 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.302748482 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.302045491 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.303130178 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.30223701 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.305288393 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.30380135 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.302912176 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.306174713 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.303738914 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.300464304 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.304135274 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.301714306 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.305040715 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.304423484 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.301067889 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.304987905 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.303116067 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.299729018 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.303066524 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.302968403 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.302027706 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.300424895 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.302775535 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.29929238 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.297929511 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.297754979 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.298224968 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.300585446 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.299803667 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.298441496 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.301124091 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.299570389 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.300290666 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.300323978 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.297682728 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.297863059 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.299881319 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.297807327 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.298777348 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.298768698 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.297013402 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.297454733 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.298994088 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.295460099 seconds)
  done (took 87.168833069 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.296648167 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.297904425 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.29651594 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.298064418 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.297020963 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.296569721 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.29823946 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.296507506 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.298702034 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.296184004 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.298518395 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.296522643 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.296185992 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.296960783 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.297405448 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.296445052 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.297055339 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.296183964 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.296984248 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.29959732 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.296689833 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.295992326 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.297120513 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.29708178 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.297900156 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.299376515 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.296572719 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.297287935 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.296896259 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.29637906 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.296415611 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.297599852 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.296646112 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.297595887 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.296590579 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.296991663 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.296734051 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.295957649 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.296169468 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.299644664 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.297297273 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.299436947 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.298207695 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.296722332 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.298625956 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.297915819 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.297569668 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.298105702 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.297800004 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.297812955 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.298160995 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.297923033 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.298086293 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.297988701 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.297466622 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.298045383 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.29751254 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.297834942 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.297701238 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.300206951 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.298434746 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.298112245 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.301716168 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.29782147 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.298945186 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.298693144 seconds)
  done (took 86.873410491 seconds)
done (took 1777.009383116 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.29096176 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.308015484 seconds)
  done (took 13.830609742 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.463204932 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.415220578 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.299532619 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.353304075 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.300078643 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.29304677 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.31698055 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.300184451 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.299195234 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.299194404 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.301172171 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.487321214 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.35357498 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.299026714 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.299635718 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.392660253 seconds)
  done (took 42.707376378 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.327337406 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.304920012 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.419232715 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.322730488 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.327135723 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.489627914 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.361441678 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.304946235 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.477637662 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.345533803 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.929386106 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.331080342 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.302687486 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.457263737 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.325728371 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.490724002 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.552481424 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.863768385 seconds)
  done (took 30.166114283 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.756260105 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.300889491 seconds)
  done (took 9.289136014 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.341536636 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.357518968 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.301370115 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.299183344 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.316489476 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.347674607 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.316867432 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.335932836 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.33405607 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.334390496 seconds)
  done (took 64.522731581 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.326036079 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.305218241 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.305410954 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.302834411 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.29856778 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.298792432 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.302417094 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.296859431 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.921142596 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.43203155 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.322848093 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.307970443 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.300585471 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.305421256 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.300540401 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.340829401 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.433623032 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.300891638 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.29973062 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.307071185 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.301891299 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.387717128 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.348457014 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.304064629 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.428732966 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.940551553 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.310328971 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.309964851 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.413135996 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.301536749 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.30364105 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.302929515 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.306554328 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.87314072 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.758592212 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.315667254 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.329109784 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.312274608 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.300497109 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.432910134 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.304576673 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.309220318 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.297689976 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.726211423 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.464894218 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.423398669 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.600705817 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.309540745 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.305649455 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.366977664 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.306731936 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.305456747 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.334735343 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.07389545 seconds)
  done (took 109.65581568 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.335186183 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.792830674 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.46815409 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.322278111 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.095342045 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.000586976 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.301771711 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.586263888 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.343735735 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.298089254 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.634583999 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.808908739 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.304112528 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.312742917 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.970208397 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.307839767 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.299508993 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.034959138 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.300641533 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.299924661 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.716354739 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.319634968 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.302729108 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.461335303 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.339176306 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.771147479 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.763519913 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.636569563 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.302462278 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.297887223 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.769332514 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.302969762 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.337979713 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.299789225 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.57720053 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.672029783 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.650676084 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.307304351 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.320549761 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.300711817 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.298274723 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.767522473 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.655506171 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.303184636 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.30415136 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.789276005 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.302040246 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.300891579 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.307302021 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.499617025 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.262403608 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.298561859 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.760450924 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.301391659 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.646521711 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.348637391 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.340287982 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.784403361 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.29772215 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.270891372 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.321837626 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.29941738 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.304741516 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.309731649 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.297878136 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.652957712 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.413874453 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.300605209 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.651874971 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.75943561 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.30038783 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.830313197 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.223452189 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.319357791 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.382627556 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.307064621 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.868785039 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.791490586 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.310545795 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.296563528 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.634422317 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.302044743 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.620230903 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.315553388 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.296102224 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.72360282 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.318645762 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.346654156 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.296681428 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.301006208 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.934924693 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.300125548 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.560492876 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.333966926 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.295375413 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.295224294 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.31746064 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.297454571 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.296146342 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.299776611 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.82674124 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.308452607 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.602181244 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.320060273 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.300774488 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.300171481 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.296219982 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.298660446 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.512793013 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.740412763 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.305247396 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.296241939 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.297755283 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.304944766 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.436771707 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.299137892 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.60396135 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.300513994 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.296959664 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.301067084 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.031147021 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.338923664 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.296470482 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.301420288 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.154095798 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.512284409 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.318465346 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.301062208 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.297808808 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.315453792 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.669509678 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.302453106 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.333405428 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.30145344 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.997863735 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.307387911 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.320088495 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.922897754 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.301245474 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.312376046 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.301230226 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.297375992 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.604002092 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.578448444 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.34721341 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.301130748 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.30224873 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.97981107 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.328028987 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.446870124 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.321636438 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.311339848 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.499143058 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.719264081 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.299221766 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.883956952 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.298908454 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.512633726 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.302436528 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.618565454 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.784826373 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.302436052 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.30772611 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.992448792 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.979986344 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.963316963 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.299182805 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.632802238 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.277513091 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.749599365 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.299015093 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.29886821 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.749547697 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.302400509 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.304255265 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.299980286 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.299501015 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.443910467 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.475955287 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.048434549 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.30768798 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.763168009 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.326245063 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.301103824 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.325617657 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.303947975 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.653781639 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.381870154 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.305963161 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.338661265 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.301703623 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.304110205 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.776590488 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.166995269 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.304622279 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.455044476 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.941792931 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.305186662 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.302866647 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.968890997 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.59888769 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.810660177 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.329989204 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.612345059 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.303871239 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.341624705 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.02653013 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.329903945 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.775218234 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.306409362 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.305689374 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.894506233 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.306126292 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.665803037 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.302330639 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.314202606 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.826368282 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.30534719 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.303717196 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.678417697 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.305656932 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.548586013 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.306262544 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.331687391 seconds)
  done (took 1104.696140845 seconds)
done (took 1376.100130996 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.302529086 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.306842207 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.290690529 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.30523786 seconds)
  done (took 26.444755097 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.312858345 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.310053962 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.314548119 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.309322502 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.309958791 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.309645016 seconds)
  done (took 9.106444156 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.385676883 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.306947382 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.305796649 seconds)
  done (took 19.238222895 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.523438588 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.563609295 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.669800094 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.453639122 seconds)
  done (took 10.450861669 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.311318171 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.311304053 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.310597222 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.311557545 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.313107028 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.315950878 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.31103585 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.311625458 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.314869809 seconds)
  done (took 13.050673294 seconds)
  (6/6) benchmarking "26942"...
  done (took 5.165564053 seconds)
done (took 84.696950621 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.290809588 seconds)
    (2/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.716879536 seconds)
    (3/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.59937544 seconds)
    (4/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.495236333 seconds)
    (5/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.334928152 seconds)
    (6/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.306091849 seconds)
    (7/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.318782035 seconds)
    (8/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.557279578 seconds)
    (9/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.134066895 seconds)
    (10/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.344210772 seconds)
    (11/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.312245334 seconds)
    (12/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.303446079 seconds)
    (13/309) benchmarking ("sort", Float32, false)...
    done (took 5.325250528 seconds)
    (14/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.333189402 seconds)
    (15/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.658627039 seconds)
    (16/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.22577541 seconds)
    (17/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.305458654 seconds)
    (18/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.339314025 seconds)
    (19/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.373360731 seconds)
    (20/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.409321982 seconds)
    (21/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.367992613 seconds)
    (22/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.616971703 seconds)
    (23/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.758424464 seconds)
    (24/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.390855502 seconds)
    (25/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.695887357 seconds)
    (26/309) benchmarking ("sort", Float64, false)...
    done (took 5.585813591 seconds)
    (27/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.402687552 seconds)
    (28/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.047608746 seconds)
    (29/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.708715223 seconds)
    (30/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.873282717 seconds)
    (31/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.438945385 seconds)
    (32/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.065233024 seconds)
    (33/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.523553097 seconds)
    (34/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.733077076 seconds)
    (35/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.04674754 seconds)
    (36/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.408094678 seconds)
    (37/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.370963485 seconds)
    (38/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.662990141 seconds)
    (39/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.323097467 seconds)
    (40/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.30893458 seconds)
    (41/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.415725484 seconds)
    (42/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.308606018 seconds)
    (43/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.305689049 seconds)
    (44/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.923237213 seconds)
    (45/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.294308159 seconds)
    (46/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.06346903 seconds)
    (47/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.417927748 seconds)
    (48/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.908059015 seconds)
    (49/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.427594758 seconds)
    (50/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.563085653 seconds)
    (51/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.307912138 seconds)
    (52/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.331743787 seconds)
    (53/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.556495652 seconds)
    (54/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.390573165 seconds)
    (55/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.364001247 seconds)
    (56/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.651828178 seconds)
    (57/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.310772232 seconds)
    (58/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.957138832 seconds)
    (59/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.14819332 seconds)
    (60/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.681270976 seconds)
    (61/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.295849361 seconds)
    (62/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.559525933 seconds)
    (63/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.049514888 seconds)
    (64/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.695894457 seconds)
    (65/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.45719871 seconds)
    (66/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.352442653 seconds)
    (67/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.059375017 seconds)
    (68/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.446979252 seconds)
    (69/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.866046185 seconds)
    (70/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.302304772 seconds)
    (71/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.26556607 seconds)
    (72/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.307851023 seconds)
    (73/309) benchmarking ("sort", Int64, false)...
    done (took 5.486924257 seconds)
    (74/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.295057392 seconds)
    (75/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.189651278 seconds)
    (76/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.336202688 seconds)
    (77/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.392645065 seconds)
    (78/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.302932642 seconds)
    (79/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.187454692 seconds)
    (80/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.430401727 seconds)
    (81/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.940106448 seconds)
    (82/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.357496748 seconds)
    (83/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.799777574 seconds)
    (84/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.311706327 seconds)
    (85/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.792950759 seconds)
    (86/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.241758951 seconds)
    (87/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.210401641 seconds)
    (88/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.324877818 seconds)
    (89/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.296683504 seconds)
    (90/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.154506388 seconds)
    (91/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.693807137 seconds)
    (92/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.593141791 seconds)
    (93/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.138750798 seconds)
    (94/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.1880269 seconds)
    (95/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.916889395 seconds)
    (96/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 5.841134083 seconds)
    (97/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.375124544 seconds)
    (98/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.525050673 seconds)
    (99/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.321084541 seconds)
    (100/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.335293903 seconds)
    (101/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.164082314 seconds)
    (102/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.454025725 seconds)
    (103/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.312210651 seconds)
    (104/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.333509301 seconds)
    (105/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.309043635 seconds)
    (106/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.785914638 seconds)
    (107/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.736650954 seconds)
    (108/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.657175797 seconds)
    (109/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.127768223 seconds)
    (110/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.308700261 seconds)
    (111/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.707601996 seconds)
    (112/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 5.401925997 seconds)
    (113/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.310956943 seconds)
    (114/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.641788239 seconds)
    (115/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.373943454 seconds)
    (116/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.568138666 seconds)
    (117/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.318271514 seconds)
    (118/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.408128542 seconds)
    (119/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.343640936 seconds)
    (120/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.380841955 seconds)
    (121/309) benchmarking ("sort", Int8, false)...
    done (took 4.325669699 seconds)
    (122/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.337773351 seconds)
    (123/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.967366871 seconds)
    (124/309) benchmarking ("sort", Bool, false)...
    done (took 1.82973053 seconds)
    (125/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.335391069 seconds)
    (126/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.310609419 seconds)
    (127/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.337173592 seconds)
    (128/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.587615899 seconds)
    (129/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.394621103 seconds)
    (130/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.327821367 seconds)
    (131/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.339717273 seconds)
    (132/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.053984287 seconds)
    (133/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.208462205 seconds)
    (134/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.566186768 seconds)
    (135/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.335482599 seconds)
    (136/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.097239034 seconds)
    (137/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.956965563 seconds)
    (138/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.876858415 seconds)
    (139/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.39636246 seconds)
    (140/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.362119393 seconds)
    (141/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.779267109 seconds)
    (142/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.324177809 seconds)
    (143/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.13499939 seconds)
    (144/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.310500494 seconds)
    (145/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.454930015 seconds)
    (146/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.412553578 seconds)
    (147/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.292180506 seconds)
    (148/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.671378283 seconds)
    (149/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.759654005 seconds)
    (150/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.623753077 seconds)
    (151/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.054299856 seconds)
    (152/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.337462977 seconds)
    (153/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.396348218 seconds)
    (154/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.393144635 seconds)
    (155/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.915548237 seconds)
    (156/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.966033493 seconds)
    (157/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.591099611 seconds)
    (158/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.365256638 seconds)
    (159/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.640802909 seconds)
    (160/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.398090528 seconds)
    (161/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.581466021 seconds)
    (162/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.370739491 seconds)
    (163/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.333649427 seconds)
    (164/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.374897747 seconds)
    (165/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.3135231 seconds)
    (166/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.09291283 seconds)
    (167/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.087426659 seconds)
    (168/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.084079908 seconds)
    (169/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.918271516 seconds)
    (170/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.341821436 seconds)
    (171/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.297687201 seconds)
    (172/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 3.903497344 seconds)
    (173/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.920146724 seconds)
    (174/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.527396435 seconds)
    (175/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.693567498 seconds)
    (176/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.392384289 seconds)
    (177/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.328625388 seconds)
    (178/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.312522293 seconds)
    (179/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.434663994 seconds)
    (180/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.475254496 seconds)
    (181/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.666785399 seconds)
    (182/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.320171467 seconds)
    (183/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.065641945 seconds)
    (184/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.352367466 seconds)
    (185/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.792954257 seconds)
    (186/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.723801614 seconds)
    (187/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.542013052 seconds)
    (188/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.339041122 seconds)
    (189/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.33901924 seconds)
    (190/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.338956531 seconds)
    (191/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.35568525 seconds)
    (192/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.681618865 seconds)
    (193/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.311294031 seconds)
    (194/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.88773539 seconds)
    (195/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.344500629 seconds)
    (196/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.725067416 seconds)
    (197/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.388907139 seconds)
    (198/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.623653718 seconds)
    (199/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.627592266 seconds)
    (200/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.560164784 seconds)
    (201/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.862104934 seconds)
    (202/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.363517234 seconds)
    (203/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.61888239 seconds)
    (204/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.304327181 seconds)
    (205/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 4.187224652 seconds)
    (206/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.438166577 seconds)
    (207/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.336547316 seconds)
    (208/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.89200045 seconds)
    (209/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.902051045 seconds)
    (210/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.701446647 seconds)
    (211/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.908566043 seconds)
    (212/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.515500144 seconds)
    (213/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.027209211 seconds)
    (214/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.383891929 seconds)
    (215/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.535919636 seconds)
    (216/309) benchmarking ("sort", BigInt, false)...
    done (took 6.313349028 seconds)
    (217/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.42240729 seconds)
    (218/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.303035697 seconds)
    (219/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.416889545 seconds)
    (220/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.875333734 seconds)
    (221/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.856065362 seconds)
    (222/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.340707931 seconds)
    (223/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.943978138 seconds)
    (224/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.683775595 seconds)
    (225/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.171699722 seconds)
    (226/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.725177093 seconds)
    (227/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.381567413 seconds)
    (228/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.672836264 seconds)
    (229/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.357943793 seconds)
    (230/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.438659977 seconds)
    (231/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.228098774 seconds)
    (232/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.388839565 seconds)
    (233/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.325269156 seconds)
    (234/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.413905703 seconds)
    (235/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.97382177 seconds)
    (236/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.135422838 seconds)
    (237/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.739234812 seconds)
    (238/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.522325714 seconds)
    (239/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.316047295 seconds)
    (240/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.517841638 seconds)
    (241/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.761904452 seconds)
    (242/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 4.215862246 seconds)
    (243/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.319538629 seconds)
    (244/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.33283198 seconds)
    (245/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.382638048 seconds)
    (246/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.316500125 seconds)
    (247/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.712803602 seconds)
    (248/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.890803542 seconds)
    (249/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.389625637 seconds)
    (250/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.419059231 seconds)
    (251/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.341299128 seconds)
    (252/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.890969991 seconds)
    (253/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.319055468 seconds)
    (254/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.341825918 seconds)
    (255/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.801884966 seconds)
    (256/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.532872019 seconds)
    (257/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.629077734 seconds)
    (258/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.315780475 seconds)
    (259/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.690509947 seconds)
    (260/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.927980674 seconds)
    (261/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.162661024 seconds)
    (262/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.345634545 seconds)
    (263/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.302372852 seconds)
    (264/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.329373478 seconds)
    (265/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.328441192 seconds)
    (266/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.334379954 seconds)
    (267/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.697633304 seconds)
    (268/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.322008594 seconds)
    (269/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.344050972 seconds)
    (270/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.462839141 seconds)
    (271/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.318980335 seconds)
    (272/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.554429516 seconds)
    (273/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.568309114 seconds)
    (274/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.443443008 seconds)
    (275/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.801696006 seconds)
    (276/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.092069013 seconds)
    (277/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.663528694 seconds)
    (278/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.345754502 seconds)
    (279/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.443745419 seconds)
    (280/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.913175514 seconds)
    (281/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.172900497 seconds)
    (282/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.401664507 seconds)
    (283/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.40191621 seconds)
    (284/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.64823877 seconds)
    (285/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.584399906 seconds)
    (286/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.416850985 seconds)
    (287/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.418367529 seconds)
    (288/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.316471239 seconds)
    (289/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.466352707 seconds)
    (290/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.531442473 seconds)
    (291/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.383093614 seconds)
    (292/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.076292768 seconds)
    (293/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.358554861 seconds)
    (294/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.212505495 seconds)
    (295/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.455492626 seconds)
    (296/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.046478922 seconds)
    (297/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.333872372 seconds)
    (298/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.691598284 seconds)
    (299/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.551850723 seconds)
    (300/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.74304085 seconds)
    (301/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.343815966 seconds)
    (302/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.334157924 seconds)
    (303/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.78860592 seconds)
    (304/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.722908725 seconds)
    (305/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.351218438 seconds)
    (306/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.706074483 seconds)
    (307/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.797225194 seconds)
    (308/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.34165551 seconds)
    (309/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.305856612 seconds)
  done (took 916.083607699 seconds)
done (took 917.326011869 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.350234808 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.343503371 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.326576443 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.348551169 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.439727641 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.356247332 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.337954383 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.329848375 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.374736739 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.377085004 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.325967875 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.354645541 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.328513605 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.328653345 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.326208324 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.342612739 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.392032009 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.331138196 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.346066478 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.336131846 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.344603315 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.327187599 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.376938611 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.354593655 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.331459825 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.329749486 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.330746931 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.347483513 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.439593427 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.331115082 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.330952902 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.339142035 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.392891127 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.329503117 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.322738877 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.349140573 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.339929573 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.337901722 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.332222587 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.361030808 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.793268664 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.331475246 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.330644201 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.330307351 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.329900813 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.334120556 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.331214869 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.336745208 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.342771717 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.343909394 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.803886877 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.347985695 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.333402714 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.331229275 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.340403918 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.329459603 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.333456859 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.34641774 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.349785319 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.346723823 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.384295943 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.338910065 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.33147697 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.347549856 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.337834626 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.852077631 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.328928365 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.336216819 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.804349352 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.338690177 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.850849325 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.342953676 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.331740964 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.344483686 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.362800572 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.399100625 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.328071622 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.329915237 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.338932165 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.330246663 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.340937591 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.344554605 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.336320026 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.332098427 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.345175122 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.359248291 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.340566371 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.33343564 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.339797051 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.350960448 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.339336247 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.342713113 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.335081413 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.32640211 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.340842549 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.335334663 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.336045471 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.334868693 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.336684599 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.342895746 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.804218662 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.352053685 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.328172809 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.329339154 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.331512046 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.346013702 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.810105426 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.337032966 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.35450274 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.379512768 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.335189681 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.392976974 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.339349491 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.349707177 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.342221774 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.336492721 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.328521487 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.391343607 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.821719792 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.351862238 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.334842483 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.331989379 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.349748974 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.333795138 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.330484301 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.404726669 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.337191046 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.347824872 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.454187219 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.344778418 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.365891026 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.332352701 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.336331924 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.366308559 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.349455368 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.365803282 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.336820127 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.349876281 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.350103593 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.331104366 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.344885077 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.345291213 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.335217747 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.3400602 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.328741209 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.36375528 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.347513672 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.347450917 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.355303985 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.45575366 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.332272693 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.393620911 seconds)
done (took 225.734979317 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.396758734 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.335099796 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.42661526 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.332991697 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.432800407 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.431170216 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.330355208 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.329894643 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.330100895 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.709736129 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.330074959 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.332856235 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.329939039 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.330510899 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.415136427 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.332804272 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.331103642 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.713066515 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.334931051 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.405394846 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.334024989 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.331195779 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.333814705 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.756723114 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.332815542 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.329740811 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.403912447 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.333375866 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.679398755 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.325458992 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.329910257 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.716592826 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.425033948 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.351879486 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.343920808 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.340224612 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.434922012 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.351244625 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.417496234 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.418066946 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.428438156 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.372986486 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.32777914 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.328595367 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.335729848 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.336060682 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.332436039 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.360809913 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.33435689 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.332819121 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.674977933 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.344536436 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.342611344 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.33327248 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.332824623 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.355273756 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.333093062 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.336184843 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.426084532 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.338021636 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.399231716 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.718014771 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.757795537 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.336341662 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.33398861 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.334108109 seconds)
  done (took 148.651641658 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.404078181 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.410437051 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.448171584 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.336126127 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.386612895 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.451952646 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.33749245 seconds)
  done (took 11.039874349 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.342253533 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.335542352 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.386659008 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.384902196 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.337582065 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.484690276 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.33539919 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.347999756 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.334327358 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.389785128 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.337163383 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.336608943 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.343313974 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.33814811 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.385043123 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.347474161 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.450736723 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.337861198 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.337937421 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.487641028 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.334224561 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.34409901 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.389232814 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.348644523 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.337376529 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.343508562 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.905866911 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.338322419 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.335057922 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.336035786 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.334804338 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.375981608 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.337461791 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.333278708 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.334964099 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.454095533 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.338639165 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.335035312 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.338229558 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.334333848 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.337964952 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.339069907 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.339185875 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.334657916 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.33723708 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.360950452 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.338090939 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.338763061 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.33811243 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.337763377 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.389662307 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.338309722 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.335849214 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.335470812 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.393487187 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.345227327 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.340584572 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.336691175 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.338591981 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.335912034 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.489997403 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.385900094 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.338773282 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.386661513 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.338795677 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.33948539 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.338721606 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.339096035 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.396201262 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.339413732 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.387834148 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.336646662 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.493964329 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.363082732 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.340205499 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.342267814 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.342556935 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.341064278 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.332535118 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.345432327 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.336754099 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.340133011 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.345286712 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.337885946 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.338025978 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.442603696 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.448278716 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.337704982 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.353352919 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.347021299 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.337405197 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.393139863 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.340779359 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.337223303 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.392475042 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.455589936 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.393171262 seconds)
  done (took 153.666677365 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.345273646 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.349170115 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.342414947 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.35635251 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.342189842 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.340279213 seconds)
  done (took 9.344359674 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.34311192 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.341777296 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.341521994 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.34135267 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.340529158 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.341498382 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.342256057 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.343711791 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.345644431 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.341910396 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.342088636 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.34243453 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.342393384 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.342316256 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.341603945 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.342557347 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.343279307 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.339204053 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.342256456 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.344202932 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.43814865 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.341959954 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.342933678 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.343216477 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.346940372 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.343267772 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.350189052 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.343265799 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.342087755 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.348864735 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.344652291 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.343855311 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.343830813 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.349109709 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.346899191 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.34554985 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.347046453 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.3434536 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.340468408 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.34376479 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.343639064 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.344187217 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.342871258 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.344434424 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.345173259 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.348955864 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.34758636 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.351018726 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.343919122 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.344354859 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.345032094 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.343744429 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.344036888 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.344737537 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.345131016 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.347911782 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.348161226 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.344295914 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.343260715 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.345996141 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.344803793 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.344193051 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.345902287 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.348201315 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.351407592 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.345217689 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.345303715 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.348072398 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.343759797 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.34515801 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.34523741 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.342430692 seconds)
  done (took 99.166039615 seconds)
done (took 423.130686477 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.680867641 seconds)
  done (took 7.954206243 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.429681309 seconds)
  done (took 7.704624127 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 21.667855197 seconds)
  done (took 22.946082301 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.338672876 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.368909713 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.36284323 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.346898841 seconds)
  done (took 26.690929475 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.829196682 seconds)
  done (took 8.10195649 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.337907991 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.352607879 seconds)
  done (took 13.963517685 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.346080729 seconds)
  done (took 7.62003987 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.027600982 seconds)
  done (took 8.306662586 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.343424483 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.352652864 seconds)
  done (took 14.222489859 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.324355252 seconds)
  done (took 7.597975144 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.384737928 seconds)
  done (took 8.658227888 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.351256708 seconds)
  done (took 7.625545772 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.341850921 seconds)
  done (took 7.615050585 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.53466418 seconds)
  done (took 9.808914771 seconds)
done (took 160.090747087 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.33805176 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.342998635 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.341532561 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.34317567 seconds)
  done (took 26.639259455 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.379130427 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.378259469 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.380092113 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.390187778 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.381490656 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.379783787 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.371911381 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.372094152 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.389015986 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.383939714 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.380229118 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.381628964 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.379190769 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.372301131 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.382939832 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.381400376 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.390871779 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.382011282 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.372074815 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.383411199 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.347251412 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.390928014 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.38335025 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.346407116 seconds)
  done (took 34.355105094 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.54523435 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.417733897 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.500466231 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.399443761 seconds)
  done (took 7.137810878 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.399842388 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.399985681 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.411757779 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.452538228 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.477078589 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.410036983 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.37359218 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.369550813 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.35519124 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.399733319 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.476826024 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.416492236 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.484132475 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.34678638 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.533162444 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.347692931 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.346530612 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.399689061 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.453897873 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.469909418 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.347922222 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.399221391 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.403357695 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.416571298 seconds)
  done (took 35.166967806 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.347946741 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.35456527 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.353316283 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.347489017 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.346531475 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.348216367 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.353267213 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.348859157 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.36978599 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.348642992 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.345202742 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.347512494 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.346527666 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.347017801 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.347209943 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.359683244 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.360827327 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.346666724 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.350906364 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.354227916 seconds)
  done (took 28.302148927 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.342021314 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.196008211 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.694066287 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.598144907 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.342429199 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.345414899 seconds)
  done (took 27.79606868 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.419186859 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.562074153 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.350484607 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.712075307 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.793400371 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.352931163 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.348291714 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.59770858 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.907899969 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.900576009 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.410361293 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.416596283 seconds)
  done (took 20.049553548 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.355275787 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.345719409 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.355202717 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.36281149 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.405033896 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.353307135 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.35686093 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.343617996 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.407992415 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.412811665 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.355992786 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.407697485 seconds)
  done (took 37.743240082 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.432057697 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.389135557 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.293409337 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.157895619 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.510655266 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.555905717 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.128614225 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.817023905 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.351141275 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.618129233 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.352047208 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.437718649 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.601113935 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.353667797 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.348289773 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.35874966 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.572479757 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.857013273 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.347451741 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.388790462 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.373114487 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.351633847 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.57617556 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.376465876 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.555651224 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.322548931 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.605171177 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.122374862 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.63454115 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.358968742 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.355466966 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.344143133 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.618796505 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.008887488 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.442595669 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.35499328 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.124853787 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.891922656 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.330303663 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.476802067 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.355970193 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.350596889 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.355791348 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.345654592 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.27923717 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.352595041 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.825904773 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.35425939 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.056814115 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.345510612 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.356497837 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.439942783 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.350040481 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.916892065 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.436449743 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.351347781 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.343803671 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.351897565 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.917870924 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.935847456 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.359258673 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.283452265 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.806052544 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.497483849 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.99086799 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.447454885 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.35052049 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.351285849 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.28122052 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.454547224 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.366018598 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.493707338 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.372021696 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.996502684 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.071265287 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.349392062 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.280493571 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.92038382 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.36319833 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.287856835 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.575017491 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.122518196 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.282646382 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.293897344 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.281535443 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.067393174 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.357454644 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.762190641 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.356643442 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.813734226 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.360213051 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.364790645 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.372088536 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.57122937 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.233423889 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.346323649 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.357460227 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.478444233 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.369891162 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.818324072 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.28431712 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.352018008 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.604200959 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.560175399 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.355983564 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.364065685 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.573673598 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.361399636 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.366785375 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.358635304 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.362299471 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.952421905 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.360329123 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.935479701 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.367780819 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.124949333 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.106701837 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.360123567 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.451223957 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.35475552 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.601613875 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.136182025 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.250404265 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.415462882 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.351891069 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.348719781 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.500000723 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.201238295 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.253015121 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.351563581 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.360810761 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.362383456 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.351076403 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.2965062 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.361005469 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.36302008 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.130561512 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.574107874 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.365761498 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.627435607 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.284005892 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.497708116 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.360145156 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.572808477 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.57469303 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.352044962 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.609525671 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.362949867 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.352162524 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.365660822 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.369941804 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.447083418 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.372806165 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.364607683 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.609385515 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.35469288 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.355109654 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.496394857 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.132205804 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.352075563 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.357075786 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.263060083 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.967390997 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.330905436 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.359920442 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.240252098 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.366297356 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.418788395 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.358116687 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.361268483 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.183559733 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.255826905 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.358072368 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.350054278 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.577133632 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.362101422 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.493296071 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.43507826 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.569048216 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.975156381 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.367494419 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.287183852 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.064029309 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.045785758 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.353449505 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.54129973 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.352562664 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.362031872 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.363379195 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.940705224 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.969871638 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.355436931 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.417302709 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.362374859 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.363505999 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.359466972 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.353918515 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.163491541 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.962296898 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.365951456 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.366958119 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.496948251 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.367319836 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.288039482 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.870519913 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.35882533 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.352830066 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.128090484 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.388301322 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.417979958 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.842087122 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.612240533 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.122337002 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.366851766 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.531359223 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.389328045 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.353540842 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.369861199 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.364796278 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.372202852 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.365650193 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.364732441 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.421896453 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.795525096 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.923715395 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.092804171 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.920062284 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.309588734 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.361053078 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.259890999 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.829864661 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.292404678 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.011969246 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.547035224 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.832072611 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.301353611 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.576080343 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.584132349 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.131123966 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.368520405 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.583446204 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.301418864 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.366056827 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.370332964 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.567262752 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.390383051 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.354794096 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.286468603 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.659366602 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.628760106 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.355357183 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.456723649 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.827746202 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.35852273 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.135904301 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.354473003 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.725013978 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.538797432 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.987195073 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.744738526 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.362900831 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.375656467 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.842933575 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.364821987 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.882092667 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.004789909 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.358226679 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.578914377 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.295155394 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.367325146 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.365953596 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.358573327 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.679641961 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.362369102 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.614461002 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.367488797 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.29151052 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.360108316 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.915967752 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.210696787 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.362263985 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.358015886 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.118349386 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.36688718 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.650204003 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.370341809 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.158588823 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.362821574 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.292628694 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.29257461 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.050177031 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.359436805 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.333419553 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.873434175 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.795155979 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.431534177 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.388085884 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.207248173 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.613849493 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.371738581 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.971242472 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.58200112 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.230835698 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.383331042 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.458863976 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.360114623 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.347160626 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.255283978 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.594482984 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.272806676 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.581474933 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.314193648 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.266422299 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.35733525 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.573214916 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.258440825 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.372600499 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.614076681 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.071794666 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.365601448 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.085256224 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.38318284 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.359206708 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.373986801 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.816696151 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.369665081 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.429633735 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.368855865 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.370548303 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.369725208 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.539244371 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.373628261 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.364164649 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.373839007 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.453684249 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.986755238 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.168227035 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.136383261 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.987574183 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.117051396 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.986330585 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.375333637 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.359813294 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.369878459 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.295410809 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.509964011 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.886315354 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.633029615 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.489849372 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.927989428 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.384831067 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.369400239 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.379892412 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.57591273 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.635726263 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.230600854 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.371546515 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.02255022 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.242707454 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.372226005 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.572223042 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.879285515 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.942212169 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.484836718 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.36535476 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.839196476 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.637951289 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.451903686 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.361973767 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.95035153 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.374661554 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.732922077 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.370201231 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.376055638 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.512355222 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.371686634 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.02958768 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.37346013 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.517742495 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.135962308 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.457491545 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.62192643 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.837682693 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.372017553 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.989840211 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.112460341 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.627442988 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.433487563 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.373556418 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.47135687 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.509947213 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.373870353 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.246528598 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.362342755 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.205586277 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.07191025 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.372595121 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.99433083 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.627496532 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.360681994 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.373924543 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.389552852 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.372306326 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.58665098 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.094004645 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.588243445 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.373460414 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.365457946 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.933564538 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.993558213 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.378037021 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.29790008 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.36695987 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.613689844 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.601541719 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.388249957 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.817562703 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.074434277 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.942683132 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.336476604 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.384442652 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.366404823 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.117956826 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.994817412 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.184091596 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.882453424 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.023174491 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.377604276 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.642340634 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.369016265 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.364014558 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.66052001 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.369074817 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.380085781 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.379658934 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.991176566 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.150093468 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.379265015 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.478541317 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.304495998 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.590108526 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.082685344 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.304368724 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.375434634 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.562618157 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.36766155 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.496530204 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.377531713 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.378405581 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.369852656 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.120225727 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.644829974 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.370915594 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.358019845 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.35129415 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.386354468 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.376482672 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.641692002 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.372289591 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.041466851 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.715676785 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.622133448 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.371064913 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.353778456 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.370114832 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.367474692 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.087789759 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.338238548 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.969829946 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.95031173 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.37584677 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.380067596 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.372720039 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.582788638 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.578700838 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.37507581 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.381966392 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.379291325 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.386043986 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.273005142 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.133102809 seconds)
  done (took 1600.570149067 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.39016659 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.398156663 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.39324547 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.46882931 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.426925949 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.478149521 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.480499308 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.477615828 seconds)
  done (took 52.815039849 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.368193424 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.524312319 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.397964481 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.37512723 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.380523182 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.380133698 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.850221247 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.379496365 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.379883244 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.379260284 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.377167843 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.380692575 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.064431639 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.381192441 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.379812656 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.361112793 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.379126161 seconds)
  done (took 66.048287795 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.367766375 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.372822667 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.468316219 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.371443624 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.486018297 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.368740368 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.462528871 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.426945775 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.369350633 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.682711803 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.018791278 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.408214873 seconds)
  done (took 80.106705776 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.376824566 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.376338631 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.37576756 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.375760747 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.376627743 seconds)
  done (took 8.184288363 seconds)
done (took 2026.190955773 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.612776877 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.102953509 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.021585565 seconds)
  done (took 5.427219046 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.519440873 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.567083894 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.687368242 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.692979614 seconds)
  done (took 7.771661951 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.660401633 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.740223775 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.56083962 seconds)
  done (took 6.265697469 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.797010494 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.37949059 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.496448375 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.370784481 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.37302001 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.371353983 seconds)
  done (took 20.419949312 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.374369518 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.377647779 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.374300625 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.377476553 seconds)
  done (took 6.810579898 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.357149765 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.080276714 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.360443395 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.373537658 seconds)
  done (took 18.475905746 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.12119771 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.134522066 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.118878862 seconds)
  done (took 7.678968304 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.378831511 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.217036931 seconds)
  done (took 9.900326953 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.677616981 seconds)
  done (took 2.98222902 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.506470703 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.700899596 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.516688555 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.38572291 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.523197541 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.271143092 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 3.044296421 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.612855901 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.369760771 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.586017906 seconds)
  done (took 28.821916874 seconds)
done (took 128.14435798 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.198924796 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.620928356 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.578450179 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.171188699 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.603367016 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.579368776 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.585475574 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.137516834 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.82302134 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.67221141 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.171505528 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.6015711 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.535342767 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.619025589 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.534768744 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.622130034 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.601013985 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.396475905 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.85192343 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.051301559 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.580608259 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.811637283 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.209075906 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.994191153 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.604386993 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.530057613 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.392746485 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.374964122 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.026948517 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.566556871 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.533657438 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.229177302 seconds)
  done (took 195.116525516 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.372657388 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.373074302 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.374856028 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.377779325 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.387309916 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.377612395 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.373249683 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.374009377 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.374108486 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.387337591 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.382803296 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.385137496 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.373791262 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.374361235 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.388859568 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.374192051 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.388486535 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.374392211 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.374045319 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.384253647 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.375915814 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.375661654 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.388513009 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.374882626 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.383163456 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.375800458 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.374638117 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.374866694 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.378048325 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.380899777 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.375881013 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.374778478 seconds)
  done (took 205.41361352 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.374679852 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.374339954 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.374963942 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.374684881 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.375997242 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.377762496 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.391612104 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.387076561 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.373751311 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.374968662 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.375895882 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.375584851 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.377458815 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.386572131 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.380612363 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.37527598 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.375106627 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.374628155 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.375606267 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.386330827 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.37790388 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.376994302 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.376478892 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.394735982 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.390690788 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.378285229 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.376159388 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.375806967 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.3908869 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.388032218 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.376215795 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.376893562 seconds)
  done (took 205.452104724 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.578915867 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.383572755 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.384489231 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.336781759 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.385625194 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.38399547 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.378177897 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.574362462 seconds)
  done (took 14.716339114 seconds)
done (took 622.005350813 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.762569856 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.466553554 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.585418877 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.407818692 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.201958855 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.408968837 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.403728222 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.5781022 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.336224496 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.586370117 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.689347491 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.406380383 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.827161864 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.40543251 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.657860881 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.506262853 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.297945741 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.412182841 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.728082749 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.964217563 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.669156644 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.884356538 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.581735778 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.350663173 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.837449313 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.887374119 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.146252584 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.298076648 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.40635395 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.726551173 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.14133426 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.405343708 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.467678603 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.449132415 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.502841138 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.485468286 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.382890188 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.446951818 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.59080974 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.631329819 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.961495464 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.150284871 seconds)
  done (took 94.349340809 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.374618241 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.375059527 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.37402592 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.374689631 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.37559312 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.373959561 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.373727591 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.372891507 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.375352698 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.373366225 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.373975299 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.37621262 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.374082822 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.374820387 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.374032909 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.373924659 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.374278672 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.37640428 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.374492736 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.373014849 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.375359437 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.374235534 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.375467585 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.374766581 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.375819001 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.374385549 seconds)
  done (took 37.052025561 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.386910297 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.641534389 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.823195216 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.396403919 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.387117949 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.392889995 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.465752765 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.391581729 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.390429586 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.390370631 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.544084779 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.394516665 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.421574449 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.835295682 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.393072474 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.388734344 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.387824773 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.388367636 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.648738326 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.400432778 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.486588937 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.392598594 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.46585442 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.401855776 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.409011023 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.388554365 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.393046245 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.910685585 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.393814358 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.544621359 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.189976698 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.467219197 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.866397285 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.826410853 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.1847319 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.393927241 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.389942724 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.548759925 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.391686919 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.389391012 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.467807645 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.393157409 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.820424045 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.028603305 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.411033022 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.39043039 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.931308648 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.55108227 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.64218998 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.400866646 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.844500453 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.396777797 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.391887587 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.390624718 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.642119285 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.399837199 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.389892695 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.943349736 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.415425294 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.468770131 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.39441335 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.391635787 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.658255025 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.394024708 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.646262197 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.395790428 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.398242785 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.391275682 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.822760027 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.397984008 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.047070006 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.412334174 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.389952022 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.548429887 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.651107455 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.970491174 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.39806837 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.661438542 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.879875505 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.472690863 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.398568394 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.90113081 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.474749603 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.398789421 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.39293572 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.393307516 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.391622082 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.436211956 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.468740695 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.969166697 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.038326913 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.962909482 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.491793302 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.407971724 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.392426011 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.942494917 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.411728664 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.3917823 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.82756886 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.044586469 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.413660188 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.401051256 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.03456148 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.416249082 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.470923117 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.398652511 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.828594061 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.396963142 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.43840933 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.394193142 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.399020326 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.397028739 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.470500986 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.397731223 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.393027464 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.025526681 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.573603304 seconds)
  done (took 182.850798223 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.395169148 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.387419153 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.387965946 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.386526531 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.387097487 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.40122603 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.386653613 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.3867353 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.392299782 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.386494353 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.386889425 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.389102045 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.389399139 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.389160548 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.413258112 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.393748353 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.045081841 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.386749704 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.387653687 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.387534598 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.185929686 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.392741776 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.387863056 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.387478128 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.38715632 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.389553325 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.38841222 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.388818216 seconds)
  done (took 153.69597207 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.395062565 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.977865132 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.398442152 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.528402153 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.420293171 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.39221563 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.526827866 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.457059464 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.399072083 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.393097352 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.392882631 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.706989902 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.399243003 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.907761502 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.585620903 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.531738545 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.910391221 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.396587429 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.393562927 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.393656651 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.531065145 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.409787611 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.698698588 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.959954514 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.397507268 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.980000048 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.389135254 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.396815177 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.394351821 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.980785632 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.398724547 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.711556317 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.477175549 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.458853291 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.989287172 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.93419422 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.922359214 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.548851914 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.398874837 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.393791743 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.394237791 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.38536304 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.985608292 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.401560461 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.397203704 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.980673504 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.417556063 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.397323021 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.405478071 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.394124109 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.457520831 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.461295831 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.718949958 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.993723566 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.478851293 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.420485013 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.530310334 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.800097806 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.40149345 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.92145007 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.387823204 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.987876255 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.403833081 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.38616948 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.396693491 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.401173451 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.54923217 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.535227395 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.933570671 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.40200764 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.931799003 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.553851585 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.399059433 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.397021384 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.398983781 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.98844946 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.934164831 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.553021444 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.537609713 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.597534717 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.391275705 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.396540458 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.387147472 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.47633351 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.400414281 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.991443572 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.938225933 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.402494209 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.399537967 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.399080418 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.398892976 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.576595639 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.99638403 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.480982761 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.930443845 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.735185595 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.717006758 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.404263506 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.458826661 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.401739988 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.719417913 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.403826169 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.456532754 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.867981716 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.719579785 seconds)
  done (took 166.673078574 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.652348241 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.596034899 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.494253283 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.516824571 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.015343258 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.968902364 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.749085368 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.535982683 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.515901868 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.646545124 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.58719042 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.49048152 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.57716596 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.480441097 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.141974474 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.470691536 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.494094211 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.528453639 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.495471611 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.427875054 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.03126892 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.691310304 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.575372189 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.395392281 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.496613529 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.182206792 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.960039707 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.98991968 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.576138115 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.715622344 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.957610087 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.53629493 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.352377998 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.090738544 seconds)
  done (took 67.262901688 seconds)
done (took 703.195656404 seconds)
SAVING RESULT...
DONE!
