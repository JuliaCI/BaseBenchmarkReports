cset: moving following pidspec: 30389
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.356530024 seconds)
loading group "string"... done (took 0.550238079 seconds)
loading group "linalg"... done (took 7.04604365 seconds)
loading group "parallel"... done (took 0.162050704 seconds)
loading group "find"... done (took 1.086471246 seconds)
loading group "tuple"... done (took 1.815220349 seconds)
loading group "dates"... done (took 1.184361663 seconds)
loading group "micro"... done (took 0.212959755 seconds)
loading group "io"... done (took 0.908427184 seconds)
loading group "scalar"... done (took 36.061015769 seconds)
loading group "sparse"... done (took 11.131196155 seconds)
loading group "broadcast"... done (took 0.899182168 seconds)
loading group "union"... done (took 11.775796651 seconds)
loading group "simd"... done (took 4.11112675 seconds)
loading group "random"... done (took 8.453850748 seconds)
loading group "problem"... done (took 1.876468917 seconds)
loading group "array"... done (took 19.711479576 seconds)
loading group "misc"... done (took 1.626814318 seconds)
loading group "sort"... done (took 3.065080698 seconds)
loading group "collection"... done (took 16.406987895 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.487063424 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.123699963 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.115407966 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.118724906 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.145823331 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.114440419 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.123348886 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.083900562 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.781353964 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.14868755 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.118782141 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.415561077 seconds)
done (took 5.077360361 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.173325273 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.082565667 seconds)
    (2/2) benchmarking "String"...
    done (took 0.081683404 seconds)
  done (took 1.305412921 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.06511723 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.122101006 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.066963049 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.066737171 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.067125364 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.0659686 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.06588636 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.065707785 seconds)
  done (took 1.663835792 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.07307988 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.069222907 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.068613602 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.068186896 seconds)
  done (took 1.417856473 seconds)
done (took 5.77647954 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.769457399 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.201969522 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.183412494 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.398845072 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.129259153 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.15450501 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.645511561 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.323952692 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.183944715 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.08199191 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.10479037 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.31861046 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.107713569 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.638919429 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.076744726 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.091159679 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.137504372 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.417078981 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.067701329 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.082285433 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.088721215 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.132063386 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.085612177 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.074494623 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.144109958 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.067791102 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.134382123 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.081222861 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.066864572 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.209417961 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.172436597 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.670410413 seconds)
  done (took 10.220259584 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.096684057 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.097500642 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.068221905 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.13665341 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.097938449 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.069433694 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.070995809 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.067529965 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.087278599 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.127758494 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.089146097 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.101575139 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.065999994 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.069226124 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.084420565 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.204332112 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.07975162 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.081504204 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.070637806 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.075611265 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.119115651 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.078395841 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.078256929 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.077734898 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.129077462 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.182741902 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.099248209 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.097656441 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.068665571 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.08078121 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.115282109 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.126218945 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.066750074 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.066206492 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.124074908 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.094120479 seconds)
  done (took 4.625834586 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.302723277 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.141473882 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.090803858 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.133300994 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.065527278 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.10687585 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.065692907 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.08116772 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.200261269 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.296132563 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.581270229 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.11134348 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.103887755 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067786056 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.068745104 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.067173049 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.35145922 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.108234657 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.104725085 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.080636031 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.069148222 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.068540257 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.344229694 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.067554702 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.063881573 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.06814893 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.057794212 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.123760753 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067724551 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.931565359 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.125974471 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066911282 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100891114 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.162154135 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.091379062 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.27403378 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069295095 seconds)
    (37/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.083776997 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.064374314 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.150538689 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.069998292 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.066393873 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.083508473 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.103513578 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.113675974 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.065468523 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.067341961 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.162138469 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.065055583 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.079346081 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.979962415 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.152614661 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.077460157 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.063966213 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.246229135 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.086149416 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069829655 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.064371906 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.203985712 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.135327163 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.067832262 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.066430796 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068276371 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.069530276 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.349510554 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.066012328 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.963525941 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.070393034 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.075800168 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.069033834 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069442304 seconds)
    (71/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.089980488 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.07298765 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.075171133 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.084963302 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.066544475 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.075924867 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.066342481 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.065843233 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.067275798 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.084267695 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.357170183 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.066708397 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.067886536 seconds)
    (84/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.064230334 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.064434182 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.085702001 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.096376084 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.066339329 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.065954761 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100357343 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068206093 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.066273638 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.104644701 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066179676 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.083321445 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.0687261 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.113010201 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.068342244 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.10402529 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.066336717 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.099698495 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.068584622 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.09728033 seconds)
    (104/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.063156053 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.078811079 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.066754597 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.384706449 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.064158554 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.063567964 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.066969738 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.064258099 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.066471329 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.065287449 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.077685804 seconds)
  done (took 21.005026651 seconds)
done (took 38.290933669 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.236622493 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.075984545 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.075908551 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.075808794 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.075535824 seconds)
  done (took 1.77601259 seconds)
done (took 3.018538104 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.120690423 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.099515084 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.064472431 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.095011365 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064210018 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.100417725 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.099641597 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.081202613 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.099694618 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.064970001 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.095746263 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.064839478 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064873646 seconds)
  done (took 2.347912756 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.083134245 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083506853 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.070346576 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081889545 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064827213 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.082104956 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080563932 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.088590242 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080547786 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.07208566 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064000138 seconds)
  done (took 2.057539096 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082331551 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.084091717 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069472118 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081555488 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.066842364 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.081117487 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080749821 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.085570161 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.08112707 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.074074643 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063723582 seconds)
  done (took 2.056982065 seconds)
done (took 7.662192473 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.077492121 seconds)
  done (took 1.273500758 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.589799833 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.140012436 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.081276918 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.112621268 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.183665897 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.120324064 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.281396044 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.087310727 seconds)
  done (took 8.975054013 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.103181036 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.069316599 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.070999587 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.072176269 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.069736468 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.07067322 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.069837552 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.072121438 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.071391802 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.068949083 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.069252785 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.071078942 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.068489226 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.068640159 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.068766362 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.071783199 seconds)
  done (took 2.424210425 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.09314835 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.091190961 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.073717391 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.075112017 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.072060593 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.072470061 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.074516348 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.07331544 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.071048082 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.072550841 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.074926134 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.073837881 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.071539593 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.06545066 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.073950877 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.07570674 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.070933476 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.074423883 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.075615652 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.075112614 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.074852968 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.064623628 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.071822336 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.074255031 seconds)
  done (took 3.088819261 seconds)
done (took 16.967756103 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.114684897 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.071270009 seconds)
  done (took 1.388564794 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.082170338 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.084812035 seconds)
  done (took 1.377207655 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.083900443 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.066077938 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.093308363 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.079115229 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.066566062 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.066012164 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.08995581 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.066353926 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.066041368 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.066383831 seconds)
  done (took 1.955002747 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.068944368 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.079561805 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.071655752 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.081780302 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.074319964 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.065040899 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.073371077 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.068106059 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.078975689 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.063278641 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.072025034 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.083204026 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.071873167 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.084816072 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.073715618 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.06919344 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.071447443 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.067979524 seconds)
  done (took 2.534525688 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.065766236 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.06755051 seconds)
  done (took 1.3511947 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.067636984 seconds)
    (2/7) benchmarking "second"...
    done (took 0.064102376 seconds)
    (3/7) benchmarking "month"...
    done (took 0.067166237 seconds)
    (4/7) benchmarking "year"...
    done (took 0.068092468 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.06436277 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.063325432 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.063766317 seconds)
  done (took 1.673362107 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.383257837 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.112154982 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.301297392 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.07112236 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.0825207 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.250611515 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.065686723 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.070859353 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.070699082 seconds)
  done (took 2.665457889 seconds)
done (took 14.162298169 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.078657847 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.085644148 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.09543929 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.36453849 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.091664947 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.066185904 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.113740418 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.193486974 seconds)
done (took 2.318811151 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.214620718 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.61577603 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.388147772 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.196985161 seconds)
  done (took 2.420575355 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.327665244 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.08651196 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.058727491 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.066774449 seconds)
  done (took 1.767514095 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.066202975 seconds)
    (2/2) benchmarking "read"...
    done (took 0.069117751 seconds)
  done (took 1.361729725 seconds)
done (took 6.991893301 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066083411 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.082769392 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.065509744 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.063364892 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.065738253 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.063652092 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.063501061 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.066213926 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.066196942 seconds)
    (10/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.065748071 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.06836396 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.065752328 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065569595 seconds)
    (14/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.065711973 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06361563 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063571638 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065769178 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.06371833 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063379488 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063456331 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065836396 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.063310574 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.063308383 seconds)
    (24/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.063253091 seconds)
  done (took 2.834633397 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.084240503 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.066770448 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.07132235 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.071888769 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.070371142 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.074187385 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.070841404 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.066375848 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.071447061 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.068608285 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069385842 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.070268617 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.067750158 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.0699679 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068184891 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.07000142 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.071134721 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066877109 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067995476 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.069933797 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.07095123 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066342438 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.069809536 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070991824 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.069776051 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071577269 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.067918595 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.066379466 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071114852 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.070172823 seconds)
  done (took 3.337252365 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.070150286 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.063235208 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.064119559 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.071101881 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.063707917 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.06462764 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.063638302 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.063883583 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.064706757 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.06336625 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.065010929 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.063181397 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.063263728 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.064428998 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.064300101 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.067040425 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.079175627 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.064333763 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.063463812 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.064411582 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.067189136 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.063600704 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.063966746 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.06306079 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.063544921 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.063153121 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.063977517 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.063660768 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.064405799 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.064060427 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.178106304 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.067092984 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.063081469 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.069806677 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.067055198 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.062899025 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.067304479 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.063174296 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.064027264 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.063086403 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.063386999 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.063048333 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.063485861 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.070040587 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.063838357 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.064965498 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.063529748 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.064859636 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.063465526 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.065735002 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.062652763 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.063484978 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.065035342 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.064595056 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.067570453 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.063094649 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.064330249 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.062884048 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.064193885 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.063216199 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.062956913 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.062772005 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.065724961 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.063769045 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.077539532 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.070124558 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.063083792 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.065369263 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.064664165 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.065945019 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.065329988 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.076383328 seconds)
  done (took 6.045745296 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.091343875 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.088283947 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065965005 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.064964494 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061876427 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.06395795 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.068207393 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064312015 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065561178 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.069966288 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064207115 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065410628 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065422301 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.076787223 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064283679 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065714877 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.07006038 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062563151 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.064063553 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067423388 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064412688 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.067643001 seconds)
  done (took 2.749154121 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.154586446 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.070642281 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.106252691 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.073236822 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.06770731 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.073438739 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069936112 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.06996346 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069775015 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068269924 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068399988 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070042419 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.067682535 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068354302 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068767819 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.06830655 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069801817 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.067938424 seconds)
  done (took 2.615628805 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.077716889 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.066429464 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.085900195 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.066326607 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.066200918 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.068094875 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070531288 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.074158501 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.068065956 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.066091152 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.074254098 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068095532 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.06849968 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066003519 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068561945 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.065742781 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.067938186 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066171596 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.074786289 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.07060287 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.071426408 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.074239286 seconds)
  done (took 2.788890988 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079862045 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068087203 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.082687893 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.069112223 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061891351 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064398244 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.070118085 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.06604881 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.069918809 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.067512229 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066211125 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.064077109 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.069342035 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.066076892 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.06928132 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066316952 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.067831317 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.06609054 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067564603 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.062013678 seconds)
  done (took 2.609304789 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.087754008 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.067601141 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.068135076 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.076853983 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.067495887 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.067509914 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.075484332 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.067546813 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.067218734 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.087524761 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.067309016 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067578301 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.075532026 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.072157647 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.067633398 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.075780333 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.074941462 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.075106108 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067163232 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.067467695 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.087043807 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.067424008 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.074823024 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.067226227 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.067119799 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.06719002 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.066809343 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.072276192 seconds)
  done (took 3.260194187 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066628791 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.066057852 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.063513167 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.063885511 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.063299857 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.063617648 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.063460504 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.063373224 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.066349651 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.063463032 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.066304363 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.065520005 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.066144908 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.06542558 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.066138687 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.065978244 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065820916 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.063636314 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063363047 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06339728 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.065610551 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065575762 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.065827302 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.063266506 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063629931 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.065719633 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063584323 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.063541199 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065781811 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.063258745 seconds)
  done (took 3.192049333 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.075606602 seconds)
    (2/2) benchmarking "in"...
    done (took 0.073641256 seconds)
  done (took 1.39926783 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.063579099 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.080131322 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.063067139 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.070529934 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069649539 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.066444878 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073370743 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070056064 seconds)
  done (took 1.802869882 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.08127325 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.07761587 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.068185715 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.081057909 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.076717254 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.082582783 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.132515119 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.067468116 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.073050642 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.064591283 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.079927846 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.06583336 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.072174126 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066701395 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.071655643 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072974085 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.06419627 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.072364056 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.068271821 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.06525765 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067542287 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074897248 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068591546 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.061974062 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.067502409 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.0881562 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.07729801 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.065950991 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.06923158 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.074001224 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.071737875 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.060618931 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.066145658 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.066838533 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.064524632 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.075748258 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081453009 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.069107035 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.074979717 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.067653484 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.076901408 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.061643584 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.070899815 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.072848832 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.076858236 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.066789469 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.066909787 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.061657735 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.064548857 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.068729232 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.061661169 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066899041 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.061335417 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.076042492 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.070204366 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.077156942 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.065147671 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.067895282 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.069342765 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.069594599 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.073105341 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.068781693 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068905474 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.066361681 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.076523145 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.07098157 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.075329495 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.062038992 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.060430172 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.064670337 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.076000138 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.089415194 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.072641374 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.067031445 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067537031 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.064556821 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069795684 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.06794697 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072091957 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.07325336 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.066460809 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071931038 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073988881 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066942616 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.069650389 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.075018325 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.064844295 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.069932522 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.064432716 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.083344392 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.06593909 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.064812047 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.064603506 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.077382035 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.070305081 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.066392121 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.064588014 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073585235 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.06047178 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.066686491 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.06602972 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.065807484 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.075294956 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069367186 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069866356 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.073699868 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.071965355 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065234485 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.068254898 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.061980986 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066115369 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.064063143 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.071921798 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.059500961 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.067913363 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.066472642 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.0656779 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.202569485 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.065239822 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.068235935 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.075094136 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.073251208 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.06570097 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.063068296 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.069720681 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.067207494 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070883363 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.075341938 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.065936056 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.062280811 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.061932136 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.070558999 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.067159426 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.071059552 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071845496 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.07012191 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.062339079 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.065844589 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.073097331 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.076283506 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.067179912 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.067902821 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.073556206 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.068817294 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.066592042 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.07357053 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.069215066 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.066880762 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.072802727 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.068079389 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.062277011 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.07022397 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.070148114 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.065545534 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.071032451 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069969477 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.069791951 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.067737237 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.066338833 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.074363753 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.068059077 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.066875173 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067699159 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.065807482 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.077811719 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.068927626 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.06236925 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.064314003 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.076229681 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.065725454 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.066249205 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.066254197 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.069783062 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.068036107 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.065282703 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.066438108 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.069670798 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.078223562 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.071094228 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.068381097 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.072285312 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.078551237 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.066704315 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.069440873 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.066495906 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068232685 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.067215728 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.075268816 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.071999036 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.071151328 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.068637287 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.062964152 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071918255 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.073708382 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.065482548 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.063867462 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.065618455 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.070411765 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.072259181 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.070425051 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.066894757 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064547431 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066831088 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069495691 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.068770904 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.066002791 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.065894292 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.073174016 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.064636569 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.073507632 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.06726849 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.076604227 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069640798 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.061548864 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069444203 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.06427868 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.072543167 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.061650089 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.064414293 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.065732873 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.067559548 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.06504831 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.067595324 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.060275366 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072146786 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.072476077 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.065753613 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.064513086 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.065111315 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.071506705 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.066570149 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068763837 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.068633941 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.070696856 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075209959 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.06465135 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.068234136 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.075057924 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.195404191 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.060825692 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.072822384 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.06629955 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.06607159 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.066571757 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.06461908 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069732226 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.075749773 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.073640261 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.060838409 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.069924886 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.06559408 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.06596456 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.062623729 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.072210482 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.070063231 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.067979777 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073743293 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.068067396 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.068319821 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.071357626 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.066437442 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.067659353 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.06750076 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070452762 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.068117368 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.069665525 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.066845063 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.070494244 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.066043022 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.065145762 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.069892422 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.067603219 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.067574652 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072651661 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.066489262 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067845435 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.070262783 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.068194315 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067869585 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.067256037 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.066113586 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.070739754 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.06797634 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.06747603 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.06928162 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.061990656 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074557429 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.06651605 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074099979 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.067148575 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.063728763 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.075036651 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.069898237 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.072825658 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.067908744 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.067756103 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.068525742 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.066645401 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.070132638 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074034578 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.064933521 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.076999419 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073996027 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068546979 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.070082535 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.06741547 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.068553828 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.065746895 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.067685998 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.067183982 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.066726727 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.066162806 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.071017319 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.069056327 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.066998168 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068143764 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.067242399 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.066741719 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.067938251 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.061633484 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.065909783 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.066424929 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.066550175 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076338332 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.067125165 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.06603656 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.065252383 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067171959 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.06531693 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.063280191 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.074399246 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.075749439 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.066938967 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073323546 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.065760304 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.067968844 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.076922107 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.060623648 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.064332208 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.064040225 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.06438768 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073750547 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.067461802 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.075095254 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.065732831 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.064920566 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.063152595 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.065883834 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.064068123 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.059957058 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.063188758 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068762414 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.064356663 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064377961 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.065470644 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.067921416 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.06598965 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.074536271 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.064409942 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.066455919 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.065641711 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.194752357 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.066665893 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.066062198 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.069534906 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.067842551 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.064956138 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.064474498 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.06626418 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.068513744 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.068261386 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.067602574 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.069115762 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076489365 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066627161 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.070434846 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.070227885 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.06227855 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.069555977 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.066649396 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.066694905 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.066424164 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.070817448 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070092434 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068737697 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.075958354 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.067026811 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067548761 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067482318 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.064758424 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.066141506 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.067142039 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.067118172 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.066144474 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.067583243 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075489902 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.065174362 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.070357556 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06690865 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.067875456 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.073767498 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.067932153 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.069958841 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.073679603 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.067566067 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.068748795 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.075247533 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.07181714 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.070142324 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.068383405 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.068313619 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072672324 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.066190662 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.072916962 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.067744434 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.068186742 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.06833389 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.06505572 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.06636891 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.066858107 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065598901 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.073238962 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.067757724 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.065440677 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.066293761 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.064414345 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.067677492 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.070123773 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074386435 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.069701773 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.070119196 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.061948836 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.063744839 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067880735 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.064430624 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.068383971 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.069040237 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071848898 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.068495236 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.066936181 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.065126124 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.075338133 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072458046 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.069995984 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.064323897 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.070075477 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.067407036 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.069014562 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.067856354 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.067595644 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068695041 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.070192799 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.068262914 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.065685873 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073081335 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.069898896 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067681967 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.068233487 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.067259289 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.066761277 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.061637103 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.067156486 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.068207721 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.071578005 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.068694722 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066696533 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.077255618 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.064375666 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.066527373 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069191876 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065419505 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.070194719 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.061389395 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.067214946 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.066191703 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.065850261 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.060416897 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.064605479 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.063200166 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.067803461 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.06456193 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.060824903 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.0755417 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.074265799 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.0682614 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064539755 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.197762626 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.062949279 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.06200963 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.065861839 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068673618 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.06860489 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.077494689 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.066283061 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.065662465 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.062271325 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066671729 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.070362558 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.070268093 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.064375065 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.063018301 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.066383335 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.070269349 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.072445021 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066553874 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.066830504 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.070823171 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.069445014 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.06587125 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070760575 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.064122238 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.070636456 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079966768 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.067423638 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068380487 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.073974662 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.075931968 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.068761012 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.062702276 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.068244613 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.070305951 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.067402674 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.068306239 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.068227741 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.08171764 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.070316861 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.066433887 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.065631822 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.069293661 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.065978806 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.07501396 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067672519 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.06830818 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.071008135 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.069044809 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.076709489 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070283359 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074737156 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.070351679 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.070056861 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.066570151 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068402712 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.064890976 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.066461793 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.068633451 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.067752215 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.07194731 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.075055759 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.066375302 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.077512709 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.075832644 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.069134454 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.063576825 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.065989013 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.06624317 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.062175099 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.067503734 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.064727439 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.064894762 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.064362519 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.065373811 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.067653246 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071760204 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.067312461 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.066999786 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.066201615 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.060610874 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.068620379 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.068423234 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067226028 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.063417734 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.066649595 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.067588801 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.070501941 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069958899 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.064556903 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.068220615 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.068129406 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067705091 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.061801063 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.072994174 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065810819 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.068305221 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.066078496 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066664492 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.067358337 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.070142487 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071172986 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067434571 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.068791318 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.070250303 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068674048 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.063495831 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.063040997 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.071000998 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.0637993 seconds)
  done (took 42.72524135 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.100019492 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.063964769 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.062485334 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.061925031 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074317559 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062943071 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.061717394 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.062813535 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.063057437 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.065481713 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.06192265 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062208314 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.070898048 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.077807018 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073954824 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067206908 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062173328 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.063294221 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.061768711 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063533712 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.071146898 seconds)
  done (took 2.764031084 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.073403191 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.070401053 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.073717846 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.075801512 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.067708769 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.070307528 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.072544285 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071420309 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.076189696 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067044817 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.07613 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070726207 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.067198648 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.067205476 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067467178 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070932071 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.075905413 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.067577712 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.070957919 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.073090624 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.07142823 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.07291133 seconds)
  done (took 2.893803569 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.067060885 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.065802346 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.068278633 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.061358762 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.06636576 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.070299009 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.069703981 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.064192216 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.069180395 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.065019762 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.064987629 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.065091413 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.067676773 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.0614397 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.065481559 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.063652337 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.10842218 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.068936572 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.065442054 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.066585502 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.06148491 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.067817011 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.061622219 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.062283374 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.064993658 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.069712683 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.066754847 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.064009846 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.065570106 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.065084375 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.065769922 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.063585801 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.067582268 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.066811954 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.065180427 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.065209309 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.065822012 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.066226871 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.061536548 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.064373563 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.066830777 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.061972578 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.065830638 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.067466007 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.063972037 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.06367359 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.067529302 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.065478648 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.061310812 seconds)
  done (took 4.57863341 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.080545301 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.109149803 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.068145034 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.088252113 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.080135841 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.075561494 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.069153032 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.089787007 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.063675631 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.064579069 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.081659407 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.079860545 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065944217 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.070180376 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.069486302 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065879074 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066839622 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064785235 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.069693122 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.06526159 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.06977977 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.072259385 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.080192815 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.078747593 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.069644968 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064648375 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065294215 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.070276391 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.078479648 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.070290556 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.07025238 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.071146243 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.080430847 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.067572223 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065094428 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.067885477 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.081429674 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.065850347 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.067875336 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.063655264 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.067717772 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.070128742 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.072139806 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.082271668 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065699314 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.070798007 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065364465 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.06249163 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.078229387 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.067716066 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.073264866 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.079907383 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.068987887 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.065614776 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.070013431 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.080726122 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.06592065 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.06395106 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.068696403 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.078131342 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.063397965 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.069457327 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.07942777 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.067518177 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.072973704 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.080576139 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.071032613 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.069213713 seconds)
  done (took 6.363888633 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.074942505 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.072678391 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.081139015 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080636135 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.07233528 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.072524733 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.072252542 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.072269259 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.072446727 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.07719285 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.072692927 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.093437974 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.068105153 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.07490369 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.072264511 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.072585286 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.072422725 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.072167899 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.072306826 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.072512643 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.072606679 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.080047601 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.072225135 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.08018588 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.097866952 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.068193477 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.071918482 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.072602406 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.080316438 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.072422913 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.079471386 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.072111697 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.072123511 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.080428049 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.079800879 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.072040595 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.065310184 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071513129 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.072079797 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.071993897 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.067623449 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.079906042 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.071857909 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.067190806 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.072169428 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.072097864 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.079948099 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.07933318 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.074464324 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.076668264 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.07226365 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.080061642 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071796702 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.072393128 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.079916967 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.104872053 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079985662 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.079952873 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.072411428 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.079925817 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.080217505 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.086630996 seconds)
  done (took 6.049248735 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.084727736 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.074933187 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.077216356 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.061604091 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.063889644 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.070090629 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.064657978 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.064402582 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.074902004 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.074648673 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.077114773 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069806119 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072916468 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07723836 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069670459 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072893547 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070051654 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.069689222 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.07440914 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.069723095 seconds)
  done (took 2.787986387 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.074054001 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.083852827 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.066600501 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.071790604 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.069150957 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.071834481 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.068335582 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069035329 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067333042 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069371776 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.076312069 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.075985341 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067232016 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.07175128 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.075784725 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.071609074 seconds)
  done (took 2.493603807 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.075137636 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.07282049 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.080080403 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.066778243 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.064384125 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.062672634 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.06569755 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.062293559 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.062466023 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.078230326 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.065559933 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.068407628 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.065993108 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.064336788 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.063135081 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.068773011 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.062493767 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.063952553 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.066026034 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.078529487 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.076468538 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.064876851 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.066380108 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.065766424 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.066057965 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.070840147 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.065517894 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.063621425 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.063172618 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.066260859 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.066885882 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.069387259 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.062803726 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.063486494 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.064499194 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.063350466 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.065356596 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.066180463 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.068306962 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.065242618 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.064248982 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.065306003 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.06542842 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.066577678 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.062166871 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.066825255 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.062213396 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.067688955 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.063800726 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.066043008 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.066103974 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.068394269 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.066413417 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.072303812 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.068721528 seconds)
  done (took 5.020764691 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078947075 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069748655 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.062392812 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.065203135 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.068914558 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.067777413 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069074362 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.06764621 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067815496 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.064196267 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.067992344 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.068495803 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067684101 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069268205 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067743426 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069813535 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061917574 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.067390555 seconds)
  done (took 2.579091824 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.071154195 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066426361 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.072826131 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.066066321 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.065931601 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.068484564 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062097828 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.064333333 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064614723 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.065894721 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.0657428 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.068165681 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064841178 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.068345848 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.066079918 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065555478 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.068090737 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064702148 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065576021 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061926009 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067946006 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064699294 seconds)
  done (took 2.809602219 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.092314292 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.081455912 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.137991511 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.078916468 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.083691568 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.071625094 seconds)
  done (took 1.896508753 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090593635 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080289289 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066926106 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088283851 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073175355 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067099253 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067350211 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067525631 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076622979 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076170386 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067495556 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076397316 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07585302 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07536248 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073521761 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073429755 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067217359 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067240916 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066351552 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084160657 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067305756 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076097896 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067734482 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067159911 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06770903 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075672461 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076096187 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076464321 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067575127 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076292395 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073131062 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067837229 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076689439 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076369598 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069272206 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076505438 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06770574 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084734397 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072865725 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075266635 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.06865568 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073457474 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076491093 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072352111 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076041796 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067821592 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072519788 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067699708 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067695438 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.086006682 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073150204 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075202312 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073302118 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076339011 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076326223 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.086197083 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076195493 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07534408 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073597948 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078462724 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075456152 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073080729 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075617636 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076885504 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074219125 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07584678 seconds)
  done (took 6.238874524 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08150717 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.085578443 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068550368 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07660661 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076141755 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067615416 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067682161 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068069119 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068088737 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067294772 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107942003 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068021995 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075604581 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07583637 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068166947 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067863037 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068422588 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075839686 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067762991 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.086495186 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067771031 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07551213 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076033901 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075552762 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076546392 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073214671 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06790293 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067584323 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.06739575 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067713506 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072495163 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068020963 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075537193 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067213864 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075596058 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06784621 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068206872 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072679742 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067427338 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.0733146 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075711436 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083994158 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06751992 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067897487 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076233381 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067541769 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067609226 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067239117 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067302669 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066970858 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076411214 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076426043 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076192393 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075461384 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067737397 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06804023 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067662499 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067379258 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068182629 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073051934 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075131726 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067600134 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086581504 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067710029 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067834377 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075477596 seconds)
  done (took 6.148608571 seconds)
done (took 129.209383894 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.183088856 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.166179798 seconds)
  done (took 1.698434015 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.069173965 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.097462609 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.077180083 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.129356142 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.067490622 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.10074856 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.099507441 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.077712981 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.066675131 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.066630931 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.065968256 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.068829714 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.132061286 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.066405823 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.066073136 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.069267594 seconds)
  done (took 2.682652875 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.097621979 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.157981196 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.09961161 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.065694903 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.097276981 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.073407713 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.064842916 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.075142564 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.071225557 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.065129412 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.073247716 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.070451475 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.064883818 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.070599736 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.071302873 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.072907268 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.064681071 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.07287343 seconds)
  done (took 2.793774464 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.101847345 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.090862294 seconds)
  done (took 1.557862837 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.155550364 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.10647991 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.151173352 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.34588526 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.167618296 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.229584573 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.127245582 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.127982928 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.117479642 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.123629199 seconds)
  done (took 3.015999384 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.098318579 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.151957401 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.255211434 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.115363996 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.07234633 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.095226165 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.116472402 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.078075608 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.08098023 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.080686048 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.080418824 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.076651017 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.098692278 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.073736756 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.073648153 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.076131151 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.102671333 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.072673414 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.074351014 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.077026324 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.099629972 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.066376337 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.07389116 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.072462113 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.077946149 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.077815942 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.065881345 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.065726464 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.0770769 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.07435727 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.077277547 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.094165445 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.077536869 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.107648682 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.071017279 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.108582352 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.077063005 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.074008644 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.07443969 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.074240172 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.079723706 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.079183368 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.072474436 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.076704604 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.06578141 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.076748231 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.065430427 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.065512193 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.078174701 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.067289511 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.078069224 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.077002267 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.107630546 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.067058058 seconds)
  done (took 5.985662167 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.101875419 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.104687472 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071530158 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.112436335 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.100293036 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072493897 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.101969993 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.093330525 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.103645114 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070901337 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068233274 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070377279 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.082750632 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.08356604 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.113064315 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.104908782 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.074561795 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.07145045 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.104250558 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.103369639 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068563661 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.095122724 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.090155029 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.102156149 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.067650935 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.071000913 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068193553 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.070761847 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.0774085 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.079009847 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.070713617 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.081154184 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.085396425 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.07886342 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067107697 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068249539 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068430798 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.080270968 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079685015 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078835682 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.077901637 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067555706 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.069535061 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069911557 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.070850662 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067853712 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.079494435 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.081034092 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.079316492 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069589377 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070183147 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.068154269 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069506051 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.080956538 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.078084595 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.081774166 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.080311392 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068664181 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068749261 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.07256878 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081317509 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.080303055 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.07957101 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069729573 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.079241164 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068443403 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080381876 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.085477744 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068707981 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070732083 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068875774 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069584872 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.070130094 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.078621031 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.078656582 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069742548 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.069446052 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068532611 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.080193476 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079045777 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068395706 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.077324772 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.067480011 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068447961 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069813751 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069650537 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.078183153 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.08073657 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.06986322 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068478226 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069351141 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068255621 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.066558247 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.0762802 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.078963663 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.078269794 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.077544393 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068764026 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.078454579 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.078104796 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069321526 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.078557198 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.067452518 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.198840415 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071224876 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.080093407 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.078767676 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.079760645 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069950034 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.069304397 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.07913315 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082345448 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.069289092 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.079997449 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081375263 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.08066856 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.068263797 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.083336809 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069870251 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.081472932 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069517264 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081045495 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068975056 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.080516015 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068957334 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.068099307 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069339025 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.081021465 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071055646 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069848472 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070462855 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070888571 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.080985162 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.083233066 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071656144 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.082398772 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.079666864 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070808134 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.079241309 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069489361 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.07975961 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070577303 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070320062 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.06767031 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.08302577 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068865962 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.068927352 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069870583 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.081808213 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068669548 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080882875 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.079523428 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069010101 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081972375 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.08051385 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.078202233 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.080986639 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.07130731 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.069252108 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068559675 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069917111 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.079068562 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.080641183 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.07059508 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.06907139 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.078313252 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.080372378 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.067651385 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.079405168 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.079277272 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.078766224 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068426826 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069630745 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080639881 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.081634518 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.078922286 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.078528249 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079039153 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.06880161 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.077921376 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.079225344 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068626982 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.085716715 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.06846383 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.083188202 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.080168752 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.077816775 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079284272 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.081538694 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.080450082 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.080854333 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.084048258 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.06800971 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068117625 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.080410151 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068756814 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069213091 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.077691607 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.068736586 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.068494762 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.081926529 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067754938 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.078662556 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.066971374 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.077865281 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.066113663 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069429617 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082383537 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067485576 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.202425104 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.081483182 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.070393603 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.078743118 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.08224568 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.080087836 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069109798 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070814541 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.081253606 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.079957358 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069149857 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069080751 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071133995 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.08016081 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.078250327 seconds)
  done (took 18.748125573 seconds)
done (took 37.856538174 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.210132477 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.152498466 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.200960119 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.121024457 seconds)
  done (took 2.153400669 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.123175944 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.102018442 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.095936885 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.06594028 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.103174037 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.065514935 seconds)
  done (took 1.962010951 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.315111673 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.213780137 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.184700183 seconds)
  done (took 2.112845963 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.201595542 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.189016743 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.398450702 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.257242843 seconds)
  done (took 2.553389615 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.144554842 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.090585818 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.06757868 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.083939189 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.136471132 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.162858626 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.102622675 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.128005406 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.078659813 seconds)
  done (took 2.452381467 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.149575612 seconds)
done (took 12.794956606 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.219328875 seconds)
    (2/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.08989524 seconds)
    (3/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.23575898 seconds)
    (4/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.203621171 seconds)
    (5/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.078560153 seconds)
    (6/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.155680133 seconds)
    (7/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.082847627 seconds)
    (8/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.118624363 seconds)
    (9/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.195552536 seconds)
    (10/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.084564486 seconds)
    (11/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.159205205 seconds)
    (12/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.074362431 seconds)
    (13/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.1095758 seconds)
    (14/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.126698462 seconds)
    (15/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.140919905 seconds)
    (16/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.067967193 seconds)
    (17/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.175468506 seconds)
    (18/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.141400119 seconds)
    (19/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.101514625 seconds)
    (20/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.07367098 seconds)
    (21/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.07249312 seconds)
    (22/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.077280096 seconds)
    (23/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.071899347 seconds)
    (24/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.09149177 seconds)
    (25/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.206748527 seconds)
    (26/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.18155039 seconds)
    (27/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.090574418 seconds)
    (28/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.1442773 seconds)
    (29/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.076272714 seconds)
    (30/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.072064967 seconds)
    (31/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.090450623 seconds)
    (32/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.194732562 seconds)
    (33/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.074085421 seconds)
    (34/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.089234653 seconds)
    (35/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.192612024 seconds)
    (36/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.140669525 seconds)
    (37/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.088574283 seconds)
    (38/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.089196804 seconds)
    (39/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.073346178 seconds)
    (40/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.073379161 seconds)
    (41/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.10802919 seconds)
    (42/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.173566468 seconds)
    (43/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.14059109 seconds)
    (44/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.073316032 seconds)
    (45/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.195638321 seconds)
    (46/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.190919539 seconds)
    (47/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.069918054 seconds)
    (48/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.072256129 seconds)
    (49/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.067469007 seconds)
    (50/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.065313347 seconds)
    (51/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.151415091 seconds)
    (52/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.100502412 seconds)
    (53/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.067226448 seconds)
    (54/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.09699729 seconds)
    (55/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.080235427 seconds)
    (56/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.069189954 seconds)
    (57/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.10132248 seconds)
    (58/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.060891446 seconds)
    (59/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.069983589 seconds)
    (60/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.186904842 seconds)
    (61/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.065982054 seconds)
    (62/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.093245281 seconds)
    (63/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.071364578 seconds)
    (64/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.216293631 seconds)
    (65/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.138489663 seconds)
    (66/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.065884779 seconds)
    (67/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.139032051 seconds)
    (68/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.152104114 seconds)
    (69/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.158814862 seconds)
    (70/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.073809933 seconds)
    (71/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.098446165 seconds)
    (72/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.080320437 seconds)
    (73/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.078875417 seconds)
    (74/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.052075474 seconds)
    (75/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.062353692 seconds)
    (76/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.05305025 seconds)
    (77/309) benchmarking ("sort", Int64, false)...
    done (took 0.065815156 seconds)
    (78/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.074823982 seconds)
    (79/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.050831048 seconds)
    (80/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.138370881 seconds)
    (81/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.081528674 seconds)
    (82/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.135951533 seconds)
    (83/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.065548152 seconds)
    (84/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.076138938 seconds)
    (85/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.082610395 seconds)
    (86/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.073241237 seconds)
    (87/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.109748645 seconds)
    (88/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.29768359 seconds)
    (89/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.052710385 seconds)
    (90/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.113797029 seconds)
    (91/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.143182463 seconds)
    (92/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.153517153 seconds)
    (93/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.275103696 seconds)
    (94/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.072664533 seconds)
    (95/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.099253343 seconds)
    (96/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.053292657 seconds)
    (97/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.097825861 seconds)
    (98/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.071780195 seconds)
    (99/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.073567324 seconds)
    (100/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.11095778 seconds)
    (101/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.152515976 seconds)
    (102/309) benchmarking ("sort", Float32, false)...
    done (took 0.129914946 seconds)
    (103/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.066087577 seconds)
    (104/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.080384757 seconds)
    (105/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.073432473 seconds)
    (106/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.179473386 seconds)
    (107/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.152761905 seconds)
    (108/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.054540592 seconds)
    (109/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.087838444 seconds)
    (110/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.083422007 seconds)
    (111/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.138513204 seconds)
    (112/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.155031711 seconds)
    (113/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.089762242 seconds)
    (114/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.067284462 seconds)
    (115/309) benchmarking ("sort", Bool, false)...
    done (took 0.136089105 seconds)
    (116/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.074770872 seconds)
    (117/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.135219887 seconds)
    (118/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.078882819 seconds)
    (119/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.073522072 seconds)
    (120/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.111239325 seconds)
    (121/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.136988646 seconds)
    (122/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.072190132 seconds)
    (123/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.123725766 seconds)
    (124/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.164281135 seconds)
    (125/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.072401931 seconds)
    (126/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.07301102 seconds)
    (127/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.101615541 seconds)
    (128/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.151205044 seconds)
    (129/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.089953398 seconds)
    (130/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.072934624 seconds)
    (131/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.175765925 seconds)
    (132/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.065751107 seconds)
    (133/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.187083685 seconds)
    (134/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.072358352 seconds)
    (135/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.070569674 seconds)
    (136/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.074773276 seconds)
    (137/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.076095886 seconds)
    (138/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.090615882 seconds)
    (139/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.073282517 seconds)
    (140/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.090880994 seconds)
    (141/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.065270069 seconds)
    (142/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.072932665 seconds)
    (143/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.065650361 seconds)
    (144/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.081646702 seconds)
    (145/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.085849135 seconds)
    (146/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.076486277 seconds)
    (147/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.074348259 seconds)
    (148/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.14723751 seconds)
    (149/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.072347151 seconds)
    (150/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.184661873 seconds)
    (151/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.072149591 seconds)
    (152/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.0660717 seconds)
    (153/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.08928284 seconds)
    (154/309) benchmarking ("sort", BigInt, false)...
    done (took 0.18414087 seconds)
    (155/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.073660124 seconds)
    (156/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.065522304 seconds)
    (157/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.111299035 seconds)
    (158/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.05368202 seconds)
    (159/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.051802696 seconds)
    (160/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.060588708 seconds)
    (161/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.137064168 seconds)
    (162/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.080569624 seconds)
    (163/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.065121835 seconds)
    (164/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.064675524 seconds)
    (165/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.077037275 seconds)
    (166/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.075384623 seconds)
    (167/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.051282552 seconds)
    (168/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.194679011 seconds)
    (169/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.065303251 seconds)
    (170/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.176128565 seconds)
    (171/309) benchmarking ("sort", Int8, false)...
    done (took 0.139570167 seconds)
    (172/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.066483809 seconds)
    (173/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.149927512 seconds)
    (174/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.075920368 seconds)
    (175/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.050791095 seconds)
    (176/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.072176882 seconds)
    (177/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.156883577 seconds)
    (178/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.050992644 seconds)
    (179/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.073109644 seconds)
    (180/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.052719481 seconds)
    (181/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.052335948 seconds)
    (182/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.06615619 seconds)
    (183/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.064724434 seconds)
    (184/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.14885821 seconds)
    (185/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.071622737 seconds)
    (186/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.051162952 seconds)
    (187/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.092023683 seconds)
    (188/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.087354305 seconds)
    (189/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.073360365 seconds)
    (190/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.072146783 seconds)
    (191/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.067574337 seconds)
    (192/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.206064436 seconds)
    (193/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.062076964 seconds)
    (194/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.072511654 seconds)
    (195/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.053169925 seconds)
    (196/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.064849961 seconds)
    (197/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.069701789 seconds)
    (198/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.151887989 seconds)
    (199/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.066672431 seconds)
    (200/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.118093295 seconds)
    (201/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.166096654 seconds)
    (202/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.05201121 seconds)
    (203/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.075180547 seconds)
    (204/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.053092208 seconds)
    (205/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.072605712 seconds)
    (206/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.071639334 seconds)
    (207/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.092412648 seconds)
    (208/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.051637014 seconds)
    (209/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.075402788 seconds)
    (210/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.073353721 seconds)
    (211/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.066473167 seconds)
    (212/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.068697681 seconds)
    (213/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.051950499 seconds)
    (214/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.092678286 seconds)
    (215/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.052210572 seconds)
    (216/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.085915575 seconds)
    (217/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.055327028 seconds)
    (218/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.077437957 seconds)
    (219/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.052871194 seconds)
    (220/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.108060914 seconds)
    (221/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.051728828 seconds)
    (222/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.088577704 seconds)
    (223/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.071559311 seconds)
    (224/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.051187022 seconds)
    (225/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.052781588 seconds)
    (226/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.095061086 seconds)
    (227/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.052334364 seconds)
    (228/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.088955763 seconds)
    (229/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.065114381 seconds)
    (230/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.087428957 seconds)
    (231/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.078865476 seconds)
    (232/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.062691045 seconds)
    (233/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.065357727 seconds)
    (234/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.063227202 seconds)
    (235/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.067050009 seconds)
    (236/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.053726693 seconds)
    (237/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.109640483 seconds)
    (238/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.131751246 seconds)
    (239/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.052947985 seconds)
    (240/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.07119356 seconds)
    (241/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.051515719 seconds)
    (242/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.066179761 seconds)
    (243/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.052834918 seconds)
    (244/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.08941277 seconds)
    (245/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.067853245 seconds)
    (246/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.069809246 seconds)
    (247/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.05196634 seconds)
    (248/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.176167645 seconds)
    (249/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.072229627 seconds)
    (250/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.066962322 seconds)
    (251/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.066503655 seconds)
    (252/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.098817992 seconds)
    (253/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.067518719 seconds)
    (254/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.060682762 seconds)
    (255/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.051843867 seconds)
    (256/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.065051808 seconds)
    (257/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.099439133 seconds)
    (258/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.08579644 seconds)
    (259/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.184702306 seconds)
    (260/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.052700417 seconds)
    (261/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.065443014 seconds)
    (262/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.107529707 seconds)
    (263/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.067593812 seconds)
    (264/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.075154926 seconds)
    (265/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.05111967 seconds)
    (266/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.071264276 seconds)
    (267/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.051348 seconds)
    (268/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.051224049 seconds)
    (269/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.051437216 seconds)
    (270/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.073116966 seconds)
    (271/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.07194229 seconds)
    (272/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.065236933 seconds)
    (273/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.064551389 seconds)
    (274/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.062398206 seconds)
    (275/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.06716906 seconds)
    (276/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.089411943 seconds)
    (277/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.052130611 seconds)
    (278/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.08875464 seconds)
    (279/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.126107788 seconds)
    (280/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.067321397 seconds)
    (281/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.065388098 seconds)
    (282/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.065450917 seconds)
    (283/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.05206424 seconds)
    (284/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.052428441 seconds)
    (285/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.065044889 seconds)
    (286/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.062129092 seconds)
    (287/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.073052762 seconds)
    (288/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.064125761 seconds)
    (289/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.054482291 seconds)
    (290/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.08938226 seconds)
    (291/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.06373087 seconds)
    (292/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.066207396 seconds)
    (293/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.072517014 seconds)
    (294/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.065624951 seconds)
    (295/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.09415532 seconds)
    (296/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.092059856 seconds)
    (297/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.066784515 seconds)
    (298/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.051846077 seconds)
    (299/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.071098297 seconds)
    (300/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.063095355 seconds)
    (301/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.051651066 seconds)
    (302/309) benchmarking ("sort", Float64, false)...
    done (took 0.12656659 seconds)
    (303/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.051986386 seconds)
    (304/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.073832558 seconds)
    (305/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.052034268 seconds)
    (306/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.070603541 seconds)
    (307/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.166181112 seconds)
    (308/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.089288107 seconds)
    (309/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.06529757 seconds)
  done (took 30.603416642 seconds)
done (took 32.018201013 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.083303705 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.092158827 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.074506208 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.092643772 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.0802954 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.07659846 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.071950055 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.078083728 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.079203991 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.080951587 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.078331478 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.055084053 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.073809114 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.073636397 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.074242763 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.091006073 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.077696746 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.072568488 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.072787329 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.064483967 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.07293554 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.065826167 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.066856114 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.054518608 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.077767086 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.071823288 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.072482184 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.074153153 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.065630794 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.066283921 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.069311693 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.073428379 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.065659079 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.077720697 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.072247453 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.073166972 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.075063005 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.076167283 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.067722156 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.065966533 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.073880517 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.066129064 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.072857426 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.073386537 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.071336533 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.071690702 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.07310861 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.077696674 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.091050187 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067705914 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.074512372 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.075625526 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.076298979 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.071834476 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.069224715 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.073002372 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.070833481 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091093223 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.072874218 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068181314 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.07432116 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.073972907 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.070524537 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.072906748 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.072702664 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.074774077 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.07505073 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.070614182 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.074439465 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.070867696 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.065229511 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.072870537 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.069464069 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.065848361 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.075526673 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.076558963 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.064365614 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.071035545 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.072294581 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.071181192 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.065122209 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.067460986 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.066622929 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.07144526 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067177896 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.054414718 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.068714428 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.07117004 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.064295596 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.072987442 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.070902666 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.071836953 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.067063209 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.074930846 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.064909466 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.070180484 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.066123193 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.065536747 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.066396978 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.069805255 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.064817009 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067858023 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.073702625 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.066453028 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.070861539 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.078777653 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.065110008 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.071503794 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.064007882 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.064676748 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.078683734 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.074218873 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.06486934 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067222479 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.063927043 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.071808793 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.06405684 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.064910043 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.064957317 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.065106122 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.06999033 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.064687088 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066363056 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.071419925 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.076428184 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.064291366 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.06807598 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.066501007 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.065025985 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.069742676 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.064363828 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.200117515 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.068768374 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.061842698 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067569587 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.065507091 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.072937193 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067733596 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.072709756 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.066771686 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.074057101 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.069761115 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.070891831 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.070397116 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.064291941 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.058303942 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067939323 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.068439128 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.067720994 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.06586975 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.0668174 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.065740085 seconds)
done (took 12.422184324 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.066616957 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.143242971 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.099793008 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.095192126 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.086387328 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.066442054 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.076437125 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.10181674 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.067720333 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.102717452 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.087489632 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.085551702 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.112565659 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.064617479 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.065839346 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.069409931 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.067193098 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.081741703 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.101026801 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.086907856 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.116011465 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.065309603 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.094452849 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.090416424 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.087351771 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.092476433 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.0668122 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.070020012 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.069384687 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.100300228 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.086848453 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.069924897 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.066475812 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.101352593 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.092525594 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.08368739 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.066421334 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.082467908 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.066689278 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.066435354 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.067758558 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.098616175 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.080007227 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.080241842 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.069945503 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.068896431 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.066904928 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.083767653 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.088957777 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.078482734 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.086565896 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.102957299 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.068803491 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.065929085 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.06494802 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.085275427 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.065561103 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.068397827 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.066058271 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.068158768 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.066339195 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.069016302 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.081289303 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.082294267 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.070082778 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.080318929 seconds)
  done (took 6.814189363 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.08329832 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.089405372 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.08284566 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.083189191 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.065833425 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.066285417 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.066610361 seconds)
  done (took 2.049505316 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.067604379 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.088187324 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.088799947 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.088902591 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.084296282 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.087210812 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.075661428 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.066702829 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.080354541 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.067731302 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.087427656 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.102091002 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.067686479 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.07286547 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.09105911 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.066892972 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.090519995 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.066748421 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.069558907 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.089779696 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068804154 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.082091645 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.06994832 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.067334561 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.080804544 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.067170374 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.113378799 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.07066427 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.06798288 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.069396483 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.064384155 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.107004311 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.080293864 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.07563373 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.066689774 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.08095598 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.08087979 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.065424583 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.083271173 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.072075272 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.080721359 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.066996685 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.067236589 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.064672913 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.070647112 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.076682345 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.067430111 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.067631188 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.068628274 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.086023686 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.066994343 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.079598929 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.069807147 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.069035574 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.067987073 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.070231508 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.076259877 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.067294342 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.08593754 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067547885 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.082780103 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.082522038 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.080092103 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.082243378 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068603013 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.080052176 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.080220021 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.069420247 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.06816023 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.070092477 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.083633749 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.065346024 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.068478646 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.077268184 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.068295723 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.089413609 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.08932804 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068020936 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.075882058 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.066981923 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.067121723 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.066503697 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.089054286 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.069043134 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.065999362 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.070650337 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069478262 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.064771796 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.065537383 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.070303137 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.064720506 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.06813679 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.069003064 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.069213066 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.069221115 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.082950941 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.069088179 seconds)
  done (took 8.785223672 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.069500287 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.068535214 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.069352552 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.068072208 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.068751328 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.068641015 seconds)
  done (took 1.951693638 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.093489495 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.069337007 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.080857572 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.071968001 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.1047644 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.086668689 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.087648139 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.07923037 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.083939137 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.079074965 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.086475871 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.088464815 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.093641203 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.072967559 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.086636948 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.072275595 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.086959541 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.076294455 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.078584965 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.073093524 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.087182691 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.072695965 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073007595 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.082013246 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.076108743 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.072303685 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.067009676 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.078622055 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.078007553 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.079039722 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.072570681 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.075920464 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.070936726 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.078848303 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.087005004 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.070692975 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.07192215 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.077241775 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.072595946 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.075850736 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.087822184 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073095338 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.074805511 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.07770496 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.078724209 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.071002953 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.077192182 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.07622061 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.086404417 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.077426271 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.07709662 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.071601786 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.075895679 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.077592729 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.070809464 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.078800272 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.077882164 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.087447866 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.072450699 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.070869094 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.069555328 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.075966946 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.078182963 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.07628886 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.079022835 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.077470339 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.071213736 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.072828543 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072944842 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.072502625 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.077505148 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.06978945 seconds)
  done (took 7.123579808 seconds)
done (took 28.218814075 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.540796194 seconds)
  done (took 2.042993956 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.603981762 seconds)
  done (took 2.134256924 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.513997376 seconds)
  done (took 8.038307416 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.392537651 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.475869644 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.689445315 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.131153332 seconds)
  done (took 3.254634688 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.680312933 seconds)
  done (took 2.213153337 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.208323314 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.196952825 seconds)
  done (took 1.951702747 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.378054674 seconds)
  done (took 1.904355694 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.105313085 seconds)
  done (took 2.627856182 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.263214033 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.163936535 seconds)
  done (took 1.955737063 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.460677057 seconds)
  done (took 1.987294338 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.817828254 seconds)
  done (took 6.344906718 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.209339294 seconds)
  done (took 1.786555163 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.241302106 seconds)
  done (took 1.774804286 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.685925247 seconds)
  done (took 3.214836428 seconds)
done (took 42.758209278 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.081174919 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.081911636 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.082011366 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.079642974 seconds)
  done (took 1.843270976 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.077318103 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.073303478 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.076399272 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.072648216 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.077172297 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.073748956 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.074323479 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.077339948 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.072549827 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.073095271 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.072821622 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.07313312 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.07532313 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.074334563 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.071195856 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.075081796 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.076530106 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.073074121 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.075939828 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.072731221 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.070954485 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.074973781 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.075242712 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.072509212 seconds)
  done (took 3.314207839 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.07930425 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.073753326 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.07534121 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.071719696 seconds)
  done (took 1.83793446 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.078740791 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.093085266 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.090368119 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.077749708 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.092878112 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.086788955 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.069476788 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.069373418 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.073938438 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.078044158 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.068466276 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.096617803 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.08822322 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.07714618 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.079462783 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.066229458 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.068698465 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.087327412 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.077810085 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.07813889 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.070219936 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.07806034 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.068111101 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.088747618 seconds)
  done (took 3.439019894 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.077804513 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.104546639 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.078541543 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.087628173 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.090943931 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.065688399 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.07496052 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.08971004 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.123704878 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.065949708 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.070388468 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.065894962 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.072749002 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.065471255 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.076616124 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.105489555 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.108768511 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.06888345 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.095789558 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.066174013 seconds)
  done (took 3.199688167 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.073513496 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.070788605 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.066339478 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.069384579 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.078070626 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.073374939 seconds)
  done (took 1.975729137 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.068725668 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.068188353 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.068444128 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.067429132 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.072546057 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.067575614 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.066491769 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.0675051 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.067817815 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.0670647 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.067093303 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.066132352 seconds)
  done (took 2.356675839 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.173542976 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.069028315 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.070731283 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.066472884 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.07148217 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.066646387 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.080265089 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.068279219 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.091017972 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.066771637 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.066722221 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.068724648 seconds)
  done (took 2.503255175 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20777236 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077209015 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238982353 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138354818 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112715538 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116665267 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105831429 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.114353525 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.145108243 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.103013569 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169777905 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167541515 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108151018 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138929064 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.090052211 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.099069657 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15745956 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163679143 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104873494 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167586715 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145691535 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.12563995 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.148570064 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102407819 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106969421 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123682198 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.071913034 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.081017157 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172271562 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132919607 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148277966 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11256453 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094860541 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178828156 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173086139 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143369971 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135603999 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084200036 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.103370597 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.13567231 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201074147 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.088676884 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163245119 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.249156963 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.082864001 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135533842 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121755667 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.122423887 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.108115362 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.091096022 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148237315 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185070085 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.140516044 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087841614 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113469739 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116906924 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.117074016 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105503492 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183191164 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161963346 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129791702 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.071568095 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.099624267 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155336111 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132719532 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.110628128 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.128153657 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095225493 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134243354 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155237823 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120341099 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145174411 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.129913137 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089840982 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12010611 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.140963493 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129843415 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171989539 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126299257 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.07372796 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126763429 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104862102 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082058609 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.143614123 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075871405 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178579769 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098984705 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.106677427 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.113686533 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109602123 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10913747 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161766686 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.287014637 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105905583 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.0666611 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10496877 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.122283064 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148853074 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088222561 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110234161 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118518649 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.079148322 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141407891 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.075205443 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124146281 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.076592358 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126817774 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134218974 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.076738974 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.122806926 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102550942 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.101723518 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13535758 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161722934 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089386607 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083487354 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168924633 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124014618 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.105566192 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144970191 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158661844 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.100500893 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103178457 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150982626 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180536957 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.090934409 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164528373 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108488311 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.084630361 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.088049219 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125304848 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113590625 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.122962442 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082791204 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.12015166 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169844767 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.075892126 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.096030428 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134809454 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079340812 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081049181 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103819213 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100971586 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.095969656 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.100879204 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.10444296 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137724488 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123974193 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.247280352 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130886636 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099613919 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171624334 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090000142 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.101304478 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104712421 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.070208439 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.138873279 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158367384 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.079718793 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166436161 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.124271789 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105648949 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120196226 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08354504 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.141382935 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079326099 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.070983192 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144981321 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.111555432 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111271006 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.152897195 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10604743 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.128126153 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.121540902 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136877863 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134944249 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.130483873 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106241121 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.088835755 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112465665 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126022701 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.073327273 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.092214847 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.080906216 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104582496 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096522815 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083865048 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143525963 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12604494 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.101239988 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112523067 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097649445 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.148313459 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.0768744 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130281967 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.119515848 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094153687 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.152578549 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15286638 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131630198 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099618438 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14461854 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.069882097 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073168335 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.236918929 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.125689061 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084266719 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.084997656 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119331642 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149579592 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131220819 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140627851 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11332825 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122379742 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.156660164 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.070289888 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.117211246 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148524848 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123104178 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.105371946 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.0906029 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.100008147 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143001083 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109522125 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183740718 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114830347 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128436351 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154727793 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.100653508 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.080539944 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103865542 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13706615 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105834362 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145668943 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.100761195 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089614186 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110895797 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.074596662 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100973259 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12849863 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120824724 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142538716 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.115554232 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134325273 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.07761676 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117752674 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.121694131 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12294536 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.064274451 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120467681 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162434351 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.094310155 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119385911 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153663358 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079625416 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.124834141 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.324237951 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1476799 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.085610402 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112927986 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.119754997 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129308761 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121825872 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141605103 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110097756 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136473505 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110085824 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.086596033 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087982024 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.09777411 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105902315 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.096604157 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.109273643 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.115598234 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.096279579 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132415041 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103970119 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111078031 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119604651 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.09713365 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.090580663 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098118818 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176016063 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121440915 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173146856 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.0999935 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.147178786 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165099224 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075163849 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079612319 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.079119141 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141183441 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084487961 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132423872 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.098671312 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106775451 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12534124 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143478483 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.095795056 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.069117866 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109957334 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136339433 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112903162 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098475251 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.104678458 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163611467 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.100890675 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079530533 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113706256 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105202542 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102276003 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.319014378 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.062426055 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.099224062 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077101538 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082541072 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.130239019 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.154712134 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.081337601 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.103470389 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120571365 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111461841 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.129732648 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103520792 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101305694 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.115852155 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152687404 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130273545 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.090390853 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113724094 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132242891 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158872563 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106993408 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.096424292 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173602171 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153357938 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.162136821 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.089313137 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115398305 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115509545 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109017507 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140997902 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084199901 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165147746 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082556526 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137660711 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105330271 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091103376 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131063881 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.117366874 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.08910193 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149429552 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118682735 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08355191 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078503621 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118819582 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121000748 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106753812 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.07572238 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139335924 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.073255393 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132923205 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169073645 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081482425 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.253501927 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099150808 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081449394 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110371891 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104174928 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090987782 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.099564928 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174688097 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.089480076 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151119282 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143378493 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114582923 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139413058 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101511661 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.637511575 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.079817763 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153289368 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.117814188 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175467058 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.097995731 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118548024 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111113178 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127740779 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146764464 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105755922 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.179301706 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133492641 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.116619888 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080205855 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103933774 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104100376 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.08956671 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105877496 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114999974 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116994607 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.094417392 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.117430479 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125007605 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.082779368 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.096057376 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157703804 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.117967171 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145843613 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141151835 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.08477358 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118018078 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139206276 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080151481 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.122679249 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152503061 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105865632 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.245540323 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.081806005 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.104185474 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171757173 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.073803347 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16373924 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122074211 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110355115 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11488669 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.115366749 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133052944 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109499265 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123217515 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095214059 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.111761776 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.115263267 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082530781 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.078143699 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105684924 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113947822 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.098845021 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099419403 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.098559935 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152669599 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.072388798 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09652672 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10457233 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14711164 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176163081 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.088548368 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083072834 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119825324 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11398361 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.114386283 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121801821 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.079739906 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083121065 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.082495794 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.077476069 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.109619006 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113480021 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105328711 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112642745 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165723123 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.083013047 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.227276377 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.095796054 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105688216 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.070039161 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.079289575 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096183837 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098069105 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109140579 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100666188 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168623799 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.094412222 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.089835386 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092362182 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.073137312 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.229453472 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131093342 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112301993 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120590764 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099045627 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.063410073 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11062942 seconds)
  done (took 59.45488542 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.109395901 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.082630649 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.097154018 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.14992434 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.124071186 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.213070045 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.158530017 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.200812653 seconds)
  done (took 2.790580277 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.069215598 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.095549272 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.100978904 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.08479298 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.067984381 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.070756321 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.227304008 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.082342817 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.066838556 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.089238287 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.08101455 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.07053101 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.42260688 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.06648126 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.069209494 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.063356696 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.068055456 seconds)
  done (took 3.443603425 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.369777916 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.601262237 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.374986559 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.074066712 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.873115076 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.094177827 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.049834091 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.131998836 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.074490784 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.539557683 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.700427287 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.127998275 seconds)
  done (took 18.666434002 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.077471485 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.070439485 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.085217153 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.084718404 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.073530052 seconds)
  done (took 2.042760197 seconds)
done (took 108.457857985 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.080727044 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.395935363 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.054181616 seconds)
  done (took 2.131404728 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.08522778 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.085753041 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.08506817 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.08443549 seconds)
  done (took 1.999886904 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.076825006 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.076692044 seconds)
  done (took 1.805575901 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.226361943 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.159350967 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.087310699 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.08447383 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.079009825 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.079305646 seconds)
  done (took 1.903832938 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.07441161 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.074922809 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.072974938 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.076871776 seconds)
  done (took 1.957257115 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.078116838 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.05279846 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.055271175 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.056173753 seconds)
  done (took 1.894991543 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.088723526 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.07942601 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.078740352 seconds)
  done (took 1.901520093 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.10362624 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.084982282 seconds)
  done (took 1.844840264 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.083680279 seconds)
  done (took 1.739006376 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.10193353 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.115011036 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.132151022 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.110981853 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.139821438 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.109762188 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.086433311 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.087285625 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.07740105 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.088313914 seconds)
  done (took 2.701346856 seconds)
done (took 22.085316179 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.080985184 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.368325099 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.36119476 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.08991697 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.682821501 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.357037361 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.993098871 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092705655 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.11442523 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068372015 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084288731 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.655324066 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.01942723 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.317948056 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.004276332 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.325116421 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.650831241 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068840194 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068221894 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068434995 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.975710528 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.06815289 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068185675 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068701231 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.649123838 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.372004194 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.06867322 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.3250709 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068354124 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070211577 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.35550378 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068440116 seconds)
  done (took 16.26887712 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.073458157 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.119658791 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074184907 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.084787392 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.07060496 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070725525 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.072274772 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.069657127 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.12012839 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068280482 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085014948 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068311096 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.072290586 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069600789 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087347125 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068653515 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069174974 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069067395 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068638227 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.06901491 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.087182794 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068410542 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068793643 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068872692 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068497426 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.080275092 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.069128417 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.069101165 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069086323 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070788882 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071660801 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069818396 seconds)
  done (took 4.079582423 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.1178825 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.12581361 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.075648902 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.10396662 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.113580754 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.07093179 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.144364304 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093667159 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.127832614 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.069050894 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085025445 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068770219 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.10243039 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069619364 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.088588023 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.069541209 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069970282 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069541334 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069142024 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069419394 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.088213921 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068987203 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069396137 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069507629 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.069121752 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.08232841 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.069359052 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.069623333 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069160517 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.071327185 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.072441724 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.070054489 seconds)
  done (took 4.34581736 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.075214402 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.075479 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.083764259 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.084725175 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.069676314 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.073099251 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.073420331 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.070326813 seconds)
  done (took 2.278050056 seconds)
done (took 28.634088026 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.08255202 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.06998913 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.073205934 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.081687009 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.07391204 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.079097723 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.067908038 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.075724392 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.072539632 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.073706802 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.075537235 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.068487307 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.071774859 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.06771321 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.073917601 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.068428505 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.079967194 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.072325706 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.079590953 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.080010619 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.070763563 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.074133039 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.07487217 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.079578048 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.080378264 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.079888528 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.07784983 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.073197707 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.069973883 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.071140878 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.078506956 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.084423851 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.069432351 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.080078233 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.068612447 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.068123429 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.071970036 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.068190507 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.079828075 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.077104045 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.070136544 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.076786835 seconds)
  done (took 4.781787153 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.091631241 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.091563581 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.085666546 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.062018024 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.067559523 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.065333077 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.089470804 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.060012158 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.060471907 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.088130024 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.0562424 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.059968082 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.062734081 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.054507692 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.059635929 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.057345446 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.06209834 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.056268314 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.059770824 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.059597017 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.0587937 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.054887878 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.060374047 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.063380132 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.059371252 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.062683204 seconds)
  done (took 3.391819481 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.077806406 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.084963044 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.088498932 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.127568237 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.104113223 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.077257798 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.078183665 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.092853067 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.086449012 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.067625776 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.071800771 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.09413058 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.088786827 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.074151854 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.068107047 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.085658788 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.082689131 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.069682617 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.074296079 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.091709199 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.085512156 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.08405803 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.093496951 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.081480564 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.067780459 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.070295856 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.071910815 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.08153381 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.072709096 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.076611145 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.071825665 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.07130278 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.069834986 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.07944912 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.071524068 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.069668401 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.091150405 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.078121212 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.078693944 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.068610088 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.071520802 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.068924257 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.090115562 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.12377386 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.067559619 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.07491969 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.075717248 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.077255128 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.067874061 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.086544589 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.079572229 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.06812064 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.071185756 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.067432022 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.068001711 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.081440143 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.07006722 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.070441436 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.077780597 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.071287762 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.086483169 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.072425558 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.083673059 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.06761674 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.075393547 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.067316407 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.068893805 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.067619821 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.093510197 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.069928273 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.109066567 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.069324503 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.069212989 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.076951045 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.075693019 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.074150034 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.068583568 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.082934191 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.078350943 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.071455559 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.076719825 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.07128624 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.071088565 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.088465331 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.070236923 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.069418434 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.068667576 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.07425795 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.070730843 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.069238113 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.08096146 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.06783162 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.071001355 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.084900636 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.067939279 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.069049221 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.074039061 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.07268103 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.06758604 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.079092109 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.072903856 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.068660646 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.076947395 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.068120909 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.071154708 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.078311962 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.073975384 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.067252873 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.072769963 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.074245773 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.068284961 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.069321478 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.070618528 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.069302057 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.075693929 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.073969641 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.071856513 seconds)
  done (took 10.65508953 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.165738565 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.168395363 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.070373673 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.146165332 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.077475618 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.079963371 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.148656807 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.095603734 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.069133983 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.069405375 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.069556346 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.111001836 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.106815333 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.116748938 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.079837766 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.068595523 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.084798078 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.114663285 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.150236869 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.14406191 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.084059928 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.077657313 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.071139481 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.070002876 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.071035963 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.078770008 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.085548988 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.077689554 seconds)
  done (took 4.468582634 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.08459905 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.09774056 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.075724675 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.090476359 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.091504976 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.068545206 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.07137447 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.070009317 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.081169725 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.079405216 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.068187973 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.073977512 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.075009393 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.071686474 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.069404817 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.075276036 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.075857192 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.069862032 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.071773493 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.073463741 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.078565683 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.081582681 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.072141818 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.067745993 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.074743483 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.067830551 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.065247322 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.085307854 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.068563703 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.091297427 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.06607248 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.075377163 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.081904111 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.069348324 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.068369908 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.068515826 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.067937429 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.067718816 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.069920019 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.067594455 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.066640741 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.058352534 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.067499192 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.079979103 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.074416888 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.057280655 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.07326969 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.07327846 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.073435996 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.065603628 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.071035599 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.071528301 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.071534736 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.075210485 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.073305668 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.073206774 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.069155674 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.074490813 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.075638045 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.067809325 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.065420236 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.066706546 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.072189884 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.066592197 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.076091146 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.072429692 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.066642295 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.067708455 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.069747679 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.07423194 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.067749001 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.070975861 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.065582217 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.069861508 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.072412271 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.069705659 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.068963464 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.066613796 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.067757264 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.068144939 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.055900253 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.068287124 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.054289016 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.071232174 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.066422891 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.066806368 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.068016893 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.072536739 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.080827063 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.069188142 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.073668009 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.068839618 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.06698993 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.071406332 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.060685822 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.070981425 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.083127004 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.083112202 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.067876956 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.066177462 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.082429076 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.072940044 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.067420754 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.056675039 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.075829958 seconds)
  done (took 9.234346472 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.092929564 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.07078433 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.084251892 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.09135669 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.088175804 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.075934594 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.077077083 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.070088651 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.082660702 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.074447071 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.076982789 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.069006016 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.078034922 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.077546175 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.070385567 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.077526788 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.073025306 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.083693735 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.083180634 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.068739226 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.076585133 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.08119811 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.089894022 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.080529569 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.079466902 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.081168066 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.089498446 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.073090074 seconds)
  done (took 3.932065963 seconds)
done (took 38.127936026 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.761620369 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.914860939 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.749188901 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.115722815 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.823559744 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 7.031587899 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.863623034 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.743131134 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.053462497 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.781319702 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.022752182 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.792746434 seconds)
done (took 65.332224619 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.804775997 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.88857769 seconds)
    (2/2) benchmarking "String"...
    done (took 2.055344083 seconds)
  done (took 5.625933196 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.135320222 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.280612297 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.988236749 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.740465982 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.747304716 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.04793422 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.550503995 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.275579522 seconds)
  done (took 30.313040348 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.851187279 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.966395599 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.424620248 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.450710595 seconds)
  done (took 15.422896082 seconds)
done (took 63.071687288 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.750364036 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.75332061 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.748741819 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.723567009 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.797166168 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.760208555 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.1846369 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.985736886 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.738124613 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.732839677 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.74215218 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.172857101 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.752114664 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.172625701 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.739661967 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.744599736 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.780362728 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.243502313 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.889095413 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.74629538 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.750743829 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.765063366 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.743697922 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.743653408 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.766060961 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.738399042 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.177856606 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.735458375 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.363515728 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.740861215 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.77165345 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.256724457 seconds)
  done (took 204.390441206 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.744423198 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.73766681 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.775769735 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.772418241 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.080618917 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.918570685 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.858252475 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.262361318 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.74182127 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.744145608 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.877866676 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.739061406 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.918403218 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.684973388 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.776957392 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.747665668 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.962114301 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.916468221 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.778730491 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.884551374 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.761807116 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.781130387 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.775788105 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.849653149 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.787210441 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.758197836 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.745675333 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.911987498 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.935294632 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.920904995 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.782101302 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.790122254 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.967593209 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.617142225 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.749233734 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.753644587 seconds)
  done (took 168.491433835 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.913953055 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.743592273 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.740515435 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.753045415 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.759243793 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.74837643 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.866404515 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.871729601 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.204752849 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.922131432 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.793569119 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.572397811 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.739602965 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.816136232 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.755235842 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.745619374 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.757876697 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.774046717 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.749063893 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.746511084 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.86436153 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.759885723 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.785971133 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.758131604 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.742960849 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.753337366 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.117115786 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.742271551 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.75731215 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.014454406 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.743587039 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.746374998 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.648842836 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.428203462 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.839857869 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.742336364 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.752259668 seconds)
    (37/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.747961176 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.750502267 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.968695573 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.743900863 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.749164995 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.750226566 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.93349652 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.744809531 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.874329537 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.746862652 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.256332489 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.747606828 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.751416421 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.766432975 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.441150661 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.750695232 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.750271559 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.752185665 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.75066247 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.751644138 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.752889252 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.634055697 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.824546149 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.746741138 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.752192665 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.747527932 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.750148099 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.992519538 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.742972227 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.418393135 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.802118454 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.856027797 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.869970023 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.75177464 seconds)
    (71/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.748224627 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.814144272 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.83897131 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.745202089 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.747805907 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.748452152 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.749892816 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.834333421 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.747926104 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.874406838 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.753492483 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.74943949 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.802320239 seconds)
    (84/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.750008709 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.817657482 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.747132269 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.640720002 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.752534575 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.749645341 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.06821529 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.813306142 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.744647065 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.745581886 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.747417548 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.886956516 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.870918564 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.53804902 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.750829622 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.690386864 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.754087225 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.897588988 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.748328405 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.947084921 seconds)
    (104/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.750016265 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.750877567 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.83206788 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.751825577 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.751930713 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.74953124 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.783350124 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.75257107 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.80697477 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.746202828 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.124564467 seconds)
  done (took 398.940072756 seconds)
done (took 775.475417392 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.434179153 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.38758442 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.507458651 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.417382649 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.387007719 seconds)
  done (took 13.82572185 seconds)
done (took 15.516560191 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.841831966 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.844662313 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.783697979 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.844939078 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.774349773 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.841417962 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.821267132 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.784126532 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.813809648 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.778561095 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.811075805 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.780364854 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.770634346 seconds)
  done (took 25.184587926 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.989558785 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.986379084 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.826305217 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.010638318 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.804096483 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.984651629 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.914428734 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.908629254 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.907174998 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.772433185 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.772437925 seconds)
  done (took 22.570571303 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.998548126 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.996008429 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.830239989 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.992333582 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.805787247 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.990099144 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.919155433 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.910880044 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.910469686 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.772554544 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.771624637 seconds)
  done (took 22.592649956 seconds)
done (took 72.044860325 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.76631566 seconds)
  done (took 3.461538926 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.788628364 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.923387923 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.776537916 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.772016916 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.765964232 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.768621137 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.77193092 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.760930172 seconds)
  done (took 16.027319701 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.766410272 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.763584774 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.76617593 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.767998566 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.763475493 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.766361938 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.765623612 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.766830368 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.767209638 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.761708193 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.763729732 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.766218483 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.759801656 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.76686495 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.764240805 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.768156446 seconds)
  done (took 29.941923869 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.767117361 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.761169241 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.760082709 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.765776266 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.765825052 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.765528634 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.767652111 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.766922344 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.765810668 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.764584667 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.765081529 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.762871264 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.767462346 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.76545046 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.767723533 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.76826539 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.766667169 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.768692389 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.768196847 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.76868593 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.767140447 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.766223095 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.768451864 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.767972239 seconds)
  done (took 44.087646344 seconds)
done (took 95.212951104 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.642689643 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.15356245 seconds)
  done (took 8.492175877 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.770783606 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.771428615 seconds)
  done (took 5.278675471 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.769862095 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.770118612 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.770087401 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.770383544 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.771184793 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.768441801 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.768834977 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.767540766 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.766589134 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.767625255 seconds)
  done (took 19.386569138 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.766905333 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.769717166 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.766268426 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.769319169 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.769465608 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.765592289 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.769648237 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.769523905 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.769528401 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.768839622 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.769624838 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.763263398 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.765360371 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.76442869 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.770100264 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.76830767 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.765666062 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.767522867 seconds)
  done (took 33.519600948 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.771345409 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.769574004 seconds)
  done (took 5.240801438 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.767575004 seconds)
    (2/7) benchmarking "second"...
    done (took 1.768803393 seconds)
    (3/7) benchmarking "month"...
    done (took 1.768555907 seconds)
    (4/7) benchmarking "year"...
    done (took 1.762932335 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.765959639 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.768359488 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.765880599 seconds)
  done (took 14.069463306 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.771261316 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.927807984 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.995414556 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.469509005 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.770303246 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.775768768 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.716766785 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.777697643 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.776667137 seconds)
  done (took 19.682716517 seconds)
done (took 107.370291953 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.575775664 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.763454909 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.137114682 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.882067835 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.778670828 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.108809161 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.780919109 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.99989506 seconds)
done (took 42.73205505 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.813550463 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.338942104 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.371365742 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.43457258 seconds)
  done (took 12.846674732 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.758279123 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.281076298 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.800023318 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.357165997 seconds)
  done (took 19.922668283 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.130028986 seconds)
    (2/2) benchmarking "read"...
    done (took 2.120289197 seconds)
  done (took 5.960670596 seconds)
done (took 47.250615985 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.768151855 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.77141648 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.773024331 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.769424142 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.772194066 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.770023771 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.770210582 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.773819655 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.772713928 seconds)
    (10/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.772325155 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.773142988 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.773330978 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.773958867 seconds)
    (14/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.774889925 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.770611755 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.770734671 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.772314023 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.772562616 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.769508177 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.772292375 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.77477797 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.771766642 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.770749052 seconds)
    (24/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.769550403 seconds)
  done (took 44.227657785 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.774349229 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.770839414 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.774258604 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.772215177 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.77138254 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.774819616 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.77250309 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.769661612 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.77534794 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.774019143 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.772057991 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.772690777 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.774229345 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.77345046 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.775416698 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.773154594 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.775888876 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.772984207 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.774372475 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.768835664 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.775550284 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.774223592 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.77393698 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.774514885 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.773926681 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.774583099 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.775531417 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.774240202 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.775174102 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.773817338 seconds)
  done (took 54.914564755 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.779993802 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.785950571 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.775752101 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.775004273 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.776609128 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.775793837 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.776909477 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.778042674 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.778113056 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.776985483 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.777089426 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.77853726 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.777968721 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.777203233 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.776621645 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.776647918 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.776070218 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.774451054 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.776477077 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.772546738 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.777325582 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.775892976 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.777297166 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.777667978 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.776370598 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.773108697 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.777837204 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.77816001 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.776165356 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.777904501 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.775502078 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.778269516 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.77794682 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.777417401 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.777773796 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.775634911 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.781863766 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.781012783 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.776596169 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.776463312 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.779689516 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.777666249 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.774562178 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.775335578 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.77508976 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.777755934 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.775451714 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.774915804 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.773345821 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.778357194 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.778584247 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.778867634 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.779030216 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.780457275 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.777289984 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.779007118 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.780277921 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.778300642 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.776484621 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.779421895 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.778646537 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.780226635 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.778944865 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.781205204 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.777463822 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.779373179 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.775568781 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.779323238 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.777251208 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.78025953 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.779562116 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.774686232 seconds)
  done (took 129.692314511 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.780169255 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.779425586 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.778362853 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.77716397 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.777450611 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.781222748 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.777385635 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.780928004 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.778768912 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.782318107 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.780259757 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.773960206 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.777385624 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.779826591 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.779896243 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.774212338 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.781140323 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.778305751 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.779050645 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.781476148 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.781341335 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.775273606 seconds)
  done (took 40.847366666 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.781189228 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.781540032 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.779419701 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.781243087 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.781264472 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.780089529 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.779760583 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.779475007 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.782823764 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.777281644 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.780768076 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.783510053 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.779482618 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.779397547 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.779516694 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.778006635 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.782902208 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.780001883 seconds)
  done (took 33.757319142 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.78002747 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.780173153 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.783289038 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.775292056 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.780009884 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.783431608 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.7809079 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.780889526 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.779403271 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.780635406 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.78434379 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.780366253 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.783288021 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.780870135 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.778087271 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.781064291 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.778986642 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.779094207 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.784334528 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.778881413 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.778690864 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.784643852 seconds)
  done (took 40.890151442 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.784607978 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.784013312 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.780237874 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.783218084 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.778904743 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.782656931 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.784073691 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.781405214 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.781647124 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.783158761 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.781681316 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.784616241 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.781801536 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.783345669 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.781237536 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.778434043 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.785612022 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.782229041 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.784515638 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.782078204 seconds)
  done (took 37.36259486 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.784163198 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.787615449 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.786191368 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.78670746 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.784828147 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.788992507 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.787104115 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.782808565 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.787082293 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.788976726 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.788005584 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.784322242 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.788293324 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.787712567 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.787814436 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.787353139 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.788809511 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.788777903 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.785630548 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.788387628 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.788368924 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.787645594 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.78931189 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.786359949 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.788740433 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.787826523 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.786540429 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.789136605 seconds)
  done (took 51.759979142 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.785438621 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.786808297 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.783340221 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.778632687 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.785999143 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.783481562 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.785585536 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.783800435 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.786789642 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.785127046 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.786246423 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.787675238 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.7875366 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.786576529 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.787458834 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.788564526 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.788496037 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.783663475 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.784624993 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.784496988 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.786490691 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.788183764 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.788633255 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.784188578 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.783856713 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.786346336 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.78561558 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.786750494 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.788749239 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.786507614 seconds)
  done (took 55.293981918 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.808255196 seconds)
    (2/2) benchmarking "in"...
    done (took 1.808140965 seconds)
  done (took 5.330907488 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.785442836 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.787410508 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.788425864 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.789038773 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.786629255 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.788401357 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.789912282 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.786102353 seconds)
  done (took 16.019662196 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.789888534 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.789704178 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.790051484 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.788491136 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.791002497 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.7898563 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.796475006 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.787576322 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.789221571 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.790266147 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.796528668 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.798286624 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.792380818 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.790160412 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.788886014 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.791208737 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.787949894 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.791733208 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.789209353 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.791288756 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.790643784 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.792315561 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.791875591 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.787112198 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.790846965 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.803690178 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.794044545 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.790377017 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.791956006 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.791144813 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.791748494 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.786532421 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.79040848 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.791247825 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.793111284 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.790212748 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.797886976 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.791526422 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.796270536 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.791821143 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.791929242 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.787948094 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.790749218 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.793497337 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.792271919 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.794652542 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.791566135 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.789973303 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.791180065 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.794312941 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.799713205 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.791929505 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.790344746 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.796723801 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.794328396 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.797953214 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.794201909 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.793875264 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.803771299 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.802528752 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.80424778 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.798181407 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.792785112 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.796562428 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.806479994 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.821263429 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.796526287 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.78950286 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.791025447 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.793301542 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.800326492 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.80749035 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.80603231 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.795124431 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.79472046 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.794715867 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.795582551 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.795062522 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.799851689 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.795889425 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.793864926 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.794243388 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.80454193 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.820588877 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.79186386 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.796954918 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.793247002 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.79376039 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.797096926 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.8048429 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.794418797 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.795067897 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.796056896 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.793776699 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.797107148 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.795772754 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.795040937 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.796516045 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.793348188 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.796266976 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.794176265 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.799479427 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.809013806 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.795457946 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.797101079 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.803741257 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.792698609 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.797322841 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.799565023 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.796545562 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.796652598 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.795249431 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.803123383 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.792290769 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.799307766 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.806449792 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.797332964 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.799029581 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.796616538 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.794768251 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.808056028 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.826190115 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.792954792 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.798376917 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.799285436 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.813592881 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.797807501 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.799336196 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.796360743 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.794090365 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.793290488 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.794576787 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.797401817 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.797294243 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.798130581 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.797193297 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.793287152 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.795169038 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.798359517 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.797853223 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.798997286 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.798651019 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.797024346 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.799510865 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.796246526 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.798746137 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.802055658 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.79780617 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.798738024 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.796398497 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.795386529 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.797718846 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.800307507 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.800278913 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.799622297 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.79904614 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.796484637 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.798953068 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.798239653 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.796831756 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.796268469 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.798671503 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.80253789 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.797551855 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.798758515 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.798461842 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.796432713 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.801190937 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.79657381 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.797487738 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.79944553 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.799074754 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.800150082 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.805756499 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.799483797 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.796172715 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.799256851 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.799174818 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.803215326 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.80154159 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.801369598 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.809639275 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.801006981 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.805359228 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.797640012 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.799555462 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.800219692 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.800100035 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.798228817 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.80174856 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.80415709 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.809929133 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.81425997 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.807408013 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.803767182 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.806134073 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.799840314 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.807367029 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.803885184 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.802025384 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.79594353 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.801995371 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.800406744 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.80065357 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.8010427 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.802306647 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.802759681 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.802626974 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.800656294 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.802330337 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.800548275 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.803441804 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.803235351 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.801820071 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.798072354 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.801600145 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.798258274 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.798772015 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.799705138 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.801803679 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.800823715 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.803356751 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.803816053 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.799193884 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.801684494 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.80268574 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.802819536 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.800461222 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.803663936 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.804124454 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.800883538 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.806264237 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.801947575 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.803528651 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.80936459 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.799788584 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.80184621 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.805696692 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.801953371 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.796916907 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.802776287 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.812589146 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.800187444 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.804685661 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.804448825 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.80357113 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.804709655 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.810017033 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.80042626 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.803310283 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.80460047 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.806335175 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.798767492 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.803969984 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.804535742 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.803817635 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.806963348 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.804946796 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.806382228 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.80297643 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.805422361 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.803960455 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.806751588 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.805790391 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.815596692 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.808742298 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.803563345 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.807665229 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.803999616 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.812060195 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.805392983 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.808270274 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.803115089 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.815418993 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.815008822 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.807803474 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.80449852 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.807872182 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.808537935 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.805497175 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.811046152 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.804634791 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.807152136 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.804727122 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.806499278 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.804268377 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.806379957 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.807465125 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.805709566 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.809724897 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.810494256 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.807290599 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.805050566 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.804186154 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.806281065 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.806809048 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.806155022 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.808061687 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.80954595 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.807136409 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.807492851 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.80629337 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.812412288 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.80759924 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.808567428 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.806238918 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.805420296 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.800497434 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.804818178 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.807908372 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.810777515 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.815831489 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.81108563 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.819165592 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.809397578 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.817026847 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.808508948 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.810867041 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.819925542 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.805060827 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.806328852 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.809158625 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.805194803 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.813383709 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.804186838 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.808205346 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.81399472 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.809939934 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.809962508 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.809496458 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.810585938 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.801674121 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.807788785 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.815434304 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.806736789 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.811399454 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.810377572 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.805707813 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.803662019 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.806233818 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.808218062 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.812076194 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.807629144 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.803864128 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.798810548 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.80708123 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.808305408 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.806779631 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.809838091 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.804312699 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.809775643 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.81124382 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.805901798 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.81317339 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.808420282 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.812915725 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.80720704 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.813630509 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.807219146 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.808539115 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.806671656 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.804824641 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.805537166 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.807315211 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.805539535 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.806945845 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.809948495 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.812445956 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.807130942 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.809332758 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.808417198 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.811809228 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.81116435 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.82199362 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.834668326 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.80848919 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.814184522 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.803008026 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.812553508 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.810987782 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.808401643 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.805318201 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.810138906 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.820881932 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.816477465 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.802609815 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.80971154 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.802354155 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.809198626 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.807428788 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.80752966 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.805378505 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.804040226 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.806215063 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.805154301 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.80881836 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.809823533 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.79991682 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.807536898 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.807013837 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.820175381 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.804647818 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.804514323 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.804202695 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.810682294 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.80682591 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.806324182 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.808872906 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.806907487 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.806738669 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.810127499 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.815434808 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.814129674 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.809040233 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.807237142 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.809672951 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.808445206 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.805625415 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.805163251 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.809441632 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.805756395 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.800930783 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.809698428 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.810701145 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.811196348 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.810114886 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.806242818 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.813454199 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.809148551 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.815611864 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.805603975 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.810492413 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.812532514 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.807147951 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.805059281 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.803367456 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.819090083 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.811382838 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.824116308 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.819587868 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.806485348 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.805450929 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.810521542 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.819351521 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.810454355 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.808622284 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.809947129 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.807509255 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.812771385 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.809741674 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.812258266 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.817661911 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.806491186 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.808867894 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.81429277 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.802776282 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.809724275 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.810633296 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.814894261 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.810226766 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.80365373 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.81051394 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.805738612 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.816790174 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.809342752 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.809181399 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.807626066 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.804538327 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.809556362 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.814030671 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.811182905 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.809986288 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.802150923 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.809040946 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.81144077 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.804860001 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.805938793 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.810212389 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.807695274 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.811271516 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.823838869 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.813307902 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.811728033 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.808725379 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.809044108 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.813404747 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.809669089 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.801002206 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.809067349 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.806402341 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.817017061 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.815137969 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.813951419 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.812808252 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.813556579 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.816391118 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.807876592 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.813445166 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.82029613 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.82295836 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.80485841 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.810881715 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.814924738 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.812951352 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.811980543 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.808070445 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.808152574 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.811621116 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.811091638 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.811128904 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.815184181 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.815391873 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.826908365 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.812799808 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.814181529 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.815519054 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.812638996 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.813851633 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.805399946 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.810149046 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.814130451 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.813529854 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.822404844 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.811646615 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.814460704 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.812079913 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.814830497 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.812106998 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.819390812 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.816702016 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.813568394 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.812096097 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.810602671 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.81671891 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.831518335 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.804277704 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.819605872 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.840144921 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.809922352 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.812010977 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.809407096 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.808890328 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.811817687 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.810966303 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.81379029 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.810482573 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.807503118 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.810324226 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.810715121 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.818275144 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.814516648 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.806235062 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.813835594 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.811551504 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.817151331 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.808504701 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.812090201 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.811648493 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.807907239 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.811726978 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.809287344 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.814766173 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.822387296 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.822473114 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.807331765 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.808508487 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.807194835 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.811555676 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.810003038 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.825705221 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.81833254 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.810519888 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.80930909 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.815808155 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.812906603 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.80654962 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.811796276 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.814609927 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.809963679 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.81013314 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.822133176 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.824448994 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.815566584 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.815230885 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.813550613 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.810969985 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.809572745 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.809520904 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.808543223 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.813096482 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.809228289 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.81975402 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.811787063 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.809910894 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.810684825 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.817759307 seconds)
  done (took 1077.648938385 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.806714711 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.806084132 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.81037994 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.807986266 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.805916506 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.806969626 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.805035209 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.804533059 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.806798383 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.804159566 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.808277903 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.810215214 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.804787214 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.808155273 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.807598246 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.810859866 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.8089382 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.80910485 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.808923595 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.806788655 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.809336607 seconds)
  done (took 39.697221024 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.809085229 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.806632906 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.80849943 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.807776959 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.809103496 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.807060636 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.805745775 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.815679894 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.809179214 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.805334004 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.811800738 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.812543585 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.812646614 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.808266243 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.807266764 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.81672819 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.813690266 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.81111933 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.814454655 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.811215676 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.811201124 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.815852752 seconds)
  done (took 41.568925346 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.811779706 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.810848837 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.810756997 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.81293444 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.812717398 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.81015231 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.81523554 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.810584273 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.815617118 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.81591859 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.816242433 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.814117677 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.82443129 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.820036328 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.814113472 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.812763625 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.956491737 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.814105531 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.811679665 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.810848356 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.805530868 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.814774455 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.806236961 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.806204341 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.807108941 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.816362199 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.816662359 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.816582595 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.816003686 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.819367739 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.824653817 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.817426626 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.818114525 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.82170901 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.819986437 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.82115163 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.825728856 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.82126311 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.815367397 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.818707727 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.831506062 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.842168416 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.81854797 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.818699685 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.821790261 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.820109812 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.822292908 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.833607717 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.817697922 seconds)
  done (took 90.918441446 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.820561545 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.82117655 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.81760266 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.818863724 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.81628361 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.816582408 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.819667685 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.817527517 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.813343688 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.811449783 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.814728877 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.815112711 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.81295809 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.816397658 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.815361542 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.812641522 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.813772858 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.813214984 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.811741118 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.812738233 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.812018358 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.813114298 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.815777252 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.813084059 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.814697961 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.811522753 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.811019131 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.813743042 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.811529423 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.811647696 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.817315069 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.814443938 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.816522525 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.810595638 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.813694838 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.814493251 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.813114344 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.81164525 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.81486836 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.811854173 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.812995161 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.816745532 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.814481944 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.81699845 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.813464678 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.814236427 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.811593523 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.81273893 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.812630546 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.813180626 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.816387291 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.813316658 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.815428396 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.812348948 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.815448073 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.81744474 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.812867855 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.81415584 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.81744962 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.814321567 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.812506284 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.817523933 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.814315481 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.817366243 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.815125164 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.814422167 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.814262215 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.816250443 seconds)
  done (took 125.146229185 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.816233657 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.817162844 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.817021742 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.816937744 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.816190934 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.817268936 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.817860806 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.816355249 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.81710697 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.817927887 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.815451378 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.819212448 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.817987049 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.817689544 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.819396127 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.815815924 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.818162401 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.818048124 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.813705414 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.815172402 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.819416167 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.818202368 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.817387112 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.816602906 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.816444298 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.817988131 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.815280668 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.816513854 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.818331238 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.817163863 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.81609294 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.814955466 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.816659775 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.816576167 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.81950398 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.816657774 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.819009142 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.81872896 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.820263687 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.816460405 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.815676114 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.816007429 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.815121927 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.816807754 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.817348281 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.819113908 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.81905016 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.816930456 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.817347331 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.81803457 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.817276069 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.819380557 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.818776054 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.818545847 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.81841201 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.814667701 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.813301909 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.812966054 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.813043735 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.813972386 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.814538516 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.809919402 seconds)
  done (took 114.394515143 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.810290573 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.811371547 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.808643125 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.811692505 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.810792875 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.808005503 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.810075359 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.8103557 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.814562331 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.809722573 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.809486121 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.806976384 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.807906171 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.809154766 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.809827263 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.805272243 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.806744468 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.806355627 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.809159977 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.810343012 seconds)
  done (took 37.931602479 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.805336619 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.808422043 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.8057161 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.806916016 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.809656235 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.807054286 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.808815523 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.808449918 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.806059011 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.808515511 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.810523755 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.808168546 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.805104026 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.806070862 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.807593718 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.808585579 seconds)
  done (took 30.662951249 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.80468183 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.807246021 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.808055874 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.807696639 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.807518015 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.804865516 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.806421577 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.80481501 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.804565805 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.808459066 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.806833011 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.807536783 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.8069153 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.808043148 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.804857634 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.810342183 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.805032699 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.805391199 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.807877277 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.809985163 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.807989248 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.805508813 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.807620265 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.808213038 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.805727573 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.80631142 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.811528715 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.806758653 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.805818466 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.808799392 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.806235556 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.812880873 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.804945975 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.805040412 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.808968806 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.805431057 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.808272313 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.811474529 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.806075975 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.806302823 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.806372882 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.803977293 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.809260721 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.806669487 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.804994373 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.807558728 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.804991371 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.80479669 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.807507586 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.804389113 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.806570594 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.808498309 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.807666403 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.811805365 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.805968898 seconds)
  done (took 101.131586768 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.80531645 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.805334612 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.803018656 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.808315494 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.804341355 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.802653476 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.804816466 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.802162092 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.803233644 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.807722438 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.80312379 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.804924001 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.801844489 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.804336227 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.803296895 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.805029464 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.802148981 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.802470959 seconds)
  done (took 34.213146874 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.803433628 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.802298266 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.805564607 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.802247333 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.802327716 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.805308971 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.802282754 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.805239889 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.805829132 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.803606273 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.802434859 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.805918181 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.805680757 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.806023821 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.803373457 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.803220219 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.807238812 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.805797468 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.803010592 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.804397827 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.805665425 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.806168238 seconds)
  done (took 41.435849485 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.805462918 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.804472298 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.821938176 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.82562153 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.828660204 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.83988707 seconds)
  done (took 12.665216208 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.805240195 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.806283698 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.80352714 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.807158266 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.807028831 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.803828134 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.803885225 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.804054803 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.806788018 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.805148618 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.803903465 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.807339503 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.806252345 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.804341112 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.807675423 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.807445347 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.804879781 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.804326943 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.80528577 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.807743378 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.805782269 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.807371504 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.804940791 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.805715221 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.805345756 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.804719912 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.808115643 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.805817179 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.805809948 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.808378177 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.807861842 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.804905401 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.808666499 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.805289625 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.80905181 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.80744062 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.806003574 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.808924779 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.807905011 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.805259339 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.808772753 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.809404452 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.809072296 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.806317573 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.809417859 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.806011372 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.806276814 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.806644929 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.807592542 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.809551553 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.809118958 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.806732372 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.808442313 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.808876934 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.809453343 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.809762798 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.806072699 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.8071402 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.808597385 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.807376542 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.807153855 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.810121459 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.806588011 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.808127829 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.809428479 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.80728998 seconds)
  done (took 120.997450568 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.807163797 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.807879257 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.80747785 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.808523758 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.806846473 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.807188649 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.807286247 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.807319373 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.807308507 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.807333696 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.811103814 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.808815046 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.808101422 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.808714288 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.808479841 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.807947962 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.807717336 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.808283953 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.808142841 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.81117912 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.807882831 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.808254385 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.808381153 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.808597025 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.808896921 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.810480811 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.80816801 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.808761496 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.808304262 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.808798153 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.808590608 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.809331147 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.809041709 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.809041023 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.809006855 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.80854444 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.809244977 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.808703967 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.810097564 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.811432378 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.808728564 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.812850469 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.809933956 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.809239207 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.810427631 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.809227962 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.809978586 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.809665859 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.809599754 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.809943088 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.809478232 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.810529135 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.809794558 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.809790839 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.810204618 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.809990925 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.809541303 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.810449576 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.810287897 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.812067211 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.811096509 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.81044003 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.814025446 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.810634389 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.810594955 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.811445567 seconds)
  done (took 121.158458599 seconds)
done (took 2501.368242141 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.880247502 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.897836161 seconds)
  done (took 15.52458164 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.977642696 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.930276647 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.813269676 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.823268949 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.812618342 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.834491963 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.8128773 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.812633425 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.810145344 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.810778285 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.811737477 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.998970925 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.815027574 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.810301746 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.811452771 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.904440282 seconds)
  done (took 51.344884655 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.814198504 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.813614265 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.826255256 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.816195593 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.813308701 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.825920056 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.845746724 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.817752141 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.849935065 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.826527679 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.886576726 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.825603978 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.812257126 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.863269562 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.827238986 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.82757373 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.90230359 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.8892653 seconds)
  done (took 34.829382376 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.891507228 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.814547139 seconds)
  done (took 10.45863487 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.830164406 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.824551259 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.81078891 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.806310829 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.81384492 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.83439712 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.849291912 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.809394583 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.83987552 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.829410674 seconds)
  done (took 69.996016118 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.81559397 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.811825797 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.811050692 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.809139257 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.801960976 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.807639366 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.810502056 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.801465388 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.49634114 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.84693541 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.816406073 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.815319973 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.809390685 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.811852897 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.809961557 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.832683949 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.947907872 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.806856266 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.806967155 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.813781605 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.810100738 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.860815261 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.822031945 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.809275039 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.838892004 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.497782051 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.816740473 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.81486842 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.916394824 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.806839763 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.810997419 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.809071968 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.811416216 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.185417565 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.102423851 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.808714014 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.818296717 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.816548759 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.806208429 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.93394456 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.807736383 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.813708839 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.800596485 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.088636539 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.908207495 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.851468504 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.183437177 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.812204434 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.808504578 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.83753731 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.810382432 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.81013415 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.82220821 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.324061703 seconds)
  done (took 129.407580722 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.80174176 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.101454725 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.956257059 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.804459382 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.076504981 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.008980923 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.802223159 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.852133237 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.803737283 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.005689497 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.966038544 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.910509842 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.803314116 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.800994047 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.80125521 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.799509198 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.961738902 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.869747776 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.80361673 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.799835592 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.828652722 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.008722794 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.924235378 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.802429433 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.823248362 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.011588993 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.923194278 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.90730688 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.083092144 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.798880249 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.865912165 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.802172943 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.802142707 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.798757821 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.957967676 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.89706996 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.891788866 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.801389423 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.800688732 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.800130056 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.461373426 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.998064585 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.900563749 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.944407552 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.953551129 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.006521401 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.448691069 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.800306838 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.441868754 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.965244149 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.015680924 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.007340697 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.92667367 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.804025454 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.954936592 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.800685612 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.799031922 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.038624833 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.945830495 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.90504437 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.805256847 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.801177726 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.801420041 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.045412036 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.803147851 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.900433394 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.80268836 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.799605427 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.901377498 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.905877508 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.944368147 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.016903691 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.836721216 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.525934344 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.023113588 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.018294112 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.873571836 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.037049437 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.805222464 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.801100221 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.889095499 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.557550338 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.961189706 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.053017356 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.025296645 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.838379238 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.410401733 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.801388962 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.996584429 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.988755476 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.999563425 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.952288557 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.955588124 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 4.94624178 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.802609878 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.802457836 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.000853179 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.941943051 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.804904023 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.164979912 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.040429271 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.372403127 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.824493443 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.099529769 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.938632206 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.127943041 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.428250927 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.804521403 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.971196665 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.843966735 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.807650621 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.802218915 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.995691661 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.614779047 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.802151846 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.541102366 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.871891866 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.805157529 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.006638816 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.807992572 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.013432522 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.808667645 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.038353661 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.252503652 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.837787027 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.975362811 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.950320918 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.597171821 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.049791886 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.048229088 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.927559961 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.07255881 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.532711397 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.803746518 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.078213455 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.807843094 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.80240553 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.971084397 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.804480943 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.950627986 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.804716842 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.031340319 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.829432984 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.959079188 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.805699961 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.037026357 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.841092837 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.8570867 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.810019648 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.926005455 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.804375715 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.685381454 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.96005493 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.809867126 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.803985736 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.212634268 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.804490535 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.952314716 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.035749987 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.83319368 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.875163206 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.333153838 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.806004809 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.893911649 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.834308918 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.544731746 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.809908636 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.963012452 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.77568369 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.238777798 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.805190003 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.04555561 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.039115219 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.808000276 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.808010629 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.548129188 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.496863091 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.806142406 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.966513687 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.012287912 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.458832196 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.008773454 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.808676389 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.935902103 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.812616504 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.885649169 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.157515237 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.810044857 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.806114723 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.80624065 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.806548307 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.808914423 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.014637617 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.840586673 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.315709039 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.942271737 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.023973859 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.117785046 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.026786066 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.856587704 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.809828279 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.054698016 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.812337608 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.874176787 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.81147928 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.832402763 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.039695554 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.811308634 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.021106452 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.06145941 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.731188706 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.858936102 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.81063237 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.807196646 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.810345833 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.955361167 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.898241928 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.811367744 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.807050529 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.918817811 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.928977647 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.00212743 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.404680304 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.879737613 seconds)
  done (took 883.514571237 seconds)
done (took 1196.822811775 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.80833151 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.811367328 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.797495285 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.811862527 seconds)
  done (took 28.977517259 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.817781996 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.814134679 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.816531848 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.815347464 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.822903084 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.815890971 seconds)
  done (took 12.654626221 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.868533644 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.81307801 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.811580731 seconds)
  done (took 21.243531418 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.883517104 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.220206741 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.919631742 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.25374028 seconds)
  done (took 10.026052647 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.817080721 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.816926538 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.819172969 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.819009265 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.81882586 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.819426901 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.817070357 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.819025615 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.821481491 seconds)
  done (took 18.118280241 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.275360345 seconds)
done (took 97.044957259 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.021706542 seconds)
    (2/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.881407722 seconds)
    (3/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.153208829 seconds)
    (4/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.19959088 seconds)
    (5/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.844088552 seconds)
    (6/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.955768763 seconds)
    (7/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.970136945 seconds)
    (8/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.871362091 seconds)
    (9/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.816973478 seconds)
    (10/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.865500076 seconds)
    (11/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.802376834 seconds)
    (12/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 3.425232208 seconds)
    (13/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.828703022 seconds)
    (14/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 3.742826591 seconds)
    (15/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.819305746 seconds)
    (16/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.818320751 seconds)
    (17/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 8.16563779 seconds)
    (18/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.209701788 seconds)
    (19/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.113565281 seconds)
    (20/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.848420968 seconds)
    (21/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.901984015 seconds)
    (22/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.902619213 seconds)
    (23/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.900733834 seconds)
    (24/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.835136879 seconds)
    (25/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.17446377 seconds)
    (26/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.116910736 seconds)
    (27/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.193654702 seconds)
    (28/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.998407506 seconds)
    (29/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.913566213 seconds)
    (30/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.92246416 seconds)
    (31/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.901728705 seconds)
    (32/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.193285576 seconds)
    (33/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.849316312 seconds)
    (34/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.117406015 seconds)
    (35/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.007292352 seconds)
    (36/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.846898737 seconds)
    (37/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.829572504 seconds)
    (38/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.057357111 seconds)
    (39/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.699710892 seconds)
    (40/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.931613713 seconds)
    (41/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.957289776 seconds)
    (42/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.90674363 seconds)
    (43/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.820051641 seconds)
    (44/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.937154093 seconds)
    (45/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.119534666 seconds)
    (46/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.202996859 seconds)
    (47/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.42004644 seconds)
    (48/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.079488013 seconds)
    (49/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.820556594 seconds)
    (50/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 3.531846665 seconds)
    (51/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.029993801 seconds)
    (52/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.154459717 seconds)
    (53/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.884575549 seconds)
    (54/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.949180238 seconds)
    (55/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.326385322 seconds)
    (56/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.891764611 seconds)
    (57/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.383338448 seconds)
    (58/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.007228756 seconds)
    (59/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.353350721 seconds)
    (60/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.126798674 seconds)
    (61/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.330671985 seconds)
    (62/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.926031789 seconds)
    (63/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.015462918 seconds)
    (64/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.591054945 seconds)
    (65/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.154322485 seconds)
    (66/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.111677867 seconds)
    (67/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.96855122 seconds)
    (68/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.101077942 seconds)
    (69/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.308594484 seconds)
    (70/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.856501718 seconds)
    (71/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.166344355 seconds)
    (72/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.749177754 seconds)
    (73/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.974669188 seconds)
    (74/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.808143393 seconds)
    (75/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.244056445 seconds)
    (76/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.808866434 seconds)
    (77/309) benchmarking ("sort", Int64, false)...
    done (took 6.942776849 seconds)
    (78/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.935648058 seconds)
    (79/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.108042337 seconds)
    (80/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.922253173 seconds)
    (81/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.680739356 seconds)
    (82/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.830006365 seconds)
    (83/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.156534755 seconds)
    (84/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.143819127 seconds)
    (85/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.36264262 seconds)
    (86/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.92995744 seconds)
    (87/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.027155597 seconds)
    (88/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.932583065 seconds)
    (89/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.191544648 seconds)
    (90/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.619400202 seconds)
    (91/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.227139032 seconds)
    (92/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.89025059 seconds)
    (93/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.430519349 seconds)
    (94/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.016544791 seconds)
    (95/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.160150797 seconds)
    (96/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.415042651 seconds)
    (97/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.782526018 seconds)
    (98/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.85462747 seconds)
    (99/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.849421723 seconds)
    (100/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.133882644 seconds)
    (101/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.931916784 seconds)
    (102/309) benchmarking ("sort", Float32, false)...
    done (took 5.589951953 seconds)
    (103/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.975829151 seconds)
    (104/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.506430824 seconds)
    (105/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.051069418 seconds)
    (106/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.719566479 seconds)
    (107/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.812445135 seconds)
    (108/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.816246555 seconds)
    (109/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.759664155 seconds)
    (110/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.671059672 seconds)
    (111/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.831521465 seconds)
    (112/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.486185455 seconds)
    (113/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.732469492 seconds)
    (114/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.91990734 seconds)
    (115/309) benchmarking ("sort", Bool, false)...
    done (took 2.276842465 seconds)
    (116/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.851673151 seconds)
    (117/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.825017063 seconds)
    (118/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.508949287 seconds)
    (119/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.111814171 seconds)
    (120/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.108448414 seconds)
    (121/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.827497325 seconds)
    (122/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.947477578 seconds)
    (123/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.84956121 seconds)
    (124/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.82334893 seconds)
    (125/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.045982605 seconds)
    (126/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.088646124 seconds)
    (127/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.962313097 seconds)
    (128/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.925735359 seconds)
    (129/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.746484038 seconds)
    (130/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.085246741 seconds)
    (131/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.827792734 seconds)
    (132/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.164939689 seconds)
    (133/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.813821962 seconds)
    (134/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.976233946 seconds)
    (135/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.421795592 seconds)
    (136/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.774316517 seconds)
    (137/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.92441808 seconds)
    (138/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.511874378 seconds)
    (139/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.975170577 seconds)
    (140/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.996035612 seconds)
    (141/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.072938935 seconds)
    (142/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.856920612 seconds)
    (143/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.147169004 seconds)
    (144/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.339056757 seconds)
    (145/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.851920318 seconds)
    (146/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.825549197 seconds)
    (147/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.99124228 seconds)
    (148/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.840725448 seconds)
    (149/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.91096962 seconds)
    (150/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.179953456 seconds)
    (151/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.197173456 seconds)
    (152/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.207656295 seconds)
    (153/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.876857454 seconds)
    (154/309) benchmarking ("sort", BigInt, false)...
    done (took 6.826584688 seconds)
    (155/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.855184317 seconds)
    (156/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.211618 seconds)
    (157/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.901672008 seconds)
    (158/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.810979226 seconds)
    (159/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.207800047 seconds)
    (160/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.346774595 seconds)
    (161/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.827568981 seconds)
    (162/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.348231637 seconds)
    (163/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.13150609 seconds)
    (164/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.914256613 seconds)
    (165/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.827885377 seconds)
    (166/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.991154156 seconds)
    (167/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.270335249 seconds)
    (168/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.815546568 seconds)
    (169/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.166900134 seconds)
    (170/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.013662323 seconds)
    (171/309) benchmarking ("sort", Int8, false)...
    done (took 4.783149789 seconds)
    (172/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.415431381 seconds)
    (173/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.874355105 seconds)
    (174/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.127968493 seconds)
    (175/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.064443168 seconds)
    (176/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.866838233 seconds)
    (177/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.026005097 seconds)
    (178/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.71646239 seconds)
    (179/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.811207556 seconds)
    (180/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.903061075 seconds)
    (181/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 3.715686041 seconds)
    (182/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.916378682 seconds)
    (183/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.758537417 seconds)
    (184/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.909584687 seconds)
    (185/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.857203854 seconds)
    (186/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.205913997 seconds)
    (187/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.863988056 seconds)
    (188/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.862398243 seconds)
    (189/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.87153014 seconds)
    (190/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.837686688 seconds)
    (191/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.533250768 seconds)
    (192/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.059610671 seconds)
    (193/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.002770542 seconds)
    (194/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.862456672 seconds)
    (195/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.316313508 seconds)
    (196/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.896115543 seconds)
    (197/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.847001587 seconds)
    (198/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.978586181 seconds)
    (199/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.836959371 seconds)
    (200/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.857473621 seconds)
    (201/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.818465968 seconds)
    (202/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.004448895 seconds)
    (203/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.891327566 seconds)
    (204/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.921038819 seconds)
    (205/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.86169703 seconds)
    (206/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.047478633 seconds)
    (207/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.234736274 seconds)
    (208/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.009801584 seconds)
    (209/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.623738085 seconds)
    (210/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.04236816 seconds)
    (211/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.430630501 seconds)
    (212/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 2.001898966 seconds)
    (213/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.026011097 seconds)
    (214/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.522362766 seconds)
    (215/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.097634523 seconds)
    (216/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.848883536 seconds)
    (217/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.814923987 seconds)
    (218/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 8.05759649 seconds)
    (219/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.390963507 seconds)
    (220/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.040524394 seconds)
    (221/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.141413294 seconds)
    (222/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.984047136 seconds)
    (223/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.950271436 seconds)
    (224/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.936474237 seconds)
    (225/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.43726569 seconds)
    (226/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.925725303 seconds)
    (227/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.138694377 seconds)
    (228/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.094788036 seconds)
    (229/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.875394121 seconds)
    (230/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.810141199 seconds)
    (231/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.952238387 seconds)
    (232/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.11521276 seconds)
    (233/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.930448161 seconds)
    (234/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.131238568 seconds)
    (235/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.928690822 seconds)
    (236/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.901474174 seconds)
    (237/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 9.395548605 seconds)
    (238/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 4.948654154 seconds)
    (239/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.314060795 seconds)
    (240/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.946678206 seconds)
    (241/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.902604773 seconds)
    (242/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.502608508 seconds)
    (243/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.977650427 seconds)
    (244/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.642055436 seconds)
    (245/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.93057517 seconds)
    (246/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.958149434 seconds)
    (247/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.98831216 seconds)
    (248/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.834001201 seconds)
    (249/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.861722458 seconds)
    (250/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.984765455 seconds)
    (251/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.831324692 seconds)
    (252/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.988500025 seconds)
    (253/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.956333607 seconds)
    (254/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.339273006 seconds)
    (255/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.821662295 seconds)
    (256/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.947408295 seconds)
    (257/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.983870363 seconds)
    (258/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.760199502 seconds)
    (259/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.196471237 seconds)
    (260/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.893630572 seconds)
    (261/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.237905873 seconds)
    (262/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.909966465 seconds)
    (263/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.897453965 seconds)
    (264/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.834637644 seconds)
    (265/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.957938765 seconds)
    (266/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.864077073 seconds)
    (267/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.912976838 seconds)
    (268/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.456143013 seconds)
    (269/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.998057072 seconds)
    (270/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.234432444 seconds)
    (271/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.85990882 seconds)
    (272/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.193437716 seconds)
    (273/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.960983455 seconds)
    (274/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.123991562 seconds)
    (275/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.94102959 seconds)
    (276/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.799003002 seconds)
    (277/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.220293802 seconds)
    (278/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.097759001 seconds)
    (279/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.932082415 seconds)
    (280/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.957653742 seconds)
    (281/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.133106478 seconds)
    (282/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.837817964 seconds)
    (283/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.051411149 seconds)
    (284/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.041694439 seconds)
    (285/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.222842506 seconds)
    (286/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.050379592 seconds)
    (287/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.953762066 seconds)
    (288/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.918439498 seconds)
    (289/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.819154837 seconds)
    (290/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 4.056140295 seconds)
    (291/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.993326875 seconds)
    (292/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.836052381 seconds)
    (293/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.67983027 seconds)
    (294/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.837007511 seconds)
    (295/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.844883146 seconds)
    (296/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.919279031 seconds)
    (297/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.436598799 seconds)
    (298/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.027142272 seconds)
    (299/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.882700574 seconds)
    (300/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.376112892 seconds)
    (301/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.127793995 seconds)
    (302/309) benchmarking ("sort", Float64, false)...
    done (took 5.657868147 seconds)
    (303/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.438590294 seconds)
    (304/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.84745297 seconds)
    (305/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.9703705 seconds)
    (306/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.867468531 seconds)
    (307/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.835311866 seconds)
    (308/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.491780472 seconds)
    (309/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.0735066 seconds)
  done (took 1005.978780534 seconds)
done (took 1008.020479391 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.870193167 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.863860791 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.848217944 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.869348729 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.959861091 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.886680828 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.857610339 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.849883909 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.895387369 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.897194556 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.848162715 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.887055204 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.850716939 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.850217861 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.84800998 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.86330326 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.155569888 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.875686212 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.86581317 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.858469721 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.865921423 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.847824748 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.898365489 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.88847494 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.852484882 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.850920676 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.853421239 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.869145127 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.960739202 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.852815302 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.851705333 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.861761289 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.15681619 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.874219842 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.844443924 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.869134005 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.860882037 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.859711881 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.85283871 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.882029673 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.294792061 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.855841312 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.851918544 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.850448185 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.85134463 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.852686253 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.852374748 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.856102283 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.863656699 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.864164298 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.292373897 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.871932077 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.853822267 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.850495437 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.861184023 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.851603488 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.85376354 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.867019574 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.871557473 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.866708641 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.14817027 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.884131394 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.853693648 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.86773538 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.859311138 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.331282421 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.853485287 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.856246932 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.296202423 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.86196601 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.32927928 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.86635376 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.852183629 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.865253381 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.883461586 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.156395664 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.87249548 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.850139783 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.859521034 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.850858266 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.861424846 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.865101825 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.856475943 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.852939447 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.866074671 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.890236889 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.862329322 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.853535064 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.861425109 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.871564652 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.85964082 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.864365075 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.855201203 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.847685943 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.86244089 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.856474265 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.856218632 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.856928729 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.857398647 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.862995489 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.29496175 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.876267086 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.849928631 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.849800444 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.852904967 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.866950386 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.294998356 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.86111944 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.875118244 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.900280097 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.854389798 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.149928783 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.884087308 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.870439374 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.861870549 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.857085423 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.849931926 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.151633669 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.323414773 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.87528434 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.855179121 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.853372529 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.871422878 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.856533559 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.850790095 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.160745265 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.882318363 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.869069625 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.978253709 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.865232313 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.886854399 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.853969455 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.858122745 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.889643831 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.871956883 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.886144614 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.857293809 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.870901856 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.871908143 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.851103935 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.867733485 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.86547358 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.856145269 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.860604305 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.849321621 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.889574996 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.866527668 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.867505917 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.87713917 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.977285143 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.854191299 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.151238123 seconds)
done (took 291.316160842 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.925122192 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.843578594 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.958216314 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.852399454 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.942004289 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.939457347 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.849018809 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.849287028 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.849836198 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.261420583 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.849616964 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.850541353 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.847102331 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.850447501 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.93949836 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.852776403 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.851030178 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.208958946 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.853535903 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.934320452 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.845743126 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.85024923 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.852415422 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.252115024 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.854747987 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.849672948 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.928372724 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.852214658 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.212973152 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.85039133 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.853554703 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.212850859 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.945952459 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.871956876 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.863235958 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.85989336 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.94243231 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.857741568 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.937598978 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.938620877 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.954367997 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.893287353 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.850112229 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.84663183 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.857063726 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.856104199 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.85177669 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.88185497 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.852007988 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.851643827 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.209924466 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.864261581 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.86308628 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.851169028 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.852763194 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.875446228 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.85214765 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.85568675 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.956113207 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.855295261 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.921347015 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.254436624 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.249217724 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.855820115 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.8503331 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.85319591 seconds)
  done (took 183.440443541 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.920955106 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.932316906 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.924678989 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.857802887 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.906732515 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.928361484 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.857184654 seconds)
  done (took 15.113964694 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.861337976 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.855746262 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.905316877 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.905852084 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.855115004 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.0081285 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.856495405 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.866518645 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 2.290564308 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.909160433 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.85641089 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.857308786 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.864064275 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.853889629 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.905062207 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.868106136 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.970790876 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.856874105 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.856998852 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.009100922 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.854705574 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.863422501 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.911535313 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.869072378 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.858538787 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.863691428 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.442801625 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.857433631 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.854386282 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.856487911 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.855539426 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.900845889 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.857076311 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.8561788 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.854396691 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.975283397 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.857679612 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.854814678 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.857683624 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.852342329 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.858560569 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.858205484 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.856985865 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.854665421 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.857831035 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.881399708 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.857377786 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.857942776 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.858377245 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.858068812 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.908740942 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.858812029 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.855739989 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.856832381 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.913610456 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.864483207 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.859397728 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.85545472 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.859196526 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.85515144 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.009890671 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.905999203 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.859054202 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.90721625 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.859037554 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.858990684 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.858981834 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.860070605 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.914221555 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.858346901 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.90712642 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.855614355 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.019982075 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.882501757 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.859861425 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.862444905 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.861808403 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.859490793 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.858194714 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.865170241 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.858387787 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.861253664 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.865472864 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.856877083 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.856679495 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.975217183 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.995398739 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.857141977 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.871882983 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.86641143 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.857588684 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.914128867 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.860616056 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.858146673 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.913095615 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.975495033 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.916539471 seconds)
  done (took 205.128407135 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.865324115 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.867066632 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.860894318 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.877132067 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.860619661 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.860060592 seconds)
  done (took 12.982296199 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.863267404 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.862070849 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.859999261 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.859820721 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.861178263 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.861362667 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.861068369 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.86417401 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.864206817 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.861266553 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.860903888 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.86213434 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.86246891 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.860624951 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.861004284 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.86055385 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.861942433 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.859807729 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.862249656 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.862392652 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.004137428 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.861581645 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.862309752 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.862122986 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.864993036 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.861422724 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.869596321 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.860632089 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.861503743 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.868804165 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.864342903 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.861007724 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.862406471 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.867358524 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.866253221 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.862293844 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.865138817 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.862079756 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.859411104 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.863293193 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.863472552 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.862339323 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.860789748 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.862504542 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.862707537 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.866309133 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.866591557 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.87073991 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.863202568 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.86344667 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.86305005 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.86270561 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.863644602 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.863826829 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.8640231 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.868908361 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.867441315 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.863772977 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.862386049 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.863790665 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.863579395 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.8636478 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.864965829 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.868389175 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.870368091 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.863546605 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.865482042 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.867831261 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.864111188 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.863059538 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.865042249 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.862626282 seconds)
  done (took 137.106432204 seconds)
done (took 555.570516193 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.142590099 seconds)
  done (took 8.937223305 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.978744252 seconds)
  done (took 8.87498351 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.404748076 seconds)
  done (took 10.198634716 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.865455968 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.875332415 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.869555672 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.856937933 seconds)
  done (took 29.272007994 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.880886831 seconds)
  done (took 8.675504138 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.871220474 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.857057744 seconds)
  done (took 15.559908613 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.944974343 seconds)
  done (took 8.740973417 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.940297654 seconds)
  done (took 8.738293006 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.876689914 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.884613041 seconds)
  done (took 15.571353644 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.844155474 seconds)
  done (took 8.639223461 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.51973778 seconds)
  done (took 11.323473502 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.867341132 seconds)
  done (took 8.676741715 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.901416557 seconds)
  done (took 8.696705458 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.997536695 seconds)
  done (took 9.792984953 seconds)
done (took 163.492680324 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.860051043 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.858869487 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.859790318 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.858262787 seconds)
  done (took 29.232150153 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.8997416 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.899150527 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.9013148 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.909455093 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.901849768 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.897894514 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.890661132 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.891385784 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.909775554 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.901733285 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.901216681 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.900667793 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.899518197 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.894439675 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.903001763 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.916277635 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.909242708 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.899903546 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.891213547 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.902538873 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.86703336 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.91062301 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.902183582 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.866369941 seconds)
  done (took 47.36397248 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.061866952 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.936719866 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.019030347 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.922458188 seconds)
  done (took 9.736796522 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.918069489 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.918754089 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.931688862 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.969766245 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.996693783 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.929441309 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.894090196 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.888334853 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.875216581 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.920697557 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.99625582 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.936791317 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.00958422 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.866879086 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.048119098 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.866065404 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.867813809 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.919277492 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.970823822 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.985077961 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.869009558 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.919562418 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.922181923 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.936463279 seconds)
  done (took 48.155600082 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.867078639 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.875471443 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.872613027 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.866715425 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.867466651 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.86702806 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.872983694 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.867575512 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.887440937 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.868453511 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.865773555 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.866333978 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.865692324 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.866696606 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.86690183 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.879546254 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.881178167 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.867526791 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.871149071 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.872939071 seconds)
  done (took 39.214723688 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.860941928 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.716423851 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.213783778 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.118231558 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.860395313 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.864220619 seconds)
  done (took 31.432975819 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.88230032 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.873077322 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.868484535 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.924927409 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.006138143 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.876256834 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.868859677 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.879653742 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.914896714 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.935257715 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.888206201 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.896228264 seconds)
  done (took 24.61396019 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.86412463 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.868998986 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.863889869 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.881161116 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.880098203 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.876223092 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.875995383 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.862122715 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.882778935 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.886787159 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.876350705 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.881411901 seconds)
  done (took 44.303321794 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.952366371 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.908487337 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.889347648 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.554614348 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.245611284 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.077460591 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.512751496 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.199531597 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.868115921 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.139501899 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.897018809 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.969798433 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.123119281 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.387205097 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.899408284 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.331700632 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.165908224 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.077196891 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.896542442 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.550721427 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.93334998 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.086397305 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.62388726 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.924231855 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.076428741 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.998219491 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.125538069 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.865356741 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.999356881 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.905520422 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.876198845 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.866334485 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.140277336 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.250595996 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.971963154 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.876628699 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.484213288 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.583142867 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.858054766 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.634730239 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.602530153 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.997053859 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.87675658 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.866102636 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.80113683 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.047242301 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.241533569 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.872618239 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.577875823 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.866555881 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.877235275 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.961594968 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.870073693 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.682830277 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.784926618 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.871818329 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.866595311 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.874794623 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.436408616 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.998662112 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.086349759 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.845536846 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.959170993 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.633306535 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.259297004 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.020297817 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.872203729 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.871850655 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.804370455 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.622968204 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.928425646 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.19813938 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.89073949 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.518489525 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.162266141 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.97903714 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.815261182 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.141732779 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.423694974 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.843350919 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.096541614 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.86915345 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.804236249 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.814342011 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.803556893 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.137543679 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.909453205 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.662251191 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.915063968 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.202826445 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.88125213 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.886581984 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.892717236 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.092746097 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.757663709 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.870780685 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.699978059 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.01774393 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.892014464 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.202664303 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.804729624 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.874094646 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.127755833 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.086205962 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.965170897 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.36887214 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.03512312 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.459485719 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.923808974 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.04667705 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.920445588 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.13842592 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.93370033 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.001679201 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.928850804 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.871487192 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.175561486 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.484377947 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.009740741 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.944733304 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.00175289 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.207168013 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.904997898 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.954625216 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.876720562 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.86964861 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.649241399 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.426435345 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.871232621 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.871587032 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.967022542 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.917801926 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.871831402 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.82023731 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.493274779 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.930478327 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.887081036 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.094838097 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.461499434 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.183449736 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.804696049 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.201383417 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.963507334 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.093362028 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.513439582 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.954229598 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.127379656 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.960038171 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.992661974 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.921457072 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.891541452 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.969400362 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.893073061 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.039538872 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.166420864 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.876301971 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.875639231 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.681740519 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.912642325 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.881869107 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.87830895 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.623272924 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.147614713 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.902367707 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.880645998 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.762475207 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.887179113 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.937120467 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.88015521 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.882625876 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.412126911 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.585259029 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.886271102 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.457426868 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.097732171 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.883844026 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.687459436 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.988620774 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.95616129 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.148326177 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.937960296 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.808485687 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.585174836 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.566633852 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.874037159 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.808646365 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.874415587 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.883837051 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.885166146 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.07117336 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.150806964 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.92322787 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.585259553 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.919765792 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.88463958 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.878873371 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.875647811 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.386484423 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.022094686 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.080439254 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.920964597 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.019460707 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.88817174 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.809756908 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.878976092 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.880293085 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.87585349 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.875219821 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.908476171 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.588771111 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.254090192 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.138208574 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.525983181 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.890662278 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.69854652 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.938321765 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.874761222 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.733990118 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.058313065 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.927562564 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.887617464 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.88716348 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.681882934 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.586561631 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.443373524 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.18063968 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.185204588 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.312575207 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.104437014 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.905317699 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.219097126 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.810937131 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.432718536 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.940645467 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.220394174 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.821722703 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.960884473 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.52352298 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.230000993 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.893203369 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.105716703 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.261913002 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.645516057 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.031114595 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.089554135 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.912698688 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.047479187 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.841393498 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.401579805 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.018754311 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.617889715 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.093053226 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.212770224 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.593404373 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.013022122 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.877966717 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.569308684 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.967617601 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.59574174 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.050788624 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.066406094 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.845423007 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.358107576 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.887853934 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.104792092 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.231011584 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.048936915 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.00063658 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.816186159 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.890702946 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.890986247 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.880804017 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.879470856 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.774839832 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.134227044 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.890265771 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.815365646 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.003679415 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.173793144 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.785847363 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.884857562 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.8805782 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.187042237 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.431580448 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.050230559 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 4.989910329 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.402686548 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.8813241 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.814909824 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.813937107 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.573289929 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.887113719 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.857873014 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.092616576 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.985970275 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.79233713 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.971881069 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.129411707 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.137226952 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.895399055 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.153193303 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.159776518 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.579839262 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.90819751 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.981605021 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.593386693 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.997464728 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.880853286 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.116896188 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.633297696 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.109317908 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.919611583 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.832478287 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.879755916 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.096088096 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.881812126 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.814510709 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.122960756 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.604822408 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.948905041 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.188434522 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.957585692 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.821571915 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.937198787 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.973144735 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.890945778 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.960951097 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.892051773 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.892131798 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.891866845 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.928370822 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.822423238 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.013917749 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.896438375 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.97683147 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.037271689 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.411224959 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.888545145 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.158292483 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.241191016 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.213200973 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.947180455 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.882869649 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.883428654 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.817091081 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.031284942 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.108069813 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.157450636 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.012340334 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.998423118 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.907525349 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.594059834 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.113025579 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.126300369 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.158887803 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.778522322 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.39509201 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.924841345 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.885177514 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.894445964 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.096326387 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.099426581 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.194523975 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.025617929 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.970148123 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.243174467 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.158308812 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.884196028 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.884765641 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.474244898 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.970658686 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.580749494 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.929530714 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.822197711 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.17101587 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.894666908 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.267255217 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.907093283 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.04395755 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.658217839 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.601583321 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.175570676 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.873214671 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.951750663 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.160306641 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.282611257 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.201456277 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.952596829 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.896468158 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.995077423 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.034099314 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.802049593 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.88706724 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.8836613 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.933757511 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.594809226 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.896203887 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.161850123 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.198866785 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.883355913 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.79288602 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.909142564 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.89617584 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.110192447 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.155645542 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.145412004 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.896346947 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.893620139 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.702814484 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.159998914 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.949852021 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.820669587 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.890848282 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.985681525 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.136326171 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.908183441 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.339306 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.598651842 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.162666454 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.890275753 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.908966949 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.070073001 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.261072321 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.216221167 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.429402308 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.098683855 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.478189361 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.477971003 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.189759925 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.892595302 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.066128528 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.191633822 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.891376396 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.981211968 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.927821909 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.159840399 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.204248805 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.956824263 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.608262164 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.859222474 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.230361502 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.44911827 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.829552032 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.89223961 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.947945997 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.889228488 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.0197933 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.900776894 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.800709035 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.06184588 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.652809562 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.176125363 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.89661397 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.879540032 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.642327382 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.193484024 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.926089576 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.034034582 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.901589328 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.565276901 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.242367732 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.14846091 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.979469301 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.899097823 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.894892498 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.892789334 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.876942238 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.088339845 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.088076088 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.169267526 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.016549985 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.930563509 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.894677838 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.108345578 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.104356242 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.803080688 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.037196506 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.990764638 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.93466283 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.797908391 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.396193447 seconds)
  done (took 1680.649133325 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.919579334 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.928646718 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.951990107 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.929645816 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.938085859 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.920201911 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.928904119 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.973258499 seconds)
  done (took 57.319385134 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.896169585 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.089381113 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.902009638 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.893079415 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.902320091 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.892264053 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.060395788 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.90273741 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.902671518 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.903270063 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.900987065 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.892686826 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.205977612 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.916591988 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.89410911 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.879079913 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.902007164 seconds)
  done (took 74.781343578 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.927069565 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.96686183 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.926065086 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.910976051 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.85563165 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.901380877 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.703169525 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.92058218 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.89555541 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.123883915 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.527896008 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.907724913 seconds)
  done (took 90.398006508 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.902547129 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.900057698 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.900938392 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.901455476 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.900889335 seconds)
  done (took 11.340318248 seconds)
done (took 2190.36348281 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.147450731 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.113718585 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.130521085 seconds)
  done (took 6.073967126 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.046043985 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.093234187 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.214197894 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.23453753 seconds)
  done (took 10.426094604 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.193763626 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.266766983 seconds)
  done (took 6.295418939 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.298931122 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.903078439 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.278852091 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.896138072 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.900290021 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.90026196 seconds)
  done (took 22.53665174 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.900337883 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.904513689 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.902011029 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.903497619 seconds)
  done (took 9.447388019 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.881859926 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.581901225 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.881300285 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.898157997 seconds)
  done (took 21.080064496 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.648556726 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.668476366 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.645267983 seconds)
  done (took 9.798433911 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.381121579 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.785611684 seconds)
  done (took 9.002486245 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.157446727 seconds)
  done (took 3.993477753 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.032452603 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.206833448 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.447187574 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.416765228 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.51124357 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.593070067 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.219207983 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.145665801 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.302782053 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.338860557 seconds)
  done (took 25.050325956 seconds)
done (took 139.162549917 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.275789804 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 8.130881186 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.100929026 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.233246934 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.164062784 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.106635964 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.109801779 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.218957327 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.741529595 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.739397407 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.232958911 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.144889887 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.271934414 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 8.127811233 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.283542589 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 8.125795071 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.120750874 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.293852468 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.934281335 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.166211449 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.113975848 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.872188081 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.076409908 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.886175096 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.124233562 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.053094495 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.449620255 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 8.132537149 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.088977196 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.462562248 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.05468274 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.321652857 seconds)
  done (took 173.998378095 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.661427855 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.900788906 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.899858136 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.90055737 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.272780884 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.900771085 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.900665987 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.900796345 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.155399291 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.125330993 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.900829142 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.266763458 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.903280182 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.900059391 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.903780145 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.901510023 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.266501472 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.722302116 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.911687053 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.914707466 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.92089449 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.192119233 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.922291958 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.244691897 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.300683924 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.921747065 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.902193456 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.921003074 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.903155919 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.912877484 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.918505722 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.901547115 seconds)
  done (took 209.011614838 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.901614197 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.903208006 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.903188907 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.903426184 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.909277058 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.911871651 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.904067888 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.902855174 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.473637472 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.468414121 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.912518582 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.906985076 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.908373872 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.903630186 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.91399396 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.903336807 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.914155697 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.914189433 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.908205345 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.909867732 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.912816263 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.678503753 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.914167635 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.664902484 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.907749336 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.910194108 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.904660284 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.912792326 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.914279545 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.916290329 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.918094084 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.903503507 seconds)
  done (took 221.591893119 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.106695146 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.908913925 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.911058922 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.859737496 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.91081881 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.910781941 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.903295003 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.107752916 seconds)
  done (took 19.48241127 seconds)
done (took 625.931944848 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.363028106 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.213168897 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.087750635 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.9348954 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.155221565 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.971781496 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.930777574 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.994291247 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.668656853 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.002162339 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.56868715 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.946192864 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.654498066 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.951216431 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.057175606 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.986110377 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.489887171 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.577453134 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.102568205 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.983636163 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.107823649 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.882902843 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.00412686 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.681826048 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.681185032 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.92941563 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.105373381 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.498618462 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.940491863 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.092478368 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.657721843 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.321930919 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.94514964 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.928828841 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.983140021 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.964406507 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.273210694 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.940571878 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.057449574 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.690575597 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.97560755 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.560100612 seconds)
  done (took 104.70349528 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.902665781 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.900753215 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.899916969 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.901082755 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.901535022 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.901217126 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.901243769 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.900234743 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.901132455 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.899805958 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.900418691 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.9025432 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.899726052 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.901016788 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.899348422 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.899797119 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.901083241 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.902914108 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.900099806 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.900808341 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.90175324 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.900486736 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.901823925 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.901331223 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.901660333 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.900933744 seconds)
  done (took 51.27964427 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.914536586 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.05388355 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.134604979 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.931501965 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.91432191 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.917275574 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.932841888 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.918941281 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.91780607 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.917325104 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.003540513 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.919247403 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.931129161 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.134545208 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.92797481 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.913793221 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.914660068 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.913519313 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.059401319 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.929223699 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.933368982 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.918113029 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.931858316 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.92641976 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.916134365 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.913893918 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.91650532 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.38823926 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.921238882 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.004568143 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.955182883 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.933428387 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.358466595 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.1410141 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.965395157 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.919599752 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.914446777 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.009246103 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.918766547 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.914692883 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.932145183 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.918562605 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.136575248 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.418651544 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.927610579 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.914081827 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.402344054 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.015236675 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.955894645 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.925782603 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.139665169 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.929919642 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.916518714 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.916637401 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.951825113 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.9252278 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.914491657 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.282093764 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.925459789 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.932330555 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.920644853 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.914833551 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.069657332 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.921860771 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.056333016 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.923587019 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.92245711 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.916666583 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.138730607 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.930911044 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.423348127 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.927956857 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.915918055 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.005002448 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.060050166 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.423470372 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.92770053 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.072761946 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.376299448 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.939011172 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.922573936 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.381495146 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.943236453 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.922953015 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.917087273 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.917863168 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.91663151 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.961570953 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.932202832 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.353887845 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.423512263 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.295162355 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.942961418 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.931819768 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.916801341 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.284300526 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.924198509 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.916952391 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.130828959 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.435349942 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.930356065 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.924176621 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.410705617 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.930899065 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.936771258 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.925641782 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.143347034 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.93381445 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.963694638 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.917856961 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.92525616 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.921027044 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.935482657 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.923393935 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.917431876 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.398138759 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.024776828 seconds)
  done (took 237.45163515 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.915373573 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.933991198 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.913528372 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.912076872 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.912352632 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.91718052 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.911501502 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.911759754 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.917672981 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.912032949 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.911173709 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.912714017 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.914343572 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.911603087 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.956163121 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.918930934 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.525097555 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.913964594 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.913477836 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.914331481 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.561707509 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.920150969 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.911164464 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.920096836 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.914101819 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.912771736 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.914893447 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.948856112 seconds)
  done (took 168.804933613 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.919158031 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.032586928 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.933879125 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.947194481 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.927975721 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.917440562 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.943243656 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.934541423 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.924013964 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.918147456 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.91856074 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.979545408 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.931873387 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.019645964 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.951987785 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.949806559 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.022984644 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.929798642 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.917959021 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.918423138 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.948540152 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.915826895 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.98028236 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.044634061 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.935610042 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.036642253 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.923024459 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.921241676 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.919982539 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.036001669 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.931907253 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.979871502 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.946289774 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.939055273 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.038358683 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.031866736 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.027508346 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.951828469 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.924517246 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.919274338 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.918961745 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.909332352 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.036462417 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.935336722 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.921832817 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.026921294 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.935736438 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.92215899 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.930229853 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.919756566 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.934022087 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.937669902 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.986110421 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.049286589 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.951610074 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.946342105 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.945230469 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.219268371 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.93413124 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.019892823 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.916665579 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.037030846 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.937849386 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.910637807 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.922372274 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.926871936 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.950690508 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.951812565 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.025655505 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.930664191 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.022364571 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.95813223 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.928792573 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.921915245 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.92342829 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.039712481 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.034701172 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.958671457 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.95724894 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.95138836 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.916771699 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.922774577 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.911566758 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.940158048 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.925797701 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.037081513 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.035215881 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.931159981 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.924838373 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.924162255 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.925730531 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.949002603 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.045443827 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.954769761 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.019090005 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.991320885 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.993679985 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.934789155 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.93609587 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.926808542 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.985425094 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.935247408 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.935872197 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.2688293 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.997405919 seconds)
  done (took 208.000270884 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.38298778 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.979370836 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.978654247 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.200371629 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.349524432 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.780966985 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.969914001 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.971989075 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.996943678 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.13340515 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.026452583 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.986825132 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.95909428 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.946775758 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.973839537 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.992450923 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.974670055 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.282669023 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.097408931 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.069653342 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.951097891 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.234072237 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.291708726 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.352099356 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.006149799 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.288930906 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.656819386 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.220248765 seconds)
  done (took 62.914547132 seconds)
done (took 834.994464957 seconds)
SAVING RESULT...
DONE!
