cset: moving following pidspec: 31925
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.248727449 seconds)
loading group "string"... done (took 0.555823942 seconds)
loading group "linalg"... done (took 7.640821603 seconds)
loading group "parallel"... done (took 0.171818032 seconds)
loading group "find"... done (took 1.179405212 seconds)
loading group "tuple"... done (took 2.110589813 seconds)
loading group "dates"... done (took 1.327404023 seconds)
loading group "micro"... done (took 0.24558581 seconds)
loading group "io"... done (took 0.697075933 seconds)
loading group "scalar"... done (took 40.875159729 seconds)
loading group "sparse"... done (took 12.575576802 seconds)
loading group "broadcast"... done (took 1.125940625 seconds)
loading group "union"... done (took 13.93353167 seconds)
loading group "simd"... done (took 4.9783541 seconds)
loading group "random"... done (took 9.825101049 seconds)
loading group "problem"... done (took 2.141228684 seconds)
loading group "array"... done (took 22.496873564 seconds)
loading group "misc"... done (took 2.083066362 seconds)
loading group "sort"... done (took 3.431402186 seconds)
loading group "collection"... done (took 19.427014255 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.576152162 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.141547908 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.148275599 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.146674708 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.189405379 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.153461282 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.156338905 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.098578831 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.967353992 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.172190898 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.151078298 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.518692911 seconds)
done (took 5.145003188 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.216826707 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.095168112 seconds)
    (2/2) benchmarking "String"...
    done (took 0.103601277 seconds)
  done (took 0.870020986 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.077158336 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.144573512 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.093880034 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.076727931 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.094600519 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.077944756 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.095794564 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.080128264 seconds)
  done (took 1.343174535 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.08602393 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.096409354 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.082336965 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.097729674 seconds)
  done (took 1.04112501 seconds)
done (took 4.234049606 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.73440366 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.269614022 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.203895204 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.463024118 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.194363315 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.213776001 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.665355141 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.338590083 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.250849121 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.100184838 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.141382482 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.384001786 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.137751984 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.671263037 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.089249692 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.123077368 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.177484106 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.437440399 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.081799339 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.109342728 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.115424861 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.140374335 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.127159936 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.09189116 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.185374684 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.081162145 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.191235449 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.106741201 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.080521634 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.285507602 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.199932489 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.686163285 seconds)
  done (took 10.793645662 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.110590228 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.132140831 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.09745959 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.138256848 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.13178196 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.097541074 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.084519048 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.097436288 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.12319255 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.174449084 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.111676007 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.13461507 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.095075688 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.08227398 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.117320181 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.246202979 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.121144397 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.104349518 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.101226839 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.104087658 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.122905611 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.113056137 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.10906289 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.093237776 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.167771065 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.221416977 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.109424733 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.12532313 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.095367364 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.110749845 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.143010026 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.140591977 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.093268056 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.079603062 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.17017317 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.123094005 seconds)
  done (took 5.114219179 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.074925182 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.189967279 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.12092677 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.167491489 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.08011422 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.142949116 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.094636273 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.112877177 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.254694797 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.179948968 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.174617267 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.139787632 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.099974808 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.096312896 seconds)
    (14/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.153327449 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.080827741 seconds)
    (16/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.095795843 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.078719884 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.64622192 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.121557702 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.148297574 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.11363352 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.102076433 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.083809247 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.371394751 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.103095569 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.078981841 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.09759166 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.064130389 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.157787207 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.098895261 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.139174496 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.119329341 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.081400849 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.134383473 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.205131339 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.108437567 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.133398367 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.095404532 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.078735626 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.177213095 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.103935451 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.079158674 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.121641194 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.133842146 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.133906281 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.095962229 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.079679399 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.204005273 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.09555284 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.113063158 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.950200884 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.180766134 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.090041698 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.096714409 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.323542892 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.097882192 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.101384504 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.076487761 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.298154455 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.18089146 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.096919317 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.078320029 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.095736556 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.080836166 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.39613288 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.079753471 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.043155822 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.081114761 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.107000498 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.08169559 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.096153973 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.104632609 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.08670791 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.114959203 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.079207552 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.09911426 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.078429175 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.09570824 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.081017937 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.108224249 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.101332194 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.08157595 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.163061753 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.079625473 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.117252103 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.128302055 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.085322783 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.097636873 seconds)
    (89/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.077486815 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.134754805 seconds)
    (91/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.095873889 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.082554666 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.099970123 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.134459125 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.080593114 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.110208389 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.098189418 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.141022877 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.079844271 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.174721556 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.079571444 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.125384879 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.099071121 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.113644565 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.110474348 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098377697 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.082534213 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.095351797 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.077265455 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.164141811 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.078783963 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.09868363 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.082125368 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.111952264 seconds)
  done (took 22.775486136 seconds)
done (took 40.435600798 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.32270811 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.104509676 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.10489108 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.104246529 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.101417835 seconds)
  done (took 1.488707613 seconds)
done (took 2.214462149 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.28754616 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.170915358 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.09451274 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.166221649 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.093372443 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.171864218 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.158125163 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.110690141 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.200978289 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.093027544 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.163978381 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.094008205 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.077233319 seconds)
  done (took 2.632641073 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.093584612 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.116671967 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.082505779 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.112344653 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.077324878 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.112522229 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.093024794 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.117922587 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.111216882 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.087169307 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.094780183 seconds)
  done (took 1.826189038 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.093017565 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.11487327 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.083287366 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.11161337 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.076705922 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.111309229 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.093986804 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.117232856 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.111272281 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.08668135 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.0948806 seconds)
  done (took 1.816668923 seconds)
done (took 6.99116908 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.089502352 seconds)
  done (took 0.807526419 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.917984562 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.816988639 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.111648892 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.148851036 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.298884112 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.188575905 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.467316094 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.123607112 seconds)
  done (took 10.997453563 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.14555734 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.084138427 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.102685415 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.086519323 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.101728678 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.082203575 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.098643909 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.099361597 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.08405425 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.104318523 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.0847071 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.102367391 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.102321101 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.083808598 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.103764307 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.086294927 seconds)
  done (took 2.339424687 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.119698975 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.118356533 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.104677236 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.10722578 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.08580102 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.102546035 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.105442942 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.087612857 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.100305406 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.10321822 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.090273694 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.105165273 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.103092624 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.079687192 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.107319599 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.108931327 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.086560131 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.106606604 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.108895646 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.090061078 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.107249909 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.097114152 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.087126159 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.108485205 seconds)
  done (took 3.254879122 seconds)
done (took 18.121362939 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.157535529 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.107206007 seconds)
  done (took 0.994224659 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.094161483 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.114020997 seconds)
  done (took 0.940672531 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.096120266 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.096079714 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.119267781 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.108377477 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.079914875 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.097936425 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.120020068 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.081823053 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.097659224 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.081106776 seconds)
  done (took 1.714549798 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.080975098 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.109588749 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.101422402 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.093921133 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.105232109 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.094956366 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.087266761 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.0999576 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.110110419 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.077276642 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.104503991 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.115266589 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.085028097 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.11578437 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.106676347 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.083849681 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.102840899 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.099520733 seconds)
  done (took 2.512175124 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.078206738 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.095633923 seconds)
  done (took 0.910392224 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.08043946 seconds)
    (2/7) benchmarking "second"...
    done (took 0.093868478 seconds)
    (3/7) benchmarking "month"...
    done (took 0.08120141 seconds)
    (4/7) benchmarking "year"...
    done (took 0.098688016 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.095459142 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.076455328 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.09576865 seconds)
  done (took 1.357836007 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.490832677 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.137344519 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.264730907 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.102455996 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.119861386 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.300880072 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.098225384 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.084061681 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.101784203 seconds)
  done (took 2.474954758 seconds)
done (took 11.638098148 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.091405804 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.117739184 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.113783655 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.460834527 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.105990945 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.096958034 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.14772179 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.244331829 seconds)
done (took 2.119969724 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 0.142422803 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.323566816 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.114563107 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.067953004 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.096165877 seconds)
  done (took 1.346647968 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.078829145 seconds)
    (2/2) benchmarking "read"...
    done (took 0.101596076 seconds)
  done (took 0.923444218 seconds)
done (took 3.159171731 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078919857 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.13113689 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.080477517 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.096434608 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.080770223 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.097134092 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.078189009 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.098918503 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.081457379 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.098833032 seconds)
    (11/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.098237448 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.080838282 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.098085875 seconds)
    (14/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.08029225 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.095868565 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.078459825 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098806432 seconds)
    (18/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.07804468 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.095875556 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07869943 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.09589497 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.080972576 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.096099481 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.077767026 seconds)
  done (took 2.933964096 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.097665016 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.097112778 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.101771057 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.084924885 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.103523843 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.088023607 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.104142034 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.099344633 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.086657172 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.100268704 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.101714134 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.0847945 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.101146974 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.084362624 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100262589 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.102296724 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.086247214 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099483422 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.084057803 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.101792723 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.104024473 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081136645 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.102959882 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.103505819 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.084107588 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.102499474 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.08360613 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.098899739 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.103888474 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.083996404 seconds)
  done (took 3.606770588 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.084248338 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.093309234 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.077908712 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.103073831 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.07938638 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.09840962 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.077807321 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.097336033 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.080256553 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.096387813 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.080723086 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.096303291 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.078929312 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.097903081 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.079973773 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.09996481 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.109700346 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.079028453 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.097149004 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.078896084 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.10033213 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.078220554 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.096752236 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.078654392 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.096832259 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.078368346 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.096674049 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.079406563 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.097767234 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.079340273 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.099520852 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.0825271 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.096717814 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.085202319 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.099951864 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.078699075 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.099753012 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.078059006 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.097890096 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.096297255 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.078074673 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.096108735 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.078575861 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.103917898 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.078823569 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.099007758 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.07956893 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.098523775 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.078789715 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.100696863 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.078033775 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.097523889 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.080741338 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.096474011 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.082497565 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.094851675 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.095502829 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.07817557 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.09834121 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.078495648 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.096359907 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.078324948 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.09892391 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.07957999 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.112810656 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.086555369 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.097056149 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.080701582 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.097602706 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.081715116 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.09788557 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.110505188 seconds)
  done (took 7.226328396 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.082077094 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.106846861 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.081017618 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.098649665 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.077051094 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.097806795 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.101045786 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079573897 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098810779 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.085885883 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097257393 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.080819701 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.097263939 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.110137286 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079381167 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.099687333 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.085974305 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.095546706 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.079624986 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.10071331 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.080675035 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.100762768 seconds)
  done (took 2.76613578 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.207440413 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.104230272 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.141058248 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.106270559 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.08254503 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.107906725 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.104596411 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.087685431 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.104708321 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.084838544 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.101896215 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104711864 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.084353538 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.102393664 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.102594409 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.08647868 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.104888964 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.087188878 seconds)
  done (took 2.66043999 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.092098701 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.098010868 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.101626637 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.097446674 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.098662476 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.083449812 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.104321774 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.109032143 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.083859495 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.10121181 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.092307238 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102482286 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.103195896 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.082330186 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.1033556 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.082882088 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.102721444 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083096236 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.110576637 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.106582027 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.106474759 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.092231562 seconds)
  done (took 2.895167718 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.096289513 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.101391653 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.117288201 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.084352998 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.096064178 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.080876832 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.107185255 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.082348991 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.108241805 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.101880986 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.082048684 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.098899078 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.088533022 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.099948138 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.106244819 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.081769884 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.10275203 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.082584071 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.102652599 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.07887718 seconds)
  done (took 2.65826809 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.100837467 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.210316988 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.099778156 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.091862732 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.102287289 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.083826209 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.11118102 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.101509912 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.084239331 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.125487207 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.101487941 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.08356114 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.110827593 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.107689784 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.102307988 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093463417 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.111002133 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.111993411 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.084711832 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.101204598 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.127874279 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.084562105 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.11137786 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.102324564 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.084246596 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.101824821 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.101896685 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.089924661 seconds)
  done (took 3.683696445 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080527949 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.100299124 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.079988493 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.099078506 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.080298334 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.099001526 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.079737075 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.098420513 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.082108881 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.09796945 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.082116326 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.100140164 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.084533466 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.101413169 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.08204295 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.101419562 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082103951 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.098478151 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.07946462 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.09779938 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.08264592 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100363296 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.082828185 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.097870617 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079849426 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.100533081 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.080128508 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.097941649 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.08301601 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.098041492 seconds)
  done (took 3.472274131 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.090080288 seconds)
    (2/2) benchmarking "in"...
    done (took 0.105359428 seconds)
  done (took 0.956254219 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.077933601 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.114441901 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.077549515 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.102397718 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.085148305 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.099156234 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.106899982 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.085230449 seconds)
  done (took 1.510175867 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.094712519 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.110772923 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.083027247 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.113253562 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.112325119 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.096721051 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.166563726 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.102887678 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.088087018 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.099201692 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.114987754 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.082688312 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.108168198 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.082390714 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.107277398 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.088806971 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.10033612 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.089349606 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.104201985 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.100159845 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.084430782 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.112889306 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.085106459 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.098390427 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.085110304 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.11015419 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.108324218 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.081963411 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.101696585 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.107233743 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.086138274 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.092611022 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.08135287 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.101385575 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.079666671 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.109336831 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.112863779 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.085665223 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.11183195 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.084122269 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.113339117 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.096937542 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.089041484 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.108065321 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.093047932 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.101852364 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.084882849 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.097681521 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.080235899 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.103665738 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.097260311 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.083042154 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.096629912 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.091388987 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.105587854 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.111931089 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.079763728 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.100314818 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.083441051 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.101901873 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.087367111 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.10051401 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.08354459 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.098326201 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.105707116 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.085456173 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.106546442 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.076433972 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.094190504 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.080814789 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.113131311 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.124736424 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.091992654 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.103709206 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.084877472 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.100171343 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.105018647 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.085691355 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.109565589 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.091112168 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.102697755 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.109115366 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.090471185 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.102032361 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.085788384 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.109938731 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.099879737 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.086086238 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.100831492 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.098165482 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.100852743 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.080905691 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.097779436 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.10833111 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.085133592 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.099689454 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.080168147 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.109962602 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.07792934 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.103094148 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.086044132 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.103412152 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.111434194 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.089009414 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.108540435 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.109642531 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.090742931 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.101751002 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.086162076 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.098206219 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.084748907 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.105154966 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.090511948 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.096155543 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.104936958 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.084516548 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.103778062 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.090353769 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.100558723 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.085397741 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.109698208 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.109049021 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.082034496 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.099123744 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.08638022 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.103602483 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.088096494 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.109401241 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.100933995 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.07925489 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.097668437 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.086946702 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.102175992 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.088683404 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.108152352 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.104875922 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.078641504 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.101067268 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.088642305 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.109590878 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.083478183 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.102726772 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.107173427 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.084719101 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.101332616 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.089402381 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.104628567 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.082756763 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.106647212 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.085899113 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.098527443 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.107330909 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.086371548 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.101763786 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.087588556 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.107053292 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.085979795 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.10341962 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.101183535 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.08956633 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.1046229 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.083394093 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.102485472 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.082439632 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.111512055 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.104965729 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.078851484 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.099486242 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.090527701 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.10058323 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.083333082 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.102190782 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.086228839 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.10344302 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.101806939 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.082645109 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.104316747 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.096144082 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.107754788 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.104807553 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.089275065 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.112654647 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.083100206 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.10457575 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.083818104 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.10380811 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.104335175 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.09136279 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.108653458 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.089244292 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.105598509 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.079664349 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.10849281 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.110418762 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.082774744 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.101087939 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.082688159 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.106033639 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.109525198 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.087321595 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.104122235 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.082314661 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.103375876 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.089049829 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.105501812 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.10293271 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.083741676 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.107960052 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.083966687 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.11042457 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.085406213 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.111902763 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.106700102 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.079242069 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.107971947 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.082047543 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.109376529 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.079039744 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.100446288 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.101836433 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.084663019 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.102170765 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.086742443 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.097575435 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.092057413 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.110083159 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.084725298 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.101889485 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.103520129 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.092960475 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.104528712 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.086923424 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.106690135 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.089104705 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.115447185 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.102329428 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.086765091 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.11276238 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.084862221 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.09744252 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.089531546 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.102364677 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.102450973 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.082601374 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.10144204 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.087796471 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.112026692 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.106327478 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.077627611 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.10507908 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.082530589 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.101907885 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.07956469 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.10956436 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.087997867 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.105785601 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.112027244 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.085275572 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.105497855 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.088857331 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.103169606 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.085306614 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.1045589 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.106705704 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.086166436 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.106157936 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.084165847 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.1052416 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.082770241 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.104711997 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.086598234 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.103864287 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.083761631 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.109701515 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.10393878 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.084406502 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.106020506 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.085904975 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.1045565 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.084963056 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.102355126 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.106710037 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.084627587 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.10345145 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.087211528 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.099334019 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.092507379 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.103857287 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.091723513 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.104158129 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.100230124 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.089993282 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.106194927 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.089128055 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.10468798 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.105708528 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.086585133 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.103894223 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.087565924 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.112256334 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.082852627 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.112231439 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.109328076 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.084671896 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.106317289 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.084970765 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.105299441 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.08372786 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.105767868 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.085169586 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.10410254 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.084101088 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.10826949 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.105335416 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.083581344 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.103718486 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.084321949 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.102159235 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.083115489 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.096057591 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.081587005 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.102325229 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.10321435 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.0923303 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.105348953 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.08829074 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.103214494 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.087292266 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.102795897 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.081559392 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.113086765 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.113759141 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.08541772 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.113073898 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.102896926 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.086041483 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.113520056 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.078970478 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.102594424 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.083183102 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.101497772 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.111994928 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.085746919 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.112206011 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.084820034 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.103692152 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.082608151 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.105758197 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.083323463 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.098525974 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.083689469 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.106751175 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.105713955 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.084055449 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.104808125 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.086485313 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.103578451 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.089504908 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.109529399 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.083497172 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.102177039 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.099933774 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.082873274 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.103557778 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.088452267 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.105431836 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.083021539 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.101780323 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.08515859 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.10548651 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.085306978 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.10381091 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.106038375 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.092180838 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.104243898 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.088490662 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.109011802 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.079622152 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.107394186 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.104960961 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.085166153 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.103618662 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.089618478 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.108030849 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.086834784 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.112408939 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.104898453 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.086417858 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.104593201 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.083395054 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.105201682 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.085516618 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.104618149 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.085377305 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.105217617 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.112661945 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.083204135 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.107249712 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.084806125 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.104996958 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.089592122 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.107166302 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.087819379 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.113406596 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.107087516 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.08662508 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.110829703 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.088826295 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.108076537 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.106375367 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.086423309 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.110804132 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.084561864 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.11310112 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.085751698 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.105593667 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.106710512 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.082818126 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.104705512 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.084604307 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.104368071 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.089993899 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.107061771 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.084843477 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.103649933 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.082968408 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.106130332 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.109781239 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.093851849 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.107201832 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.089086984 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.100009846 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.081858482 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.106774162 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.10205963 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.086666669 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.108280204 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.092258515 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.107670662 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.08530314 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.10443645 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.091768733 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.110984343 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.10998429 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.083718852 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.109482363 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.087312481 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.106704061 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.085896054 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.104998008 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.107036053 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.090593979 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.106956166 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.085510803 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.113445086 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.08927064 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.106569579 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.105949135 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.085972479 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.105441609 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.081251185 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.106061008 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.088010605 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.111281101 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.106851837 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.085809439 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.114115345 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.084960946 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.104947755 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.089330642 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.105235192 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.111252853 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.080756174 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.105652547 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.087034315 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.106451766 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.081464988 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.104397365 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.082888176 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.107301853 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.084889655 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.100454538 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.114567481 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.093329664 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.107504713 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.084191512 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.104023601 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.08086037 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.100713296 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.085479949 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.107307126 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.107222663 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.095524571 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.104816792 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.085222061 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.10135815 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.08627471 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.109403225 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.108829286 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.083623553 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.102177872 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.084925188 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.108210762 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.092886054 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.104471935 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.08570557 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.110112468 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.08747923 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.103934145 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.110230609 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.082286821 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.109536173 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.096236383 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.106857644 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.086799829 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.111661024 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.113492434 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.086451425 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.100799636 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.086546972 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.107404995 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.085519951 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.106931502 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.106651983 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.099736164 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.109301567 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.084935912 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.105472748 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.107897587 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.085793697 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.112842646 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.087973509 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.10649353 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.090391864 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.106884586 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.11413789 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.088355754 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.111416556 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.087655756 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.108312926 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.08469813 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.1061806 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.10317391 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.084408508 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.107345727 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.086523223 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.110303786 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.111295789 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.084404596 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.113972293 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.092855254 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.111375979 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.08230765 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.105156415 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.085027665 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.100875863 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.107495941 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.08405984 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.103818211 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.083613809 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.104467918 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.086229841 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.112511639 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.087678587 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.106671759 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.085482115 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.099985408 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.109158595 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.08907534 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.107216921 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.082878843 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.106415475 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.087286728 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.111556626 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.110909416 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.086586994 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.10704898 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.087710316 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.106411608 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.082903221 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.112316493 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.085357532 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.108438386 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.085438675 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.106045333 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.107299425 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.08987882 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.112039278 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.0876507 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.108766558 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.118483181 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.089799305 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.104076984 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.083733861 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.11191855 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.084379279 seconds)
  done (took 58.838343517 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.145950442 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.07992438 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.099018637 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.080925611 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.11641195 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.103346519 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.081916602 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.102200112 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.083044965 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.105323764 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.0818268 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.101595054 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.111785181 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.127598899 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.096129569 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.107204933 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.080955413 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.103560624 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.101720589 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.082364812 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.113013972 seconds)
  done (took 2.920260715 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.103156967 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.116960857 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.114927784 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.121140656 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.092221359 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.118549732 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.117675366 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.119742828 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.102234005 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.113921169 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.122089393 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.118854982 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.094664721 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.112952586 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.112925413 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.095697603 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.122098497 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.112323262 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.120036183 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.097352552 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.116787385 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.117592866 seconds)
  done (took 3.275674975 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.084150783 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.101656809 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.086247385 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.101091173 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.086268011 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.101587391 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.090601161 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.104332424 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.089561075 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.105171281 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.084554198 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.104965804 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.107984303 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.081075512 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.105398143 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.084191785 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.153529914 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.110978627 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.085543885 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.107983911 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.080101608 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.108739796 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.101430862 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.081849842 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.105630189 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.090290985 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.107028665 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.084954529 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.106259319 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.084815237 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.106617554 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.083712423 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.107056577 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.106518032 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.085000621 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.105281591 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.086161662 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.106099817 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.081506143 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.104494503 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.086321419 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.102223484 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.086444384 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.10743654 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.084356709 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.104283405 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.086363773 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.106210534 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.080624379 seconds)
  done (took 5.560426414 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.104275635 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.163817609 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.088506484 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.146112671 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.122534309 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.114453666 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.090097171 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.143914296 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.105615276 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.085633766 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.125481009 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.120570525 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.104397972 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.091659817 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.11284675 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.108017393 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.088061793 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.105397111 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.110801931 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.086186849 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.111843019 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.093292298 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.122590568 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.120515975 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.111309882 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.086002817 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.10636355 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.112555853 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.099579955 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.112601311 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.112319503 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.093120706 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.123821219 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.108754043 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.086079848 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.109943447 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.12495252 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.107496149 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.090112104 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.104465617 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.08950407 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.112039295 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.113291972 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.103896412 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.10838698 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.112136782 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.086756479 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.103925572 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.119841263 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.089368714 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.116452921 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.121046931 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.091544267 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.108443931 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.112153156 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.12343965 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.087268985 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.105766155 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.090477084 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.121113639 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.105490332 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.09180046 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.122186491 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.11001994 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.116439825 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.102299654 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.111913943 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.111688713 seconds)
  done (took 8.307759222 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.092341592 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.110019694 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.121758202 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.122010918 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.091865969 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.113725476 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.113082084 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.093499758 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.114388533 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.119844233 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.114884476 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.136530213 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.087580142 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.116805174 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.1117855 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.091874636 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.111800322 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.111982377 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.092133895 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.111795106 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.111698833 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.12226339 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.090982471 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.121122101 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.142061534 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.104924764 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.091367553 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.111217917 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.12114329 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.11124496 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.124317752 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.09204548 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.113645369 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.122262784 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.125146466 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.093654463 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.106908231 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.113683345 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.095691833 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.114327461 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.110097678 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.10372599 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.114758794 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.10640858 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.0926978 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.113711669 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.121223957 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.122971739 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.114281045 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.097840931 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.113220146 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.122942056 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.112176188 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.094716542 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.124377948 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.149323133 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.120209487 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.119811217 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.110288858 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.101263579 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.120491897 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.128247843 seconds)
  done (took 7.748273065 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.105465699 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.114016783 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.117233597 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.099716047 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.08366304 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.109212896 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.083572835 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.103950078 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.115645843 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.095730102 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.118707477 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.110178011 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093147465 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.115738227 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.108140185 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.111231778 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.088969685 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.108402017 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.114261795 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.108523259 seconds)
  done (took 2.93243645 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.092343543 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.122825547 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.084611836 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.111605255 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.107656352 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.090309729 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.106826255 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.106819299 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.084796975 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.106956169 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.095620816 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.117205714 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.10476959 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.092412148 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.118259038 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.110336113 seconds)
  done (took 2.48044167 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.094813178 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.116897232 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.11909136 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.083409909 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.104405683 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.079758906 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.105114316 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.100132254 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.080790099 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.119926273 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.084219827 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.110519482 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.104852849 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.082146471 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.100441201 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.088656891 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.104831187 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.085709848 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.108608281 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.122499832 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.098255252 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.107684787 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.108495188 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.090463673 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.108938623 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.093054814 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.109345082 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.106880659 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.086526846 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.108720134 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.087593427 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.116827358 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.106062609 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.087343965 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.106268897 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.085451093 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.109132302 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.088513587 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.112457988 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.107259425 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.08528658 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.104836115 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.086307013 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.107213425 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.081309643 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.106332483 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.100154663 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.09039271 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.10182679 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.085245452 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.10560555 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.086665548 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.107325087 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.116620705 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.090319063 seconds)
  done (took 6.308901008 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.098588959 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.107987538 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.079880273 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.104686414 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.089728368 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.110791578 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.110143094 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.089552057 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.109708259 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.086475509 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.111412635 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.093051434 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.111156088 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.113053765 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.09047875 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.112638195 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.083786349 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.11089277 seconds)
  done (took 2.65192945 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.089235722 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.10491218 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.092237989 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.106832632 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.084467287 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.110098344 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.082735721 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.108149819 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.1074663 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.088526343 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.108901286 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.090131472 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.107245477 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.090745935 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.109756001 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.088119487 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.112113388 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.107086623 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.088674338 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.105163154 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.091903587 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.107743078 seconds)
  done (took 3.018833925 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.118038835 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.125391506 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.093092713 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.232935903 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.103322804 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.133279272 seconds)
  done (took 1.64359927 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108400255 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119635146 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.105252351 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106135888 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114539834 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086178714 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106768586 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107381869 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117948995 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100419204 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108218418 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116578104 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116777941 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.09558506 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113312843 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113426779 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107067185 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087878914 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105230583 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12813958 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087685719 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118265451 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107691067 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086195649 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108803796 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116462954 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117335072 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121180032 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087961891 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118114774 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114176529 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087062461 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117630246 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122184412 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108178385 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096240043 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107704813 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.128800376 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113819932 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.095777522 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.110202858 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113801498 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096507089 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112256809 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116673189 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107233616 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091566295 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107625089 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106511154 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.13525049 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.093361689 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118086949 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114894605 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118310988 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097917319 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.15484776 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.101863078 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117037249 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113915341 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122474158 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117876085 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.093220101 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11690862 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.123010833 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114222873 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116763108 seconds)
  done (took 8.099293218 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10197555 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.125841816 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107489663 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.121622548 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.096396413 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108154349 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10644746 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086304345 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107773905 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.105381338 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.151798324 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08769535 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117126563 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117616556 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086449833 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108155937 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107741913 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116095346 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086155256 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.13414661 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10794309 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116787671 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117225317 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09730715 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.124768907 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113771438 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107417731 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087268864 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108052141 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107141925 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.0939697 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108036871 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116788187 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.085908427 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118896981 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107704515 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08750804 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115143894 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107152385 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113909953 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098029195 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128844238 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107537955 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107199712 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101058751 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108246477 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108098463 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086407178 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108338476 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10617961 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.101256585 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.122567447 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12158332 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117714166 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107019837 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088049214 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10794251 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108091252 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087430855 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115060884 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117087246 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086252981 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.156231498 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.087082312 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107881937 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116679328 seconds)
  done (took 7.973768624 seconds)
done (took 156.871348906 seconds)
(11/20) benchmarking "sparse"...
  (1/6) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.221393495 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.230988957 seconds)
  done (took 1.292719614 seconds)
  (2/6) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.097859413 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.135054415 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.098383776 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.170836546 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.105874251 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.119925475 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.137150787 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.096634533 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.105557473 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.086569368 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.107225302 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.085691033 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.171900959 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.084252442 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.106086159 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.10690969 seconds)
  done (took 2.662917592 seconds)
  (3/6) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.198598293 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.25548029 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.101504457 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.104957727 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.088256734 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.110146052 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.103695018 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.090388852 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.108998877 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.08523045 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.10773635 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.086176417 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.105095639 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.08562235 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.110686103 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.087174725 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.105963909 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.086823719 seconds)
  done (took 2.87558919 seconds)
  (4/6) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.112854539 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.145922818 seconds)
  done (took 1.115293784 seconds)
  (5/6) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.117382787 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.178817316 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.314757666 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.154932134 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.10515526 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.126158746 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.155242641 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.12989373 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.195720178 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.122851854 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.12046723 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.09670981 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.139319089 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.114088806 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.093782909 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.11746865 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.141401803 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.091964023 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.114310651 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.115064265 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.116348023 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.105816465 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.114980818 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.092248748 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.179444727 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.117695811 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.084723983 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.106331126 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.114987989 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.093916667 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.113497855 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.123873528 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.096953394 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.176374681 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.100616531 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.176400655 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.097672683 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.11186715 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.114040595 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.092299698 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.117904693 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.117430053 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.102412844 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.117150034 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.08406635 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.117829427 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.10607744 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.084340551 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.114630123 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.096384536 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.114030869 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.112534171 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.153382448 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.117269229 seconds)
  done (took 7.482487932 seconds)
  (6/6) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.796521287 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.154638215 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.089032843 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.884931772 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.13732197 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.102930571 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.779645302 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.13479092 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.237071527 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.757561565 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.133214533 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.1212539 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.227361758 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.238300346 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.007018673 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.313768503 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.673675914 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.103393107 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.150657517 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.153532425 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.118305186 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.136810612 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.107514258 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.450242572 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.094929969 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.111945401 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.095371594 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.121545731 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.158631598 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.12497332 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.11868751 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.178602979 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.249079923 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.206418277 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.11552216 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.090416813 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.110838268 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.167497904 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.270070465 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.213476331 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.179620552 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.086680266 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.111474451 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.099192632 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.133142438 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.109063622 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.162892444 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.172048617 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.193757926 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.091635303 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.121128291 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.119515219 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.099285619 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.185752901 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.098430615 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.322145933 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.32097612 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.111282389 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121209852 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.106958732 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.266570119 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.123284053 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.223482832 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.116422306 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.213602135 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.11009095 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.819915909 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.188918756 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.090080746 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.117360272 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.119776933 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.093808761 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.120836505 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.168293596 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.391769535 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.122537365 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.092764536 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.11086658 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.205746334 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.124839761 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.110231478 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.162195491 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.093020636 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.121473592 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.124764322 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.121132665 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.170200736 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.230567395 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.12350582 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.117675901 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.093149131 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.124723901 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.115841898 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.217170452 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.218505257 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.16184441 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.211665606 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.122618649 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.163852924 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.189487199 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.098107541 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.194397781 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.098267282 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.126036646 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122413484 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.215292175 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.145777964 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.10224578 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.114471474 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.11771567 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.147571487 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.104614482 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.119017419 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.168725774 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.478323384 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.167525912 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.107550762 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.105389382 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120266261 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.159476385 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.117553824 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.261622686 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.099326664 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.191720145 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.097673294 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.108514586 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.119763877 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.16587206 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.122901819 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.100298685 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.123209832 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.117866362 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.238985887 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.216377978 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.100389481 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.244260156 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.183374796 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.11928036 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.173045019 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.120720851 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.167087072 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.118244692 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.098873045 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.117276059 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.837221846 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.121794044 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.098856239 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.115592978 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.186658414 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.088636184 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.123823762 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.124137609 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.086604058 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.823244758 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.127016445 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.119818177 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.102697712 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.118297923 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.118510165 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.096246047 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.115255702 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.164041373 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.230872187 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.120328839 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.098470975 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.124753464 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.15894679 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.117295691 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.124605308 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.123774222 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.102977914 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.123136623 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.114384845 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.103111479 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.191436082 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.161629256 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.219939049 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.569517938 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.112791001 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.124429052 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.228464615 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.090063758 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.287091721 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.11870098 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.203045609 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.186367091 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.098009537 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.314675349 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.187108195 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.187691529 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.105094717 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.194790505 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.088498151 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.11793204 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.166867389 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.111379373 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.094787173 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.182697051 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.102176859 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.123443555 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.978175475 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.08892937 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.252269772 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.086625931 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.191845043 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.094252121 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.119934171 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.293899286 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.089833145 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.129145625 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.162974849 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.115223714 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.124314965 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.705249379 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.125821484 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.120813864 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.097341757 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.220759799 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.163097503 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.119507394 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.119353487 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.119862777 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.163888843 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.213194291 seconds)
  done (took 44.178651382 seconds)
done (took 60.452907723 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.275421902 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.217515841 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.261967011 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.169416314 seconds)
  done (took 1.879326626 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.170259408 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.148773902 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.120764443 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.107077172 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.149565821 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.084798835 seconds)
  done (took 1.661256841 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.357448144 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.272749313 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.239633524 seconds)
  done (took 1.75410751 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.320374049 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.246156896 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.473673514 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.323040313 seconds)
  done (took 2.338771305 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.212493169 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.132667851 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.110151537 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.103866176 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.1975248 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.245692112 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.141696904 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.200245429 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.099310929 seconds)
  done (took 2.368934164 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.194134677 seconds)
done (took 11.079989506 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.257403148 seconds)
    (2/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.224353407 seconds)
    (3/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.233518137 seconds)
    (4/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.217797352 seconds)
    (5/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.212639159 seconds)
    (6/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.164037525 seconds)
    (7/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.129806864 seconds)
    (8/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.123899167 seconds)
    (9/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.117268461 seconds)
    (10/286) benchmarking ("sort", BigInt, false)...
    done (took 0.220331328 seconds)
    (11/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.206082259 seconds)
    (12/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.113291415 seconds)
    (13/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.103330206 seconds)
    (14/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.092791773 seconds)
    (15/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.202081112 seconds)
    (16/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.118569501 seconds)
    (17/286) benchmarking ("sort", Int64, true)...
    done (took 0.222715098 seconds)
    (18/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.093788017 seconds)
    (19/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.148552758 seconds)
    (20/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.118148669 seconds)
    (21/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.164668854 seconds)
    (22/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.120409813 seconds)
    (23/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.103217544 seconds)
    (24/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.247695819 seconds)
    (25/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.168747682 seconds)
    (26/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.113816403 seconds)
    (27/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.138668984 seconds)
    (28/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.112763666 seconds)
    (29/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.204793633 seconds)
    (30/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.095966947 seconds)
    (31/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.184693036 seconds)
    (32/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.117749998 seconds)
    (33/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.093904585 seconds)
    (34/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.115883079 seconds)
    (35/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.074747417 seconds)
    (36/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.139375878 seconds)
    (37/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.122065967 seconds)
    (38/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.156059858 seconds)
    (39/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.203024768 seconds)
    (40/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.163334626 seconds)
    (41/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.093640673 seconds)
    (42/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.234720208 seconds)
    (43/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.143231568 seconds)
    (44/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.087307587 seconds)
    (45/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.125415565 seconds)
    (46/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.075056831 seconds)
    (47/286) benchmarking ("sort", Int8, false)...
    done (took 0.189903842 seconds)
    (48/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.204615237 seconds)
    (49/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.12509873 seconds)
    (50/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.117862375 seconds)
    (51/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.173684752 seconds)
    (52/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.141626617 seconds)
    (53/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.256494935 seconds)
    (54/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.094554671 seconds)
    (55/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.066284605 seconds)
    (56/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.212275 seconds)
    (57/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.108350531 seconds)
    (58/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.096970107 seconds)
    (59/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.089489264 seconds)
    (60/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.181808532 seconds)
    (61/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.093955231 seconds)
    (62/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.119454933 seconds)
    (63/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.179688974 seconds)
    (64/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.087119568 seconds)
    (65/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.11621664 seconds)
    (66/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.158899575 seconds)
    (67/286) benchmarking ("sort", Float32, false)...
    done (took 0.172892512 seconds)
    (68/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.115961887 seconds)
    (69/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.066134913 seconds)
    (70/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.184739013 seconds)
    (71/286) benchmarking ("sort", Int64, false)...
    done (took 0.086566095 seconds)
    (72/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.115221088 seconds)
    (73/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.096798252 seconds)
    (74/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.110874658 seconds)
    (75/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.092053791 seconds)
    (76/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.119507459 seconds)
    (77/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.107933697 seconds)
    (78/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.13046603 seconds)
    (79/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.090702808 seconds)
    (80/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.101053873 seconds)
    (81/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.107504553 seconds)
    (82/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.087284986 seconds)
    (83/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.123718195 seconds)
    (84/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.147162753 seconds)
    (85/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.15192658 seconds)
    (86/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.135442527 seconds)
    (87/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.189040802 seconds)
    (88/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.182342715 seconds)
    (89/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.092771269 seconds)
    (90/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.095643379 seconds)
    (91/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.140383537 seconds)
    (92/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.120127798 seconds)
    (93/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.109327958 seconds)
    (94/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.120936927 seconds)
    (95/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.115024992 seconds)
    (96/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.159106745 seconds)
    (97/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.140036127 seconds)
    (98/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.155447448 seconds)
    (99/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.096284416 seconds)
    (100/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.138702679 seconds)
    (101/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.142648152 seconds)
    (102/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.09505413 seconds)
    (103/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.195429267 seconds)
    (104/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.194957277 seconds)
    (105/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.083338758 seconds)
    (106/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.130422328 seconds)
    (107/286) benchmarking ("sort", Bool, false)...
    done (took 0.180541292 seconds)
    (108/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.117936752 seconds)
    (109/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.093546858 seconds)
    (110/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.170996615 seconds)
    (111/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.093911645 seconds)
    (112/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.137233722 seconds)
    (113/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.172112933 seconds)
    (114/286) benchmarking ("sort", Int8, true)...
    done (took 0.219794193 seconds)
    (115/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.092750562 seconds)
    (116/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.117100123 seconds)
    (117/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.150135033 seconds)
    (118/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.109164846 seconds)
    (119/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.198838242 seconds)
    (120/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.093042043 seconds)
    (121/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.12324507 seconds)
    (122/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.118164609 seconds)
    (123/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.086506823 seconds)
    (124/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.066202037 seconds)
    (125/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.107841934 seconds)
    (126/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.092631475 seconds)
    (127/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.117732952 seconds)
    (128/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.067931898 seconds)
    (129/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.089363936 seconds)
    (130/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.099245179 seconds)
    (131/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.116815744 seconds)
    (132/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.066676654 seconds)
    (133/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.110681974 seconds)
    (134/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.202540836 seconds)
    (135/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.089154295 seconds)
    (136/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.195600324 seconds)
    (137/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.085696991 seconds)
    (138/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.091830637 seconds)
    (139/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.093457616 seconds)
    (140/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.16859761 seconds)
    (141/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.085159095 seconds)
    (142/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.132863795 seconds)
    (143/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.1797561 seconds)
    (144/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.135330827 seconds)
    (145/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.228637416 seconds)
    (146/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.067140799 seconds)
    (147/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.108764304 seconds)
    (148/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.114487675 seconds)
    (149/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.090054255 seconds)
    (150/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.086123918 seconds)
    (151/286) benchmarking ("sort", BigInt, true)...
    done (took 0.230206713 seconds)
    (152/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.067414257 seconds)
    (153/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.091194236 seconds)
    (154/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.066660279 seconds)
    (155/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.111595231 seconds)
    (156/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.111365681 seconds)
    (157/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.172944104 seconds)
    (158/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.126344881 seconds)
    (159/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.09270041 seconds)
    (160/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.119296373 seconds)
    (161/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.08615654 seconds)
    (162/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.172713764 seconds)
    (163/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.16720985 seconds)
    (164/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.09810219 seconds)
    (165/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.092673697 seconds)
    (166/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.087276526 seconds)
    (167/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.091365166 seconds)
    (168/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.147715668 seconds)
    (169/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.110676564 seconds)
    (170/286) benchmarking ("sort", Bool, true)...
    done (took 0.219795376 seconds)
    (171/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.067716156 seconds)
    (172/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.108027258 seconds)
    (173/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.097027489 seconds)
    (174/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.114372637 seconds)
    (175/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.15073215 seconds)
    (176/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.131763268 seconds)
    (177/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.109232857 seconds)
    (178/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.085805589 seconds)
    (179/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.083791326 seconds)
    (180/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.186559449 seconds)
    (181/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.189473613 seconds)
    (182/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.338336336 seconds)
    (183/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.087664448 seconds)
    (184/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.1349076 seconds)
    (185/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.094359556 seconds)
    (186/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.089549264 seconds)
    (187/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.067264436 seconds)
    (188/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.114390272 seconds)
    (189/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.070543172 seconds)
    (190/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.134912642 seconds)
    (191/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.166970794 seconds)
    (192/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.091536695 seconds)
    (193/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.067072403 seconds)
    (194/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.119080323 seconds)
    (195/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.099283452 seconds)
    (196/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.090508614 seconds)
    (197/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.067852289 seconds)
    (198/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.091239801 seconds)
    (199/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.135754769 seconds)
    (200/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.065244588 seconds)
    (201/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.13419586 seconds)
    (202/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.113079564 seconds)
    (203/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.087871572 seconds)
    (204/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.110877214 seconds)
    (205/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.066371878 seconds)
    (206/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.066113026 seconds)
    (207/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.16399694 seconds)
    (208/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.109601843 seconds)
    (209/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.094380764 seconds)
    (210/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.090506246 seconds)
    (211/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.087554324 seconds)
    (212/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.114775675 seconds)
    (213/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.085273367 seconds)
    (214/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.140172869 seconds)
    (215/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.094014237 seconds)
    (216/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.067157053 seconds)
    (217/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.110267865 seconds)
    (218/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.134611542 seconds)
    (219/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.091955108 seconds)
    (220/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.109523259 seconds)
    (221/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.137081977 seconds)
    (222/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.119473942 seconds)
    (223/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.065928813 seconds)
    (224/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.120579469 seconds)
    (225/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.067854684 seconds)
    (226/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.112928967 seconds)
    (227/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.085588554 seconds)
    (228/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.098159828 seconds)
    (229/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.076504201 seconds)
    (230/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.07176527 seconds)
    (231/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.094452744 seconds)
    (232/286) benchmarking ("sort", Float64, false)...
    done (took 0.147651097 seconds)
    (233/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.109990925 seconds)
    (234/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.06657464 seconds)
    (235/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.110752784 seconds)
    (236/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.093418874 seconds)
    (237/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.114858005 seconds)
    (238/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.08581224 seconds)
    (239/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.109928407 seconds)
    (240/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.091474472 seconds)
    (241/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.11797608 seconds)
    (242/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.089918928 seconds)
    (243/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.091566747 seconds)
    (244/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.07632968 seconds)
    (245/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.113123927 seconds)
    (246/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.129027501 seconds)
    (247/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.090744811 seconds)
    (248/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.066827815 seconds)
    (249/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.108873799 seconds)
    (250/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.134365345 seconds)
    (251/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.114499119 seconds)
    (252/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.093277917 seconds)
    (253/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.131663328 seconds)
    (254/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.066024448 seconds)
    (255/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.089455615 seconds)
    (256/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.085663333 seconds)
    (257/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.066217363 seconds)
    (258/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.108909355 seconds)
    (259/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.067902477 seconds)
    (260/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.135400538 seconds)
    (261/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.117212456 seconds)
    (262/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.131602113 seconds)
    (263/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.11125073 seconds)
    (264/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.067556725 seconds)
    (265/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.107725537 seconds)
    (266/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.094334858 seconds)
    (267/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.108663803 seconds)
    (268/286) benchmarking ("sort", Float32, true)...
    done (took 0.229297391 seconds)
    (269/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.087643196 seconds)
    (270/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.117526416 seconds)
    (271/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.09260355 seconds)
    (272/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.08975689 seconds)
    (273/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.066939413 seconds)
    (274/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.067025446 seconds)
    (275/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.091273322 seconds)
    (276/286) benchmarking ("sort", Float64, true)...
    done (took 0.228605755 seconds)
    (277/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.066628535 seconds)
    (278/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.090851584 seconds)
    (279/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.135384313 seconds)
    (280/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.065538797 seconds)
    (281/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.091390073 seconds)
    (282/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.06669179 seconds)
    (283/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.066898421 seconds)
    (284/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.091177827 seconds)
    (285/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.091392299 seconds)
    (286/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.109451689 seconds)
  done (took 36.045754063 seconds)
done (took 36.92983551 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.099222345 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.147296188 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.096146535 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.134777087 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.122783509 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.09001763 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.117497973 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.096997853 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.122656484 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.124204467 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.097164858 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.092346106 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.097535818 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.119356024 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.098073848 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.138204448 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.127196008 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.092610388 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.117942279 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.085373965 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.119136381 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.086316706 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.111818181 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.069556913 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.120686426 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.093527793 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.115331634 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.119715407 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.08587421 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.109628776 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.089622216 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.117341062 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.086340039 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.123948715 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.092956001 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.117283692 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.095779354 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.11927433 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.087486609 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.110009015 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.118220163 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.086257875 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.11639054 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.093733445 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.115516622 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.091738348 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.1166248 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.098647431 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.137795198 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.115514749 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.096568415 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.119465325 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.095074848 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.116207417 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.089757192 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.117895801 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.090955631 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.137711506 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.121970774 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.091537953 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.117736073 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.0943462 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.114631189 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.09443103 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.117388621 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.119613933 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.096895268 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.114693118 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.095838705 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.1144372 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.085722801 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.117677945 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.089992201 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.1103679 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.094787517 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.12032533 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.085057775 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.115032784 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.093131478 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.114529862 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.109403128 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.088818975 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.111382613 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.09236939 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.112373565 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.069327683 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.090331671 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.115951833 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.085075792 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.118351989 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.115717963 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.092535983 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.112489075 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.098352442 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.109033 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.092000091 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.11018484 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.087073095 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.11126241 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.090006695 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.110306432 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.088545475 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.119100334 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.088223409 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.116068196 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.098067358 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.110565774 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.116265936 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.085687332 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.109273357 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.101336845 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.119488832 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.086473662 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.115006296 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.088190929 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.121063878 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.085391232 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.109052929 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.085903198 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.10968202 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.09222221 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.110568257 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.088703689 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.117157374 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.124195885 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.086306976 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.113445661 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.088752548 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.111542719 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.092017081 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.110207989 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.086938744 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.11200714 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.077037719 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.113363163 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.08643079 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.117150703 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.089652049 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.119082687 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.08795902 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.119286675 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.091647973 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.116356653 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.092060889 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.109974048 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.074223252 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.116182132 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090166538 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.112104527 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.086553571 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.112027209 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.086036046 seconds)
done (took 16.804553618 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.086348483 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.182237334 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.150043264 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.141410337 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.106713778 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.11090978 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.121093791 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.116985811 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.113080955 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.142339787 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.110009623 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.130725083 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.147170736 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.087269177 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.111082195 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.091349443 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.112748355 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.10131861 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.144761238 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.133130348 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.16200886 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.085492527 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.147536721 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.134216792 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.120410012 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.104187479 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.112593405 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.090975662 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.11388127 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.111324835 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.130848019 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.090857409 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.111149291 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.132703276 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.103669507 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.119030625 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.086742112 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.118309568 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.086939765 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.110843892 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.139643044 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.108419018 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.11591448 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.116231901 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.091085849 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.115425037 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.09131104 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.124088109 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.09788232 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.115362228 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.125144085 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.154561016 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.089942934 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.121303424 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.086528107 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.121331465 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.120171268 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.089620703 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.113023069 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.089672697 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.111326673 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.090687098 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.126315357 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.139922533 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.090471385 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.120925497 seconds)
  done (took 8.554570813 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.103984214 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.138459854 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.129654809 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.105188421 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.110870677 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.087473564 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.112696426 seconds)
  done (took 1.73481431 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.0879033 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.134470518 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.111337094 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.136954408 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.134357954 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.108388449 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.124585878 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.087708182 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.130131935 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.114228954 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.10878397 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.152676116 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.089082485 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.120928916 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.137024167 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.089084685 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.136022221 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.089293101 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.117458872 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.136522582 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.090986553 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.134248914 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.089905058 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.113044089 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.101758858 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.113043486 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.161686834 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.093621884 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.114738738 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.09202495 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.111518026 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.165724469 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.102169481 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.124357376 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.112952682 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.103180435 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.127742183 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.105078951 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.131001201 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.097027696 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.127792552 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.114878603 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.0911894 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.116021103 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.093793687 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.126107509 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.090954854 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.115499792 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.091039629 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.132604964 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.088676839 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.126547967 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.088310076 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.116858349 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.115395811 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.095657991 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.122187369 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.089835203 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.134826036 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.089805757 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.132634155 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.131179769 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.102174252 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.130821739 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.090944301 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.126397953 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.101713932 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.116158281 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.115040344 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.094027283 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.130022312 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.088287497 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.117254544 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.100190818 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.116475484 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.112320363 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.136862146 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.114608854 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.098360252 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.11394504 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.088519417 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.1141302 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.112015204 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.117740626 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.088544705 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.120484253 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.091461326 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.112077181 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.111947705 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.093236779 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.111694234 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.091411052 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.116812823 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.0892631 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.115936662 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.105557675 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.114762444 seconds)
  done (took 11.81561277 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.089533502 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.116216798 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.090936164 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.113828331 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.089653135 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.114647745 seconds)
  done (took 1.574256147 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.112981537 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.117297525 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.12886381 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.095010365 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.155706446 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.128470918 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.103938081 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.123793395 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.10693871 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.12620475 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.128187657 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.104062508 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.136183026 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.121016091 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.103046011 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.119712768 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.12853322 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.10002271 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.126535738 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.09538189 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.135861127 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.120540946 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.095678894 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.131318252 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.117250772 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.095466731 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.124710219 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.102412472 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.127413111 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.122575348 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.095294159 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.117438595 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.094876161 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.122957945 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.128901841 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.094906673 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.120102942 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.118700479 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.099611891 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.117761219 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.104626895 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.122205019 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.127172689 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.093556974 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.123921082 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.120104949 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.093345527 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.124559259 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.128103685 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.093505708 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.118726021 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.09436006 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.117593133 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.094365346 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.120434329 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.122942546 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.094502962 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.129300533 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.12099895 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.094951054 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.117811083 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.092874497 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.123098907 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.117048518 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.103596994 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.118187353 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.094459653 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.12126701 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.120811942 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.095352222 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.11843114 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.092036582 seconds)
  done (took 9.160076407 seconds)
done (took 33.78241559 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.685584753 seconds)
  done (took 1.644941113 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.816403615 seconds)
  done (took 1.777801149 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 16.941427699 seconds)
  done (took 17.92646478 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.493339486 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.576958376 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.9947048 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.17602091 seconds)
  done (took 3.200536665 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.9439018 seconds)
  done (took 1.923450147 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.281115548 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.230352803 seconds)
  done (took 1.477824144 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.764875265 seconds)
  done (took 1.741715943 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.343458545 seconds)
  done (took 2.308419579 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.325876785 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.183137572 seconds)
  done (took 1.480485908 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.55398974 seconds)
  done (took 1.525647056 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.781486801 seconds)
  done (took 7.760325148 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.267371075 seconds)
  done (took 1.251774096 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.300995016 seconds)
  done (took 1.276437219 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.4963785 seconds)
  done (took 4.474509886 seconds)
done (took 50.740636111 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.097944117 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.126445184 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.100930264 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.122742457 seconds)
  done (took 1.419195997 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.099552667 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.120249151 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.09984572 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.119106489 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.126528389 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.095662101 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.121798427 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.099884677 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.120002981 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.096160689 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.119967988 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.118476429 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.097668654 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.121481307 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.093600644 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.122649095 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.098339864 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.12003155 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.123148724 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.095931005 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.117966094 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.09630124 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.123492543 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.093269692 seconds)
  done (took 3.620912489 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.099962839 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.117621337 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.095422826 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.11739761 seconds)
  done (took 1.414685916 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.099642738 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.141169766 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.137915699 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.098948662 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.141113949 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.13748192 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.090894646 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.116639392 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.092893162 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.124611449 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.089658456 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.149306116 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.135622569 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.123886483 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.101318247 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.113361987 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.090551364 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.136113729 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.124835115 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.100337492 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.117875252 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.099030947 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.115235948 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.115254435 seconds)
  done (took 3.774165779 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.169380321 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.125996984 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.137355536 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.093906324 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.159759237 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.138955473 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.087593264 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.139419499 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.086823104 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.129836782 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.117346759 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.134706111 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.127650583 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.086659552 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.112687279 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.086718795 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.127957805 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.127383194 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.089767858 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.125977276 seconds)
  done (took 3.394585362 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.096094378 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.115657871 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.087852503 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.115001764 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.09844589 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.119755468 seconds)
  done (took 1.618639584 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.089715063 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.113513196 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.088982903 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.113303458 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.093120583 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.114051568 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.08759858 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.113621352 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.088644892 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.113453415 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.088975743 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.114798227 seconds)
  done (took 2.205837575 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.49734418 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.119820844 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.119413823 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.087909176 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.120685164 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.088609131 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.127787937 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.09145522 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.13930858 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.087546254 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.114435809 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.090592588 seconds)
  done (took 2.671262055 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229923323 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.124699564 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.28339214 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.36658113 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153852756 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.175392107 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.276993173 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159665473 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.222009464 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.164965664 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201280846 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219960069 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.150708011 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188001627 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137241696 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.143820696 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201630195 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.245148903 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153435958 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206456388 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.225131664 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.165988589 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.178698654 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148959429 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.137246172 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169415408 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.093589325 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129501954 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232093813 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174996641 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.212097127 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159397976 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14387767 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206769185 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.25050377 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.219735266 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.281346572 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13452867 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.149020779 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.165357575 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.260378107 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.136876159 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201197528 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153273113 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.130771368 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215960698 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167166798 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.176493018 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.152182873 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138371868 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194309668 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237908206 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.19164734 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138403326 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.303581503 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14752098 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.199823193 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193090288 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.250874893 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197786557 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211319266 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.09387715 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.186933988 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217488832 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184266601 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.173367119 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.205689122 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146611794 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1980634 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.188092403 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162432195 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.218322278 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.184506803 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139225139 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168288648 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.17132027 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170056376 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.254558825 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209018351 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.094523531 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167353303 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148913946 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133510601 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.19357101 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.097257394 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.239742462 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143491192 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.161786298 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212860601 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158386673 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15934832 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201607323 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.228364317 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.147114863 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.082364632 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152921765 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.156125542 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191600148 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139465556 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157829496 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160082436 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.129836411 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182861738 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.124264809 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182698449 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.117111305 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173266668 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18199099 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.126240118 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159921676 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.150197472 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.124745968 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19893093 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197852965 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141685727 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131453864 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208915204 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176441567 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.150172039 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.176030401 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.225965806 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.116594197 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148390153 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22633476 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214310621 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139556447 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.226244429 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155301928 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106952201 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.131565899 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180168198 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.153744302 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.161077136 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133812521 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.181672265 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23099428 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.097564727 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138023255 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191970293 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132185954 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131064771 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163243841 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147846743 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.110993683 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.150340156 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.151368012 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207083034 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177368094 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154054996 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163944571 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151663757 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.251451243 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139834298 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.12296171 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147025031 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.120059955 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.190956347 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19717387 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130584519 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.229630165 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.171229617 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202197283 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167326664 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134053939 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.176060162 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.129455538 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.092388412 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22000069 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.166779569 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.16100799 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.194967889 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.226221239 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.17761044 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.18053902 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197660167 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172498831 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.164196587 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156403897 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.111287557 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160004873 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169855511 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.123574632 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.144003981 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.131941625 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146199567 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114666109 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13370929 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.221215914 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16940648 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.188317204 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.157962621 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149246232 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.180361552 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.127912915 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173415227 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.176198454 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147515302 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.195675847 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.22003375 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18462836 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143374917 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197942784 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.120314655 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.124850398 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.113817583 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.196019251 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106047383 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135107129 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163377846 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.179346502 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178915185 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20174855 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209639512 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196803732 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.188794798 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.094730411 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.167885206 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183852879 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17563576 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.191662567 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139026129 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.150204159 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.1788893 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157725309 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.254408052 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166733816 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174360902 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.23322757 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.122053651 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132200359 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151434199 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192326515 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152290043 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.202482118 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.119120553 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140689713 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160441534 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.131819604 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158419975 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182508696 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161249615 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214400032 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.150068068 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185845778 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126655938 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163111193 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158710458 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16436387 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.081597146 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174321517 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.229392887 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147191279 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167309732 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187210906 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.130706839 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.308311469 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.240095127 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19430663 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136962432 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154610726 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161049498 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.162250532 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172286386 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.177091995 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157807633 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185425365 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159205036 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.136878514 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139404252 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.120003403 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.149773358 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.131186111 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.146650884 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.175354543 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.138251999 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185526829 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161296386 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158308172 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170505139 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.150571695 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.143548762 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149568128 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213806879 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181525084 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237204626 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.1506377 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.178132423 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.231566969 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.098110009 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131554617 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.131783513 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.177180414 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108129959 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.219846396 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.185945612 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.228695551 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182907937 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191448418 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138970504 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.118524589 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127480853 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199875379 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206161949 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151585053 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.158421494 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.229299066 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.117914648 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132591647 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.177261097 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.290381767 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14127109 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22291521 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.080072268 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.279268899 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.124745363 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105227156 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.162157267 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233431898 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.135635318 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.18726776 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171933263 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16973639 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.164207216 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149567554 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.189607989 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241816008 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200202288 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178632988 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.132698554 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154499624 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175277634 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219044988 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156212679 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.112029167 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22911586 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19472901 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.194723819 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.141091999 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167881597 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167036928 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156761862 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213694997 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106482286 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234603014 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133250674 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193290745 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152474376 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142436721 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17470816 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.187413781 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139667931 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213225007 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183432441 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133428763 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.105072478 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167070473 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206958283 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155301518 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.099063947 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207155696 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.09642879 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.220315578 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229232374 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13503559 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.154957533 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147677819 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.107089578 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152826444 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184361569 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112844275 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.164233059 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201076022 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.134174778 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189185335 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228993761 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16993005 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17268189 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144189659 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.690400435 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.130953029 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192718516 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158965517 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.233875467 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.149045092 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17149827 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158368646 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166628997 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195114526 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160239945 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.23141063 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218708463 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.177739037 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102984486 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157289065 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190106972 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.115875473 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.149932241 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166992333 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159399743 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.153992005 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.203313523 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171572248 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.10657503 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140591347 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197772896 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.158671786 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208888679 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.179042176 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110750565 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199963654 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186883027 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132796627 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.180488942 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235965144 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11258318 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150531574 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.133516785 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.155858009 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.261014849 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.095501905 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.231644153 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183698488 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157753863 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168788586 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.147013642 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.220091152 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157351241 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185912901 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146556186 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.159502412 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15659237 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136946228 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.101500867 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.15493996 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166904245 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.149395399 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.15833585 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.163646403 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195100702 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.093944195 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14267917 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.31587302 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193200108 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.241847643 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.107179557 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135008971 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16277407 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150337173 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.175422306 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177508431 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.134549156 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135051632 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.107538358 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.157358064 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.112887138 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.154906596 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193185331 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195341391 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206095144 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.134764569 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.275709432 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.11086018 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155005917 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.114380453 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.102861567 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14917569 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145486843 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158331568 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.190632326 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.262586696 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.147393247 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.130637695 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148792567 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.097156424 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135326806 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.162811333 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164234459 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178207507 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143333652 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.079603575 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155276575 seconds)
  done (took 82.728522869 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.161166745 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.131298632 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.145890917 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.200627033 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.174655891 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.26798278 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.208075981 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.25148947 seconds)
  done (took 2.618314467 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.092845872 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.144785218 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.156476054 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.130801714 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.090860318 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.118609571 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.342776528 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.130826906 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.116208335 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.119343874 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.172914892 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.092940346 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.547728107 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.09006175 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.118856275 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.106418522 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.090185178 seconds)
  done (took 3.733362227 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.470929064 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.717991182 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.509557561 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.09652354 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.192004934 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.11174845 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.785526349 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.195013519 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.113975767 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.482869048 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.777717984 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.164892326 seconds)
  done (took 18.700138172 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.114692283 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.135739854 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.122688728 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.152227989 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.139608942 seconds)
  done (took 1.751838616 seconds)
done (took 130.623084165 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.102659675 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.407382431 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.070694412 seconds)
  done (took 1.595340975 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.106116871 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.136017179 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.107454509 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.135735821 seconds)
  done (took 1.578669982 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.097033501 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.12600486 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.107710887 seconds)
  done (took 1.419338989 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.321314572 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.188510032 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.167535032 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.104756852 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.128228427 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.10179259 seconds)
  done (took 1.425054059 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.096554607 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.126821782 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.096263114 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.129861291 seconds)
  done (took 1.542150638 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.093889436 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.069836262 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.100040841 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.074087026 seconds)
  done (took 1.425734817 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.112789516 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.131683986 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.103472194 seconds)
  done (took 1.441946894 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.127552088 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.139415423 seconds)
  done (took 1.360155708 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.104196294 seconds)
  done (took 1.192149452 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.115835552 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.16768439 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.18740851 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.16418931 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.233510589 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.166336224 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.141297383 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.112766767 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.130476841 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.14309722 seconds)
  done (took 2.656260662 seconds)
done (took 17.49969574 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.101740927 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.516622477 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.413687825 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.115076044 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.722351297 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.37978584 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.042729222 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.146786855 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.164455862 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.09861709 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.138567731 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.672652051 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.034064887 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.472038075 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.991896613 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.376164647 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.675880873 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.119965322 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.118938962 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.092791211 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.028132063 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.090714665 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.121246644 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.090770123 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.703777034 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.424030944 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.093875985 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.374390171 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.091092399 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.125640548 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.38185656 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.121625091 seconds)
  done (took 17.124453278 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.094789632 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.172412076 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.097762227 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.13809253 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.122081292 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.092881852 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.123708144 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092639488 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.178303117 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.122119536 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.10926345 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.120332995 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.125474619 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.094735122 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.14091207 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.091311994 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.124024364 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.092015614 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.121061901 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.120441126 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.111334804 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.120094533 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.092807683 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.120726006 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.093072599 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.13479467 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.093339245 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.120354498 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.120010474 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.098751611 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.126628999 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.093821432 seconds)
  done (took 4.792782742 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.139858997 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.182110218 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.127903018 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.125625656 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.170194901 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.123772395 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.199460038 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.122358106 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.181757308 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.12728354 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.138340444 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.092309122 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.155379794 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.093580408 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.141534605 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.119587224 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.095715837 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.12143795 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.091863913 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.121838842 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.139685414 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.091771993 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.121289603 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.091961329 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.121358904 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.106713909 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.122778627 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.119517276 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.092688722 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.124894179 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.099268527 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.122610167 seconds)
  done (took 5.127055402 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.096061208 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.124938097 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.108279407 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.137296531 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.094559166 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.124343758 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.096166834 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.123241022 seconds)
  done (took 2.001568648 seconds)
done (took 30.134982169 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.109573987 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.13153255 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.108835733 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.133543647 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.101402893 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.133091424 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.091293108 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.132890966 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.13591542 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.101965927 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.138419849 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.096596461 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.122247339 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.090901219 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.13532515 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.10161849 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.134376643 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.100936282 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.139476661 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.131779563 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.096469868 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.135424217 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.108822077 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.13948043 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.103420447 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.13286812 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.136609716 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.105464564 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.122827983 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.093794486 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.125332704 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.109838754 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.129789379 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.105934819 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.126940825 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.09931757 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.126081269 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.093448156 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.133304401 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.132400961 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.105216321 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.134696304 seconds)
  done (took 6.058330623 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.107329093 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.144302408 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.104492603 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.086489033 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.116174073 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.079322478 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.137983839 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.084529655 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.109631103 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.106721396 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.079310526 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.106658379 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.07811841 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.100883399 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.077262778 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.07477306 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.108142642 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.075433926 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.075210601 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.105463105 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.079368547 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.072061001 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.108168542 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.078725728 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.073735774 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.109530354 seconds)
  done (took 3.586570193 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.099211484 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.133792492 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.112637805 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.183938615 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.160236472 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.098657471 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.130743987 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.109525685 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.13749647 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.119491227 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.094574333 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.149599919 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.108058585 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.128601253 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.091282664 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.136858491 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.134636163 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.093635332 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.127103265 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.111688547 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.138712331 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.101298892 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.140714286 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.131497718 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.090862027 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.122649248 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.095307548 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.133971451 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.097981557 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.130820834 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.096683222 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.124401077 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.121676526 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.102905974 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.12465975 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.093283101 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.140958266 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.102518103 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.130843224 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.092185109 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.12915979 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.12086376 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.112256648 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.161353591 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.095513378 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.128976672 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.095111721 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.131640056 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.120887032 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.110208947 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.131049767 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.095835451 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.124836212 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.090560174 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.121707163 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.105192273 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.128965133 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.093497406 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.130886208 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.125562491 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.104586699 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.124222681 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.108043608 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.123937133 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.099337901 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.121061621 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.092121127 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.119989233 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.114101415 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.123366977 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.160702033 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.099015289 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.123320921 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.100605152 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.13095971 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.128369403 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.092983865 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.137049403 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.103437367 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.125394797 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.101183882 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.125087422 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.094725487 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.140045233 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.094275266 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.123720789 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.09269325 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.128470942 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.123106118 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.093301361 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.135519856 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.091271589 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.124510743 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.109824801 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.12152223 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.093642301 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.128987221 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.125763956 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.09216064 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.136809525 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.097730184 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.122468241 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.102166013 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.121999451 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.095150245 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.13163014 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.126078549 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.091430285 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.126515488 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.098593355 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.122218338 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.09303309 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.124260292 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.093459585 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.131871065 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.098366126 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.126957773 seconds)
  done (took 14.759195143 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.225663918 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.213804338 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.203726382 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.289545888 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.134327478 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.112979506 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.209388046 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.153771246 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.122900421 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.157880094 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.173165368 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.188762517 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.167423061 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.178970584 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.16921522 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.092051933 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.142091626 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.163316632 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.213582445 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.257053598 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.143180499 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.099464038 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.160402205 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.159149186 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.137814011 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.131381896 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.109084591 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.133307646 seconds)
  done (took 5.764926795 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.107477115 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.154641542 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.097413414 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.144027404 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.147312738 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.092310572 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.127061718 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.093705346 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.135500023 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.13463822 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.092698897 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.128281656 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.099297447 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.131769123 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.12220087 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.102325646 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.130618385 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.094097363 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.125096804 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.096033304 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.133226323 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.100334356 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.129410421 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.091103873 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.132507933 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.120994623 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.085336359 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.141111594 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.091011107 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.144023038 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.120132634 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.101476997 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.136172065 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.092841005 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.122297718 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.094134765 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.124438611 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.094516486 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.124235228 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.090219815 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.121985478 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.07747501 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.121116574 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.10669544 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.129648014 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.079333158 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.128958733 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.098496654 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.123841772 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.119784196 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.095620068 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.125123413 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.096590126 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.130101346 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.095951283 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.122822992 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.095616 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.115243333 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.101764599 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.123866635 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.084633795 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.097754065 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.127272815 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.116785554 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.101849397 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.127279736 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.092240598 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.12459078 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.097427215 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.12984467 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.094495485 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.129186897 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.090705091 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.125893923 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.095224565 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.129001458 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.095234462 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.121438732 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.091833264 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.123172486 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.074842393 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.123171123 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.073565048 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.125888455 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.091195592 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.12146447 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.095804594 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.129455584 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.135927549 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.095271325 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.130942623 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.093658472 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.121403305 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.095255683 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.112846581 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.095367841 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.138372471 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.140940311 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.093132589 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.12065271 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.107504841 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.125779535 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.092543532 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.105800513 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.10207782 seconds)
  done (took 12.901144723 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.125801953 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.153752817 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.094374358 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.140594297 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.156210596 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.157229631 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.100142728 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.130043397 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.095321698 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.142009435 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.095918862 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.132158916 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.093223761 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.136929216 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.156018536 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.102595001 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.124626282 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.107505053 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.128319749 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.169293521 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.116712691 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.142479496 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.10970963 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.123983541 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.098968746 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.140101088 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.159491657 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.107029176 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.140709393 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.140975539 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.114109364 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.160673093 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.112902156 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.130387864 seconds)
  done (took 5.477585754 seconds)
done (took 49.643798152 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.210748305 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.420534899 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.198750131 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.152571953 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.256232024 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.230066843 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.209249071 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.196024672 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.298893629 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.195611988 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.440231398 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.847366373 seconds)
done (took 58.784786106 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.245994288 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.334818391 seconds)
    (2/2) benchmarking "String"...
    done (took 1.463861587 seconds)
  done (took 3.92535706 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.553318973 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.148219182 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.457273577 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.198818243 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.198294814 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.486332143 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.832513886 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.54958767 seconds)
  done (took 27.997771827 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 1.20817871 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.28452124 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 1.230267197 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 1.206308934 seconds)
  done (took 6.057434337 seconds)
done (took 47.907731367 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.220851682 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.257615487 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.209871802 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.179914517 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.316003033 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.228637265 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.56962254 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.269815981 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.219316261 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.187612677 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.225601743 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.20869334 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.20637299 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.606123897 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.214347964 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.200567851 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.223742404 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.764622328 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.618855022 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.207471872 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.20273361 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.223162943 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.205134882 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.204008632 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.203869416 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.207041424 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.208465097 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.220662441 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.839154465 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.210768017 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.217357571 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.759585803 seconds)
  done (took 190.96657066 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.200613654 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.328015767 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.407654431 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.241206374 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.718972892 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.403554589 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.336224951 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.771078588 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.225597309 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.220537999 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.460130344 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.207241512 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.535287417 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.181038855 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.242247328 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.310074576 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.405666443 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.533797222 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.266882025 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.353211169 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.201098352 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.487005352 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.397361673 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.420244662 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.240932844 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.282693743 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.212260943 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.212715676 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.393692616 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.374872727 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.207431679 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.268433974 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.839841219 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.065523373 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.202324388 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.232605951 seconds)
  done (took 150.518806873 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.253594528 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.204542152 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.202563393 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.204214874 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.236139719 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.202790569 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.792958744 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.779396946 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.708914557 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.618820093 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.628475468 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.482619331 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.203647073 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.300057922 seconds)
    (14/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.204446999 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.218639304 seconds)
    (16/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.205462909 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.20458985 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.220712318 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.247865828 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.210670979 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.205826949 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.793472001 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.223585811 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.394781866 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.387797225 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.221294091 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.237327678 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.595678072 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.204437454 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.237373108 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.537579467 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.254007213 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.204847641 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.593087603 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.281495192 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.322632563 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.206832829 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.238564179 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.205011102 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.485084305 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.204207501 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.206301244 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.208768034 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.880670815 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.204852802 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.795336497 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.210504445 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.174601078 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.204971627 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.20784177 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.726077857 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.875276205 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.223331928 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.206850462 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.208835284 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.206532252 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.206960336 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.238576316 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.791241787 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.305793553 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.223790779 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.21173704 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.239985954 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.20572278 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.352879391 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.212366723 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.821191952 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.28260629 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.428674155 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.7979852 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.212735064 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.306212797 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.330116448 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.208690576 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.20754612 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.208039877 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.206518805 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.319051699 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.206771893 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.640822569 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.387836602 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.225767921 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.638003693 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.310975613 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.209577736 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.611692882 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.21419325 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.207896996 seconds)
    (89/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.207725866 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.967640633 seconds)
    (91/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.208580158 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.305834107 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.207931859 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.21089658 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.20750628 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.640277625 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.782428785 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.483123772 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.214037426 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.697960547 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.214151069 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.655282647 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.772936336 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.91425408 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.214678561 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.322169944 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.387036576 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.227250084 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.208419836 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.634995034 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.214385728 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.267440727 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.209939836 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.607188178 seconds)
  done (took 367.746199325 seconds)
done (took 711.612566209 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.809308003 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.805660297 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.919528477 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.800530964 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.765787339 seconds)
  done (took 10.237536791 seconds)
done (took 11.373208576 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.398783878 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.397194966 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.270354101 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.400075523 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.239059669 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.418536921 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.378487185 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.234227621 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.310809678 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.291803475 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.31114669 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.263366786 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.238288462 seconds)
  done (took 18.289908923 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.524257946 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.518625109 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.273617817 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.525407614 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.248999914 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.524847854 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.407977076 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.428008334 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.42383727 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.244553377 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.225252974 seconds)
  done (took 16.483943444 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.557642258 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.530921059 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.27846129 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.554616131 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.25236289 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.541698526 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.413995411 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.429183326 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.423339232 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.244479368 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.224403965 seconds)
  done (took 16.58929947 seconds)
done (took 52.500914159 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.220052624 seconds)
  done (took 2.359053331 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.255280535 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.420490946 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.241022225 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.22843978 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.222429099 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.22480521 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.228260484 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.22133979 seconds)
  done (took 11.181682849 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.220606322 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.217907122 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.216694093 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.22111929 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.218520572 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.217924785 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.21762631 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.217954603 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.21847409 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.222130354 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.220996351 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.22140886 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.22092334 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.219981911 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.220812072 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.22084958 seconds)
  done (took 20.655676933 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.22234484 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.219370976 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.219243524 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.220076001 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.219830088 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.219496889 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.220522914 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.219773376 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.220410315 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.220314772 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.220501693 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.219801414 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.220776139 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.220854582 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.219922851 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.219890279 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.220385168 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.221249804 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.224818948 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.219985097 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.221898818 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.221676221 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.22070177 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.221409157 seconds)
  done (took 30.438384787 seconds)
done (took 65.77423395 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.487737044 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.958300127 seconds)
  done (took 9.587574354 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.223979173 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.222034727 seconds)
  done (took 3.589109063 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.223856274 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.223012549 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.222966329 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.223107292 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.222636972 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.223390848 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.221910003 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.223697514 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.223032633 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.22371198 seconds)
  done (took 13.373924931 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.223917799 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.224005249 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.22086949 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.222555973 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.223749051 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.220024581 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.223834767 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.222568766 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.223741687 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.220845514 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.224235805 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.222943635 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.224050782 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.222315703 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.224609877 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.221976803 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.222528609 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.222482991 seconds)
  done (took 23.153918381 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.224807382 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.224491426 seconds)
  done (took 3.592804086 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.2220279 seconds)
    (2/7) benchmarking "second"...
    done (took 1.221512193 seconds)
    (3/7) benchmarking "month"...
    done (took 1.222394851 seconds)
    (4/7) benchmarking "year"...
    done (took 1.222298497 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.221878074 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.222634471 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.222147064 seconds)
  done (took 9.699965704 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.22584581 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.396278358 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.474678525 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.835673481 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.226556343 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.229317342 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.095221108 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.229533845 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.230928182 seconds)
  done (took 14.088175117 seconds)
done (took 78.226631616 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.255295816 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.238226702 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.41326243 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.232538123 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.242013394 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.520625142 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.250339257 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.352882845 seconds)
done (took 37.650806959 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 6.23516509 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.203995953 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.992137582 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.200027932 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.253689917 seconds)
  done (took 18.796266643 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.259893794 seconds)
    (2/2) benchmarking "read"...
    done (took 1.555200405 seconds)
  done (took 4.960296768 seconds)
done (took 31.135995126 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.227185986 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.224247098 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.227742484 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.225453306 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.227532933 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.224252466 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.225138222 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.227728475 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.22715964 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.226646287 seconds)
    (11/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.227637114 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.226984098 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.227339812 seconds)
    (14/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.228285882 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.225198431 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.223533245 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.226369488 seconds)
    (18/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.22661036 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.225900484 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.224877115 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.224783013 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.227439162 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.224633556 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.224851985 seconds)
  done (took 30.574841391 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.227814635 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.225778064 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.229180918 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.228326198 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.226214977 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.229174728 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.228559552 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.226985912 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.230217326 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.229366901 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.226205201 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.226526006 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.229476788 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.22616225 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.228890684 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.226473734 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.23024003 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.226941146 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.228927455 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.226838038 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.229716145 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.228319557 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.227705347 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.229080827 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.227455435 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.227183076 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.22933562 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.228525269 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.229551882 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.227155478 seconds)
  done (took 37.991161108 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.235411203 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.236001884 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.230387419 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.230855331 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.230236509 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.229276184 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.230595428 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.229711365 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.230373679 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.230153728 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.230643596 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.230122 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.231958039 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.231088655 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.230671938 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.230253912 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.231503053 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.230608686 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.231033612 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.230539655 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.231164947 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.231593096 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.231414097 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.231578763 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.230804528 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.232465676 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.230827313 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.232265955 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.231091882 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.232709241 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.230858619 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.232793648 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.232470089 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.231873261 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.232803268 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.232068794 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.236965317 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.240703277 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.231408038 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.234690967 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.232866902 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.233986021 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.233196283 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.233063834 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.232723429 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.232671449 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.233420644 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.234830785 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.232575662 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.232457244 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.233873634 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.234704562 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.232692395 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.233718371 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.233138547 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.233899298 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.23411652 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.234235209 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.234574762 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.235319945 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.233950279 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.234256149 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.234902914 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.236818551 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.234903641 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.233439019 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.233055517 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.233383885 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.234574434 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.234861926 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.234712045 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.23457046 seconds)
  done (took 89.91126974 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.234063808 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.232175028 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.231545075 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.232617365 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.232106507 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.235412596 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.232709738 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.235030352 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.233754805 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.235664895 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.234465817 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.233128498 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.232785378 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.234840536 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.234685943 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.233377049 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.23565205 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.232579757 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.235466116 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.23701709 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.234880244 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.232321443 seconds)
  done (took 28.299792919 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.235750764 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.237563658 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.234599697 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.234437707 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.232872735 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.236723594 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.237186471 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.237435473 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.236057022 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.234332044 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.234230216 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.236264122 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.23404959 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.233301256 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.234502176 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.236175173 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.237044444 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.236913459 seconds)
  done (took 23.393917804 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.235140168 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.235187104 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.2377445 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.233777306 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.235108886 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.237935428 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.234630483 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.23769845 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.236056428 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.236196172 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.238201517 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.238327891 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.237502802 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.23493839 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.237295762 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.235662232 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.237458709 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.23550721 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.237554686 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.235430486 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.237248003 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.238420958 seconds)
  done (took 28.359719955 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.238334416 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.238698292 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.235969683 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.236881268 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.236133002 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.237891643 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.238745615 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.235976831 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.239893789 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.238750736 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.236189491 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.238795144 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.238311058 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.236898857 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.23692907 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.236480885 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.239432476 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.237332661 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.238781275 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.236310592 seconds)
  done (took 25.909998471 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.238811183 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.240680996 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.239975674 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.240182163 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.23912664 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.241195085 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.240482331 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.241241959 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.240408654 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.241561222 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.241819362 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.240121066 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.241759686 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.242544871 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.241342082 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.241140426 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.241116999 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.241684143 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.241977602 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.242326022 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.241997442 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.24138468 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.242064164 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.241057326 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.242136442 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.242609661 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.242194067 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.241810281 seconds)
  done (took 35.913468899 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.241545069 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.24203166 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.239263757 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.23966026 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.239315716 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.238816723 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.239995526 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.239375834 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.242696545 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.239655507 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.242337874 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.243169337 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.243365065 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.241650425 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.243030211 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.242204677 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.243550927 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.241425647 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.24106937 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.240511245 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.243371479 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.244138985 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.243351057 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.240479439 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.241324761 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.24428532 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.240727252 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.241597024 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.244336937 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.241901733 seconds)
  done (took 38.410526546 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.262600942 seconds)
    (2/2) benchmarking "in"...
    done (took 1.261892907 seconds)
  done (took 3.685745275 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.241897724 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.244050243 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.243228903 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.240225404 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.240718532 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.244584401 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.244855275 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.240819532 seconds)
  done (took 11.101889812 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.24375814 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.244563338 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.244121758 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.244071228 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.244623614 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.243312075 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.25164541 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.265439365 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.244823866 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.245050348 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.250374412 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.252478671 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.246662199 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.244430201 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.244120598 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.246003683 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.245315332 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.246291913 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.246137079 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.245759709 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.245211756 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.247810488 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.24700669 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.242246961 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.247293062 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.255203846 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.269235439 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.246491044 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.245699155 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.247977316 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.245810323 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.243297944 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.244900997 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.246191076 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.252823819 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.245897159 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.254619329 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.26663754 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.252193104 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.267029994 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.247712154 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.244247552 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.248379312 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.248841127 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.247200119 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.2472317 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.247116849 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.24558357 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.246978637 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.251624375 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.253656441 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.246419621 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.245206774 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.251725599 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.248554897 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.255066594 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.268113121 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.251683658 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.258169726 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.257169244 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.280196644 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.27347405 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.24907588 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.248290133 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.259292101 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.272791365 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.255218096 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.266780857 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.247383926 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.248704664 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.25518237 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.282075774 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.275423646 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.249028734 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.249834661 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.250387806 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.249990342 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.24943216 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.255262587 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.272200118 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.249425069 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.249121819 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.259988484 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.271847217 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.248805436 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.249582473 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.250427632 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.250237942 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.251732235 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.260756074 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.27094725 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.250964931 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.24937471 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.251152873 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.251599905 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.252446145 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.250290073 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.250209719 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.248708633 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.251264606 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.250662741 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.255020996 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.259622953 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.251277746 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.251925607 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.256268267 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.2707001 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.249326883 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.257325779 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.251294616 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.253426516 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.253703405 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.256735358 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.249928616 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.25381755 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.259262457 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.250285 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.252843561 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.252926095 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.251548145 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.261188812 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.278252348 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.252254561 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.252922502 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.255580641 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.265005624 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.252369923 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.255810754 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.25373209 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.250908509 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.250969978 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.253631031 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.253928242 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.253712097 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.253784308 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.253337906 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.250866141 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.253958684 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.254510925 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.252737425 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.253846574 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.25370256 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.253026668 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.255607961 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.253699873 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.255297991 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.259813598 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.273361506 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.253882672 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.255354812 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.250911262 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.25433472 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.254679447 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.254413961 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.25337502 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.253121769 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.25403062 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.254276037 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.25475808 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.253894267 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.25587995 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.254311527 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.260224437 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.254757539 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.258418989 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.255355284 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.252684541 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.256424424 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.255247733 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.254399902 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.255955343 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.254043596 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.258774917 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.262739235 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.25574927 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.255241413 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.257401292 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.255369745 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.254814295 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.256241969 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.259150718 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.263804112 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.256050856 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.261405393 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.27756976 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.255047932 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.255854872 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.256659747 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.25540799 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.25660778 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.25779248 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.264494578 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.268531044 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.282557712 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.257706051 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.261139265 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.258852427 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.260618057 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.259574017 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.257050026 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.25901273 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.257486542 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.256054668 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.257326591 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.259758475 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.257829246 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.258213858 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.257736695 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.25827609 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.257504148 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.259356316 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.259020877 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.259659207 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.25437554 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.258214549 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.258731279 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.25809722 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.255553879 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.257335077 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.258302719 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.259690431 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.258838241 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.26429546 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.256830864 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.260473462 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.260358286 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.258895027 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.258652915 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.260011118 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.261020763 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.259041748 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.265845862 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.278958212 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.260175513 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.264697589 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.279688589 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.258743753 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.261803141 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.258931544 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.257051985 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.262254312 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.268639114 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.260506567 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.259569742 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.259925783 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.25832966 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.260574692 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.264621424 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.279084769 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.260825825 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.260597729 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.26044028 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.256869665 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.260674435 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.262540118 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.260290402 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.261213607 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.260516798 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.260778307 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.261735693 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.260822565 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.261285595 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.260706305 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.263011754 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.269093689 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.265603032 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.260775132 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.262404483 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.263772877 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.265699435 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.261068379 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.261928158 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.262512223 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.273848817 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.287824342 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.267145049 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.282947965 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.262725248 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.267425429 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.283442263 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.267604867 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.262288145 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.263641851 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.261946832 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.262318495 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.261781122 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.263725305 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.265550512 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.263840426 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.264615336 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.268720197 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.263886457 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.263447178 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.263207416 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.262868108 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.26460799 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.263173373 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.264443828 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.265789501 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.265518006 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.263101717 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.264298524 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.269780188 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.284955472 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.264197815 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.262797423 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.26365439 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.263829728 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.26616781 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.264089445 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.267756781 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.272016302 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.265740422 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.273158497 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.266193441 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.273263384 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.264103386 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.268145245 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.273529474 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.26283339 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.26363133 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.265601449 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.2653034 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.271018878 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.286306014 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.267002614 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.270227608 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.264757757 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.265495618 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.266600787 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.26567895 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.266485463 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.26689866 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.272916453 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.286265462 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.26984858 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.268059546 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.263699547 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.266820116 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.267536797 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.264810711 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.269409328 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.266475307 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.267061411 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.266509049 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.265845836 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.26810435 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.267284771 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.267769209 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.264785617 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.26719539 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.273493054 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.288992105 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.270901872 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.267662873 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.273168438 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.287931919 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.272689364 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.288731294 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.267646455 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.267808641 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.26857973 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.269472543 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.267802649 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.269122274 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.269035725 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.269273056 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.272038227 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.268973935 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.269747815 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.268580369 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.268301186 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.267456085 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.277460463 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.293160081 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.269301154 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.272936753 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.266109836 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.27010085 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.272693859 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.268683252 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.268887698 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.272379214 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.279632105 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.277059612 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.26878644 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.269305905 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.270012953 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.269620539 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.269364287 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.27084662 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.27094478 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.270276706 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.269998965 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.270678352 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.272142577 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.27099518 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.271196212 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.271009786 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.271928505 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.279732221 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.292025614 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.271567652 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.270350877 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.271802687 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.270203151 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.272366028 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.272096671 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.271639309 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.271119629 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.272244313 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.2782925 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.277655737 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.273691387 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.27059869 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.271181602 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.271156701 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.272492754 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.271788357 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.271204127 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.271315403 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.271595276 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.270314514 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.272337916 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.26982268 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.271566221 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.272335639 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.27138489 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.274277939 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.281139935 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.27352554 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.270451173 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.272734462 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.271688533 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.271299932 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.274249957 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.278143368 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.29665892 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.282127321 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.281532794 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.276160616 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.272503001 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.276688329 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.28213937 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.27185268 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.273970773 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.273103869 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.274204086 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.273430343 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.277086409 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.274968517 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.279135279 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.295747786 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.274095769 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.282578787 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.293801152 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.274784271 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.27527073 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.278619453 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.274378509 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.272183037 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.275779506 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.273713128 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.281502929 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.29664624 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.274822542 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.276666669 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.274031219 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.27738124 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.278641587 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.27460844 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.274903302 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.273214051 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.27489449 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.274974634 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.275066037 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.273003699 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.274337943 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.274206466 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.278810335 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.282013754 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.274266319 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.278017086 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.275478856 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.276044251 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.27614458 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.276032943 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.273695524 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.274251076 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.276004939 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.276336176 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.275705308 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.277506365 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.275158432 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.27762473 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.277915552 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.275851651 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.280258263 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.287321177 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.284538557 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.274285173 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.276742793 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.276748246 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.277928617 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.276760332 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.277099157 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.276346467 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.27804733 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.278227138 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.278102509 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.276469524 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.281122432 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.291857123 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.298103648 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.27796053 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.277810736 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.279879104 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.27762047 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.276169318 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.278959674 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.27994809 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.281080259 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.286380602 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.278830159 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.283935347 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.297615165 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.28045253 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.282076519 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.283571495 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.286338338 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.281070297 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.277712616 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.279916384 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.283561455 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.295087455 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.279055968 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.288654709 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.309173094 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.300105569 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.280782447 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.281623501 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.278280368 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.279941871 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.281086511 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.279854169 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.279441756 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.281315538 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.279373333 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.280309325 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.285077345 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.279030759 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.281448607 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.280587775 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.279988248 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.280599629 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.278437291 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.280644928 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.280092079 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.27937326 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.280242594 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.280838112 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.280719314 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.293565191 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.309593104 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.281728487 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.280645175 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.278603379 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.283356419 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.284063856 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.291941922 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.288521644 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.282035858 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.281301193 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.282059483 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.281018395 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.281090989 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.281756222 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.280679204 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.282016259 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.279725404 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.294622025 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.309614828 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.285602284 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.280430511 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.283000857 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.28342904 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.282755294 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.282439832 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.282254009 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.281926186 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.285852614 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.286917441 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.2832743 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.283056242 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.285019158 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.290156291 seconds)
  done (took 756.108112801 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.280068767 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.281508687 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.280507307 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.280282805 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.280793181 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.281263285 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.281163156 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.280916927 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.281626077 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.280613629 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.282746617 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.28138121 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.281227881 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.281958202 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.281700308 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.28147485 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.281459919 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.282167168 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.282566824 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.282222475 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.283068866 seconds)
  done (took 28.108645702 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.284892095 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.284063144 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.283609705 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.28564465 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.282882397 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.285596767 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.283767931 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.285238339 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.286400666 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.283241663 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.285623662 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.285762516 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.283026783 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.28338069 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.282821933 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.285688981 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.286189552 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.282517802 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.286424511 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.283474852 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.285698341 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.284018759 seconds)
  done (took 29.460617616 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.286577707 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.28698842 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.284645528 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.284231293 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.286669988 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.284060561 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.284946918 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.286098744 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.286252759 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.286542648 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.28484653 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.28782868 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.293775601 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.292783396 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.287743743 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.287440203 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.430829696 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.286036381 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.286579433 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.286532345 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.284566641 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.29135792 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.306167838 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.285298246 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.285307802 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.287418304 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.288249283 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.287654049 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.287914542 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.287648392 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.291718063 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.287970564 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.286933826 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.289454099 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.287889583 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.289191527 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.293182137 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.288892451 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.286620495 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.288539484 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.298308728 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.309045476 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.289237149 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.294084144 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.310628006 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.288676838 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.292392024 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.296581412 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.286968775 seconds)
  done (took 64.53262031 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.289543626 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.291326522 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.287718938 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.289814375 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.288877026 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.289903736 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.290393356 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.290409307 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.287715017 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.288119818 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.291778611 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.288278759 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.288576654 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.28915541 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.291067121 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.288375684 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.287161809 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.288127207 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.287401895 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.289767684 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.287580195 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.290701606 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.290494871 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.289300832 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.291014992 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.287535855 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.289462485 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.291126483 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.288955923 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.288158852 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.292046982 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.291808221 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.290591086 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.29042931 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.288690733 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.29114023 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.290595822 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.289761232 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.292830156 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.289145122 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.291149961 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.290969165 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.291546467 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.292550274 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.290571719 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.290092701 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.289012477 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.29066532 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.289750571 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.29223357 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.292729852 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.289867772 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.292560391 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.289767478 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.292742418 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.292629756 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.290744803 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.289652332 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.293119088 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.290406598 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.288522786 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.293240613 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.29000293 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.292884067 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.293080352 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.290849785 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.291029382 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.293652863 seconds)
  done (took 88.947701163 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.294166435 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.293058417 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.293588217 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.293535577 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.291964762 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.29274203 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.292864135 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.292866343 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.293166104 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.292801864 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.293657284 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.293449869 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.292835543 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.292660199 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.294021023 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.292555993 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.294363214 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.292649823 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.293797394 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.293794309 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.294368301 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.293619683 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.293450126 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.294765562 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.294321892 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.294729905 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.293923735 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.293117489 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.293768191 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.294397336 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.294563995 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.294358436 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.294572972 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.294265919 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.295452654 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.294540086 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.294847367 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.294454533 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.294754563 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.295221738 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.294798274 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.294012061 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.294201219 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.29499865 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.295370067 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.294084115 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.294824336 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.294083634 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.295286612 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.297161251 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.295860814 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.295902342 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.295888469 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.295889616 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.296480853 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.296264652 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.296012723 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.295273675 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.296974696 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.295496774 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.2969527 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.29760643 seconds)
  done (took 81.465631433 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.297100189 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.297426396 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.294719828 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.29425953 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.297608323 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.295689321 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.297531753 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.296890367 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.297696255 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.29775608 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.297130844 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.294945199 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.295470912 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.297608693 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.29648759 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.295220802 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.297505731 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.297796861 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.299345542 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.29568602 seconds)
  done (took 27.146041279 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.297846217 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.298948529 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.299439815 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.296699374 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.297900185 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.296033451 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.299054434 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.298567565 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.29677269 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.298914619 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.299186503 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.298315313 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.295758125 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.295720752 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.298967241 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.296790626 seconds)
  done (took 21.978096964 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.297400443 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.295952548 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.294480906 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.295193645 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.29399838 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.29345953 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.296317943 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.29268346 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.294775994 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.296993841 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.295878018 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.294539852 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.296113105 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.295352518 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.293687288 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.297311165 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.292325416 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.292692424 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.296827466 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.296143209 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.294106445 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.293926275 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.29518712 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.297624974 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.294065827 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.293752226 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.293963913 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.29393984 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.293172499 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.296306209 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.293391936 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.294848045 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.292381179 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.292274069 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.295244981 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.293504393 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.295917681 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.296451068 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.296848171 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.296813923 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.295989683 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.293647911 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.296356393 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.295344486 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.294142829 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.294684398 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.294100654 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.293253167 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.293573072 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.293265495 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.29525265 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.29517659 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.295574621 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.296541433 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.296689855 seconds)
  done (took 72.43308858 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.296355832 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.296497439 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.294179094 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.29593314 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.297184406 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.294430985 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.297449138 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.295011142 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.293698052 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.296662373 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.295081495 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.298886847 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.293643155 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.297564766 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.297438725 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.297417808 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.295133553 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.293716662 seconds)
  done (took 24.53537795 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.295405402 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.295139506 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.29816233 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.294749589 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.294189713 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.297264443 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.294678274 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.297215329 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.297284155 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.294857408 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.295568191 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.297415661 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.297470741 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.298042034 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.296232783 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.295866674 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.298263361 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.299231807 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.295600152 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.296622084 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.298837309 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.297066631 seconds)
  done (took 29.736485175 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.297013257 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.296932229 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.296253348 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.313134618 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.316291621 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.320772118 seconds)
  done (took 9.052622208 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.305998435 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.299515946 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.296485296 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.299167267 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.299058025 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.296429737 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.296747942 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.29711778 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.299925754 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.296941003 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.296876094 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.29926034 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.299440449 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.296971832 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.300217888 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.299239461 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.297159297 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.297262771 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.297776311 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.299976114 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.29758851 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.300905885 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.297691624 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.29817791 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.298448306 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.296309974 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.300318643 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.299197309 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.298629652 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.29964838 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.300785636 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.298118114 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.301177078 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.298056182 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.301778209 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.300794915 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.297781508 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.301881307 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.301570391 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.299094261 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.301602176 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.301955286 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.30198193 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.298909873 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.30144954 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.298090268 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.299408817 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.298911846 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.29966996 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.303039789 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.302147515 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.299117427 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.302174243 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.30267918 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.301960253 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.302140254 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.300359974 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.29902646 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.301549498 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.300813664 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.300787729 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.303222163 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.299093448 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.300528427 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.301345637 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.300925001 seconds)
  done (took 87.019181415 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.300112057 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.300244624 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.300342878 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.302657703 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.300859998 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.300794107 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.30205736 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.300684906 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.300483195 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.30020134 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.303602986 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.301749844 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.301203499 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.300710602 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.301963981 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.301834602 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.302099038 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.302868269 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.301513325 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.304900529 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.302062782 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.302276103 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.301539842 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.301765124 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.302605123 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.304551898 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.30233531 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.301141404 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.303135809 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.302939273 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.302550578 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.301698051 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.302337878 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.302588745 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.301633307 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.302075097 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.302902074 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.302600677 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.303535925 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.305559236 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.30296601 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.306621147 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.302680604 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.302743792 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.304595396 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.303052274 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.30365147 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.304281902 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.303797492 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.303218719 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.303958448 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.304584693 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.304652052 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.30380182 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.303512246 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.303688673 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.303169056 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.304267419 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.304161806 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.306465144 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.303227067 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.302976394 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.306803162 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.303658821 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.303544709 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.303744416 seconds)
  done (took 87.203848509 seconds)
done (took 1762.426208813 seconds)
(11/20) benchmarking "sparse"...
  (1/6) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.297690733 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.323669054 seconds)
  done (took 13.841352424 seconds)
  (2/6) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.4681091 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.420817374 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.303335975 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.302451241 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.301749487 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.307512127 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.322796108 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.30304112 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.300780997 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.301242003 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.302486877 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.489363344 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.358112876 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.301614711 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.302019057 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.39492395 seconds)
  done (took 42.699587771 seconds)
  (3/6) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.330736585 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.30937425 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.422983835 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.325562673 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.33103133 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.497986275 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.360962067 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.31313099 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.483802777 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.350500547 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.912006157 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.33046799 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.307169611 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.44562839 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.326539589 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.497972835 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.558420159 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.911050092 seconds)
  done (took 30.232958537 seconds)
  (4/6) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.769721537 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.323399761 seconds)
  done (took 9.311658981 seconds)
  (5/6) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.326671829 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.307123031 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.308086493 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.305760332 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.298797256 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.299939189 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.306191088 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.309873401 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.10438076 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.441883923 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.308433049 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.315300763 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.326849618 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.308093434 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.30528472 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.344049448 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.461538164 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.306029353 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.306224842 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.312863025 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.306360914 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.429601054 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.349218232 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.30729391 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.436264797 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.088771208 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.315743943 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.313836529 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.442500479 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.309319402 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.306986735 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.306770572 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.308268654 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.916322011 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.777704389 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.31963205 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.330769353 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.316584911 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.303593613 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.497897187 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.313398785 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.314903064 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.304168925 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.779599158 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.443048707 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.423253092 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.606775531 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.330724971 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.307354091 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.369360695 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.308254165 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.307230897 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.335429267 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.062541285 seconds)
  done (took 110.414428912 seconds)
  (6/6) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.306588752 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.688253135 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.468917871 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.320136286 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.08497913 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.110856517 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.315799662 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.588780486 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.34883117 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.298716675 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.592524871 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.813994735 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.318669149 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.307705202 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.871288282 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.361267501 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.300385573 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.193545585 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.316461891 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.29871151 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.801053758 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.306002738 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.304259295 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.445583503 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.336588661 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.752069929 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.679705688 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.801873512 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.322593406 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.299091503 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.785828312 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.323263259 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.354768302 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.300484981 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.562354623 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.655217473 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.641271649 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.317279003 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.322255654 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.302102815 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.321624209 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.740171887 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.64560407 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.313240017 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.313808579 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.740993764 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.312589811 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.300662403 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.298470075 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.503296442 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.028890082 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.30022312 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.650471279 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.304511349 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.588750634 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.327081699 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.340791724 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.771022628 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.315002688 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.460147627 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.334384548 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.299001643 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.302639315 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.296980249 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.301393934 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.635040515 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.394776396 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.300380429 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.633783822 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.773767348 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.314317077 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.841087793 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.202459607 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.309905611 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.354514174 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.298291119 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.000571995 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.781533686 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.314992857 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.298292801 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.622727586 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.317020531 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.574748198 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.320561542 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.297806154 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.817709324 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.304791219 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.343140889 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.298171517 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.300763174 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 4.100090075 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.30639199 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.566428648 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.350279652 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.298685992 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.300879043 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.350103964 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.299863171 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.316662897 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.303940531 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.821824058 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.325176473 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.294735875 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.323718569 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.300123573 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.307702224 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.301061892 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.300173756 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.524151028 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.771906821 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.325034002 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.302006978 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.30041041 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.324341636 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.423549678 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.303253004 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.599539457 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.318193038 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.301549795 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.301612621 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.100023754 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.345725562 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.300855562 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.322190825 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.224590633 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.510272976 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.31870384 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.300728888 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.301421301 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.319274192 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.505944105 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.320216143 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.378398983 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.306640192 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.004536171 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.364908476 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.337468065 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.681553695 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.30882814 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.178097996 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.321218901 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.302708986 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.593387 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.568257355 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.337366064 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.30404296 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.318560963 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.983734232 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.355796787 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.450905058 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.321086636 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.285310421 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.500409734 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.897588008 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.304210991 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.895935922 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.305294042 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.522191946 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.303809141 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.608713152 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.793136164 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.318754349 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.307075398 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.011279647 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.001103474 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.065392102 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.302543539 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.579038506 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.280374364 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.767306817 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.304093019 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.304202492 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.89628939 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.3048025 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.307277834 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.305239968 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.30518078 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.370024719 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.478286353 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.480203615 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.304041957 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.747602181 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.36236954 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.315955764 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.314271015 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.306384063 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.65053206 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.304517497 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.305141399 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.342898938 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.30707384 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.304312785 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.772568594 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.247639328 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.311220418 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.45809076 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.932062323 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.328192405 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.30612211 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.950531517 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.685346987 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.841939365 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.328461021 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.607763781 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.330416888 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.34374677 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.051746786 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.374166723 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.811857061 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.323493089 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.3077138 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.906450672 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.328115664 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.386279803 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.307043602 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.306768027 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.847310278 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.328467816 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.311093995 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.5160893 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.327229082 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.578042474 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.308112314 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.352656743 seconds)
  done (took 1104.548279168 seconds)
done (took 1312.266079099 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.309386965 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.310136279 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.296826666 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.314039777 seconds)
  done (took 26.456648041 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.319089664 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.315242787 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.314786236 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.314512998 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.315992689 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.313162691 seconds)
  done (took 9.119277332 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.358104994 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.310216793 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.315186121 seconds)
  done (took 19.210882029 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.513528303 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.610166017 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.669364355 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.507665294 seconds)
  done (took 10.528519196 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.316181583 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.316654881 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.316631271 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.317240847 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.319306668 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.322053479 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.319702725 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.317203911 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.320796472 seconds)
  done (took 13.093445549 seconds)
  (6/6) benchmarking "26942"...
  done (took 1.322143925 seconds)
done (took 80.957200115 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.291982868 seconds)
    (2/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.731924116 seconds)
    (3/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.314374841 seconds)
    (4/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.299193169 seconds)
    (5/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.715083673 seconds)
    (6/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.60256955 seconds)
    (7/286) benchmarking ("map", abs, BigInt, false)...
    done (took 6.361511547 seconds)
    (8/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.373615154 seconds)
    (9/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.337378404 seconds)
    (10/286) benchmarking ("sort", BigInt, false)...
    done (took 6.31040214 seconds)
    (11/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.779259657 seconds)
    (12/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.320040769 seconds)
    (13/286) benchmarking ("map", abs, BigInt, true)...
    done (took 6.290360816 seconds)
    (14/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.41520839 seconds)
    (15/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.489588052 seconds)
    (16/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.772008195 seconds)
    (17/286) benchmarking ("sort", Int64, true)...
    done (took 6.310065518 seconds)
    (18/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.44184068 seconds)
    (19/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.208144973 seconds)
    (20/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.396707403 seconds)
    (21/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.290611654 seconds)
    (22/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.291095883 seconds)
    (23/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.415766411 seconds)
    (24/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.861228631 seconds)
    (25/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.523751838 seconds)
    (26/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.291382217 seconds)
    (27/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.660938391 seconds)
    (28/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.376546531 seconds)
    (29/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.713117182 seconds)
    (30/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.423228025 seconds)
    (31/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.116771897 seconds)
    (32/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.572016218 seconds)
    (33/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.591878809 seconds)
    (34/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.311802179 seconds)
    (35/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.749121261 seconds)
    (36/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.19479648 seconds)
    (37/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.397206378 seconds)
    (38/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.734592266 seconds)
    (39/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.336699027 seconds)
    (40/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.610609229 seconds)
    (41/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.089031657 seconds)
    (42/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.361654238 seconds)
    (43/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.492967866 seconds)
    (44/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.387368589 seconds)
    (45/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.72060926 seconds)
    (46/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.671475487 seconds)
    (47/286) benchmarking ("sort", Int8, false)...
    done (took 4.374717943 seconds)
    (48/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 6.303486189 seconds)
    (49/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.95821762 seconds)
    (50/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.395926608 seconds)
    (51/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.301528884 seconds)
    (52/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.319930412 seconds)
    (53/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.101877383 seconds)
    (54/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.392615589 seconds)
    (55/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.118551444 seconds)
    (56/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.294547327 seconds)
    (57/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.256692577 seconds)
    (58/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.330166378 seconds)
    (59/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.293302304 seconds)
    (60/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.416251121 seconds)
    (61/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.331647398 seconds)
    (62/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.399213335 seconds)
    (63/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.300089926 seconds)
    (64/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.136609805 seconds)
    (65/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.359985226 seconds)
    (66/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.136112579 seconds)
    (67/286) benchmarking ("sort", Float32, false)...
    done (took 5.326542263 seconds)
    (68/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.434891049 seconds)
    (69/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.254525097 seconds)
    (70/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.607422265 seconds)
    (71/286) benchmarking ("sort", Int64, false)...
    done (took 5.510902738 seconds)
    (72/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.442994431 seconds)
    (73/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.313832134 seconds)
    (74/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.397898569 seconds)
    (75/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.397513583 seconds)
    (76/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.315157442 seconds)
    (77/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.79223065 seconds)
    (78/286) benchmarking ("map", identity, Float32, true)...
    done (took 2.056121643 seconds)
    (79/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.156951221 seconds)
    (80/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.531363742 seconds)
    (81/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.076987676 seconds)
    (82/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.32223716 seconds)
    (83/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.501491857 seconds)
    (84/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.295109865 seconds)
    (85/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.611384467 seconds)
    (86/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.339793945 seconds)
    (87/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.413924646 seconds)
    (88/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.932950217 seconds)
    (89/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.09867731 seconds)
    (90/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.46392537 seconds)
    (91/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.325246212 seconds)
    (92/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.348836802 seconds)
    (93/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.514852752 seconds)
    (94/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.321628472 seconds)
    (95/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.429924016 seconds)
    (96/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.41750471 seconds)
    (97/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.723312408 seconds)
    (98/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.32024057 seconds)
    (99/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.370220705 seconds)
    (100/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 5.46605805 seconds)
    (101/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.691167541 seconds)
    (102/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.386406766 seconds)
    (103/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.298114012 seconds)
    (104/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.313185843 seconds)
    (105/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.320186111 seconds)
    (106/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.028131902 seconds)
    (107/286) benchmarking ("sort", Bool, false)...
    done (took 1.859812956 seconds)
    (108/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.357374173 seconds)
    (109/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.595495511 seconds)
    (110/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.298486306 seconds)
    (111/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.349220903 seconds)
    (112/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.160003034 seconds)
    (113/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.321045862 seconds)
    (114/286) benchmarking ("sort", Int8, true)...
    done (took 6.340794358 seconds)
    (115/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.103554831 seconds)
    (116/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.58658314 seconds)
    (117/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.296531714 seconds)
    (118/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.247605614 seconds)
    (119/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.418355221 seconds)
    (120/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.441584906 seconds)
    (121/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.552464136 seconds)
    (122/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.35160503 seconds)
    (123/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.729750627 seconds)
    (124/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.321317575 seconds)
    (125/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.115609911 seconds)
    (126/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.352658123 seconds)
    (127/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.327731549 seconds)
    (128/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.308673357 seconds)
    (129/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.298330614 seconds)
    (130/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.409826798 seconds)
    (131/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.341460656 seconds)
    (132/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.925164424 seconds)
    (133/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.476441597 seconds)
    (134/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.927236663 seconds)
    (135/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.429879243 seconds)
    (136/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 3.042545364 seconds)
    (137/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.920989432 seconds)
    (138/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.299840067 seconds)
    (139/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.369899964 seconds)
    (140/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.297162191 seconds)
    (141/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.69396473 seconds)
    (142/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 3.788218946 seconds)
    (143/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.606193291 seconds)
    (144/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.816571089 seconds)
    (145/286) benchmarking ("sort", BigFloat, true)...
    done (took 6.330208033 seconds)
    (146/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.938481428 seconds)
    (147/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.201336568 seconds)
    (148/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 3.709461909 seconds)
    (149/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.933546088 seconds)
    (150/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.430808885 seconds)
    (151/286) benchmarking ("sort", BigInt, true)...
    done (took 6.319032189 seconds)
    (152/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.33499429 seconds)
    (153/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.373257675 seconds)
    (154/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.299179801 seconds)
    (155/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.454213303 seconds)
    (156/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.402237337 seconds)
    (157/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.300595171 seconds)
    (158/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.033714776 seconds)
    (159/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.372014727 seconds)
    (160/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.361291811 seconds)
    (161/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.259650563 seconds)
    (162/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.74186845 seconds)
    (163/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 6.314121296 seconds)
    (164/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.721787693 seconds)
    (165/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.322630434 seconds)
    (166/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.39278711 seconds)
    (167/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.301420937 seconds)
    (168/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.310663735 seconds)
    (169/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.369107952 seconds)
    (170/286) benchmarking ("sort", Bool, true)...
    done (took 5.432112726 seconds)
    (171/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.704651354 seconds)
    (172/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.396202707 seconds)
    (173/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.419557768 seconds)
    (174/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.346671943 seconds)
    (175/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.591518043 seconds)
    (176/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.792533985 seconds)
    (177/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.981007914 seconds)
    (178/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.714167047 seconds)
    (179/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.891736511 seconds)
    (180/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.308664379 seconds)
    (181/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.370913343 seconds)
    (182/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.157749814 seconds)
    (183/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.405438033 seconds)
    (184/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.945943283 seconds)
    (185/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.540797164 seconds)
    (186/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.520417211 seconds)
    (187/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.637913016 seconds)
    (188/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.355623891 seconds)
    (189/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.302293056 seconds)
    (190/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 3.704478291 seconds)
    (191/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.34641069 seconds)
    (192/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.302034485 seconds)
    (193/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.857874828 seconds)
    (194/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.452614748 seconds)
    (195/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.321528699 seconds)
    (196/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.776903666 seconds)
    (197/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.318069903 seconds)
    (198/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.381678658 seconds)
    (199/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.338778251 seconds)
    (200/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.545001558 seconds)
    (201/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.329391889 seconds)
    (202/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.431619228 seconds)
    (203/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.413253273 seconds)
    (204/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.364114641 seconds)
    (205/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.302685952 seconds)
    (206/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.302372883 seconds)
    (207/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.342877299 seconds)
    (208/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.322088894 seconds)
    (209/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.368792323 seconds)
    (210/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.303568585 seconds)
    (211/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.384611426 seconds)
    (212/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.350563968 seconds)
    (213/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.127471232 seconds)
    (214/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.512712703 seconds)
    (215/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.366334511 seconds)
    (216/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.344559169 seconds)
    (217/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.354290249 seconds)
    (218/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.182853162 seconds)
    (219/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.08843491 seconds)
    (220/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.374173228 seconds)
    (221/286) benchmarking ("sort", BigFloat, false)...
    done (took 6.332986358 seconds)
    (222/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.407675489 seconds)
    (223/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.090164022 seconds)
    (224/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.975744668 seconds)
    (225/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.85410315 seconds)
    (226/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.415276061 seconds)
    (227/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.53126514 seconds)
    (228/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.695542986 seconds)
    (229/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.688473587 seconds)
    (230/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.313898089 seconds)
    (231/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.194045956 seconds)
    (232/286) benchmarking ("sort", Float64, false)...
    done (took 5.594545277 seconds)
    (233/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.349106986 seconds)
    (234/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.308370314 seconds)
    (235/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.324027108 seconds)
    (236/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.351672864 seconds)
    (237/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.351962847 seconds)
    (238/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.968169292 seconds)
    (239/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.335414129 seconds)
    (240/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.353279511 seconds)
    (241/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.705393647 seconds)
    (242/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.452443383 seconds)
    (243/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.306053891 seconds)
    (244/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.121576683 seconds)
    (245/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.676700043 seconds)
    (246/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.676789579 seconds)
    (247/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.310585809 seconds)
    (248/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.305447364 seconds)
    (249/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.324773757 seconds)
    (250/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.775074912 seconds)
    (251/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.341407317 seconds)
    (252/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.362144349 seconds)
    (253/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 3.822627658 seconds)
    (254/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.104969639 seconds)
    (255/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.533304802 seconds)
    (256/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.161447104 seconds)
    (257/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.477105671 seconds)
    (258/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.741679402 seconds)
    (259/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.323171006 seconds)
    (260/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.355920649 seconds)
    (261/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.418307149 seconds)
    (262/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.4191662 seconds)
    (263/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.409545628 seconds)
    (264/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.552709131 seconds)
    (265/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.45199069 seconds)
    (266/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.353186921 seconds)
    (267/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.535652365 seconds)
    (268/286) benchmarking ("sort", Float32, true)...
    done (took 6.34303252 seconds)
    (269/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.435273498 seconds)
    (270/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.147329579 seconds)
    (271/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.353098548 seconds)
    (272/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.550099232 seconds)
    (273/286) benchmarking ("map", abs, Int64, false)...
    done (took 1.965509638 seconds)
    (274/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.316615989 seconds)
    (275/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.935284869 seconds)
    (276/286) benchmarking ("sort", Float64, true)...
    done (took 6.344533142 seconds)
    (277/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.138163015 seconds)
    (278/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.369829836 seconds)
    (279/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.328078292 seconds)
    (280/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.703690274 seconds)
    (281/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.316370196 seconds)
    (282/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.93623968 seconds)
    (283/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.904848906 seconds)
    (284/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.245324646 seconds)
    (285/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.350670553 seconds)
    (286/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.906818877 seconds)
  done (took 935.972628504 seconds)
done (took 937.201558755 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.362308089 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.359013034 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.340494046 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.361523024 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.453385872 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.363164693 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.350642513 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.342290093 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.388476505 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.38922558 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.340575471 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.363223457 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.34300357 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.341538611 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.34072786 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.358770105 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.385838678 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.343003597 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.359651936 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.350003868 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.358334718 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.341977045 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.391146836 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.364240678 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.346324961 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.343530644 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.345582304 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.361842121 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.455303215 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.346309565 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.345541163 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.354521711 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.386191327 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.341422159 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.336812518 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.363178346 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.354697806 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.352296203 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.348128087 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.37590859 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.793449146 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.360423388 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.345867597 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.344684901 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.343626491 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.347881686 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.345243665 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.349941714 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.358469425 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.361087131 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.7772012 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.37597737 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.34700856 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.344162318 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.354118622 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.345500658 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.346703588 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.363757702 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.364472675 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.363248015 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.372237986 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.350212491 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.347042684 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.361179761 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.352383242 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.813660396 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.357329734 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.348870598 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.791058432 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.366981447 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.813345927 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.371040456 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.346638349 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.360444846 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.377922437 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.385817752 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.34054942 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.34392105 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.353993039 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.344846044 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.355659945 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.360359861 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.350242299 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.345744263 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.361847611 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.369010123 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.355560853 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.348982846 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.356028657 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.366333813 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.354051901 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.35726788 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.349638986 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.343445525 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.355857644 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.350729451 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.351796224 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.349616406 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.352052569 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.358447849 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.794127264 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.384351655 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.343853019 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.344405482 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.346765753 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.362120693 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.794507613 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.366697528 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.368772597 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.394834738 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.349646136 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.377849434 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.352559953 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.366105849 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.355771392 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.351682438 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.342785272 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.380904129 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.787154751 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.382216457 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.349752279 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.348098654 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.366243527 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.349822839 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.345955581 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.393626714 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.349769984 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.365951182 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.470910091 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.36075327 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.381978205 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.348960119 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.352630082 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.371512296 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.367580381 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.382125353 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.351371658 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.368270235 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.366402542 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.346549361 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.361022995 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.359557895 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.351192043 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.354978088 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.343865251 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.372571795 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.364683419 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.364000612 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.371633549 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.472261989 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.347849154 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.383458289 seconds)
done (took 227.559476405 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.406050674 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.342252338 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.429453452 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.345830189 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.444414371 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.444407637 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.343184287 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.344839951 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.342892675 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.725731549 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.34398618 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.342629078 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.34658809 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.344292845 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.427152849 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.34691352 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.343817969 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.688304949 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.345988558 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.416901324 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.343750124 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.34303576 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.346642903 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.727099087 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.341379797 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.339752306 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.415322015 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.346813878 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.689356792 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.339230491 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.341748068 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.691404881 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.436351748 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.364743003 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.356052309 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.354633313 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.447175146 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.364796448 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.428834376 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.428811819 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.431948631 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.386151529 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.347487017 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.347663197 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.349536526 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.34791979 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.345430748 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.373566876 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.344752102 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.346610363 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.689647752 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.357428984 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.355464054 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.346666824 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.345839894 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.368185294 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.345939067 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.348678119 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.436411029 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.349034893 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.411070182 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.727674427 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.728097757 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.349616259 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.347073359 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.347348758 seconds)
  done (took 149.293176016 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.415109755 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.423072877 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.459187045 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.366993466 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.399786446 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.465926917 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.366669824 seconds)
  done (took 11.15497195 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.355830609 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.349324972 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.397775019 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.39792781 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.348656314 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.498053422 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.351142112 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.360096317 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.347212545 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.401991716 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.351596465 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.350918249 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.356469707 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.350296915 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.396456519 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.359839621 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.46390427 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.350566951 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.351481675 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.501592419 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.348460366 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.357447437 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.401380349 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.362128199 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.351708619 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.357057663 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.916896876 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.350216497 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.348380256 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.351608625 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.349307215 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.387703524 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.351889511 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.345161469 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.347820357 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.468303511 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.352584745 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.349399881 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.352315879 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.351288222 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.352690157 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.353317782 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.352288674 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.35041106 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.35167764 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.374278584 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.352898639 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.351441683 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.353965081 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.353287968 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.40152268 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.352714759 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.350823564 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.349904521 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.407835889 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.3602046 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.35327198 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.350065293 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.352837561 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.351701135 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.504211784 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.400359952 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.354215232 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.399110205 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.353499377 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.353771145 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.353177058 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.354527703 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.406556059 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.353320736 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.401576368 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.351911977 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.508116754 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.375651723 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.355723865 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.357121798 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.355810622 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.353111694 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.346047873 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.358537923 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.352934935 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.355823775 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.360286564 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.352297045 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.352068879 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.455787454 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.463022894 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.352869823 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.369049375 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.359767077 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.352540518 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.408233739 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.354734677 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.352760744 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.406760319 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.469201646 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.408637887 seconds)
  done (took 155.004078564 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.360190483 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.363343017 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.356399666 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.371157991 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.357731929 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.355332655 seconds)
  done (took 9.428119818 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.358932939 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.357976652 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.356542006 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.355947502 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.356532084 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.357249278 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.356281222 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.357091386 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.361754842 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.357097711 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.35672081 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.358231194 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.357521361 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.35542673 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.357090945 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.356698793 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.356243216 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.355071893 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.35741661 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.357995481 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.452405424 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.357730821 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.357122696 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.357842829 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.362291327 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.357871564 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.366289267 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.356975367 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.357907961 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.364820908 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.377786553 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.358060657 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.357565286 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.36475892 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.36131961 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.357821186 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.362016763 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.359215685 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.355595507 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.358102969 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.359805906 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.358707022 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.358965158 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.360728502 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.360184932 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.363531858 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.364194054 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.367019951 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.359239441 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.360308384 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.36060038 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.35921872 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.359265994 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.360302073 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.36020046 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.381087026 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.364268512 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.359995656 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.361014976 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.361381443 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.361550435 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.359993028 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.361254455 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.364245989 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.367820363 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.362228986 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.361808451 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.363502983 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.360458139 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.362223974 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.361358728 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.359886543 seconds)
  done (took 100.300310961 seconds)
done (took 426.43359122 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.797266996 seconds)
  done (took 8.065354637 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.458605394 seconds)
  done (took 7.730149929 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 21.100787378 seconds)
  done (took 22.377600343 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.367475164 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.443236165 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.379475887 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.365923141 seconds)
  done (took 26.826459157 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.647583692 seconds)
  done (took 7.916295493 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.354464836 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.370282463 seconds)
  done (took 13.996521947 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.366370734 seconds)
  done (took 7.63633374 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.958394892 seconds)
  done (took 8.233540064 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.367253142 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.375179838 seconds)
  done (took 14.281366421 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.335688232 seconds)
  done (took 7.606056014 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.243829886 seconds)
  done (took 8.516680006 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.354386116 seconds)
  done (took 7.626749162 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.373975632 seconds)
  done (took 7.644742198 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.462508889 seconds)
  done (took 9.73476469 seconds)
done (took 159.46166011 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.355345524 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.363387797 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.364168445 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.362954511 seconds)
  done (took 26.716271429 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.397002589 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.397330768 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.397995037 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.407822546 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.399606997 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.398069715 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.38898071 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.389811536 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.409600078 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.40097031 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.400231983 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.401193605 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.399464094 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.390978936 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.40168846 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.401217276 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.408772113 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.400597632 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.390889991 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.402308709 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.367324802 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.410011253 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.401319852 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.36573567 seconds)
  done (took 34.801838367 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.885878654 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.436268775 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.517780255 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.418738379 seconds)
  done (took 7.532073929 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.417543209 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.419218293 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.431181583 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.476575851 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.505394555 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.428242909 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.392256837 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.386836318 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.374243559 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.420388273 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.494870411 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.434527517 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.518127174 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.365697105 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.553470543 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.366842396 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.366811851 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.418059312 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.470077216 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.488716713 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.367013896 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.419434221 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.423100773 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.43614311 seconds)
  done (took 35.648844327 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.366129253 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.385619368 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.36684863 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.36536703 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.37517476 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.366241099 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.36697163 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.367773857 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.367439734 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.372775634 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.366320272 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.37958877 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.36623257 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.365961158 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.373614942 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.367962851 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.372881111 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.36495233 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.367798891 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.373091506 seconds)
  done (took 28.674187755 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.360930324 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.215234301 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.713352236 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.616667555 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.360846406 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.369422009 seconds)
  done (took 27.911602863 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.438877357 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.598963531 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.367028624 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.735141406 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.836075312 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.391750935 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.368117025 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.616822619 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.943824788 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.933647311 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.434196363 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.442571305 seconds)
  done (took 20.384028448 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.365663532 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.369554631 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.377489358 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.385873577 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.422666423 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.389275403 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.374955966 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.362018795 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.431981517 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.451518473 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.395230208 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.426670407 seconds)
  done (took 38.030695085 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.450462892 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.408483181 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.309815216 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.394361987 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.081699716 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.57652397 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.426849281 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.795673598 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.369316272 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.6399019 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.366455659 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.462631409 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.619139702 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.364409152 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.375143279 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.365271172 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.608617453 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.848310935 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.366861127 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.477187001 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.398383443 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.363969912 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.573990575 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.40228376 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.575753021 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.50688812 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.626700541 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.141029256 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.665467646 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.38509636 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.376945333 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.366276741 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.640109156 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.037645907 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.482858439 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.375808366 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.381336291 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.911423923 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.357304065 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.477579577 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.378410893 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.377376654 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.378361643 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.366749541 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.301483111 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.36549469 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.809456663 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.373618471 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.079595503 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.367290186 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.379361451 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.462735902 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.37092564 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.358132269 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.441696132 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.373255882 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.364717123 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.463046733 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.957908076 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.897504058 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.382352331 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.309986182 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.369397281 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.396046133 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.016117613 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.487828735 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.371064644 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.372497155 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.302743129 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.512399464 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.393555558 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.516687518 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.390572869 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.018201885 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.089598794 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.387825779 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.322166334 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.910271668 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.371325885 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.311094396 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.597182827 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.147486893 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.30532194 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.311507298 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.303797191 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.068227664 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.377741654 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.768298728 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.389296859 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.819009352 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.380322127 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.387319154 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.394015176 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.592330064 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.249024791 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.370063597 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.372731082 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.503788797 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.391981203 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.800626241 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.305886051 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.375293281 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.626609079 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.582193874 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.379565993 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.370100757 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.590061875 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.371390975 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.410343541 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.381475066 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.389332392 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.960211086 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.401052789 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.904458574 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.397570485 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.149138079 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.099576087 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.379032707 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.481774232 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.383437703 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.630446332 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.116946707 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.532796166 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.440615731 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.374854689 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.371682625 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.49216044 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.972657338 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.531966556 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.36813399 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.379042312 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.391693273 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.371840496 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.322038169 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.380669164 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.378512069 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.157587591 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.597301676 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.380515134 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.656626246 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.752543898 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.519931516 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.381945195 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.598195734 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.576744091 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.389450766 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.632971724 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.374276109 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.39062469 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.393569142 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.392373389 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.475901441 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.396338262 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.383722815 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.637541983 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.378217719 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.377372053 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.518144792 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.158675504 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.377843462 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.379210531 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.390989955 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.980909176 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.369080153 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.382935078 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.263142903 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.387865204 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.441916578 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.379821172 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.383880283 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.220064272 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.399201165 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.381498447 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.385743138 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.605555463 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.386271725 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.411784958 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.46210491 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.571740824 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.98194573 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.405894092 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.308475062 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.086094717 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.068789512 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.374696808 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.565551538 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.376349262 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.387158335 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.387036354 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.387982092 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.968779508 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.394856302 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.409268459 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.39063848 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.387378701 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.382234502 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.37563013 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.208577353 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.939993672 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.399363477 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.396577767 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.521257817 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.391846585 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.310582053 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.894008736 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.383568706 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.377318382 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.156344972 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.411640194 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.403942331 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.861099283 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.637301248 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.396697098 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.390300589 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.521969249 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.418703116 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.377515226 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.394106511 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.400122426 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.403305616 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.402692604 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.388800622 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.448212247 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.747189805 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.948147708 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.10767987 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.953379841 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.327938097 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.381196139 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.270026392 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.812049085 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.313810911 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.034720601 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.570847913 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.839196068 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.323748114 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.581863499 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.595166795 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.174527487 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.389853189 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.607461055 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.308932865 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.383856885 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.399747123 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.591018338 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.4140534 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.389991976 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.318037105 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.661102202 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.616618183 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.39487351 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.465851184 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.812245979 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.384491273 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.165259973 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.420485218 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.708101788 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.571080378 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.009608972 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.767702648 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.39107907 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.397018852 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.864730969 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.39023663 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.906670427 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.009961805 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.40878683 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.5884913 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.317414386 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.391188517 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.39325769 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.376969231 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.731233761 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.393992258 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.64639119 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.391684969 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.314742985 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.380777573 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.930163634 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.254292617 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.388134664 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.381915942 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.115012197 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.38256032 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.710067285 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.391561909 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.219757333 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.403365217 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.317394808 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.316365343 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.075366594 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.385113137 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.357114744 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.881026368 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.400153103 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.384759091 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.395681852 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.238664533 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.637867442 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.397287251 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.99023267 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.625117245 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.401962656 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.407471915 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.484726743 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.390669578 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.374188294 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.265677841 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.618691702 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.400851224 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.60802211 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.349131565 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.284433731 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.400757186 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.615273292 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.266081532 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.398783971 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.648874726 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.114322868 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.388749527 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.10580117 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.427549744 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.389420675 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.404139234 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.388867693 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.404795394 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.475693864 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.39547328 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.396691383 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.396853182 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.559646878 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.399617151 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.394559384 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.400070423 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.479211069 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.940771251 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.213833128 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.160123222 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.997751956 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.146282599 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.000888536 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.416351496 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.387219177 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.385590576 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.32031839 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.537604487 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.912446972 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.660834395 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.515713725 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.393041995 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.408795111 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.397459911 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.396785081 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.623430258 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.661531936 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.359263612 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.392129777 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.181990974 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.547589499 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.397015589 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.599312136 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.892064076 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.949291097 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.504719823 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.398949085 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.828840179 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.663313819 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.481103455 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.386875447 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.978377198 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.409239032 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.741119761 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.41371703 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.390551003 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.544567625 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.399540505 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.062064851 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.418426997 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.54761977 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.160773163 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.456999112 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.653467535 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.883042008 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.408705648 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.002080416 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.136871933 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.65753548 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.459432347 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.39975139 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.501581177 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.536422717 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.387307816 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.306042198 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.391360158 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.233982516 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.099926882 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.398545754 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.992113734 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.669821993 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.386433417 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.388000604 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.41474667 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.399665077 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.614220744 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.090501818 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.613648054 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.401758456 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.3915445 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.961614475 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.990735908 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.421025305 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.324616052 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.395061787 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.648958519 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.653458099 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.414510535 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.84549647 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.102495624 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.94021668 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.363701214 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.414343544 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.405360797 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.117089482 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.991291034 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.236739243 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.917640269 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.058371529 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.407878666 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.674797056 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.396566829 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.402971762 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.676496577 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.396366784 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.401070989 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.411858894 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.00490551 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.195012534 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.397880498 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.557783052 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.338954971 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.619030908 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.461890779 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.328231728 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.392682796 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.570146061 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.393830047 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.522988338 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.406591868 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.395535021 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.394857345 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.152583786 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.664988711 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.399502153 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.393763422 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.385127785 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.415715901 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.493610872 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.631818962 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.401163841 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.068415461 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.746506228 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.649296384 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.40013393 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.382386244 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.399472428 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.394443767 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.113009244 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.404904283 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.397731951 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.958756045 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.40442182 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.414403055 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.399935735 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.611727633 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.607721629 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.410642993 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.416265477 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.403654736 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.418388647 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.295870568 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.162615693 seconds)
  done (took 1666.654327837 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.438491964 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.408752456 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.416746938 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.478159353 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.417913749 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.492364134 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.408691949 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.409976022 seconds)
  done (took 52.778681751 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.405434417 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.553228602 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.426799759 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.405065282 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.404856425 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.398666322 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.874661078 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.422568226 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.405440904 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.40565165 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.400627121 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.40596519 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.080728956 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.405293699 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.403714746 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.387462231 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.403269146 seconds)
  done (took 66.503587201 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.409802892 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.472861706 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.498769032 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.40090797 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.578352037 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.427820776 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.463543902 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.440920456 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.413983352 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.487396094 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.072231472 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.402294394 seconds)
  done (took 80.378830556 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.41523727 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.414915554 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.414090965 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.415451916 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.415013064 seconds)
  done (took 8.384753791 seconds)
done (took 2095.671463227 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.406300417 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.117945814 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.057498568 seconds)
  done (took 5.483911658 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.544113092 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.591988662 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.71173378 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.732031366 seconds)
  done (took 7.886740698 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.689090591 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.766033922 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.586869834 seconds)
  done (took 6.349285869 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 1.688094516 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.402970779 seconds)
  (7/14) benchmarking "20517"...
  done (took 6.405911153 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.397132824 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.402861112 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.404394803 seconds)
  done (took 20.513704267 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.402785539 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.402794886 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.402257477 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.404178256 seconds)
  done (took 6.921830096 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.377609184 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.091829634 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.377814095 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.394211197 seconds)
  done (took 18.550767106 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.151169853 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.158943111 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.145281827 seconds)
  done (took 7.765269871 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 1.428369206 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 1.421492904 seconds)
  done (took 4.158733166 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.697979248 seconds)
  done (took 3.007129221 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.414931252 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.453870316 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.451207466 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.37353632 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 4.862175597 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.896742197 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 3.075139418 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.647994953 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.354377241 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.676093362 seconds)
  done (took 31.515240724 seconds)
done (took 129.366040553 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.279899661 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.773338515 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.603451878 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.257409356 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.630963101 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.603605809 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.618336243 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.226678287 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.762087934 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.752585805 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.300002679 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.631136167 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.56130545 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.773418205 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.562645779 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.397983735 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.630651855 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.313636669 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.941710865 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.137726886 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.618891505 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.894959276 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.132274986 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.909030473 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.630573305 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.557289871 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.475517058 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.399019361 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.116286943 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.489913315 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.554847515 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.316523008 seconds)
  done (took 193.165448181 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.399330621 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.399612641 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.41650412 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.416432181 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.399508587 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.415492242 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.417242614 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.417719108 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.404163393 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.407180142 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.400386467 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.40052111 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.39863515 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.404578083 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.402696283 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.41255127 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.407020902 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.399483331 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.420494938 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.400569718 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.402841998 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.406109816 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.406422532 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.412807405 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.400001828 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.399751242 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.400575954 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.400760325 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.401989528 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.419519136 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.402098284 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.404565577 seconds)
  done (took 206.310165831 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.41480759 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.402439368 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.402205063 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.40214914 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.423564853 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.400934185 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.402199479 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.410595815 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.402701134 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.40125273 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.402619636 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.403162902 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.402766975 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.403084189 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.409077901 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.40255272 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.402345167 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.422144705 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.404334676 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.401876173 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.429580277 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.402778681 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.424842138 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.402562407 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.404083503 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.42396255 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.417565178 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.403131408 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.403569179 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.403081864 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.404016495 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.432093915 seconds)
  done (took 206.382546462 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.605415499 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.411626387 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.413076643 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.36441838 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.413281186 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.411351325 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.407084993 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.60088513 seconds)
  done (took 14.943433905 seconds)
done (took 622.110906237 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.718394811 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.431962601 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.609870344 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.432217069 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.196143858 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.450570466 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.432002134 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.602302167 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.338979754 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.610021483 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.705720965 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.447319291 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.854338138 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.429504074 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.686486845 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.530581221 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.349440084 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.476323945 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.75094214 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.984990551 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.692653529 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.894971223 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.623498519 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.327402978 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.871852764 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.887740829 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.15142778 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.336309756 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.449276768 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.756909135 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.135862143 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.406785205 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.493871732 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.493147891 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.550704465 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.529305131 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.385110822 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.491428473 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.632217117 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.660321313 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.974201793 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.157344635 seconds)
  done (took 95.258394492 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.395529335 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.394144687 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.394066096 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.396141749 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.396947936 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.396945648 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.394446146 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.394382917 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.396662218 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.395186746 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.396289785 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.396988751 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.397195136 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.397473453 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.396137435 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.395740307 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.396454589 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.39896646 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.396506864 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.396386045 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.397177478 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.397206649 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.396978947 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.397353968 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.398589372 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.398624052 seconds)
  done (took 37.628756434 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.417203375 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.66347021 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.833983474 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.430310538 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.414675926 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.420189909 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.496559204 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.417924653 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.418679905 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.419810239 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.572119889 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.420901059 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.452139054 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.863679602 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.426961664 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.417820096 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.41651104 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.417623059 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.672305438 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.427134667 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.515394332 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.417670711 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.496816711 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.426773199 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.43759821 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.418243551 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.422296922 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.004226671 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.437677777 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.574814017 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.236491177 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.503224593 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.944209664 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.867378264 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.242994355 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.428875227 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.418613078 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.57806126 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.420673106 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.418314141 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.497797568 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.418907864 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.847398279 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.099386928 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.437877096 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.419245106 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.022593814 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.596983334 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.672201405 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.435426779 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.872954224 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.4313038 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.422618892 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.420594697 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.673297411 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.435824664 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.419325239 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.034575066 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.451667193 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.500216117 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.420942042 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.419223081 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.685639032 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.428600522 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.671234318 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.429836783 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.428364894 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.43972452 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.852266427 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.431412209 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.122267261 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.446009223 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.420922955 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.575781075 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.670776086 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.065379079 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.444504852 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.689941487 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.9629494 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.517262237 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.430477137 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.993670908 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.5218353 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.432217813 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.425146593 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.424752997 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.422776277 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.467297436 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.499207347 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.049073451 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.13033579 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.065085677 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.522941117 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.435537797 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.42395541 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.039641076 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.452037519 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.423114466 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.846737569 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.129591409 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.447419365 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.43105235 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.124064629 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.450286499 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.504284648 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.428378844 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.859445759 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.424303322 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.528190621 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.423790229 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.429773669 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.4475673 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.505691722 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.427916626 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.42489566 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.09019549 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.602466009 seconds)
  done (took 187.473425387 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.419034252 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.435191531 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.418717273 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.436296069 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.417348967 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.42749298 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.418909912 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.418605523 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.423662537 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.417927914 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.418568564 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.428378618 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.419300571 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.417309843 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.449184321 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.424713248 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.073531494 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.420367044 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.41792618 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.418583656 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.218692313 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.428721238 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.418011176 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.43649331 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.418564797 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.419186687 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.421026168 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.422715454 seconds)
  done (took 154.633475994 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.427176717 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.000317624 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.443425956 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.562128555 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.453016168 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.423898007 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.560324835 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.492176718 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.44482904 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.425083073 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.426034598 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.742732684 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.437187819 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.950834612 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.62553209 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.583390054 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.956805447 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.444671137 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.425252095 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.426825905 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.565408892 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.436064432 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.73498444 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.002473854 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.447458355 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.001253049 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.412788107 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.429104421 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.427176663 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.004819284 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.44609273 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.737376708 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.506023174 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.488045024 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.022328325 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.970810363 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.971066361 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.578128413 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.426953018 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.426893831 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.426573688 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.411908011 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.023275265 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.456879492 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.428968787 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.011924445 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.456734269 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.431064443 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.434362118 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.426533854 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.488552577 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.507406946 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.766509088 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.036310517 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.53411866 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.441162821 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.563870668 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.79790236 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.430557098 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.953017646 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.412571106 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.029626559 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.458231826 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.412163945 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.429231936 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.436273193 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.581558131 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.563732624 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.955584781 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.448617159 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.954727477 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.600412865 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.429309353 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.427431577 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.432343378 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.029002425 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.982662215 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.602332447 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.566946509 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.63068454 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.414581839 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.429816973 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.414386705 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.508870406 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.430381229 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.031021715 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.981072836 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.450219226 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.431919925 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.432327663 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.433248891 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.612018441 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.043751035 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.537686997 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.945701695 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.761300957 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.744337556 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.434210677 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.492170653 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.450252606 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.746508081 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.434971315 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.490797463 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.862494982 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.74572441 seconds)
  done (took 170.291425694 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.680228555 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.694605178 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.52417968 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.584767861 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.046398748 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.00799605 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.70309708 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.584556456 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.543469004 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.691307624 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.598814355 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.523379644 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.657128209 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.515880033 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.186596261 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.522341184 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.541144854 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.580462774 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.58988121 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.462381844 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.10016917 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.728958162 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.620424699 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.303298372 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.526862941 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.240572337 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.998577017 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.958782405 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.602281297 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.811160234 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.977794273 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.570725512 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.400517255 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.128417606 seconds)
  done (took 68.543611875 seconds)
done (took 715.143928658 seconds)
SAVING RESULT...
DONE!
