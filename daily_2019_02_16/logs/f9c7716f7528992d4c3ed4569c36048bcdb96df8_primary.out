cset: moving following pidspec: 4386
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.259837052 seconds)
loading group "string"... done (took 0.581705991 seconds)
loading group "linalg"... done (took 7.332094494 seconds)
loading group "parallel"... done (took 0.170252805 seconds)
loading group "find"... done (took 1.180829992 seconds)
loading group "tuple"... done (took 2.050229322 seconds)
loading group "dates"... done (took 1.302911888 seconds)
loading group "micro"... done (took 0.241787351 seconds)
loading group "io"... done (took 0.990830852 seconds)
loading group "scalar"... done (took 40.997495292 seconds)
loading group "sparse"... done (took 13.485259319 seconds)
loading group "broadcast"... done (took 1.0663498 seconds)
loading group "union"... done (took 14.532102504 seconds)
loading group "simd"... done (took 5.067574054 seconds)
loading group "random"... done (took 10.093847903 seconds)
loading group "problem"... done (took 2.077437102 seconds)
loading group "array"... done (took 24.35181238 seconds)
loading group "misc"... done (took 2.07399356 seconds)
loading group "sort"... done (took 3.694513382 seconds)
loading group "collection"... done (took 19.615113352 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.542203033 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.143506804 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.120443376 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.13850908 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.187094907 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.13037799 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.12903397 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.102483046 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.942778019 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.152322132 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.141856916 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.506397957 seconds)
done (took 4.985148777 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.240273487 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.087473025 seconds)
    (2/2) benchmarking "String"...
    done (took 0.096680785 seconds)
  done (took 0.872923282 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.067564621 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.127846707 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.065717976 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.082206458 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.067556368 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.083081518 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.068827744 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.067307954 seconds)
  done (took 1.248297147 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.073920358 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.068516201 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.086642649 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.068881159 seconds)
  done (took 0.984862647 seconds)
done (took 4.102118259 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.938512228 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.256609353 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.190665343 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.452686585 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.155209594 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.194334261 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.728843787 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.36383511 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.213887476 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.076145159 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.125635235 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.381192386 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.128011222 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.72049205 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.077386661 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.109864066 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.173784386 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.47923726 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.084907205 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.084916811 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.105662676 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.132901641 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.104839041 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.091693085 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.162069301 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.069517268 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.149830836 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.100224585 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.070393943 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.267660287 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.174742988 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.758542266 seconds)
  done (took 10.847827937 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.09817384 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.123020979 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.07034425 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.144965126 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.106534282 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.089734871 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.073493009 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.085388445 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.095489714 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.166442734 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.120100082 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.109626622 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.084623217 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.072689968 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.103462068 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.217301655 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.109936123 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.088326559 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.089151171 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.078310604 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.125882389 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.086602236 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.098115897 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.082813188 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.156041441 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.197697333 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.101519595 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.115581226 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.071547541 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.101955199 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.133184893 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.13456389 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.068120645 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.086272431 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.161158052 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.097200306 seconds)
  done (took 4.645570026 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.090278854 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.180618024 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.093931924 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.16039352 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.088043447 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.114004153 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.084408033 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.101973392 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.235417999 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.163388022 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.49400001 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.13362207 seconds)
    (12/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.148214582 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.088025819 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.090179963 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.072390754 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.069444041 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.550914399 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.148356494 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.105137483 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.106692691 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.093217637 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.074494229 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.719571944 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.070740003 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.068067255 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.088499921 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.061258807 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.15265241 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.071243713 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.206479156 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.089848538 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.089850307 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.10468232 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.206713029 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.100127368 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.122305075 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068983946 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.068068982 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.168750362 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.093814302 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.070174369 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.111135378 seconds)
    (43/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.067487185 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.12345644 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.109823805 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.08770799 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.070837846 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.187850869 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.069614754 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.105372574 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.933205432 seconds)
    (52/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.068959317 seconds)
    (53/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.066864611 seconds)
    (54/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.17075917 seconds)
    (55/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.113406733 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.069147669 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.300414289 seconds)
    (58/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.088786995 seconds)
    (59/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.092942029 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.068228117 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.276003706 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.18048978 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.088051403 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.070452457 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068658065 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.089248052 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.736793159 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.071284458 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.08400242 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.072009873 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.081328327 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.089365139 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.07029917 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.095073004 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.077066109 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.10557564 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.070126877 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.070769602 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.087378687 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.069489671 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.071019082 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.1059919 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.217934123 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.070333706 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.088505018 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.067750087 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.106770227 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.100823454 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.090313692 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.06883929 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.120000285 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.073006516 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.07014582 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.125112763 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.070658188 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.105953912 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.089058965 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.11816177 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.086368152 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.123440957 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.068902874 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.119520883 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.074232823 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.119945998 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.101774705 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072309836 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.160409698 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.067673839 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.067393398 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.088153556 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.067654927 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.089428889 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.071762533 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.081329768 seconds)
  done (took 22.558818738 seconds)
done (took 39.826350433 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.318090087 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.096988135 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.097675564 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.079528173 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.094625989 seconds)
  done (took 1.449895127 seconds)
done (took 2.184173434 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.134600739 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.121213914 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.064492462 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.115120388 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064461049 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.120963736 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.118775575 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.083552872 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.118960517 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.06463862 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.115578241 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.065356842 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.06574314 seconds)
  done (took 2.010307147 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.083305343 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.087940588 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.089681452 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.084585389 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.065423804 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.101952474 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.082550943 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.108119086 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.082415084 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.073396651 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.083487516 seconds)
  done (took 1.669051683 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082230917 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.086078356 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.088961151 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.08325191 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.065040195 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.100713187 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.08324984 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.105275979 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.083352819 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.07426645 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.084440605 seconds)
  done (took 1.667387241 seconds)
done (took 6.063493135 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.078758189 seconds)
  done (took 0.80189362 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.743986411 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.740455008 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.10070563 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.137368496 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.224090784 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.160952355 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.465493832 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.115900191 seconds)
  done (took 10.591315931 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.101029205 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.088475693 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.08333733 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.093862411 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.071749177 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.072817896 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.089453999 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.072248261 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.090868348 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.071365841 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.074337353 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.090187295 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.07200556 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.091123909 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.075093188 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.090465167 seconds)
  done (took 2.121794148 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.104977961 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.106730674 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.096171941 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.079116571 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.093305407 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.075660398 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.095876953 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.076952481 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.089485595 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.07574696 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.078397189 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.094081104 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.090856065 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.068765891 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.076894321 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.096554715 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.074177116 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.095470596 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.078520705 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.095076132 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.078534362 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.084709706 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.075315061 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.094466252 seconds)
  done (took 2.91331771 seconds)
done (took 17.154051417 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.117608066 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.088291125 seconds)
  done (took 0.938084568 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.082004005 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.099087355 seconds)
  done (took 0.920868295 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.083217814 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.082665777 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.090310372 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.094660748 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.067758117 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.082842757 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.105230701 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.067878878 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.068377325 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.085134404 seconds)
  done (took 1.567082409 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.069776966 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.095462756 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.072475509 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.100774716 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.077190372 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.084531949 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.07737214 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.071584328 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.0992621 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.065511701 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.090918478 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.103075873 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.074609599 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.104048419 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.077294249 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.088218459 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.073633465 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.087037561 seconds)
  done (took 2.250568598 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.06753504 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.06834224 seconds)
  done (took 0.873196756 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.067357985 seconds)
    (2/7) benchmarking "second"...
    done (took 0.065673541 seconds)
    (3/7) benchmarking "month"...
    done (took 0.086312173 seconds)
    (4/7) benchmarking "year"...
    done (took 0.070207538 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.083524731 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.065846993 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.083276984 seconds)
  done (took 1.262807719 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.414069458 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.110714116 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.249876791 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.08948927 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.106293881 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.282430244 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.084491735 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.072016694 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.089689244 seconds)
  done (took 2.276966184 seconds)
done (took 10.822459161 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.080251656 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.08588777 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.114741726 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.426038067 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.093512003 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.08302749 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.131852881 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.230882092 seconds)
done (took 1.984681513 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.128306517 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.624894541 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.410557163 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.224005531 seconds)
  done (took 2.006138703 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.385254956 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.09329661 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.076444186 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.070281557 seconds)
  done (took 1.373287341 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.068155349 seconds)
    (2/2) benchmarking "read"...
    done (took 0.0708959 seconds)
  done (took 0.887020263 seconds)
done (took 5.137527379 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.067856164 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.066965739 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.08368673 seconds)
    (4/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.103137061 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.088260056 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.066992968 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.066602154 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.088833287 seconds)
    (9/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.068863491 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.06913479 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.088105721 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.069199447 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069542879 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.083954867 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067215719 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068493828 seconds)
    (17/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.08457855 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.067333121 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066734978 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.084104366 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069075727 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.066865091 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.083149912 seconds)
    (24/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.06670502 seconds)
  done (took 2.590124675 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.08624212 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.08518573 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.072800139 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.073691462 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.089127024 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.074142751 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.092141133 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.069431821 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.092102969 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.071782527 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.090496311 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.073894196 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.071532531 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.09115623 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071404907 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.09071168 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.074391904 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087779495 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072019096 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.091346917 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.074893771 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070412255 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.090147232 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.074611623 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.090837919 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.073511606 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.088630067 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.069991957 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.091935543 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.074093695 seconds)
  done (took 3.170447541 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.072478032 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.064804773 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.08452307 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.073877794 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.06684488 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.085985171 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.066545672 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.0676216 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.085247928 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.067176883 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.068505099 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.084534054 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.066957688 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.085693316 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.068624613 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.069906834 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.10257864 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.067478643 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.0663568 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.085222657 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.070947516 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.06707682 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.084683848 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.066823626 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.084215018 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.067226287 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.06742674 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.084399059 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.068222322 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.067322397 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.087811464 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.070860963 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.067032988 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.09114764 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.071026158 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.067065136 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.088678032 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.066921622 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.06740455 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.084530831 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.066620005 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.066949077 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.084556869 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.073602381 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.067789777 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.087652267 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.067234037 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.085966684 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.068665552 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.070391539 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.08442551 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.067233667 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.068831218 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.085447952 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.07165923 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.084094522 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.069104652 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.067226553 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.085462424 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.067313904 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.066932056 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.083851007 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.069665119 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.068207116 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.100912935 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.074797656 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.067238029 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.085955651 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.068492668 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.087381392 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.068604758 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.082135634 seconds)
  done (took 6.160288531 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.120124969 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.093186108 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.084540677 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.0677423 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.063940797 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.083540867 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.070839212 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084922496 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069634974 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.091154584 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067681867 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.068662241 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.086445075 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.083565594 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.068162988 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.086760876 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.074403967 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.083819068 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.067375671 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.07075618 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.085222494 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.07153033 seconds)
  done (took 2.503463522 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.190275008 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.090485614 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.110069222 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.093392332 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.06904529 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.093692377 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.073805575 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.090888559 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073794581 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.089502664 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072057076 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.091540965 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.071811651 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072361017 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.090773207 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.072137833 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.207429611 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.07225389 seconds)
  done (took 2.484899707 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.078748975 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.068501088 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.108279299 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.068217718 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.086163043 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.071148747 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.093076785 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.078532605 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.09005427 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.070056938 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.096743073 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072439724 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.072264438 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087588101 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072423108 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.088527838 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.072726554 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069643158 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.096138838 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.075382363 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.093820762 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.079598976 seconds)
  done (took 2.551546852 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082874134 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.070698941 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.106278615 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.07193965 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.083817592 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.068364864 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.095316789 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.070599616 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.093462616 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.072141192 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.0700745 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.087958952 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.075816164 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.087512808 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.075402746 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069663335 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.089339873 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.07139909 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.090114135 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.066325201 seconds)
  done (took 2.362017525 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.088435548 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.089085635 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.072013626 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.097488843 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.07185856 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.071244672 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.097139019 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.071446865 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.088430129 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.113220988 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.071875853 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.071367039 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.096732365 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.093555403 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.071318059 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.096630591 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.079816003 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.097331043 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.071855321 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.089438981 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.095710026 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.088863355 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.07991713 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.088918977 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.071521174 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.071635595 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.089670923 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.076873559 seconds)
  done (took 3.12746703 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.068426448 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.067877769 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.084580344 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.067640103 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.067860485 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.085186781 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.067544608 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.067373837 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.088073476 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.068343727 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.069576627 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.087909751 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.0701204 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.069675508 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.087633515 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.0702546 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070077831 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.085547685 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067494337 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067500015 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.08822596 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070672747 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.069935601 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.085615851 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067516774 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.069719191 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.085408318 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.068371144 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070748375 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.086184789 seconds)
  done (took 3.009225972 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.07692889 seconds)
    (2/2) benchmarking "in"...
    done (took 0.074669788 seconds)
  done (took 0.919510314 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.065472095 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.082284552 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.082479738 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.072115456 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.090223067 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.068980724 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.09484775 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.074284401 seconds)
  done (took 1.400930422 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.083083672 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.078850171 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.088566603 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.082410615 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.099184964 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.086453714 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.165701438 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.090086051 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.077816932 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.068904863 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.103369276 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.069706752 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.095645907 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.071146267 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.076233514 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.09592398 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.068421519 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.094206491 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.072748349 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.069262707 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.089552683 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.083007857 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.091090202 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.06759249 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.075371955 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.09839329 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.083029732 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.090201718 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073825556 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.096727651 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.077040048 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.064727044 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.088461663 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.071698403 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.068669674 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.098597638 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.086928793 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.091797391 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.080406956 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.090298081 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.081360505 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.084734627 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.075926588 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.077889324 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.099210898 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.071728877 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.090725546 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.065611054 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.06833733 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.091219748 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.066472466 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070682926 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.084041439 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.078725391 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.09256815 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.082128269 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.088302039 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.073601023 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.074065114 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.092500771 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.077615654 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.090735486 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.073198684 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.070911526 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.096855266 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.075424573 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.099807279 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.066089537 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.065375938 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.087441225 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.08143369 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.112619572 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.077559565 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.072046763 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.090361247 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.068705571 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.093084624 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.072500905 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.095432608 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.077535587 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.071145726 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.095222004 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.079013125 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.088883295 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.074150164 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.097213559 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.069507197 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.072428091 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.086929987 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.088003123 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.088038174 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.069227654 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.069117302 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.100536274 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.074519961 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.089255147 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.069261884 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.07868715 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.083695668 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.072453888 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.090340821 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.072336973 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.083293967 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.094869556 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.076823529 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.099026743 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.078580732 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.08950583 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.075203986 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.067756089 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.090699419 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.069849378 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.096508295 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.065473842 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.074485471 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.090372756 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.071163819 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.098698604 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.069343403 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.070579176 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.097670462 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.077478842 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.088051229 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.067186637 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.074691277 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.089546827 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.07395279 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.098219779 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.069520348 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.066832497 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.084725751 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.075192762 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.070693301 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.093417408 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.076503291 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.092924503 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.066166083 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.069024948 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.093697686 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.079690937 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.090569326 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.071956278 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.096070823 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.072334381 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.070551431 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.096384683 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.07428978 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.089060812 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.076449369 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.071979194 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.084818976 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.074932828 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.091966198 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.070013715 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.075210038 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.093169476 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.073610434 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.090525369 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.070102819 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.076070895 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.090354386 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.070330334 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.089331283 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.069994063 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.082674102 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.092000704 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.066897299 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.087162569 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.078460738 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.069172741 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.088836972 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.070128258 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.073343427 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.091018772 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.069001949 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.088629438 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.073292504 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.101263677 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.075226296 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.072804089 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.095426397 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.083927481 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.090576405 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.072941263 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.069146245 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.088097371 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.070580559 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.098337685 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.074267814 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.091878211 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.071803247 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.065448115 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.093840259 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.077768344 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.085738049 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.06699914 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.068153071 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.090262715 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.0754696 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.090554609 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.069752089 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067826536 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.088040613 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.072728649 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.090263749 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.069493295 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.068573035 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.093684706 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.070499392 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.096738996 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.072963425 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.100483964 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.07453989 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.066726138 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.093143151 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.069212573 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.095701512 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.066905408 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.069600765 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.088616578 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.07278136 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.070141284 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.093320312 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.065022116 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.096680401 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.080189214 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.071159584 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.089272575 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.071374199 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.09742296 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.072595766 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.075699366 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.093612953 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.078432501 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.101104412 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.070842435 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.074564905 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.100796178 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.070545738 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.082989633 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.075563048 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.069666077 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.088251964 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.070066283 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.088016332 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074717949 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.080439153 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.097882499 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.065679842 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.09276957 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.070126125 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.070418615 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.085325724 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.075654371 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.093214557 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.072553638 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.078567981 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.091094687 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.072530507 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.09398192 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.071055249 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.072372499 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.090990668 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.07500032 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.091131151 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.074041342 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.070351321 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.094012269 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.070846448 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.069685135 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.092371908 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.07252268 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.089904508 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.077161268 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.070442552 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.090414114 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.074669326 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.090936483 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.073189044 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.071876019 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.089309699 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.074904271 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071993075 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.091162735 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.073812044 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.085111972 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.078970442 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.07082303 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.098754407 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.071985081 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.087083226 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.077045115 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.074101181 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.095443503 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.072214348 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.091029251 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.073319925 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.070765792 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.093627307 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.077862043 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.088302261 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.083429009 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.099940678 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.07242777 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.074196205 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.091173633 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.073530497 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.070927397 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.089425421 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.070347108 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.08836691 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.068839398 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.074876646 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.090467961 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.069360892 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.089418799 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.071063875 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.069614463 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.089543673 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.063687236 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.068440896 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.086991132 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.069705785 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.098304339 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.069523038 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.086617185 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.068327894 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070176527 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.086617253 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.066203567 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.095083409 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.078925716 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.069705361 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.094746034 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.068584529 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.088966038 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.080263528 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.06565965 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.086498614 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.067161445 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.08596947 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.077116897 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.069763674 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.097827875 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.068876393 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.086976248 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.066509887 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.070130825 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.086674027 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.064270685 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.067264032 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.091970762 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.068244473 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.086421275 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.070519639 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.0728998 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.089218517 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.080238882 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.087398111 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.071255775 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.069303056 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.086313977 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.069487493 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.070136861 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.092404611 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.072343782 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.08817415 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.069617564 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.072096705 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.091651484 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.073131318 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.07150665 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.093309996 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.078480376 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.091520007 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.074727872 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.094860417 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.067026692 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.075576667 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.090548043 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.071619207 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.07060012 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.094730333 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.075158263 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.09159041 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.081510138 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.072084909 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.092481661 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.071747983 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.089531411 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.071640335 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.071098095 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.091626496 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.071023214 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.092362196 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.0806623 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.070067524 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.09382758 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.072146597 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.072289744 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.099287416 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.072451125 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.093737771 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.079164664 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.091009573 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.073427051 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.080397874 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.094443848 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.07508522 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.091957204 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.073338504 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.096960927 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.070745164 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.078520638 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.091316188 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.073408933 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.07360652 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.088665236 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.072098679 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.090192067 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.070489052 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.07792352 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.092938064 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.07123479 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.089504976 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.069604817 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.072633871 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.094952434 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07954784 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.093058949 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.07485426 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.06682865 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.088142565 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.073313224 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.069479391 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.092955607 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.07603838 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.097552238 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.074476676 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.072177805 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.090151811 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.081390725 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.096954699 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.074804795 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.067693379 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.091664783 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.070815484 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.093440041 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.073218492 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.071744854 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.093314619 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.07664902 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.093091553 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.07170798 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.079200272 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.095039483 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.073504201 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.092161891 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.072434609 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.072066546 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.086052436 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.073330228 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.073835951 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.096741292 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.075127284 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.091272479 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.083246404 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.068683979 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.090838446 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.07446614 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.089234429 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.07521762 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.066856776 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.092998947 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.073083662 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.092058928 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.06738922 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.071385337 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.090135976 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.074762626 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.071236906 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.086629441 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.083408559 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.101416539 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.07524827 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.09000792 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.070552493 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.067430206 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.086252614 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.072143566 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.072537366 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.094263935 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.083149089 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.090599959 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.071880197 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.06742922 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.092004286 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.075063998 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.094770272 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.06916712 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.067257518 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.090561419 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.075448077 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.077196773 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.090318795 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.071830492 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.095334205 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.074485483 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.069926578 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.096140221 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.069039197 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.096043265 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.085848026 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.091781457 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072854904 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.079204092 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.099589966 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.073297848 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.086931872 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.07313156 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.075144102 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.092353915 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.073119008 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.092216194 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.088493564 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.074485826 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.09171518 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.071011826 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.094202774 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.07197889 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.080809363 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.09345558 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.072863414 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.096367094 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.0751688 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.10089483 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.075044388 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.080494849 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.095525296 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.075608175 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.090701412 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.0724236 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.06993701 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.090853132 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.073556458 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.073067974 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.097480248 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.080199161 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.091783327 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.084298099 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.101950311 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.074666521 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.08880952 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.072053552 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.072502396 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.08741355 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.07383243 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.071159685 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.089896688 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.070199318 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.071407457 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.093149804 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.078879615 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.092597117 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.073345006 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.071570244 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.086289259 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.074949842 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.094407705 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.073505281 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.068856356 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.091864665 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.072598574 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.074398557 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.093566291 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.067445131 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.090791737 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.071341208 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070276485 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.08398135 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.077036791 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.068321121 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.091571646 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.069271707 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.089084555 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.071914166 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.07338844 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.09406318 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.070565002 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.091246069 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.078742018 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.091654052 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.066836617 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.067433549 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.094256998 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.067762863 seconds)
  done (took 48.962133562 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.11132998 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.085494394 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.065583274 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.084713962 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.077795066 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.085508826 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.065459977 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.066292326 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.08657526 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.069097992 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.064950352 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.084508833 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.073621341 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.109352639 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.096240911 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.07051388 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.084372211 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.066278771 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.065146319 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.086215881 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.074627034 seconds)
  done (took 2.488017497 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.08860157 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.104262839 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.080973364 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.103054881 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.07444768 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.099732595 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.099756382 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080205638 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.102952661 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.076892928 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.102402594 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099634932 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.077181439 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.096052034 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.077535517 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.097925092 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.083599205 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.094245763 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.080884772 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.099683836 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.078685556 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.099400306 seconds)
  done (took 2.811043104 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.069469661 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.068945036 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.08970114 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.064676603 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.068830387 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.083906936 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.073697899 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.066842343 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.091579921 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.077832639 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.086840548 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.068364011 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.070629293 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.086768926 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.069320248 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.066379245 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.134860529 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.092079387 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.069491694 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.089934777 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.064674451 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.071574057 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.085267971 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.065670359 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.068123575 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.092742791 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.07057897 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.086887008 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.068650758 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.068518847 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.089023 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.067078483 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.069929238 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.089314618 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.0683427 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.067925889 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.087929108 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.069070808 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.084192969 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.067265253 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.070080662 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.085009635 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.070978422 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.070457696 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.087510299 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.067717746 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.070563577 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.088998191 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.064846021 seconds)
  done (took 4.583172512 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.088196221 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.145408177 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.092206632 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.106781438 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.10588166 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.096600353 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.072790999 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.126700722 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.06762808 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.088242335 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.085838413 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.105280185 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.069302832 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.093992505 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.072763854 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.088376545 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.0708639 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.087647747 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.073273865 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.088067433 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.074229101 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.095688337 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.084485845 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.102111128 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.072835527 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.087271518 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.06867201 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.092497316 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.082875697 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.092698564 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.07442016 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.093977634 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.0856149 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.090917733 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.069015684 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.091148583 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.086483888 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.088747451 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.072457866 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.086022564 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.071607013 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.093196528 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.076020815 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.105990298 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.06951965 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.093740161 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.069681688 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.066331604 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.102504357 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.071061702 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.098324945 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.104605252 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.073894005 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.088662671 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.074057524 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.104654561 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.070236293 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.087002355 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.072603077 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.102650943 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.067942597 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.09295212 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.084341151 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.091031101 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.076965022 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.104248438 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.074813522 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.092985186 seconds)
  done (took 6.841069735 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.078446981 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.095850201 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.084003844 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.104333711 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.075925489 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.096840894 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.09578983 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.076523063 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.094894588 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.081509866 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.094763103 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.116912649 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.070662722 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.078922551 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.096128307 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.095265296 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.076980683 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.095308239 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.076825651 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.095268513 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.076271713 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.103879434 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.076226598 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.104772281 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.126221334 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.071374719 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.096113466 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.075886976 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.104504409 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.075756447 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.10820353 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.095343736 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.076512403 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.103555627 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.107920763 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.076211851 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.087524428 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.07648609 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.095488544 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.076853845 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.090418364 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.084828858 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.095045412 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.071082179 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.09532547 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.075998205 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.103692541 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.107784743 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.079759041 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.100495313 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.076544153 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.105102255 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.094619492 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.076014916 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.104379957 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.110091218 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.10421979 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.10460937 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.076262358 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.104580903 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.103961208 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.091754041 seconds)
  done (took 6.477414336 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.091309889 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.098666714 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.080025536 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.085390024 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.06820914 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.094502774 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.067973303 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.067541829 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.098351635 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.078226467 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102298409 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.092915111 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07670202 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100002478 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.074137164 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.096232709 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.073254207 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.094229541 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.078749575 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.093908534 seconds)
  done (took 2.541300859 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.080594797 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.10796831 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.070788241 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.075969228 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.093114565 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.075556939 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.092248271 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073026093 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090152854 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073387435 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.100322151 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.080851161 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070406612 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.096521282 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.099762994 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.0762017 seconds)
  done (took 2.187318839 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.082555216 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.100876874 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.084026549 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.091013009 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.067711309 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.065471688 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.090338923 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.065729745 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.086360632 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.084858826 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.091037739 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.072649234 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.069323609 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.08891488 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.067267404 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.092400957 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.066355944 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.068049391 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.089854562 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.084360533 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.101470028 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.068969777 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.091295854 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.07195737 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.069096125 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.096307944 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.070169659 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.088575369 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.067998076 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.090687656 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.071224301 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.097098665 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.067766494 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.068390586 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.088889266 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.06760599 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.089498669 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.070184387 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.07210944 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.089704001 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.068969875 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.089355399 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.069690689 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.070354189 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.08639397 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.070882196 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.085899723 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.076359771 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.068700732 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.090426801 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.070078827 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.092466479 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.070914613 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.10015408 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.073762763 seconds)
  done (took 5.225088197 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083352409 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.073352705 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.086921918 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.067996018 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.092707011 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.071514567 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.07376804 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.092119173 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071823128 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.087148568 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.071389515 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.072419431 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.091926168 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.074187506 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.092018463 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073320372 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.065567664 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.091352612 seconds)
  done (took 2.268029474 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.075167214 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.070394531 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.097951515 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.070393354 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.090387183 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.073340272 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066137202 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.088944345 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068827071 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.069697238 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090170414 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.072457931 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.088061708 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.071976623 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.070896585 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.090014205 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.072825043 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.068007116 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.090235963 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.066457143 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.091901825 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.068695522 seconds)
  done (took 2.545481596 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.075425091 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.09642174 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.170129496 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.112640384 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.08669609 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.104822561 seconds)
  done (took 1.483263017 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09378055 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.1042842 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.071953005 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.091796007 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.099044105 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071334398 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092900571 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071571365 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.102115637 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106115877 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072246275 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.101081986 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08094713 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.103687937 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097234507 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078446933 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092109077 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072097694 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07020493 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110369219 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091864053 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080556405 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.091899211 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071188705 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092056047 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081264584 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10168492 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.105279697 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072187629 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.100562871 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079088655 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091993729 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081744642 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106599805 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072959894 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.101253597 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091602924 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.090499798 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.09795527 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079695558 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.093799199 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078460412 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101719315 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.096645069 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.081367328 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092231565 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077281441 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091816301 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072560696 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118025363 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.098185992 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.080225096 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097795985 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081173144 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.101690151 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118218604 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.085455935 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10146887 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098394513 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.085374293 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100861004 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.098408224 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079967553 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105001444 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077679804 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.101223373 seconds)
  done (took 6.816280721 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086028327 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.11007977 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072671816 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105727176 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079936722 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.09284395 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071072349 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092348092 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072085682 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.092330652 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.135353051 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071964565 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101034653 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079763781 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.093385067 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071641262 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.093191495 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100643827 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071542581 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117304951 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072417665 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.100110884 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.101103646 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.080775277 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.105411843 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078693814 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092785901 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072169365 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.092969175 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071612638 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097323801 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071262273 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100806045 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.071029291 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.101477802 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.092186059 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072174005 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.098855382 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072466854 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.097896126 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08049418 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110815386 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091572194 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071864252 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105933765 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071989742 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092548917 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07205617 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.092433834 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072140094 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.106185702 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.085825277 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106926913 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.100450818 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073114437 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092368811 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072967116 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092073918 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072727817 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.097890977 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080724253 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.092073192 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117599676 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07284644 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.092655077 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080346196 seconds)
  done (took 6.692494423 seconds)
done (took 132.946086354 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.211771257 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.205335123 seconds)
  done (took 1.253381606 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.07260704 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.099360053 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.102662697 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.161973301 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.092219427 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.115122234 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.11104695 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.103243732 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.071033298 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.090959302 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.070708117 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.071941716 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.193535763 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.070695436 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.070734058 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.092975015 seconds)
  done (took 2.435649418 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.099438034 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.204257363 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.084124872 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.09038758 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.074167675 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.094604275 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.068444613 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.076000038 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.095679985 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.069787603 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.072669213 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.091491924 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.06898232 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.070265777 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.095233395 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.073585537 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.08928193 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.073278728 seconds)
  done (took 2.434253789 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.09747128 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.121413421 seconds)
  done (took 1.066803523 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.212851968 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.126796617 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.211798361 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.430010951 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.251525343 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.288331643 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.183254985 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.182840912 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.169118952 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.177230628 seconds)
  done (took 3.080128724 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.103046257 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.165148182 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.276745328 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.140767512 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.112020847 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.08995759 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.141653178 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.092928366 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.106309342 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.105978015 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.085477331 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.101881872 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.101058006 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.099035431 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.078721088 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.10199673 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.103018555 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.098424378 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.078158046 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.099792635 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.101254966 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.090813181 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.079264727 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.098052725 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.081506463 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.102575971 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.070066398 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.06975986 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.099711881 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.077850578 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.097558591 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.087076072 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.102502506 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.134181384 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.106436883 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.136117111 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.081600176 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.095355234 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.078983746 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.074658258 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.102352626 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.101879146 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.087817513 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.101067781 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.069673407 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.08117976 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.090746673 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.070265713 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.098177388 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.081101235 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.099668088 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.076975407 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.134870906 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.102680802 seconds)
  done (took 6.289315581 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.774226184 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.11584662 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.099820118 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.843950538 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.120198033 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.088067581 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.742484759 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.121090223 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.212670658 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.744702216 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.116971789 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.081651057 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.212432608 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.220419406 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.934733257 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.273480439 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.624834425 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.109774148 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.112262305 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.138074706 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.103447405 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.099123001 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.11708303 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.413318198 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.079158526 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.097582976 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.081666837 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.103583261 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.143469682 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.086947943 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.099000464 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.159717292 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.231797771 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.1869407 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.078919838 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.07380953 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.097278869 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.152976844 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.221938014 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.196559201 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.163573262 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072119709 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.095464071 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.085489707 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.116784913 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.072699788 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.144671525 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.156416405 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.151329814 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.100251403 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.081135083 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.10482046 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.083510476 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.168495412 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.083929787 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.301720383 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.268002921 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.096335547 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.083194531 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.111198998 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.218481778 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.108506897 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.206159537 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.101345271 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.193147261 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.074741646 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.751272861 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.154545922 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.074736809 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.102692545 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.082713358 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.101259697 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.083792565 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.150862175 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.375672184 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.085497925 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.100345989 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.074177909 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.223284079 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.088354172 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.073235492 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.166711212 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.078785941 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.105442961 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.086921687 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.109388465 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.151553197 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.216994163 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.085121794 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.104564191 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.077547045 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.110402693 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.077568242 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.194219331 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.199822432 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.1457558 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.189624809 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.106800688 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.14651532 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.151895902 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.104459829 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.154859619 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.08234056 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.108528124 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.084287244 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.198737808 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.128841739 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.085881249 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.100053656 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.081687043 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.131882533 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.111042738 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.082093631 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.153217341 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.460092542 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.151320724 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.071698279 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.111489199 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.083328768 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.145759935 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.101887743 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.217694349 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.106383338 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.15145563 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.081764817 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.093790067 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.083236295 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.145445136 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.10627723 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.083151917 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.107271094 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.081623506 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.217325353 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.198444686 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.105480814 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.205179665 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.168101058 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.080233697 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.153281329 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.106793568 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.150877677 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.081566222 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.106201141 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.077484631 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.760672012 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.108413762 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.082576974 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.099387859 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.148885132 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.097290971 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.085617347 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.108674304 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.072050752 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.754005055 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.088429335 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.105643822 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.086505698 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.103251798 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.082587011 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.103765817 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.078266103 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.143932541 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.209413659 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.103564338 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.082494359 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.109038967 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.143811031 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.078994398 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.10918767 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.086446902 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.108986737 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.083798491 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.09995064 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.085978062 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.15006523 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.166318107 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.178529954 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.574084239 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.075104094 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.108137118 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.185946053 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.095924774 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.255047026 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.104801137 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.183052341 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.167421765 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.084267173 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.288786993 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.148142168 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.170646801 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.089453019 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.156255401 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.094191352 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.08187422 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.146619136 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.096917931 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.080494977 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.144997087 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.109910172 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.085332778 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.942419511 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.074132735 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.206963602 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.094012796 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.15494578 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.078161778 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.10487866 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.276282609 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.074773605 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.090555773 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.169028527 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.078138896 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.109447155 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.680917679 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.086055876 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.107897386 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.102245819 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.179899095 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.145883007 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.104796283 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.083236994 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.104480229 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.145344942 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.190306669 seconds)
  done (took 39.304320988 seconds)
done (took 56.702670296 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.242092286 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.203078195 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.232423777 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.155011629 seconds)
  done (took 1.797501787 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.132982287 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.13350559 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.128491633 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.069502059 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.135329536 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.070215591 seconds)
  done (took 1.543238665 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.322341449 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.280718793 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.206367991 seconds)
  done (took 1.681894406 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.276597741 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.232396052 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.460796719 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.284810554 seconds)
  done (took 2.256745745 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.194661085 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.117418669 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.071940696 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.111468739 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.156102653 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.225974751 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.125583895 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.159254426 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.10541686 seconds)
  done (took 2.186459731 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.156467168 seconds)
done (took 10.488798012 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.111070538 seconds)
    (2/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.225121279 seconds)
    (3/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.153763706 seconds)
    (4/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.237496821 seconds)
    (5/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.086256595 seconds)
    (6/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.232771794 seconds)
    (7/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.109019388 seconds)
    (8/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.144713429 seconds)
    (9/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.253391052 seconds)
    (10/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.101361229 seconds)
    (11/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.164452828 seconds)
    (12/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.106111518 seconds)
    (13/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.093069443 seconds)
    (14/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.103641643 seconds)
    (15/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.079032661 seconds)
    (16/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.241397966 seconds)
    (17/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.131969081 seconds)
    (18/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.158459052 seconds)
    (19/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.122263472 seconds)
    (20/309) benchmarking ("sort", Float32, false)...
    done (took 0.157998139 seconds)
    (21/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.082809822 seconds)
    (22/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.19088078 seconds)
    (23/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.193708671 seconds)
    (24/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.122186537 seconds)
    (25/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.07900778 seconds)
    (26/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.077798425 seconds)
    (27/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.097439417 seconds)
    (28/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.075845764 seconds)
    (29/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.179142801 seconds)
    (30/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.154944628 seconds)
    (31/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.101761411 seconds)
    (32/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.076928272 seconds)
    (33/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.105285645 seconds)
    (34/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.192834338 seconds)
    (35/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.196044874 seconds)
    (36/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.186726993 seconds)
    (37/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.120638207 seconds)
    (38/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.143705174 seconds)
    (39/309) benchmarking ("sort", Float64, false)...
    done (took 0.156168464 seconds)
    (40/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.076267876 seconds)
    (41/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.147151585 seconds)
    (42/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.211481321 seconds)
    (43/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.080433968 seconds)
    (44/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.081788541 seconds)
    (45/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.096155326 seconds)
    (46/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.236019298 seconds)
    (47/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.072946753 seconds)
    (48/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.190074145 seconds)
    (49/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.055856583 seconds)
    (50/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.100393207 seconds)
    (51/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.081205278 seconds)
    (52/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.232407633 seconds)
    (53/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.170705066 seconds)
    (54/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.125153006 seconds)
    (55/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.06706137 seconds)
    (56/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.204749125 seconds)
    (57/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.072274555 seconds)
    (58/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.156714736 seconds)
    (59/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.108917743 seconds)
    (60/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.208453192 seconds)
    (61/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.076224273 seconds)
    (62/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.080733117 seconds)
    (63/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.079440021 seconds)
    (64/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.175780214 seconds)
    (65/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.083305195 seconds)
    (66/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.125523324 seconds)
    (67/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.097905344 seconds)
    (68/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.182968346 seconds)
    (69/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.104965977 seconds)
    (70/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.075518421 seconds)
    (71/309) benchmarking ("sort", Int64, false)...
    done (took 0.070906382 seconds)
    (72/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.15715825 seconds)
    (73/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.072610049 seconds)
    (74/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.24301781 seconds)
    (75/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.098243784 seconds)
    (76/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.088246433 seconds)
    (77/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.12460463 seconds)
    (78/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.077889849 seconds)
    (79/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.104168817 seconds)
    (80/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.070735444 seconds)
    (81/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.165044407 seconds)
    (82/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.106215091 seconds)
    (83/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.168013111 seconds)
    (84/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.103907498 seconds)
    (85/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.177478857 seconds)
    (86/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.075957485 seconds)
    (87/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.171861426 seconds)
    (88/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.077665563 seconds)
    (89/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.204130227 seconds)
    (90/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.120639733 seconds)
    (91/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.069972705 seconds)
    (92/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.079833277 seconds)
    (93/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.118577252 seconds)
    (94/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.188123078 seconds)
    (95/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.056553479 seconds)
    (96/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.0971756 seconds)
    (97/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.095103765 seconds)
    (98/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.078060275 seconds)
    (99/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.119484502 seconds)
    (100/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.065244384 seconds)
    (101/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.104136033 seconds)
    (102/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.176692694 seconds)
    (103/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.125287866 seconds)
    (104/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.080191324 seconds)
    (105/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.066763342 seconds)
    (106/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.188273528 seconds)
    (107/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.1214246 seconds)
    (108/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.057016436 seconds)
    (109/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.080376366 seconds)
    (110/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.176366974 seconds)
    (111/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.197629367 seconds)
    (112/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.0781283 seconds)
    (113/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.164991066 seconds)
    (114/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.106344924 seconds)
    (115/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.172484181 seconds)
    (116/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.079492687 seconds)
    (117/309) benchmarking ("sort", Bool, false)...
    done (took 0.165300512 seconds)
    (118/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.078827916 seconds)
    (119/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.078877051 seconds)
    (120/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.094878808 seconds)
    (121/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.180708503 seconds)
    (122/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.077802733 seconds)
    (123/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.099922527 seconds)
    (124/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.078505085 seconds)
    (125/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.431562809 seconds)
    (126/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.056896682 seconds)
    (127/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.071442094 seconds)
    (128/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.090954898 seconds)
    (129/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.056708522 seconds)
    (130/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.076912011 seconds)
    (131/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.174014444 seconds)
    (132/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.05536467 seconds)
    (133/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.093689168 seconds)
    (134/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.077811721 seconds)
    (135/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.055355603 seconds)
    (136/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.092707146 seconds)
    (137/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.118574963 seconds)
    (138/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.071238345 seconds)
    (139/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.095946075 seconds)
    (140/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.103701351 seconds)
    (141/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.09382204 seconds)
    (142/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.079177673 seconds)
    (143/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.144028731 seconds)
    (144/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.069854627 seconds)
    (145/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.070555446 seconds)
    (146/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.160514128 seconds)
    (147/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.055759186 seconds)
    (148/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.080647965 seconds)
    (149/309) benchmarking ("sort", BigInt, false)...
    done (took 0.241497098 seconds)
    (150/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.08008738 seconds)
    (151/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.05668972 seconds)
    (152/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.081324672 seconds)
    (153/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.085240078 seconds)
    (154/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.083002549 seconds)
    (155/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.09478675 seconds)
    (156/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.081398055 seconds)
    (157/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.09298998 seconds)
    (158/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.072532072 seconds)
    (159/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.066904966 seconds)
    (160/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.100468011 seconds)
    (161/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.10427948 seconds)
    (162/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.070644026 seconds)
    (163/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.12339458 seconds)
    (164/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.084091164 seconds)
    (165/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.117087816 seconds)
    (166/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.070729558 seconds)
    (167/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.164642343 seconds)
    (168/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.096892234 seconds)
    (169/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.126999095 seconds)
    (170/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.167900887 seconds)
    (171/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.072492023 seconds)
    (172/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.103416061 seconds)
    (173/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.08927018 seconds)
    (174/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.070150177 seconds)
    (175/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.077948598 seconds)
    (176/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.09545239 seconds)
    (177/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.077175265 seconds)
    (178/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.077919643 seconds)
    (179/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.081011665 seconds)
    (180/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.05748609 seconds)
    (181/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.07896871 seconds)
    (182/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.206092984 seconds)
    (183/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.127366522 seconds)
    (184/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.079270882 seconds)
    (185/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.168885066 seconds)
    (186/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.07048727 seconds)
    (187/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.114673599 seconds)
    (188/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.093296289 seconds)
    (189/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.090763571 seconds)
    (190/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.1041783 seconds)
    (191/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.055959248 seconds)
    (192/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.075375237 seconds)
    (193/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.079144722 seconds)
    (194/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.057405246 seconds)
    (195/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.155142404 seconds)
    (196/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.065814246 seconds)
    (197/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.122125605 seconds)
    (198/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.069154552 seconds)
    (199/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.161902245 seconds)
    (200/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.05700095 seconds)
    (201/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.057118258 seconds)
    (202/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.117521577 seconds)
    (203/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.055825948 seconds)
    (204/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.069464904 seconds)
    (205/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.099859776 seconds)
    (206/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.095904594 seconds)
    (207/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.070594359 seconds)
    (208/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.079163068 seconds)
    (209/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.071504855 seconds)
    (210/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.056266139 seconds)
    (211/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.119937464 seconds)
    (212/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.105705182 seconds)
    (213/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.168041376 seconds)
    (214/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.066173834 seconds)
    (215/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.079356849 seconds)
    (216/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.102343282 seconds)
    (217/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.081226982 seconds)
    (218/309) benchmarking ("sort", Int8, false)...
    done (took 0.174361338 seconds)
    (219/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.108361744 seconds)
    (220/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.071821747 seconds)
    (221/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.165938324 seconds)
    (222/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.094241627 seconds)
    (223/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.077004654 seconds)
    (224/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.079534467 seconds)
    (225/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.091896676 seconds)
    (226/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.100055407 seconds)
    (227/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.177310698 seconds)
    (228/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.054949513 seconds)
    (229/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.105075977 seconds)
    (230/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.161977707 seconds)
    (231/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.069864568 seconds)
    (232/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.199787256 seconds)
    (233/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.071113029 seconds)
    (234/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.056391503 seconds)
    (235/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.080276771 seconds)
    (236/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.146715192 seconds)
    (237/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.055871668 seconds)
    (238/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.167178897 seconds)
    (239/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.090999912 seconds)
    (240/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.103917683 seconds)
    (241/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.057114983 seconds)
    (242/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.09630394 seconds)
    (243/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.055970459 seconds)
    (244/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.178375443 seconds)
    (245/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.07479638 seconds)
    (246/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.085696181 seconds)
    (247/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.094096751 seconds)
    (248/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.073543063 seconds)
    (249/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.076050262 seconds)
    (250/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.100275843 seconds)
    (251/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.07074806 seconds)
    (252/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.064826017 seconds)
    (253/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.195967463 seconds)
    (254/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.070261894 seconds)
    (255/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.079610535 seconds)
    (256/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.055820526 seconds)
    (257/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.166301261 seconds)
    (258/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.086542272 seconds)
    (259/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.077321538 seconds)
    (260/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.093655157 seconds)
    (261/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.055700996 seconds)
    (262/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.078886187 seconds)
    (263/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.098396892 seconds)
    (264/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.065700917 seconds)
    (265/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.066731304 seconds)
    (266/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.057449648 seconds)
    (267/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.119493506 seconds)
    (268/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.056874831 seconds)
    (269/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.05624366 seconds)
    (270/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.079489664 seconds)
    (271/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.070428508 seconds)
    (272/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.0562214 seconds)
    (273/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.10174682 seconds)
    (274/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.070568504 seconds)
    (275/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.208016144 seconds)
    (276/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.071959469 seconds)
    (277/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.057178003 seconds)
    (278/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.10019748 seconds)
    (279/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.07852917 seconds)
    (280/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.143254802 seconds)
    (281/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.069198132 seconds)
    (282/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.077986054 seconds)
    (283/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.079867209 seconds)
    (284/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.070227751 seconds)
    (285/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.056217738 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.093387383 seconds)
    (287/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.066531881 seconds)
    (288/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.092279349 seconds)
    (289/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.079800271 seconds)
    (290/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.09729957 seconds)
    (291/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.058317822 seconds)
    (292/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.165059449 seconds)
    (293/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.07890185 seconds)
    (294/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.080344397 seconds)
    (295/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.072719423 seconds)
    (296/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.056147505 seconds)
    (297/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.080493859 seconds)
    (298/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.094514539 seconds)
    (299/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.076345251 seconds)
    (300/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.127524538 seconds)
    (301/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.055614708 seconds)
    (302/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.069834005 seconds)
    (303/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.11136743 seconds)
    (304/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.077726978 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.100022623 seconds)
    (306/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.06653858 seconds)
    (307/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.056851506 seconds)
    (308/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.095248038 seconds)
    (309/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.070084467 seconds)
  done (took 34.632887031 seconds)
done (took 35.504720674 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.083255905 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.094971514 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.103267802 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.094238902 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.108470238 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.079951303 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.102648836 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.081751674 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.106478704 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.085106487 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.081834968 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.083550655 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.080087342 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.104089136 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.08000503 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.094481911 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.107250911 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.077116811 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.101911639 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.069488834 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.07882229 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.093989929 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.071683469 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.058740691 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.105862439 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.076919051 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.100371946 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.080041317 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.070453349 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.094792709 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.074198687 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.077367915 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.09409513 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.083901459 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.076674831 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.102412474 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.080364508 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.104340838 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.072328637 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.069965476 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.10305405 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.070233702 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.077010342 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.102273731 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.076185749 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.100295743 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.078822481 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.082117697 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.11859788 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.072544529 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.103509461 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.080803352 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.079052537 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.101609979 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.074503447 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.10268962 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.076185619 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.094892678 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.103598374 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.07291419 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.102401074 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.077699497 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.07599734 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.105290883 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.079047867 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.107189795 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.08154677 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.075818023 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.105976569 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.075914503 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.070089186 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.102215871 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.073875367 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.09423557 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.080072538 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.081506275 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.093616721 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.076544513 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.076727921 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.099363251 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.069970029 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.071919591 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.09616304 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.077054432 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071659318 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.082581236 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.073982264 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.076183361 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.094199721 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.079046515 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.100067988 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.076968987 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.07203133 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.106242832 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.069641467 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.075311084 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.094933838 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.071024937 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.072166839 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.098855367 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.070393593 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.072894774 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.103714513 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.072110673 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.076797938 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.105939601 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.070429993 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.101070437 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.06981789 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.069744865 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.108484891 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.080393502 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.094696524 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.072988729 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.069574747 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.101661433 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.069791251 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.07022349 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.094845325 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.070225462 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.076612678 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.09474912 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.072621752 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.077181212 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.108306996 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.070486569 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.074235787 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.097275113 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.0704967 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.075237115 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.094987132 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.070609084 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.096256258 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.066912057 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.072245067 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.094791596 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.078038779 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.075807048 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.102869651 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.072188723 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.079086816 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.099415735 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.076080921 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.075604461 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.093548457 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.063260194 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.072678755 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.097196732 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.072102486 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.070333253 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.096173085 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.070957894 seconds)
done (took 13.804543212 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.07080989 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.16751972 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.10918608 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.125019847 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.11586767 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.070705315 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.080871345 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.12695998 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.072550268 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.127141589 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.093662196 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.115985896 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.106511694 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.095144152 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.07076565 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.099379209 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.072265807 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.085561781 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.129582498 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.091727212 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.145583226 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.094086068 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.104787008 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.119254436 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.080317533 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.122531028 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.071360538 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.074596116 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.099537907 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.086164356 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.116446054 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.074569648 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.071012971 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.11839353 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.08790205 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.104121465 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.070290712 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.102643311 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.071234314 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.070798449 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.122684395 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.092520667 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.100940087 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.07622084 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.098905795 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.073355408 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.072463836 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.105126802 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.081354187 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.074690384 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.10948075 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.138509747 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.074770707 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.104821282 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.070288325 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.08074855 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.10413591 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.073412581 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.095191809 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.073147957 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.070989634 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.098737494 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.085703268 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.124415797 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.074777201 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.104745368 seconds)
  done (took 7.220875238 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.086981992 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.097790436 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.112905484 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.088618323 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.095119391 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.071389152 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.095708368 seconds)
  done (took 1.583156657 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.072153721 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.092823824 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.119201865 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.093911345 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.11516346 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.092162084 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.106692701 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.071619984 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.088296127 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.097759519 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.091600358 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.135513584 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.072879797 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.104304989 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.095632199 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.071308287 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.120196231 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.07178295 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.09923976 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.09545051 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.074282868 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.116695755 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.073514735 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.09656686 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.085227031 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.072492312 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.144876203 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.076183838 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.098459559 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.074602436 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.095592924 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.12193416 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.110997692 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.082562584 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.096582364 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.08582103 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.086751181 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.095058471 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.087304538 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.101960817 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.085754696 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.072800723 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.098021055 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.070218163 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.075975945 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.108086935 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.072651132 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.072652001 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.099387881 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.091183683 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.097455349 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.085608225 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.072290904 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.102287574 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.073717054 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.102063202 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.082428692 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.07325842 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.115923244 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.073569627 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.114242239 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.088423553 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.086286392 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.113699069 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.074390921 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.110156559 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.085368713 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.075252527 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.099266993 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.074942924 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.113759805 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.07021601 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.073301309 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.106785627 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.073680516 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.094637138 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.120303962 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.073341765 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.107086266 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.072158261 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.071806827 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.096529036 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.094891953 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.100723414 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.07165958 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.075665086 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.100743802 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.070383837 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.070604039 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.100526602 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.070141224 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.073881543 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.099943488 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.073310931 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.099746925 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.088729334 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.072991394 seconds)
  done (took 9.708755337 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.073034517 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.073646587 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.098779265 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.072855664 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.072755313 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.097854728 seconds)
  done (took 1.439872984 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.094918735 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.100321177 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.087489116 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.077960473 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.137979784 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.086739947 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.111781533 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.079497075 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.115524683 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.085319316 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.112312221 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.087241842 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.118153707 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.078676995 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.112027283 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.077695585 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.111948229 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.081838944 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.084305066 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.104368122 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.09371217 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.103925024 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.079357893 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.113118312 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.075391503 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.103454936 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.08207555 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.111110784 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.084900254 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.079798833 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.10430193 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.076113565 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.102826568 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.079865811 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.112066653 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.076539917 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.103596266 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.076537303 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.082210315 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.100657605 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.087279227 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.10431416 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.083609366 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.102265138 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.080274761 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.103715594 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.076772828 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.107124021 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.086260167 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.076575502 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.102668597 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.078263041 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.101702121 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.077159534 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.077172227 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.105966765 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.07663135 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.112121856 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.078351876 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.102660537 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.076187818 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.101442514 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.079964834 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.076092699 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.111394617 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.076721565 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.102584473 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.078254223 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.105237109 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.078193129 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.101674414 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.075548188 seconds)
  done (took 7.619606633 seconds)
done (took 28.500611511 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.677243223 seconds)
  done (took 1.621274975 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.714111182 seconds)
  done (took 1.660437723 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.862970805 seconds)
  done (took 18.807868895 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.479140068 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.554094899 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.789948532 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.159574493 seconds)
  done (took 2.929066723 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.916235688 seconds)
  done (took 1.88065348 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.227340778 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.213859496 seconds)
  done (took 1.393315608 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.75072743 seconds)
  done (took 1.707652175 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.332453456 seconds)
  done (took 2.287072062 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.311615771 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.141109954 seconds)
  done (took 1.414099087 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.544860963 seconds)
  done (took 1.508105478 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.936976778 seconds)
  done (took 7.901160875 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.214797957 seconds)
  done (took 1.188699166 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.270062568 seconds)
  done (took 1.238981221 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.654651144 seconds)
  done (took 4.620657936 seconds)
done (took 51.107725431 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.08158197 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.084868625 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.110649346 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.081823231 seconds)
  done (took 1.319669202 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.083887394 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.078435443 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.10841001 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.07766667 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.109699866 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.07916817 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.079969268 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.109342735 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.078043038 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.105335958 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.077858884 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.077559197 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.107288572 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.079813426 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.102641433 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.08123969 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.107872736 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.078409175 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.080820101 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.104206181 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.076468931 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.106863501 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.08155413 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.077257527 seconds)
  done (took 3.123511853 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.081456474 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.077943415 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.104626177 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.075955685 seconds)
  done (took 1.314059009 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.082970796 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.0978039 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.121456151 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.082345378 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.124110993 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.119443845 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.075017651 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.074744104 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.102894601 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.082926944 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.073525049 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.131210893 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.121438787 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.082154257 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.084304046 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.097275733 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.073538882 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.120151663 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.082531926 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.082453289 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.10212777 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.081628981 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.073101084 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.121437318 seconds)
  done (took 3.266120898 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.082286332 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.107265882 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.110687837 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.095140276 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.123800011 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.070423096 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.108482014 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.097168459 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.160458681 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.070658182 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.102169984 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.0713404 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.07830043 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.096943314 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.08258259 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.141888781 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.118760534 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.10014683 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.101563472 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.071006263 seconds)
  done (took 2.968478726 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.079868903 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.075202601 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.096550145 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.074179512 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.081897564 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.103777411 seconds)
  done (took 1.492830945 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.073180279 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.071895732 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.098393828 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.071790031 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.076440399 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.097973265 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.07116421 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.071942345 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.098035126 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.071949601 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.072077822 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.09669886 seconds)
  done (took 1.947196657 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.465603431 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.074451801 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.100688397 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.071287878 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.076243864 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.098111202 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.085780402 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.073294189 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.124297287 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.072362593 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.098335927 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.074077034 seconds)
  done (took 2.390590616 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216927399 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108697763 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.243803608 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171781856 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14090851 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.152828596 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.135685368 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.118865403 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.205094326 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13870468 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187845006 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17558828 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134089444 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172677475 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.120769934 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.105405145 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178413992 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.226845782 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137124936 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186102322 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181138059 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.148021941 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.161348628 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134150396 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.094908354 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151033951 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.1040069 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.086757968 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215834362 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159112628 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170177453 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145951588 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.128249127 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19490183 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230937977 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177257696 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170356202 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.11800633 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.132425002 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.149199092 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.24681213 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.09496729 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.214009059 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114462076 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114298803 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174243352 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149620023 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.156558825 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.131423877 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.094402131 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203843888 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194857773 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.173883602 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.120877813 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11614316 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141777143 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.147019187 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134302197 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232127616 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181228359 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161566593 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.076633681 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129333173 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173349099 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16308131 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.148754917 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.160968253 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.128830002 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17272222 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.168948152 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146378295 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170997944 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.16551748 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120126664 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15180773 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156217311 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151617014 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210237509 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160829659 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.104248301 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148435039 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103763274 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114221099 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.178223465 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.080551293 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194737425 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132129421 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.122349361 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.117768003 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142633491 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.143470154 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177978942 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171264209 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.12923405 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.07129213 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137837254 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.138190559 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169683436 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.094441893 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.141031636 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142974044 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.112725647 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158311463 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.079821224 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158954 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.078548365 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156357922 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189801653 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.082525691 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141203974 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106355268 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.132315564 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157343193 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180215443 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123613978 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.088365803 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213308016 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156029597 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.104283531 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161273827 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.180242154 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.129848623 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132138352 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179536474 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.22585841 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.09474357 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184677174 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136647223 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.118062332 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.093503519 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1603345 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.13744532 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.143378121 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087794124 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.16099936 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218664643 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.080865896 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.120943994 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169362607 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.087815439 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114636104 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141883962 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102301838 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.122006623 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.128421698 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.104399769 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161365564 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15928518 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134924526 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147703139 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133552634 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231509907 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.095866451 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.131929989 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102101769 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.102962653 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.173867807 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177831526 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112932852 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184200667 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.153325871 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137725595 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123579228 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117122832 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15786069 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.084824775 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.103057538 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173568359 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147451414 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143557377 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.176693882 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109509989 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.188604341 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.160844477 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153211604 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154546527 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.118827302 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140630172 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.121171111 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112502281 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145777505 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.105748259 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.096811888 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.116318871 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138165387 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096878092 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.116636456 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178445691 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15000155 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130216156 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112476695 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130666102 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.161541106 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.111134378 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157827537 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.157978394 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100451789 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.17733098 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200807073 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167420994 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097152407 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214775688 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.075826736 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107287543 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.097068403 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.15159569 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.116007208 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.091529099 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149376055 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.161138424 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163670191 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156305349 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145345168 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155935101 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.1707585 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.076766756 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.151757833 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166189336 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155734727 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.141945562 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11990216 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.133427496 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.12895436 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137680316 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.2351632 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148196525 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156586057 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190085685 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.130805405 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.085894119 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.134116072 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165261924 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135203651 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.157020881 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128724746 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.094562445 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142875586 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.087163742 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13872971 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191666688 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116165224 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197737074 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.1050104 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162593869 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110408033 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146024888 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.139811841 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117207862 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.096507325 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154906961 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182503861 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12985671 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150255227 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172609816 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.086067172 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.158920195 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.219590836 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174988632 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.091728739 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139355085 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141477487 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145828297 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153149519 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130198311 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139751983 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169291786 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.1396063 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.118242295 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.094316853 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13122986 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104741773 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.120364549 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.128703715 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.155111185 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.093618213 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194420597 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113852508 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139066708 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151552349 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.132722218 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.098083327 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132303264 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19622971 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155860345 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21956612 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.10403843 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.159041329 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183829505 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107931877 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085636814 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.115087603 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158979274 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089986558 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168148532 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.128920226 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137218808 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159952007 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171158637 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.092562415 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.102561842 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109206114 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153436173 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145024376 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132483684 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.138541168 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18520636 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.129369227 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086943038 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152649899 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108961043 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128847976 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174681104 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.095072766 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102800517 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110032253 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.087576387 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.145558789 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185740997 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.117601101 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.140314535 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148451724 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148051388 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147216169 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129731164 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102314927 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146205791 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179180795 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162517284 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.114656464 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.139126594 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15584688 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175398775 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141460395 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.093632027 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18257925 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200759107 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.178257563 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.094559869 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148061847 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147989702 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.137606028 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164025476 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.116434945 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185461255 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087742289 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206255005 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133642169 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095374297 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154101881 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.129313655 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112579297 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195260134 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153272484 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08903005 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.114432001 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148982844 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160009421 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108017788 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.109589849 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160840894 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.07910234 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197577 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211375296 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114956538 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106335938 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128732298 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.11627592 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10945666 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139416646 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120884209 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.119224827 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182024789 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.1163603 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16996911 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210099621 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150086251 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.154145783 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.097763505 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.673696795 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.112254706 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173830213 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106590474 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212533655 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.102623791 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152931828 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.1392738 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148039037 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175254329 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139105406 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.213091727 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172365739 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.156906066 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113479043 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111259787 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14141354 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.125284462 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132983778 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119284672 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140528015 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.133269224 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.157051757 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14971697 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.087275976 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.122182756 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177995504 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.135302257 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166413968 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159519006 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.092974753 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152397182 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161966139 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114801394 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.159518384 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21368634 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.095472837 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132001124 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.08660142 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.13547181 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237077842 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.079158788 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177383951 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155073986 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139023464 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147408191 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.127183909 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168864807 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13896884 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156996604 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098070942 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.138695552 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137000678 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.118239563 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.083162242 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.135073686 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147309651 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.101160821 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138394748 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.121405519 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194430546 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.078157635 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126040232 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108805302 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168211797 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.222340904 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.094422546 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.11801336 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143118538 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103973166 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.154200868 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156723879 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.116740737 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088810135 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.117449219 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.118318496 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.122968572 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106585465 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135429718 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145136162 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184563582 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.119109422 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.262261842 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.093706864 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135568558 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.075859942 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.113387666 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102562824 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127687437 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138567521 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103604877 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238043064 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.127548171 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.087036573 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.129562969 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.079827214 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116663198 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.118008733 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145169497 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159725926 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127123647 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.067545733 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13951336 seconds)
  done (took 69.360668154 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.152229741 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.129122908 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.139665551 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.201232463 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.172178408 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.26381832 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.207768365 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.248034832 seconds)
  done (took 2.563575063 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.075609616 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.125924749 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.106659349 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.117256693 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.072623062 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.09969466 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.311498374 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.112863224 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.07224475 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.094181323 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.155681923 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.076405768 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.49363024 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.076321477 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.105271447 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.093135284 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.07325412 seconds)
  done (took 3.312053981 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.443481267 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.70004016 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.483295052 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.079014752 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.182228802 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.116516552 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.916497673 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.177775666 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.09960578 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.467005381 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.735380964 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.147985868 seconds)
  done (took 18.603392978 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.081082962 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.075646881 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.117564967 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.089862955 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.077681802 seconds)
  done (took 1.501480786 seconds)
done (took 114.119482886 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.085451104 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.375755196 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.059690513 seconds)
  done (took 1.523009997 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.089125234 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.090243314 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.119534742 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.088402129 seconds)
  done (took 1.450495177 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.079817406 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.080795743 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.118007469 seconds)
  done (took 1.339097242 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.30555187 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.143234911 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.123263968 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.087809746 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.083577766 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.112481951 seconds)
  done (took 1.338573204 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.078811333 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.081231328 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.106821587 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.082418056 seconds)
  done (took 1.400390175 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.081487392 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.060293089 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.060039445 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.088770722 seconds)
  done (took 1.347851302 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.095594508 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.084243845 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.11380111 seconds)
  done (took 1.347652815 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.110798602 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.119810196 seconds)
  done (took 1.288734377 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.087105897 seconds)
  done (took 1.139329325 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.098940182 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.151328908 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.174296316 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.145612643 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.180554024 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.145460832 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.093334697 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.124024563 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.112847822 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.09644707 seconds)
  done (took 2.381008018 seconds)
done (took 16.263265328 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.084774777 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.403343914 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.367708601 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.126746052 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.696560558 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.36195964 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.013711096 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.098797513 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.14393037 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.07501067 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.118863345 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.6760138 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.040671173 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.329310768 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.027103097 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.326820258 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.656917797 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.102384093 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.073757691 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.074070894 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.997732079 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.073420076 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.101671423 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.074712713 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.656608475 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.405964557 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.074113804 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.35522326 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.074226603 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.076023807 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.389596413 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.074090744 seconds)
  done (took 16.199940112 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.076358379 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.153433208 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.080416483 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.090160863 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.10560437 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.075854373 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.105766968 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.07517138 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.15682817 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.074449512 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.09009606 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.102697271 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.078157179 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.102945571 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.093840015 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.074397493 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.103408366 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.074601163 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.102168886 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.075036994 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.093085577 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.101982899 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.075099163 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.074535554 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.102524118 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.086335387 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.102607879 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.074519968 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.074171478 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.105132372 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.076572233 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.074164496 seconds)
  done (took 3.998127945 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.122717812 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.162499546 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.080214172 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.13838771 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.120880209 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.104498445 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.180699256 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.099721179 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.16105682 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.074414879 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.119973819 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.074673061 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.135440324 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.075427779 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.093214031 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.103061042 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.075385532 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.102413585 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.074613501 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.074260924 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.122296523 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.07408582 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.103001528 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.075288402 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.074897826 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.115706083 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.074481421 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.101950818 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.074608165 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.075598453 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.105669858 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.075080203 seconds)
  done (took 4.31485412 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.077960351 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.081808009 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.117609117 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.090292323 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.076438427 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.106819193 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.079007087 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.104341916 seconds)
  done (took 1.804195489 seconds)
done (took 27.369972368 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.085119729 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.075372629 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.107646929 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.087631772 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.078327624 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.112581233 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.073113201 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.109085998 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.081345289 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.078927572 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.110838163 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.073685797 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.076501765 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.103082214 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.080908311 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.073568068 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.113132766 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.077517631 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.113530203 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.085012411 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.075271859 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.110411208 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.080083526 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.11306248 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.084922528 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.084159025 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.118871475 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.079669661 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.103354124 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.077279764 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.08219959 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.118950096 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.077276958 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.113183781 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.074306167 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.073825749 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.10282883 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.074406605 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.084434428 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.110756874 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.076098536 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.109076284 seconds)
  done (took 4.880572845 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.093604743 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.099724729 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.122327752 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.070905835 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.072878677 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.09627766 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.09416407 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.096920144 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.067509186 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.093896469 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.093238582 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.064452718 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.06508756 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.059134475 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.092861112 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.062700605 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.065935114 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.061824536 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.092726554 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.064512834 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.065455709 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.088316174 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.066343972 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.065611006 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.061406811 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.096776091 seconds)
  done (took 3.143647046 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.080728212 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.08788701 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.123061477 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.131668076 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.141552959 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.08101881 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.1142921 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.092580333 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.120522149 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.073880908 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.076664078 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.132984833 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.092643495 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.109600982 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.077216991 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.088358098 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.118430743 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.075808843 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.079334368 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.124401385 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.09008025 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.113478972 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.095477355 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.085653645 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.103120123 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.075569691 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.108426714 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.087469604 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.081012522 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.112442606 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.080364413 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.105584899 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.075338645 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.085186093 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.108733251 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.075786823 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.122939124 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.083440422 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.082719238 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.104465872 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.077223319 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.076752165 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.124021188 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.119071086 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.105691989 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.080841898 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.110172051 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.084213264 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.074964471 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.122268291 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.083320576 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.073798599 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.107289524 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.075013703 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.10484093 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.090069509 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.075576726 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.105983989 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.082491046 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.076788862 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.116917878 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.078356675 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.118904888 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.075222917 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.08142204 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.105133678 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.075498495 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.072478126 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.125809233 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.079640534 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.144077328 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.077246725 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.074992155 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.112251182 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.080587988 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.109488455 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.074565036 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.089479607 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.113070853 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.078020027 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.112996779 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.077432694 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.076849146 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.122753336 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.076526898 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.075316144 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.104756704 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.080633135 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.105933975 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.075770138 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.087527129 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.103950199 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.077536144 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.087121467 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.104129301 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.075672259 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.109444835 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.078464263 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.073064757 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.116706115 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.079165345 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.10413009 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.083051452 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.074346621 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.107677329 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.083984689 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.078315967 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.103780389 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.078169753 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.109292087 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.075312809 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.077660779 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.106682245 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.076171201 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.083205134 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.110113238 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.078959328 seconds)
  done (took 12.040285805 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.207923337 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.198640281 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.076827002 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.189856382 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.085341658 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.116155202 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.193609147 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.105960371 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.104832271 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.074589406 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.07489464 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.145143545 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.106737498 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.147713319 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.113727666 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.074620277 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.092092203 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.145766509 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.19470924 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.188068921 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.093593657 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.114219359 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.076319755 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.074950669 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.106951992 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.084922618 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.120760567 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.085932521 seconds)
  done (took 4.484661099 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.088393936 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.137261891 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.080385543 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.095674579 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.128296368 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.074780322 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.109373418 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.076440147 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.087055583 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.116191715 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.074386929 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.110792443 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.080732539 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.113234038 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.074994435 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.08261724 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.114530631 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.075606166 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.106891591 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.078367307 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.08108819 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.117897582 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.078255569 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.104211884 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.081474255 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.072986843 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.10229686 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.093007354 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.10452749 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.096277419 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.102997816 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.08088452 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.083416491 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.106269203 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.074248144 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.076415967 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.107388181 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.077073178 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.075726121 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.103757513 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.072570283 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.064123161 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.104021797 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.08698245 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.111406037 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.066572763 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.080100206 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.110172841 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.080092551 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.072007353 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.107106512 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.077474554 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.107297093 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.08154884 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.078486042 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.110189091 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.077303358 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.071337816 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.111619122 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.07688185 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.070779328 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.103434567 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.079612029 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.073744363 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.113170085 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.079216076 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.103428395 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.07669607 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.078898815 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.111376546 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.076898822 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.077531704 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.102953656 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.077344369 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.079043027 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.109445109 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.078305325 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.073012322 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.104403489 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.074505828 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.061997371 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.105283722 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.060033844 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.077433953 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.102539761 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.07323907 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.077065327 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.11047972 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.087901541 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.105725335 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.080669387 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.105073204 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.074932978 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.078034766 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.099394133 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.078092406 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.088652961 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.122481442 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.074067785 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.103114933 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.088961009 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.079605724 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.104470547 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.062714721 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.081547995 seconds)
  done (took 10.49379895 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.096671459 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.100149627 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.106440348 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.08832001 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.131395904 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.097501926 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.112277107 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.080576882 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.075600962 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.12258839 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.074323209 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.083265854 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.109135036 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.083561249 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.127994979 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.082851035 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.076613097 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.114826842 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.082740335 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.140566062 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.088415953 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.091021027 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.116515075 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.074770979 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.078928141 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.116661328 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.100083645 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.115895855 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.084253193 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.119028744 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.085243581 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.099584214 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.121646538 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.079291586 seconds)
  done (took 4.458111185 seconds)
done (took 40.557103993 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.165745713 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.373756249 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.138491499 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.133341512 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.195684854 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.159040373 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.156276121 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.147940572 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.325032202 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.145608815 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.402410806 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.889116952 seconds)
done (took 58.316074192 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.289585882 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.283066736 seconds)
    (2/2) benchmarking "String"...
    done (took 1.413100848 seconds)
  done (took 3.789566467 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.499861598 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.231143527 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.433155046 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.140033392 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.14089304 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.585009575 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.85145756 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.585227965 seconds)
  done (took 28.050599569 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.149069838 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.561968105 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 5.078729692 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 5.086909689 seconds)
  done (took 18.962292601 seconds)
done (took 60.674024934 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.170245856 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.212981587 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.175429158 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.126063718 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.28396146 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.168037528 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.305475303 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.242429681 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.139900603 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.131458554 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.147225104 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.141192739 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.147696005 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.345484771 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.15288872 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.143086193 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.169993359 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.784989658 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.563824606 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.151373827 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.151394529 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.213273502 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.163974873 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.142895156 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.20817666 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.141814881 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.14221417 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.156439676 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.906999354 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.145683427 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.162684285 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.534558515 seconds)
  done (took 188.860012339 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.143006037 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.120005301 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.264157616 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.183796524 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.607578042 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.346204956 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.281693802 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.68534783 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.164945694 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.163739956 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.392371632 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.148210435 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.463310502 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.141267911 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.152047995 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.212560373 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.448689779 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.466586181 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.164618886 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.401704698 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.154408878 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.402398376 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.298521489 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.354848906 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.192622548 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.214358402 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.158452109 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.180419612 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.338428989 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.36926705 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.156849669 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.184641237 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.812859222 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.007159082 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.159884977 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.172703289 seconds)
  done (took 148.199492877 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.431862689 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.143647166 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.14418923 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.143945043 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.177427855 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.14341907 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.767480394 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.77134055 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.700230371 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.590799989 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.210290694 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.484600072 seconds)
    (12/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.149047926 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.144030139 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.241128551 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.156731762 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.145451037 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.160075515 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.17024705 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.150072997 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.144860514 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.767172928 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.163932211 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.455681951 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.151621831 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.145530455 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.179249749 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.543603342 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.144716479 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.178402691 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.474006322 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.195791562 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.145376226 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.536811351 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.935847774 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.257453232 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.147475477 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.179957527 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.146282683 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.420488893 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.145858045 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.146134698 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.148449997 seconds)
    (43/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.145289771 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.825364963 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.150730611 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.771072762 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.151045503 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.11786776 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.146155252 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.145662332 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.875205338 seconds)
    (52/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.153994467 seconds)
    (53/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.145741828 seconds)
    (54/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.784385011 seconds)
    (55/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.151645953 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.145178545 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.149307297 seconds)
    (58/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.146779039 seconds)
    (59/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.147805983 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.181251423 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.900085939 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.255042093 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.148354091 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.149758259 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.18113944 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.146721427 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.240983829 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.146934478 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.215569029 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.207987191 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.371600003 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.772886682 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.153998909 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.243911442 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.268483947 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.147674768 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.146491779 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.146968949 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.147663196 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.257864526 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.147624309 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.606140775 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.154380304 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.149037478 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.20775337 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.245538187 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.148649497 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.532901183 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.153682758 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.149176525 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.912167875 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.244454315 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.147500805 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.147301589 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.148319869 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.611333064 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.775092177 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.439324287 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.154060733 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.070622592 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.15613414 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.621935285 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.743381215 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.834932428 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.154169674 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.259246292 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.151951757 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.150589074 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.146779673 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.178563305 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.148004546 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.203761316 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.15517886 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.550042431 seconds)
  done (took 342.627565385 seconds)
done (took 682.20176465 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.850779577 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.802735757 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.936979115 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.812218 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.798076926 seconds)
  done (took 10.29225143 seconds)
done (took 11.382052825 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.345195623 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.344723779 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.213385811 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.347726171 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.179350747 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.365171742 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.32848199 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.175552367 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.256423634 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.232244103 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.254260752 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.200655564 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.177298817 seconds)
  done (took 17.512902619 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.47504645 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.476386814 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.216525124 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.488229777 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.195010665 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.469325305 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.354653748 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.365045021 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.377285867 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.168395275 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.163783482 seconds)
  done (took 15.843521305 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.473069697 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.475527162 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.217711216 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.480966827 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.19274752 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.478342654 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.359050014 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.36813293 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.355455352 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.169085122 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.164317802 seconds)
  done (took 15.828743907 seconds)
done (took 50.278271397 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.160091862 seconds)
  done (took 2.253894081 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.19676596 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.365181979 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.178377126 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.166850594 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.160932205 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.16393824 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.167997597 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.161491283 seconds)
  done (took 10.65695448 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.157748392 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.158644416 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.160175018 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.159644874 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.156788336 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.157403004 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.158778385 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.158774308 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.161082548 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.158952699 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.162574673 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.159784895 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.159003379 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.161099348 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.16126725 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.160529903 seconds)
  done (took 19.648411484 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.160306669 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.15902189 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.158391009 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.160364254 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.159524609 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.159603036 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.159989845 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.159627223 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.159941662 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.159977246 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.158264372 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.15899618 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.159261446 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.15886241 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.159545871 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.161129255 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.159747079 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.158191497 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.163723374 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.15968673 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.160410494 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.159077355 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.159357936 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.160027472 seconds)
  done (took 28.931493958 seconds)
done (took 62.582636191 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.496783104 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.94028748 seconds)
  done (took 9.533701849 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.162135418 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.161688691 seconds)
  done (took 3.421869783 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.161793325 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.161821825 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.162624527 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.161695397 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.162471695 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.162051339 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.162769316 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.162655587 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.162422313 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.163349209 seconds)
  done (took 12.720231609 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.162189629 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.16215032 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.159616592 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.16187459 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.161996094 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.160881751 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.163173371 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.162706293 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.163127569 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.159974178 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.162256511 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.160445271 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.162751299 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.160455611 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.163241006 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.160516069 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.15972363 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.160372932 seconds)
  done (took 22.005623231 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.162958021 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.16349015 seconds)
  done (took 3.424339511 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.160701103 seconds)
    (2/7) benchmarking "second"...
    done (took 1.159882136 seconds)
    (3/7) benchmarking "month"...
    done (took 1.160166751 seconds)
    (4/7) benchmarking "year"...
    done (took 1.160626316 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.160755968 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.162322531 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.159854077 seconds)
  done (took 9.221808478 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.163871283 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.343704739 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.427592931 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.778890513 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.16486263 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.167704093 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.008172787 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.166276364 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.16967029 seconds)
  done (took 13.489344248 seconds)
done (took 74.912067127 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.192159339 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.157557046 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.127841371 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.177416508 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.180834299 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.45781821 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.202289852 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.286308103 seconds)
done (took 36.879740265 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.174192436 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.939285839 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.96320903 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.179198919 seconds)
  done (took 11.181686462 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.15000862 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.178446819 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.166506533 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.250256561 seconds)
  done (took 17.844517729 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.281297824 seconds)
    (2/2) benchmarking "read"...
    done (took 1.499844085 seconds)
  done (took 4.879254451 seconds)
done (took 41.17687698 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.165289611 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.165359877 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.163081311 seconds)
    (4/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.165908586 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.165732947 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.163250517 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.162333611 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.165620331 seconds)
    (9/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.166188218 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.16593836 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.165374533 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.165798993 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.165781204 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.164269582 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.164763359 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.165740413 seconds)
    (17/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.164237709 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.163241632 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.163541052 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.163784089 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.166908349 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.163676961 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.163354139 seconds)
    (24/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.164720904 seconds)
  done (took 29.054764359 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.165704435 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.165648007 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.16669611 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.167372499 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.16503294 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.167088226 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.167529338 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.165238777 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.167715843 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.167210267 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.165025884 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.165377442 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.16685756 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.164871942 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.16861658 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.165648847 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.168003769 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.164909016 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.167361727 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.165210575 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.167928662 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.164955107 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.164801953 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.167416525 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.164524533 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.164492074 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.167741505 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.165414172 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.168145192 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.164606982 seconds)
  done (took 36.089134083 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.17340057 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.177134635 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.167671341 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.16815289 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.168345934 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.168590352 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.167955323 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.167559902 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.168859781 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.169203401 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.168797946 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.16801161 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.169167302 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.16856883 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.168553428 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.168030936 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.167818176 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.168381263 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.16698293 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.168845616 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.168835629 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.168450463 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.168524551 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.168268694 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.169248393 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.168689921 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.168391463 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.168670963 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.169404894 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.168763457 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.170404682 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.169147133 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.169601059 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.169936512 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.168894756 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.169369967 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.175544281 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.178544189 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.169469461 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.169523506 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.169382916 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.16897143 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.168860426 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.17071037 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.170781226 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.170039386 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.170900543 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.169713546 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.169688687 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.1707439 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.170281607 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.170774965 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.170304785 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.170882849 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.170956266 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.169791318 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.170923532 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.17180074 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.170428146 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.170596446 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.171032118 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.171797049 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.170509417 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.170698676 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.171200558 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.17065067 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.17119409 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.170794819 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.170597551 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.171454676 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.171428501 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.171888225 seconds)
  done (took 85.342854793 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.171176318 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.169322701 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.168448677 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.169149984 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.169077323 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.171010327 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.169418106 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.170633914 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.169075261 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.170542853 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.17083611 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.169446787 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.169840476 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.171847397 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.171823443 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.169268419 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.170591767 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.169634665 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.172535075 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.171901248 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.171711894 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.168791535 seconds)
  done (took 26.852403543 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.173377518 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.171710871 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.170100261 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.172654084 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.170229481 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.172629012 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.173337832 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.174515739 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.172545713 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.177471817 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.170889371 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.172610943 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.171574852 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.170603237 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.171861304 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.16982476 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.173054321 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.171215486 seconds)
  done (took 22.207236467 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.170306954 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.170898967 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.173371658 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.170571807 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.171538191 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.173702729 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.171191751 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.174247451 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.174838665 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.171240715 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.173311244 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.173654594 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.173736105 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.170547994 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.173920914 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.170983543 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.173987863 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.171846348 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.17477623 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.172207169 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.171279957 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.17532444 seconds)
  done (took 26.905346111 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.173380037 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.173722998 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.172530126 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.172286117 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.172504354 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.174259172 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.175206843 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.17219871 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.175206419 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.17446553 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.172508146 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.176970875 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.172808883 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.173029006 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.172287639 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.172566557 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.174449691 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.174087435 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.176085585 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.172636995 seconds)
  done (took 24.582103218 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.174455622 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.176053219 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.176285627 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.17568679 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.176446514 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.176088647 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.176354057 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.177178207 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.175741784 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.176949886 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.176310299 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.176101195 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.177521401 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.176383512 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.175341951 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.176468774 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.176599144 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.175337482 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.176661507 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.176175859 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.176905284 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.177900756 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.176380427 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.17647354 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.177238957 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.176631194 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.17808498 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.177701438 seconds)
  done (took 34.051888714 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.177858787 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.17651011 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.173281502 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.1742265 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.174312035 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.173485053 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.174837443 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.175009207 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.176854777 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.175483431 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.176915303 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.177185962 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.177390005 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.177721201 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.177664944 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.177982265 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.177687445 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.174044781 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.174786291 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.174995803 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.177581947 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.178079463 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.177923002 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.175639013 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.174927252 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.177698913 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.176258774 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.175566096 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.178492578 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.176530849 seconds)
  done (took 36.399264275 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.197243514 seconds)
    (2/2) benchmarking "in"...
    done (took 1.197617389 seconds)
  done (took 3.506203389 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.175599048 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.17814033 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.179964163 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.177210865 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.177282703 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.179343648 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.179500074 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.176209952 seconds)
  done (took 10.536191564 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.178917314 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.179552326 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.180202909 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.179730343 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.180437757 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.178116037 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.185684344 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.19864634 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.180446804 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.180111005 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.185561054 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.187121377 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.182733438 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.179322101 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.178676591 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.181094027 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.180593669 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.179912467 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.180121588 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.179774333 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.180772904 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.181946439 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.180865652 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.177479115 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.181858795 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.189007795 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.186039445 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.180025065 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.178857525 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.184082902 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.179528729 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.178104004 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.181080513 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.180650308 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.180685931 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.180578649 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.188541337 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.199002145 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.188114719 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.181588267 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.180954301 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.178811613 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.181580844 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.181419192 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.182198922 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.181059899 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.181510622 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.179375275 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.179883095 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.184898563 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.188405038 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.181110211 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.179385632 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.184998026 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.182062197 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.187137498 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.200501196 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.185179883 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.191382239 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.191126168 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.195288636 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.194182867 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.183148639 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.182347348 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.192488182 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.208499596 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.189364107 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.198254483 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.18014404 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.182257618 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.1891745 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.195798134 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.194964552 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.181221133 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.182589701 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.182871926 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.182615441 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.184299388 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.189693015 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.203787898 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.182674945 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.182837829 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.193105536 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.2078925 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.182164391 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.18345575 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.184002977 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.183138709 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.184229307 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.193121649 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.202168407 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.183701553 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.18269852 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.182028447 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.184721364 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.184212642 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.182331584 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.183690777 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.181441625 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.185530745 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.185428325 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.187520007 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.193248491 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.185312061 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.184062583 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.190292471 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.185525826 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.18430043 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.190842678 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.18673597 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.184262746 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.184733374 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.190322259 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.182671628 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.187071866 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.193587235 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.184390755 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.186090646 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.185296842 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.185594812 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.195531695 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.213072286 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.185835579 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.185292449 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.189880036 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.197838744 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.185761403 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.188907659 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.186315535 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.183374443 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.183977226 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.187364598 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.186457601 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.18549589 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.186327956 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.187043207 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.184570972 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.186972393 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.18571892 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.18718802 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.188018821 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.185888263 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.188024765 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.187595487 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.187160752 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.187406252 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.191403191 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.186552488 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.187466115 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.187437472 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.184379983 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.187177528 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.18716678 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.187397548 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.187861623 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.186448553 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.186272453 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.187985475 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.187829798 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.18726709 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.188624244 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.188294639 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.191926217 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.188090827 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.19123422 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.187342154 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.186243282 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.188009033 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.189407047 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.187425643 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.18825532 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.185663524 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.19147042 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.196725875 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.188476106 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.189285091 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.189788302 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.188252763 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.188523696 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.188643806 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.19162044 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.196397731 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.189101388 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.194561924 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.188463304 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.188635371 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.189185228 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.189767948 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.187918395 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.18872651 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.19246016 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.198701466 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.200715659 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.199068282 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.190531767 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.19351623 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.189372163 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.192975837 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.192122558 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.189287844 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.189531424 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.188457529 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.187406243 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.190166256 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.190633102 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.188645886 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.188380412 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.189185258 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.189458816 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.189827982 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.189335446 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.189672067 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.189795012 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.188278307 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.190364466 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.190193376 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.189220445 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.187704338 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.189234478 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.189021365 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.191143716 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.189925742 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.196444068 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.189034234 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.189661808 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.190728904 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.190142941 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.18929226 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.191083183 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.19136941 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.190436501 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.197509371 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.208438231 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.190311181 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.198218805 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.208334133 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.190630375 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.193316404 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.191529977 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.189910274 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.194804824 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.200052143 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.191766141 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.192802041 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.192879605 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.191808097 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.193378631 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.198364561 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.189751129 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.190313563 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.193179602 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.192462132 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.190717596 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.193150465 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.192320034 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.193488516 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.194076219 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.191912433 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.193035901 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.192412036 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.192708433 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.192472368 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.191543638 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.195662919 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.201204748 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.196466726 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.192798418 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.194864242 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.193816436 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.196230297 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.193238447 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.192740201 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.192118337 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.206383112 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.206698468 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.199652408 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.194396717 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.193968988 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.198344242 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.19631773 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.197578796 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.193166808 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.19453782 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.193527403 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.192703267 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.191692874 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.193862206 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.195008247 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.194270582 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.195664839 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.198011262 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.195191869 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.192020246 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.195313866 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.194386105 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.194550534 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.193225166 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.19419124 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.195473241 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.196322279 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.193377606 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.193209671 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.201596013 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.213176848 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.194558839 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.193506217 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.194856806 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.192948541 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.194919402 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.193887321 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.197104469 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.202940742 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.197477075 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.204359558 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.196790724 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.202726686 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.195677743 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.19946757 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.203779934 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.193675519 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.193331238 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.194852814 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.194678359 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.200941696 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.214402657 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.195785081 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.199540737 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.196040879 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.196231434 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.197135724 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.196253481 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.197352886 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.197021095 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.203985375 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.216238572 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.200426775 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.198745702 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.193783313 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.194927573 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.196547917 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.195580226 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.199739108 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.195814501 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.197313738 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.195266835 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.197703669 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.197587168 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.196226438 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.197286669 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.194883325 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.197204481 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.203046585 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.216267452 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.202827804 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.196903529 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.204591882 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.198763684 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.203520247 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.215561901 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.197792935 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.197763036 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.19816415 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.198021316 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.197321863 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.197917994 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.199184261 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.198995571 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.202568387 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.198282785 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.199628408 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.198485652 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.198411506 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.197681601 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.208947691 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.2250178 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.200069544 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.203629398 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.197186558 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.199559841 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.202700565 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.198503579 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.197594243 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.201443121 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.210810062 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.207843804 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.198418502 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.199539322 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.198567507 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.19900676 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.198560687 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.198899252 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.19942442 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.200304936 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.19937802 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.199318596 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.201495668 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.200287768 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.199279093 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.200315792 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.201240213 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.21048814 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.199864504 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.200772736 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.200008315 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.19947086 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.199354986 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.200440234 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.200728813 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.200817539 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.200848753 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.201278714 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.208320088 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.207280647 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.202562367 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.198217932 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.200652101 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.200455043 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.201617633 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.200611802 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.201610986 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.20137155 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.202040421 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.201583642 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.20078256 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.199772943 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.202745225 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.201498375 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.2012372 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.204877604 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.208166361 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.201300827 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.199079146 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.203211121 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.202407141 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.199919199 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.201537397 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.208579913 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.204626627 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.212794414 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.210279902 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.206397117 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.201338527 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.206293375 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.210330385 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.200492497 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.201955882 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.201946457 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.203065778 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.202701153 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.204701315 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.202432798 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.207510581 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.202934828 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.201894278 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.20899351 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.221485951 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.202897616 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.203233662 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.207483272 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.202522486 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.199935917 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.20427692 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.201751848 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.209125018 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.221477684 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.203865159 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.204347727 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.201070945 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.205052359 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.208105981 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.204523809 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.203489897 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.200894158 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.203076376 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.202396842 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.204181608 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.201823955 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.202451389 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.203132629 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.205985514 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.211189436 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.202313031 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.205320684 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.203669325 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.204554854 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.204424585 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.204037839 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.201854945 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.202516647 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.203113609 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.20463378 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.204543235 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.205054924 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.204849534 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.204690112 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.207386744 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.20560604 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.207381353 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.21613402 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.212898904 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.202675937 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.204487818 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.205144802 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.206921943 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.204780048 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.205613587 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.205280214 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.206075354 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.206555546 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.205191949 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.205096508 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.209404281 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.221197276 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.224243292 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.205807881 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.206962241 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.209342345 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.206658261 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.203988352 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.207182374 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.208429838 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.209883084 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.215345261 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.206025706 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.211691562 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.224298633 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.208189529 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.210411964 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.209416279 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.215037446 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.208280452 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.206954213 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.206895916 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.211731643 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.223190303 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.207241886 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.217816558 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.236811404 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.226972815 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.207977276 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.207338372 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.206170317 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.20766932 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.208535216 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.208298744 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.208819299 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.207341997 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.207977308 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.208815325 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.213056763 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.208373237 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.208208105 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.206577742 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.207451196 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.208417688 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.204535769 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.208185465 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.207478589 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.207648284 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.207657771 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.208680015 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.208170743 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.22020408 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.219798206 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.20968799 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.20858927 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.206783689 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.210884085 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.211950873 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.22018699 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.217202649 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.209120048 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.209174534 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.209413116 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.209367096 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.20717011 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.209560273 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.208118944 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.208032938 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.207591905 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.221445821 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.218081648 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.213214964 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.208877794 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.210233671 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.210139198 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.209806904 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.210091722 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.208987405 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.211480112 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.210723371 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.213743712 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.211233285 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.209718133 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.213842196 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.219713057 seconds)
  done (took 714.433641742 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.207622072 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.208317445 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.208525369 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.207850683 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.207845465 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.207786712 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.20796728 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.208281306 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.208293731 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.207437655 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.209732353 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.208369921 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.208499395 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.209661819 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.20890131 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.207878324 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.208757114 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.208333214 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.20889528 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.209416082 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.208626158 seconds)
  done (took 26.520764807 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.21067166 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.2097781 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.209079992 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.212185472 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.208901125 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.211703834 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.210234879 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.212425494 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.211720463 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.210036936 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.211848302 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.211723428 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.209245739 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.20960911 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.209689287 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.211653729 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.211840817 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.209402441 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.212045815 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.21040436 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.213570124 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.210570866 seconds)
  done (took 27.782657216 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.212263576 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.211648427 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.210521966 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.210429393 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.212235397 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.210036815 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.212544536 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.213390351 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.212903997 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.211998297 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.212061351 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.214228774 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.220544391 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.218729921 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.214826563 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.213829422 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.357804748 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.213701763 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.215181765 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.21371475 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.210946356 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.217420725 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.211420912 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.212180013 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.212165323 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.212807212 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.214375016 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.21377035 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.214222564 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.215987703 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.218497422 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.21393248 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.213480813 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.214667032 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.212582334 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.215314094 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.21904433 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.214693743 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.211050159 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.214328671 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.22480882 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.237596132 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.214027119 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.219810228 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.214953905 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.215680661 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.218312895 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.223209128 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.212138143 seconds)
  done (took 60.822727962 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.214892509 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.214680392 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.211646927 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.214197223 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.214201111 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.214322888 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.214963498 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.214259396 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.213320439 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.213080198 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.215805086 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.214613261 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.213946831 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.215327504 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.216377968 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.21357092 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.21344145 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.213735785 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.214366374 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.213840051 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.214578631 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.216591444 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.217251387 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.214826815 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.216753214 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.213922913 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.214502375 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.217323104 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.214218201 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.213880336 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.217527305 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.217237138 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.21826897 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.215809086 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.215885306 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.217648577 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.218057408 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.214840971 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.217327208 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.215499498 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.217728064 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.218471762 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.218274334 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.217557088 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.215162198 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.216096639 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.215633825 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.21545556 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.214997435 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.21800088 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.220501356 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.216607102 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.218666269 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.21687171 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.219833708 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.219784988 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.216588693 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.216492833 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.219683682 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.217357956 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.217568924 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.219745788 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.217734646 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.219278897 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.21948135 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.216890315 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.216814086 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.218740118 seconds)
  done (took 83.852106223 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.219120332 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.220223434 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.21927551 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.218905631 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.219817316 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.220663565 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.219715164 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.220125201 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.219623071 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.220536831 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.218278457 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.220399093 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.218662512 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.219150064 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.219662282 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.219174139 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.219569216 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.220161105 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.219433728 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.217874537 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.219857683 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.219071545 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.219194753 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.220287134 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.219916306 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.219828402 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.219696485 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.220101687 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.220038458 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.220582183 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.220581773 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.219991625 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.220388185 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.220311029 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.221106128 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.218447228 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.220424201 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.220615214 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.220500713 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.219634833 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.220758418 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.220584449 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.220869827 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.220056151 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.219875564 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.219891699 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.220244761 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.220435865 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.221104229 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.220451088 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.221343315 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.220058314 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.220155167 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.220857038 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.22060238 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.222342579 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.221024067 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.220887634 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.21972695 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.220917636 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.221711179 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.222128001 seconds)
  done (took 76.801250732 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.221526753 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.221368414 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.220502613 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.218950733 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.221330401 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.220060976 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.222171353 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.221727544 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.221737012 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.222269511 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.221924274 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.21923607 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.219704965 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.222101077 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.2191366 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.219718081 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.220450678 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.219889127 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.222071916 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.219595287 seconds)
  done (took 25.569760512 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.220153136 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.223316845 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.221313155 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.219657998 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.222860521 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.220409868 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.22283741 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.222923416 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.220031903 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.222856852 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.223266138 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.223094671 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.220676679 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.220119858 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.223057851 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.220043268 seconds)
  done (took 20.701490856 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.220502349 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.223195085 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.222462085 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.222524734 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.22062864 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.220370817 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.223533761 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.220307267 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.22131951 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.22543686 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.224224599 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.223711386 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.223280434 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.223114473 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.220987619 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.224225793 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.222256387 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.221364009 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.223522555 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.223721381 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.222582036 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.222330321 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.223820089 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.225569121 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.22239853 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.222429939 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.222587816 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.22223389 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.22156334 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.225398246 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.222490903 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.221518488 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.222009068 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.222916719 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.22615564 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.222355527 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.225785608 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.225332008 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.225811261 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.22434709 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.224009252 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.222960857 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.224809972 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.225637376 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.222556979 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.225541839 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.223768989 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.223821455 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.223864639 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.222526465 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.225930203 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.225367023 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.226854099 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.227939073 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.225753926 seconds)
  done (took 68.448112239 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.227270495 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.226054313 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.222548364 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.226774239 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.225925764 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.22341623 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.226077731 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.224070659 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.224418333 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.226289127 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.225579625 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.225684578 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.223181022 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.226826416 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.225344317 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.226663434 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.22461413 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.225459987 seconds)
  done (took 23.214162578 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.225242076 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.224257571 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.227250701 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.223814522 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.224720363 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.227572531 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.224561167 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.22670977 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.227394746 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.225487307 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.225249754 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.227583669 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.228266618 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.227911148 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.225438669 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.224527219 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.227454726 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.228007581 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.224960769 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.224416006 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.227314653 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.22754431 seconds)
  done (took 28.135072501 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.2253175 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.226376114 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.24348923 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.271625568 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.259704873 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.225958486 seconds)
  done (took 8.611851441 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.228031051 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.229395829 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.226161296 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.228937761 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.228535493 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.226197335 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.225361867 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.225878599 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.229246089 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.226044876 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.226253265 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.229409749 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.22888534 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.226365146 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.229041353 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.229086203 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.226361528 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.22688423 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.227340679 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.229342128 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.226631114 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.228567599 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.226580476 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.22716885 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.227133142 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.227811523 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.22973367 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.227416324 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.228022309 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.230278466 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.229626097 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.227143856 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.229765428 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.228407093 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.231193901 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.23016582 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.227991466 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.230117762 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.230790591 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.228343707 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.231532779 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.230010204 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.230792543 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.228717213 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.230700659 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.228541038 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.228010083 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.228548887 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.22940939 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.230261689 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.232086127 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.228630805 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.230179932 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.231397882 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.229689405 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.23086545 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.228892521 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.227988395 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.231790477 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.228645997 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.228564664 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.230680187 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.229613539 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.229023984 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.230984042 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.228432307 seconds)
  done (took 82.262070826 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.227989481 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.229052248 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.229220481 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.231999053 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.229019693 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.22972993 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.229566945 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.228876773 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.228860919 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.229224888 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.232074026 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.23067026 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.229808587 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.229342297 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.229761685 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.230210328 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.229496861 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.229566952 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.230099461 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.232686927 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.230223988 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.229880566 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.230351769 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.230735086 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.230470391 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.23296068 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.230453323 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.230798845 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.231385657 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.230451747 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.23252981 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.230537737 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.230673414 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.230416483 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.230505714 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.231309729 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.23088449 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.231197635 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.230894523 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.232786554 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.231954653 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.23416099 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.231204251 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.233183453 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.231887889 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.231869138 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.231293996 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.232220938 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.231805179 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.230843213 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.232280757 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.232515951 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.232964518 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.231817835 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.231891149 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.231255976 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.23226006 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.232121071 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.232141531 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.234431404 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.23278548 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.231434883 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.234614931 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.232489476 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.232862018 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.232462733 seconds)
  done (took 82.421958809 seconds)
done (took 1666.203553909 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.263868837 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.251397267 seconds)
  done (took 13.680577544 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.398314106 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.349916283 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.231946407 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.250870471 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.233353637 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.24571371 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.249430508 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.233912542 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.232823473 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.232896188 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.232460999 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.422844917 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.267631043 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.234092832 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.233097659 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.327239193 seconds)
  done (took 41.549704263 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.263180095 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.240619629 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.364676807 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.257356396 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.262701766 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.444353666 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.300400937 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.237668656 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.432764197 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.282313519 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 3.012084107 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.263728736 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.237040127 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.493720478 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.257931003 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.444909885 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.51664279 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 3.016766625 seconds)
  done (took 29.496470646 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.770107782 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.261158758 seconds)
  done (took 9.19865624 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.274597355 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.277188972 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.259898081 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.271286874 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.285735682 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.311997406 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.249212659 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.251991201 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.283464136 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.297312688 seconds)
  done (took 63.938334825 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.259866747 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.239010021 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.239099803 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.239032168 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.230853015 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.2299389 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.237737781 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.235930849 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.545704328 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.38559328 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.255252723 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.244893023 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.238071838 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.239983267 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.235713316 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.276884245 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.390429731 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.237927525 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.236170501 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.244386904 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.239261046 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.332205116 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.28392714 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.237482535 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.384788391 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.55314724 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.245852428 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.244950275 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.371126424 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.23864679 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.240310227 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.238853352 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.24106042 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.831064782 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.717453888 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.248412048 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.281476402 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.248735081 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.238160141 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.368521015 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.240996099 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.247506725 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.232056875 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.686061837 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.403141741 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.363930609 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.719379563 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.24549087 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.240919328 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.308789718 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.241040353 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.242147628 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.271913565 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.043761615 seconds)
  done (took 107.884154969 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.258686958 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.723151708 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.406149449 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.256003485 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.158399653 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.100779905 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.238939408 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.579949492 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.257556625 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.233072954 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.594625328 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.80791116 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.245739136 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.282782249 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.768301494 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.270694557 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.234008118 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.091393847 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.238054704 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.234356653 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.675644362 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.253301524 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.235995403 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.409656506 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.27670332 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.741309901 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.98138126 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.838736289 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.244288351 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.233879274 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.767032307 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.250125534 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.271577113 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.2337632 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.528534736 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.658187293 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.63783732 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.24040172 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.257566518 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.236399303 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.261484159 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.760947761 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.630327356 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.253558727 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.234252244 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.745914363 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.235378283 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.241290503 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.241542005 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.44815361 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.153201001 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.235379462 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.89245577 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.236312764 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.502340006 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.326428904 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.296910126 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.771230816 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.235568828 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.398737674 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.268571822 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.236465731 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.241592712 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.235365755 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.238862161 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.629521189 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.512930254 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.238624292 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.628771498 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.761157767 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.241035153 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.845028206 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.098469256 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.260112087 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.27470374 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.23618862 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.877810572 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.791192895 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.2838371 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.236919597 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.614326167 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.237990977 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.57848173 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.254108683 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.237891595 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.687125868 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.263660059 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.28096793 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.236548022 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.255194821 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 4.011715725 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.238335454 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.550324972 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.299604152 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.237628106 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.23799457 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.267803286 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.238572578 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.238734744 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.238824558 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.830384434 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.245440078 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.557577061 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.260660786 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.241787161 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.254947713 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.241136654 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.238307849 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.47154517 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.809756512 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.239040929 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.240418192 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.238272912 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.256758775 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.37686795 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.244726395 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.600716862 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.242583733 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.236889707 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.240886522 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.143494765 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.281060375 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.238069075 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.238624336 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.087253729 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.448799663 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.259849423 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.240485948 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.239451613 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.273913836 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.774286518 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.240386148 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.309555976 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.239669543 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.000818739 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.268072714 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.264765049 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.828941141 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.246951019 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.239376455 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.263209231 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.238938211 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.559384276 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.543191778 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.343107405 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.242866547 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.240611593 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.99692379 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.256576574 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.383571143 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.260239718 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.240574923 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.440879042 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.357372825 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.239367634 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.795303715 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.242072052 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.465540827 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.240867457 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.587544958 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.781762365 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.241843653 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.247304635 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.012738272 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.939300126 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.896512499 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.245976458 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.602549503 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.249819529 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.720404786 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.24172028 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.240763541 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.829943672 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.244555257 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.241749971 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.24108759 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.24126264 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.3068428 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.420564521 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.970726641 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.244269607 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.74825787 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.30244308 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.245540758 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.249672938 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.245169086 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.595637544 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.301718689 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.244998256 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.275969315 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.242833171 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.245133925 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.763300991 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.142088074 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.247897035 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.399792787 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.941247437 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.247317414 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.242911713 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.97732279 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.447013011 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.796910957 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.249822337 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.606053245 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.251809802 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.28474058 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.102182695 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.263131772 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.802802191 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.246477606 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.24237187 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.917860567 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.249313641 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.31244931 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.243066767 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.243326701 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.848152924 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.249759822 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.247274471 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.908033456 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.250196707 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.503578496 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.244592022 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.281893907 seconds)
  done (took 1095.061791755 seconds)
done (took 1361.973658855 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.244768095 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.251812287 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.237221406 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.250878823 seconds)
  done (took 26.166864604 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.256570141 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.250712774 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.25320819 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.250553569 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.254333922 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.250794053 seconds)
  done (took 8.699385787 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.46337579 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.250516873 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.252460326 seconds)
  done (took 19.150198783 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.503746533 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.683989289 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.677379246 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.764349805 seconds)
  done (took 10.812877598 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.252929553 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.253464745 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.252628412 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.255440729 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.258674069 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.259035711 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.255504933 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.255800677 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.258199095 seconds)
  done (took 12.482731267 seconds)
  (6/6) benchmarking "26942"...
  done (took 5.80319415 seconds)
done (took 84.296048201 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.311224551 seconds)
    (2/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.959784165 seconds)
    (3/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.007279474 seconds)
    (4/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.693426371 seconds)
    (5/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.261081225 seconds)
    (6/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 4.473471223 seconds)
    (7/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.382731143 seconds)
    (8/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.24357986 seconds)
    (9/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.23178525 seconds)
    (10/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.520361714 seconds)
    (11/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.654225735 seconds)
    (12/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.289762406 seconds)
    (13/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.382449841 seconds)
    (14/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.273722044 seconds)
    (15/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.330251872 seconds)
    (16/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.129550832 seconds)
    (17/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.91161078 seconds)
    (18/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.248367044 seconds)
    (19/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.247533815 seconds)
    (20/309) benchmarking ("sort", Float32, false)...
    done (took 5.313344594 seconds)
    (21/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.2529299 seconds)
    (22/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.267182664 seconds)
    (23/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.621619726 seconds)
    (24/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.942731696 seconds)
    (25/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.366627044 seconds)
    (26/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.274458197 seconds)
    (27/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.313035943 seconds)
    (28/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.758308634 seconds)
    (29/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.685119211 seconds)
    (30/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.899672089 seconds)
    (31/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.275183652 seconds)
    (32/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.353450083 seconds)
    (33/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.273755656 seconds)
    (34/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.012094315 seconds)
    (35/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.355527897 seconds)
    (36/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.926753943 seconds)
    (37/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.140649466 seconds)
    (38/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 4.21977295 seconds)
    (39/309) benchmarking ("sort", Float64, false)...
    done (took 5.654193624 seconds)
    (40/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.27589083 seconds)
    (41/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.316080898 seconds)
    (42/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.254612044 seconds)
    (43/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.361825278 seconds)
    (44/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.930251103 seconds)
    (45/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.529602612 seconds)
    (46/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.770103075 seconds)
    (47/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.891490721 seconds)
    (48/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.242078784 seconds)
    (49/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 4.476063047 seconds)
    (50/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.16301797 seconds)
    (51/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.248563791 seconds)
    (52/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.430115861 seconds)
    (53/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.75066898 seconds)
    (54/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.248727312 seconds)
    (55/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.559865762 seconds)
    (56/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.248901229 seconds)
    (57/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.321754578 seconds)
    (58/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.273522362 seconds)
    (59/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.271074681 seconds)
    (60/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.697217823 seconds)
    (61/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.485014545 seconds)
    (62/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.587327612 seconds)
    (63/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.277080869 seconds)
    (64/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.248121024 seconds)
    (65/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.280951231 seconds)
    (66/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.263164188 seconds)
    (67/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.338701971 seconds)
    (68/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.449427078 seconds)
    (69/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.263779077 seconds)
    (70/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.378401001 seconds)
    (71/309) benchmarking ("sort", Int64, false)...
    done (took 5.530843137 seconds)
    (72/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.235047416 seconds)
    (73/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.321389521 seconds)
    (74/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 3.05854578 seconds)
    (75/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.288864057 seconds)
    (76/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.001276756 seconds)
    (77/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.135315988 seconds)
    (78/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.268115793 seconds)
    (79/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.357537412 seconds)
    (80/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.261419002 seconds)
    (81/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.20602342 seconds)
    (82/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.298659648 seconds)
    (83/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.609828908 seconds)
    (84/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.251755776 seconds)
    (85/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.256559712 seconds)
    (86/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.338028339 seconds)
    (87/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 4.113656782 seconds)
    (88/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.622866508 seconds)
    (89/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.265579325 seconds)
    (90/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.265245107 seconds)
    (91/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.69363039 seconds)
    (92/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.394619433 seconds)
    (93/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.589526316 seconds)
    (94/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 3.045595964 seconds)
    (95/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.873704962 seconds)
    (96/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.251111435 seconds)
    (97/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 3.122398835 seconds)
    (98/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.463768265 seconds)
    (99/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.269087956 seconds)
    (100/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.652778637 seconds)
    (101/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.68841992 seconds)
    (102/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.254803293 seconds)
    (103/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.302741462 seconds)
    (104/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.338160695 seconds)
    (105/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.163114573 seconds)
    (106/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.419341707 seconds)
    (107/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.276457551 seconds)
    (108/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 3.136594209 seconds)
    (109/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.257139983 seconds)
    (110/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.767307944 seconds)
    (111/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.486267955 seconds)
    (112/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.296478402 seconds)
    (113/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.251600504 seconds)
    (114/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.994994997 seconds)
    (115/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.279431067 seconds)
    (116/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.251610175 seconds)
    (117/309) benchmarking ("sort", Bool, false)...
    done (took 1.812325344 seconds)
    (118/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.281608702 seconds)
    (119/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.592525723 seconds)
    (120/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.522919041 seconds)
    (121/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.859445743 seconds)
    (122/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.27937104 seconds)
    (123/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.122600656 seconds)
    (124/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.512215242 seconds)
    (125/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.254172578 seconds)
    (126/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.934215155 seconds)
    (127/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.377221765 seconds)
    (128/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.236908472 seconds)
    (129/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.265181791 seconds)
    (130/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.354358512 seconds)
    (131/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.2536063 seconds)
    (132/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.602473418 seconds)
    (133/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.160275936 seconds)
    (134/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.280136251 seconds)
    (135/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.606063427 seconds)
    (136/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.540945153 seconds)
    (137/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.342937307 seconds)
    (138/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.340783884 seconds)
    (139/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.313308222 seconds)
    (140/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.989544347 seconds)
    (141/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.293148879 seconds)
    (142/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.278305049 seconds)
    (143/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.327258817 seconds)
    (144/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.815362196 seconds)
    (145/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.228081192 seconds)
    (146/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.322210743 seconds)
    (147/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.91926827 seconds)
    (148/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.654428424 seconds)
    (149/309) benchmarking ("sort", BigInt, false)...
    done (took 6.269608678 seconds)
    (150/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.257892226 seconds)
    (151/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.251090338 seconds)
    (152/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.238471845 seconds)
    (153/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.986962945 seconds)
    (154/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.36239538 seconds)
    (155/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.690924909 seconds)
    (156/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.280381361 seconds)
    (157/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.270137737 seconds)
    (158/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.341912454 seconds)
    (159/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.243352684 seconds)
    (160/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.87875491 seconds)
    (161/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.227073626 seconds)
    (162/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.176164235 seconds)
    (163/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.908260803 seconds)
    (164/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.921689 seconds)
    (165/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.274486016 seconds)
    (166/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.683160432 seconds)
    (167/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.377847806 seconds)
    (168/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 4.046096853 seconds)
    (169/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 6.031874109 seconds)
    (170/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.9577879 seconds)
    (171/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.34536766 seconds)
    (172/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.479495274 seconds)
    (173/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.674136901 seconds)
    (174/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.254676388 seconds)
    (175/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.365141095 seconds)
    (176/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.315486829 seconds)
    (177/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.283181032 seconds)
    (178/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.266069157 seconds)
    (179/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.817583401 seconds)
    (180/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.261058245 seconds)
    (181/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.287483108 seconds)
    (182/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.253928979 seconds)
    (183/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.453979498 seconds)
    (184/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.29870668 seconds)
    (185/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.767217733 seconds)
    (186/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.255918397 seconds)
    (187/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 4.024708477 seconds)
    (188/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.660004306 seconds)
    (189/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 4.095687627 seconds)
    (190/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.360087237 seconds)
    (191/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.964415542 seconds)
    (192/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.287116475 seconds)
    (193/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.958792525 seconds)
    (194/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.311880215 seconds)
    (195/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.262914822 seconds)
    (196/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.674718818 seconds)
    (197/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 6.256174538 seconds)
    (198/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.338251193 seconds)
    (199/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.250718771 seconds)
    (200/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.566152137 seconds)
    (201/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.243108787 seconds)
    (202/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 4.089190579 seconds)
    (203/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.50862576 seconds)
    (204/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.314667713 seconds)
    (205/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.342442961 seconds)
    (206/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.14829299 seconds)
    (207/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.651598973 seconds)
    (208/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.045746118 seconds)
    (209/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.259451393 seconds)
    (210/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.292604904 seconds)
    (211/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.616052597 seconds)
    (212/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.978203826 seconds)
    (213/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.680711922 seconds)
    (214/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.12880428 seconds)
    (215/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.924030619 seconds)
    (216/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.461154544 seconds)
    (217/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.258734798 seconds)
    (218/309) benchmarking ("sort", Int8, false)...
    done (took 4.381228281 seconds)
    (219/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.836953713 seconds)
    (220/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.257372743 seconds)
    (221/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.28770462 seconds)
    (222/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 4.072376513 seconds)
    (223/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.284963832 seconds)
    (224/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.434503366 seconds)
    (225/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.721675485 seconds)
    (226/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.300987178 seconds)
    (227/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.258283913 seconds)
    (228/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.956302722 seconds)
    (229/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.294606529 seconds)
    (230/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.365202034 seconds)
    (231/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.298472643 seconds)
    (232/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.456300524 seconds)
    (233/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.290434118 seconds)
    (234/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.941730243 seconds)
    (235/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.477603963 seconds)
    (236/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.277803892 seconds)
    (237/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.940156571 seconds)
    (238/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.263208916 seconds)
    (239/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.78018042 seconds)
    (240/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.182632343 seconds)
    (241/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.242830102 seconds)
    (242/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.263923791 seconds)
    (243/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.796788886 seconds)
    (244/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.37102276 seconds)
    (245/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.323339103 seconds)
    (246/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.383113854 seconds)
    (247/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.140151223 seconds)
    (248/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.302379542 seconds)
    (249/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.107051932 seconds)
    (250/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.248061592 seconds)
    (251/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.245627854 seconds)
    (252/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.894613582 seconds)
    (253/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.244500873 seconds)
    (254/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.494368989 seconds)
    (255/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.561563778 seconds)
    (256/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.613190439 seconds)
    (257/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.406676366 seconds)
    (258/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.796539833 seconds)
    (259/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.288215859 seconds)
    (260/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.38317628 seconds)
    (261/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.847042982 seconds)
    (262/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.657370479 seconds)
    (263/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.344594275 seconds)
    (264/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.959590554 seconds)
    (265/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.833290017 seconds)
    (266/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.284828375 seconds)
    (267/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.289041983 seconds)
    (268/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 3.080702697 seconds)
    (269/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.941240607 seconds)
    (270/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.683337691 seconds)
    (271/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.971185828 seconds)
    (272/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.732504569 seconds)
    (273/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.273997189 seconds)
    (274/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.356821651 seconds)
    (275/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.266980263 seconds)
    (276/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.259791546 seconds)
    (277/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.512730401 seconds)
    (278/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.157213807 seconds)
    (279/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.351849285 seconds)
    (280/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.338294815 seconds)
    (281/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.343083722 seconds)
    (282/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.286054905 seconds)
    (283/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.13270483 seconds)
    (284/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.189859666 seconds)
    (285/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.247034997 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.383765714 seconds)
    (287/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.796405609 seconds)
    (288/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.773003986 seconds)
    (289/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.96456308 seconds)
    (290/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.304742357 seconds)
    (291/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.246897368 seconds)
    (292/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.274192806 seconds)
    (293/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.070216379 seconds)
    (294/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.221262881 seconds)
    (295/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.410105104 seconds)
    (296/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.944946221 seconds)
    (297/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.464042918 seconds)
    (298/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 4.092476453 seconds)
    (299/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.304380243 seconds)
    (300/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.247203693 seconds)
    (301/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.763886291 seconds)
    (302/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.888435541 seconds)
    (303/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 6.140131362 seconds)
    (304/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.293635212 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.285697977 seconds)
    (306/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.87122023 seconds)
    (307/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.440231688 seconds)
    (308/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.321307969 seconds)
    (309/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.161131168 seconds)
  done (took 922.866265058 seconds)
done (took 924.046049974 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.297002937 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.289864369 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.27368204 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.294593353 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.38706583 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.3073094 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.285655345 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.27507446 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.322498841 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.324004555 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.2724443 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.30623546 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.276107739 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.27485153 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.273718526 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.289648478 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.448861051 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.275432403 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.29175962 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.283495501 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.291966675 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.273458568 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.324288486 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.306281144 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.278091773 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.279165322 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.280738251 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.295443004 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.386825761 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.277836979 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.278474133 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.289252791 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.450689684 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.27451981 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.270582997 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.296584891 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.287262824 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.285384095 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.278577779 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.30759805 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.915155113 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.276662992 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.278231837 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.275572172 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.278602326 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.280743814 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.278987709 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.282866471 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.290647896 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.290912731 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.908180026 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.292214586 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.28097904 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.277726818 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.287748768 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.277894104 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.278644869 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.292811583 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.296824085 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.292771199 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.443616837 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.281794465 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.278784523 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.293431276 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.285343825 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.949008524 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.273374461 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.28269242 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.919218924 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.282083868 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.948232702 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.286101315 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.279355337 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.29304602 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.309185911 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.455977288 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.273558604 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.278582628 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.28623662 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.276755194 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.288562289 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.291792225 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.28373903 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.279175008 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.293397107 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.309739432 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.288493528 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.280147671 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.288222533 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.299973393 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.28607431 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.291625411 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.282929317 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.275322671 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.290713585 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.283193947 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.282267058 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.28210992 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.28576567 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.290823121 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.92025164 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.297310858 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.275177456 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.276569655 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.280929885 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.292895887 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.920252917 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.281432187 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.30228172 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.325983182 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.281154989 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.448756579 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.2830271 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.296795096 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.289711125 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.283812432 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.274315874 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.449221599 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.919881448 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.295691417 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.282800206 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.279755196 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.296532403 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.282575269 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.276599889 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.461527678 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.283155566 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.295560431 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.402130391 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.292274001 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.312596691 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.280144981 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.284549588 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.30875752 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.296979079 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.313254633 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.284302981 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.297426058 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.297154805 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.278782057 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.293293818 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.292152779 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.282994012 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.28832647 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.276373141 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.313545812 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.293701659 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.29496282 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.302960666 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.402193472 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.279531711 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.45198358 seconds)
done (took 219.808803767 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.339175302 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.274334261 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.362152319 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.278605534 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.381325955 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.379426768 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.275331319 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.276200297 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.276841281 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.656070939 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.276241624 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.277524985 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.278160318 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.275403078 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.360856787 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.278247332 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.27606476 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.617751562 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.27674554 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.346721991 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.275669606 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.274721523 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.278709754 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.656651767 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.276804924 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.277400096 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.350606257 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.280238406 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.624997303 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.27492126 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.277499803 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.622294675 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.367972442 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.295794146 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.287639827 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.286278066 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.382228245 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.297651336 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.358719637 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.359218734 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.36241682 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.317689552 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.272044278 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.278927632 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.285346891 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.279816979 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.276238365 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.306265819 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.279757935 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.276592228 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.618748054 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.289814489 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.279587524 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.278227343 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.277582918 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.309047051 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.279341939 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.281036098 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.370125529 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.280882456 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.340016545 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.659668851 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.657789494 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.279750936 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.281376465 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.278605461 seconds)
  done (took 144.773519347 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.348431789 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.354391636 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.405165583 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.285204578 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.330021356 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.408556885 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.286723571 seconds)
  done (took 10.627223097 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.283655778 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.281766251 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.328993174 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.330463657 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.280758147 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.427866171 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.281699623 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.292667346 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.27948709 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.333887016 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.284018884 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.28126992 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.288449329 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.277405138 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.329888804 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.293346811 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.396054912 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.282239913 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.282048853 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.433302035 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.279553435 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.287986767 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.333621474 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.291977168 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.283635276 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.287057578 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.909969079 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.282872437 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.280829664 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.281502013 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.279401257 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.320783049 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.283253804 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.284639356 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.28045976 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.435780423 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.283244611 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.281655 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.283715988 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.28201834 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.283327687 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.28300849 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.284616214 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.279205679 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.281927505 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.305428758 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.283231096 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.284676503 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.283687499 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.283908234 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.333790189 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.284165459 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.282396568 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.280252819 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.339052717 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.29119508 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.283683336 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.281426579 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.284789651 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.281634401 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.434331958 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.33030675 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.285894292 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.329951556 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.283983365 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.285599053 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.284098073 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.285434975 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.348554126 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.284817868 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.330996547 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.282191757 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.438572998 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.307058402 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.287769132 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.287236494 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.286043653 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.286403883 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.280328374 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.290920575 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.282828355 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.285168068 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.290337832 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.282252245 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.28380793 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.415288672 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.412587009 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.28375674 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.298110487 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.292003398 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.283455824 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.33855261 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.286311291 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.281381534 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.336675845 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.400838463 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.338817027 seconds)
  done (took 148.434194308 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.29066091 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.292832295 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.286033993 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.302450945 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.286989365 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.286057319 seconds)
  done (took 8.958203072 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.289121834 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.289261879 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.29078327 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.288090686 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.289013936 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.287495532 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.286896607 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.28856704 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.292693266 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.287492407 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.28775089 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.288904247 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.288277219 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.286861372 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.287121012 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.287028018 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.285595429 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.284226994 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.287861322 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.286998152 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.391777906 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.286492641 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.287121223 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.28910328 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.292476594 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.286935126 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.295917283 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.28824346 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.28691066 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.29525805 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.291415771 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.28868594 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.289059495 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.293666261 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.291692826 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.28785878 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.292489612 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.291200513 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.285674046 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.290326901 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.293094243 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.286535449 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.288526417 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.291999411 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.289461487 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.293533765 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.296329735 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.294863813 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.288296938 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.291402763 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.291557809 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.288714551 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.289434652 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.291162012 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.289903944 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.292498213 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.296465501 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.289143178 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.28874495 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.290987576 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.291607696 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.290705917 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.291659053 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.29400177 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.287423303 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.293099337 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.290883652 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.294819114 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.290829189 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.290775033 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.291868292 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.287306849 seconds)
  done (took 95.197837073 seconds)
done (took 409.195368994 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.616147511 seconds)
  done (took 7.834817699 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.476145538 seconds)
  done (took 7.696923704 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 25.095644455 seconds)
  done (took 26.319942537 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.324093337 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.424657801 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.320722359 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.290528119 seconds)
  done (took 26.57919912 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.561753066 seconds)
  done (took 7.779748267 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.282553661 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.28766543 seconds)
  done (took 13.790880721 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.410254652 seconds)
  done (took 7.628365326 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.367850323 seconds)
  done (took 7.591631932 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.285200044 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.287326328 seconds)
  done (took 13.806566903 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.278014124 seconds)
  done (took 7.494924239 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.676739789 seconds)
  done (took 8.896720331 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.282903593 seconds)
  done (took 7.504040059 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.359840088 seconds)
  done (took 7.578544897 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 9.71315691 seconds)
  done (took 10.93153402 seconds)
done (took 162.651231532 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.28221534 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.290456169 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.289499396 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.289965989 seconds)
  done (took 26.371465137 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.325379379 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.326012893 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.32832303 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.827276677 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.328819507 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.325088534 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.318309951 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.318363985 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.337652327 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.327610387 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.327265881 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.328394678 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.325345965 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.318647911 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.326343826 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.327989458 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.33714859 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.327798298 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.318243053 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.32907626 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.292688562 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.33702526 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.328680864 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.293518793 seconds)
  done (took 33.502751926 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.49011672 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.362863877 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.445192475 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.344005155 seconds)
  done (took 6.861928486 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.344286601 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.345007413 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.35803334 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.396557423 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.424822659 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.357419148 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.317121671 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.315184471 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.300400644 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.346368481 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.420411601 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.362098132 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.441845549 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.294072935 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.48894761 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.29447615 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.292906016 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.345289281 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.397220682 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.410486001 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.294530341 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.34508746 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.348742137 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.36291004 seconds)
  done (took 33.825756196 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.292595244 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.301277097 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.29985073 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.292999988 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.294687593 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.293720445 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.299473658 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.294809295 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.314248439 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.294666287 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.292849068 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.293266053 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.292669076 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.295596614 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.293609557 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.306063578 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.308114728 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.294565404 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.297780394 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.298895872 seconds)
  done (took 27.173199504 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.287209367 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.195728367 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.63751503 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.542822968 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.287488187 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.288384503 seconds)
  done (took 27.462342206 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.377620388 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.54382442 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.29699318 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.731890791 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.82887198 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.300211229 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.294695538 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.585898648 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.968484315 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.971228133 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.36609619 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.378565277 seconds)
  done (took 19.869345584 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.287887325 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.293463688 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.312169856 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.310862198 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.361888591 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.30328296 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.301225458 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.288728301 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.369290676 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.372897789 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.304027031 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.363250564 seconds)
  done (took 37.096310554 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.376888841 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.345948975 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.572323884 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.155686792 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.053435848 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.502871091 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.252722876 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.750768007 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.300479784 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.56469536 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.290622486 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.388573928 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.548445085 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.304580808 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.296010893 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.422479595 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.518939513 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.859961347 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.294546307 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.862443098 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.323450946 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.304826101 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.065425099 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.327433087 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.503977211 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.275069491 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.552664878 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.069176308 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.624461406 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.303555094 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.302565187 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.292952562 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.564817622 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.042315733 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.391794063 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.303516102 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.175480461 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.847226937 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.280494276 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.962944504 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.305427446 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.299579575 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.304814464 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.294075868 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.227706092 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.29705143 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.762655477 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.304346032 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.004332838 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.29364407 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.304815527 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.387916577 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.296829071 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.867447354 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.614625604 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.30021969 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.290642259 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.298921471 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.86164306 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.586242845 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.307104105 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.232112339 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.789298836 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.872408129 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.01194849 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.395486375 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.29736676 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.298249207 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.239562464 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.88327621 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.316773575 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.493494695 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.318986819 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.036637299 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.144446417 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.29692418 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.242297138 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.92592874 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.300410208 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.234491528 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.524405428 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.071915623 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.235368879 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.242187058 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.229876751 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.121264054 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.305419563 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.827668757 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.303583257 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.756216448 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.311892223 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.313598432 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.319995384 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.520104848 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.179337279 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.295429349 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.303380112 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.486313664 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.317079747 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.757899562 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.247099102 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.299963584 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.553995762 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.508259346 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.308241616 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.478197537 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.531267052 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.301782245 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.316509002 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.309746922 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.311249244 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.975781063 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.314886162 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.535030265 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.318581153 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.074669278 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.160927522 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.314705982 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.402694923 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.302854546 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.581197979 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.176138686 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.458254581 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.364774968 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.30158968 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.296825939 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.984349643 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.156641652 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.190609754 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.299010466 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.298352902 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.314551719 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.298570277 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.294943249 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.30569362 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.3137631 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.081454997 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.522909761 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.298445333 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.579530697 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.23221088 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.49745211 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.388576419 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.523507141 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.728366896 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.301065108 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.560839594 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.298317515 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.313945626 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.314954603 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.318508615 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.394359047 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.32132665 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.301677947 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.561673988 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.302149186 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.30299282 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.004778681 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.081746089 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.299035191 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.304920917 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.255672716 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.988532446 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.342329047 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.302763357 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.192729316 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.313815252 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.367568722 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.306464763 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.31019327 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.497696039 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.293703549 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.309358149 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.304701849 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.529659191 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.310910865 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.985202863 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.385319662 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.527154125 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.97712385 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.313505162 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.235321233 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.011434114 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 3.993010966 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.301186847 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.4894401 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.299536738 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.307811781 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.311394928 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.970417911 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.973298577 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.303611937 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.911271081 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.312603543 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.312761403 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.308191879 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.300796115 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.492875706 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.62897837 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.32405372 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.319366446 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.44502103 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.315394566 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.236051279 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.81855015 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.306773151 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.302180045 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.075995849 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.336819877 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.912330541 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.821041571 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.564355411 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.151759702 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.319523041 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.038864461 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.342035117 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.312341157 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.314297139 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.318693739 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.315307371 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.317525229 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.313068225 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.967522608 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.838822142 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.928931448 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.158170613 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.925448623 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.432016633 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.32169349 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.190178406 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.767760226 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.240306755 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.963450151 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.528074396 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.772945955 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.305597614 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.533184229 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.747961971 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.232102385 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.318834025 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.534777013 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.355379514 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.309607247 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.321179847 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.516756153 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.337580309 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.315448641 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.249709101 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.590853613 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.562061255 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.30577349 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.391514195 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.770854322 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.326888175 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.090688992 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.302947561 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.875985181 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.5135821 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.858665435 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.734571272 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.307882845 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.312436297 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.819290059 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.308401979 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.833794007 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.007004467 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.309913595 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.537901945 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.249598554 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.315772007 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.316249214 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.304969197 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 4.01937562 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.325715303 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.564417608 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.314834268 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.239881979 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.308141617 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.921918603 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.161964944 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.31230013 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.304579528 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.181823038 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.313449056 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.653540132 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.307324439 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.528534553 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.317913106 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.246241631 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.240451247 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 3.998669572 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.314696988 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.348097682 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.893590581 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.747526307 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.665929151 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.337578607 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.158898055 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.56539757 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.321869983 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.978317237 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.534696304 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.26338602 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.334341657 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.408411762 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.316497935 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.297592559 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.189513642 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.542703157 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.252169462 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.531691355 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.606555207 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.218840475 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.30637995 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.524339807 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.19554972 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.321757658 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.606293886 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.023432218 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.323288258 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.185709721 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.334521684 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.322502942 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.407640316 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.801802714 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.320612211 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.378339403 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.319617035 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.318206278 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.319775059 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.511457034 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.319603183 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.315320856 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.321993829 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.401846417 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.593513858 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.520608279 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.087463857 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.986312204 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.176495198 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.983400752 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.322115628 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.30838539 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.309813274 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.254621369 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.45854168 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.838897098 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.582882819 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.497241024 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.894345307 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.336884817 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.30984277 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.325223407 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.526470008 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.584337054 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.185876177 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.320966196 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.978402178 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.468243891 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.320841831 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.521059326 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.900847084 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.963528303 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.439435426 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.326145371 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.777261934 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.589382433 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.400761034 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.310713915 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.905515984 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.333833218 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.917980535 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.320781911 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.308951246 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.464195949 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.320749288 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.06900146 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.32605564 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.469572983 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.083044513 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.038767275 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.574248441 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.914046147 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.321632014 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.989457538 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.15387841 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.582370594 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.382156919 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.322610373 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.431950853 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.457011849 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.325677901 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.210032035 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.311780702 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.161716207 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.021717328 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.320662576 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.989111793 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.57739052 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.307935889 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.326721589 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.335510154 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.322026315 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.537148411 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.147894299 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.538256428 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.321794768 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.322480888 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.885776855 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.988505591 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.325876804 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.255392895 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.317811129 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.604720858 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.554449782 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.337392259 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.76434068 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.022898913 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.953509593 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.289563121 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.334995096 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.329998369 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.157917203 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.993729928 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.444920027 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.893074255 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.975129572 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.328396302 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.592370019 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.318907266 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.312509803 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.594187492 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.318220371 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.318078909 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.329200464 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.98860774 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.210725646 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.338336782 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.99358428 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.255564371 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.541525207 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.034477604 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.267113109 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.316076782 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.532710415 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.320712077 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.498025495 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.324956701 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.324169353 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.320000917 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.071107201 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.690627809 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.320213268 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.311027513 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.299981189 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.321901439 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.326072472 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.575815739 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.320158093 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.991722957 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.665091873 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.574879878 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.31485125 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.303918814 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.319605363 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.316801629 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.069752643 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.323859032 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.005154379 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.976775136 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.325060114 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.331612406 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.319707154 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.532859038 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.528119529 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.333290222 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.334656364 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.321812456 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.336279035 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.222182353 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.162589352 seconds)
  done (took 1597.074709459 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.355278761 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.331622816 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.335714053 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.419770174 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.383158192 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.430241546 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.43018634 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.451206158 seconds)
  done (took 52.386004141 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.329769286 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.479847423 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.358595629 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.321821947 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.324880363 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.330237984 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.84210202 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.332413513 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.324576978 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.32584729 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.318397414 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.314671448 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.062012767 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.327177842 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.332285159 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.320491628 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.324147691 seconds)
  done (took 65.224756689 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.322689781 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.423227284 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.384852559 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.326184564 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.102491558 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.325124346 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.195950413 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.352929015 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.325670738 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.509574938 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 6.977574007 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.324263118 seconds)
  done (took 80.822469443 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.324433443 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.325254214 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.325385547 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.32526705 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.324731421 seconds)
  done (took 7.876448741 seconds)
done (took 2016.765192926 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.566546354 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.155731919 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.098523912 seconds)
  done (took 5.505608756 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.464555579 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.5148045 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.665805935 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.663028381 seconds)
  done (took 7.559972998 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.592746625 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.699830421 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.505508694 seconds)
  done (took 6.04834606 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 3.011153579 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.334806327 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.449725685 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.318670797 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.322441513 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.322388351 seconds)
  done (took 20.215736708 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.322354074 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.325613572 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.323490802 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.325534778 seconds)
  done (took 6.550239359 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.302440222 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.034287503 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.304398691 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.323171301 seconds)
  done (took 18.215040127 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.069539236 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.080418513 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.066211142 seconds)
  done (took 7.46717957 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.336641981 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.161855118 seconds)
  done (took 9.749814163 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.645812877 seconds)
  done (took 2.89744398 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.453873134 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.653132544 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.561039361 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.453049206 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.549964955 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.960057366 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 3.312036497 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.796708517 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.437227579 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.972021801 seconds)
  done (took 30.402442943 seconds)
done (took 128.222733579 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.76698073 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.338569173 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.52395941 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.739318174 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.710527149 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.523037682 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.595592158 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.706618636 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.243081938 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.233801449 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.739657085 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.740484555 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.765094992 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.340565508 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.765907435 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.334170071 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.608693839 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.797888491 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.318792162 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.344341429 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.596008406 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.371648868 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.572556651 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.391569917 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.593889525 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.475205762 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.956887579 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.335152864 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.322919872 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.973996616 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.475816714 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.319530632 seconds)
  done (took 198.775795204 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.328770074 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.319052101 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.32083375 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.330356102 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.329644211 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.320858817 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.338165308 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.338208045 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.333368896 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.319157656 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.31900815 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.336884777 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.320329007 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.320555944 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.338169143 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.336500956 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.333110532 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.320086452 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.319855921 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.321181677 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.321077733 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.321128413 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.319475327 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.335529483 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.33687414 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.32158895 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.321147035 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.321081041 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.320859329 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.323704026 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.320101512 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.336109343 seconds)
  done (took 203.696922739 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.325824281 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.322117161 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.321226508 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.343699338 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.348477784 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.338772328 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.323880294 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.322096633 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.335660417 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.328821058 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.321717868 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.321669115 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.322226597 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.336788094 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.334344373 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.333057537 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.323783217 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.321790479 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.330806156 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.323325499 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.324129468 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.323954288 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.322367521 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.330858732 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.32156546 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.322354423 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.322311877 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.327738558 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.322010334 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.322422228 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.324134555 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.33782545 seconds)
  done (took 203.737375065 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.521264998 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.332060138 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.331893119 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.268500804 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.332377846 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.330762155 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.328502032 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.528872705 seconds)
  done (took 14.231255914 seconds)
done (took 621.691331271 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.901308321 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.51711719 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.541764633 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.35264156 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.32177605 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.382228598 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.353975572 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.546313039 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.317966588 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.55219929 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.725507028 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.3498492 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.874241656 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.350586955 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.63044029 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.458742182 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.272951672 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.397446936 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.702903966 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.030268291 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.639860865 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.962187392 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.545064956 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.326557871 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.880907506 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.967783893 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.245541575 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.276693595 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.353423151 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.707618955 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.327521453 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.478089368 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.424923999 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.40316675 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.457811574 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.439783698 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.507558922 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.406018665 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.547335684 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.714030552 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.022231455 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.140675368 seconds)
  done (took 94.61285177 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.320622871 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.320289723 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.320361227 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.32155457 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.322751223 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.321952177 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.320869963 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.320264809 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.32155631 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.319067645 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.320888075 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.323009036 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.321990275 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.322668241 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.321395587 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.321438455 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.321332368 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.323281203 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.320696758 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.321292943 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.32266752 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.320281525 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.321194253 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.320744675 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.321508676 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.32160495 seconds)
  done (took 35.617347655 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.336001812 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.609838533 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.795593623 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.341332084 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.334963617 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.339432856 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.426941276 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.336579416 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.338430581 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.338598795 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.515599365 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.339241857 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.375636205 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.824792479 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.337816771 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.337127228 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.336333496 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.334773356 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.618356461 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.345684105 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.430253844 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.336942739 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.427045436 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.34573895 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.338486476 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.336050164 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.34112121 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.881411651 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.337909349 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.51799794 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.311050148 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.429829527 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.861571198 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.806996536 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.3060042 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.343452207 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.338390618 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.521584793 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.339418012 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.336945246 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.427998323 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.338034356 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.804579945 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.016023722 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.356470804 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.338354899 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.904525746 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.523743958 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.645863749 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.350197869 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.830183669 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.34033893 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.340135457 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.338177462 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.647638334 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.349050906 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.33705938 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.962621514 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.361956251 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.429861008 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.338788157 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.338385532 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.625368811 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.337739248 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.613490036 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.340390516 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.346360701 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.338454617 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.808549948 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.341182766 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.034596428 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.35659569 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.338146618 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.519113899 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.614998841 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.939528876 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.342876601 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.629063089 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.876981626 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.429353701 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.342448326 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.871569394 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.433169876 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.342931913 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.342010023 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.342260584 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.340213038 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.387127416 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.428340182 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.957077506 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.029218435 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.982788182 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.451424481 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.347606129 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.339975543 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.964351815 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.36113401 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.340905053 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.800633507 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.037318496 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.359194992 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.348890221 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.019859473 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.361957897 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.432434693 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.346039709 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.814177124 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.341396209 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.388012769 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.341645348 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.348445945 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.343716464 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.433152258 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.34504694 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.341857964 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.012094551 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.547253209 seconds)
  done (took 178.435939209 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.345894326 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.334894419 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.34086632 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.333253957 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.333621653 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.340271561 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.333879094 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.336359937 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.339642704 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.333868685 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.334265599 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.33456858 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.335354504 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.335961548 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.345372795 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.342016889 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.947553143 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.336978425 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.348099339 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.335199156 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.175136065 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.341549406 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.336167639 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.352063025 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.335182558 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.337477413 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.344088454 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.338994467 seconds)
  done (took 152.196045783 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.343826282 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.019002095 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.343781559 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.499351845 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.369454511 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.342091683 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.497059348 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.412960968 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.347379957 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.341148972 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.341093653 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.704037079 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.345156178 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.957923323 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.578330523 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.506239943 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.957374535 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.345768514 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.342466774 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.341665181 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.501269068 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.355552623 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.704662412 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.019507733 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.345171959 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.019735342 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.332464368 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.343765065 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.34292989 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.021266178 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.342491114 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.706656408 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.434171558 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.415615232 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.027928006 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.960701502 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.961274685 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.519042929 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.343896033 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.341811157 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.342249194 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.332942459 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.076203674 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.351250385 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.344136733 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.068232769 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.369953569 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.347355154 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.353922981 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.344097794 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.415710864 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.42099546 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.739174566 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.083836006 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.441071506 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.36535763 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.500626948 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.761215437 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.348203153 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.95974762 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.331839727 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.079378646 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.353829857 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.333930434 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.344930042 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.350019931 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.522602564 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.502551838 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.962116801 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.347018128 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.962130751 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.524835136 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.343584459 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.345370715 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.347343799 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.077561154 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.968745221 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.525547598 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.504911004 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.58655802 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.340596177 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.344778485 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.335266724 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.438165064 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.346359781 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.08050605 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.969432211 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.348210923 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.348712038 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.348250709 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.348269504 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.565718155 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.088374598 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.4451355 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.958434867 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.750949262 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.746302853 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.349591842 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.416887646 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.346872511 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.740735466 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.354582416 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.414888822 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.82994818 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.741586255 seconds)
  done (took 164.528325137 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.633656861 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.692796088 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.446810597 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.476020616 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.032158517 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.962598649 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.763355276 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.489862943 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.470314645 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.614944233 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.748752588 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.442541209 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.544099319 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.432755539 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.167271128 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.428884437 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.449708623 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.479497835 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.460223645 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.495673398 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.083062347 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.680468709 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.546752478 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.544551647 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.455647887 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.201254075 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.965019968 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.939072569 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.550961543 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.881246201 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.945791673 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.585799276 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.477173071 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.14514963 seconds)
  done (took 67.509195769 seconds)
done (took 694.155588169 seconds)
SAVING RESULT...
DONE!
