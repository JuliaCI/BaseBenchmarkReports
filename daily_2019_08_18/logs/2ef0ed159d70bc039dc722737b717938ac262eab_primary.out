cset: moving following pidspec: 20375
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.353996187 seconds)
loading group "string"... done (took 0.532698674 seconds)
loading group "linalg"... done (took 7.213619768 seconds)
loading group "parallel"... done (took 0.159353578 seconds)
loading group "find"... done (took 1.104782098 seconds)
loading group "tuple"... done (took 1.714464801 seconds)
loading group "dates"... done (took 1.187673912 seconds)
loading group "micro"... done (took 0.223956313 seconds)
loading group "io"... done (took 0.985276078 seconds)
loading group "scalar"... done (took 37.500835015 seconds)
loading group "sparse"... done (took 11.102095628 seconds)
loading group "broadcast"... done (took 0.913540092 seconds)
loading group "union"... done (took 12.412796701 seconds)
loading group "simd"... done (took 4.172632848 seconds)
loading group "random"... done (took 8.567406674 seconds)
loading group "problem"... done (took 1.851003643 seconds)
loading group "array"... done (took 19.486879607 seconds)
loading group "misc"... done (took 1.630556304 seconds)
loading group "sort"... done (took 3.061067402 seconds)
loading group "collection"... done (took 16.762387475 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.480287143 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.121544677 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.113147385 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.117344143 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.139217493 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.114819003 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.121891456 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.082929457 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.849870041 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.142692621 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.118045224 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.407671608 seconds)
done (took 5.028593794 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.173679954 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.081982979 seconds)
    (2/2) benchmarking "String"...
    done (took 0.080594377 seconds)
  done (took 1.336949865 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.064725044 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.119617561 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.065401053 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.065448536 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.066523043 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.06549377 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.065109814 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.065384281 seconds)
  done (took 1.687502306 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.071866583 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.067788409 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.067772324 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.066685718 seconds)
  done (took 1.449847165 seconds)
done (took 5.903694503 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.758504265 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.203432139 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.181741104 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.393848059 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.125884471 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.152279713 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.644075634 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.315463237 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.182064142 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.080852962 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.101667684 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.315015247 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.106128537 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.632607642 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.075401989 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.088964366 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.137321582 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.432808624 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.066253626 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.081059863 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.08801995 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.127388717 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.084133028 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.074070888 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.141309397 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.067170886 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.128487684 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.079356351 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.065464472 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.205473288 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.171408875 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.638913219 seconds)
  done (took 10.159431455 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.094825918 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.095936688 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.067913476 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.135437979 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.094735014 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.068530455 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.070059998 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.066656176 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.085467435 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.126191994 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.08715029 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.099985542 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.064425883 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.067674583 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.083286038 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.202891249 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.078795985 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.080245038 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.069246928 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.073965649 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.11490271 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.077295016 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.077035205 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.076598774 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.128877042 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.178740154 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.095154061 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.09658209 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.066382684 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.079689714 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.114217469 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.124505183 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.06485918 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.065477786 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.122916454 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.093441107 seconds)
  done (took 4.606885778 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.932435491 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.138208054 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.08856617 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.165488296 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.066533748 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.105054486 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.064881587 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.082707479 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.197203655 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.353009953 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.567119099 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.110178136 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.099327752 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.066991912 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.06743157 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.065990822 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.335206743 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.118881744 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.111051651 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.081823324 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.072117626 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.068142876 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.341136053 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.066551262 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.06506028 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.066931054 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.058018137 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.110451572 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067029211 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.918409075 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.124873586 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066155539 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.10025072 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.168511092 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.086405265 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.265560631 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.066038036 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.065279037 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.148148502 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.073234994 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.065139838 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.083181277 seconds)
    (42/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.083657267 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.103393244 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.1120089 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.068093174 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.065939868 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.15990562 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.065553192 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.082133892 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.981683228 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.150907345 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.074985096 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.066068632 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.242693824 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.085374963 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.066220623 seconds)
    (57/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.063707796 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.063513522 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.176600483 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.131916882 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.066459121 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.065858978 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.064765759 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.068293503 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.351326681 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.066202167 seconds)
    (67/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.089339556 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.066815453 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.076638464 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.030992012 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.068743571 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.066104768 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.072135251 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071764458 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.084313497 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.065209679 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.073940819 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.064971153 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.065044115 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.067100257 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.083118744 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.354430629 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.066045349 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.067330979 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.063861134 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.084812818 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.0960833 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.068518742 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.068808009 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099367353 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.171195967 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.067017695 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.101057495 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066681542 seconds)
    (95/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.063723649 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.083381742 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.068143955 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.112520706 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.065586045 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.114319738 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.065275653 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.095901569 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.069371023 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.098935758 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.080324714 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067712928 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.396984607 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.064737812 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.06419942 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.067201272 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.06748584 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.067182722 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.068100404 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.078603467 seconds)
  done (took 21.192264239 seconds)
done (took 38.066459439 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.274108224 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.073697863 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.074389788 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.073977697 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.074158073 seconds)
  done (took 1.834129431 seconds)
done (took 3.081556708 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.11796142 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.097765509 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.063804457 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.09389873 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063634638 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.098385926 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.097787636 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.080099801 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.098258333 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.063427383 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.095032777 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.063402829 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063678819 seconds)
  done (took 2.36417587 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.081851824 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.082718699 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.068959512 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081455153 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063402049 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.080883885 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.07966497 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.087172619 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.079669705 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.071167267 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.06263085 seconds)
  done (took 2.080992235 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.080892133 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.082494797 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.068570109 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.080260931 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.062466817 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.080293983 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.079739287 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.085258357 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080404962 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.07420279 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064110725 seconds)
  done (took 2.074811654 seconds)
done (took 7.757389982 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.075804843 seconds)
  done (took 1.304737487 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.581762593 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.062551385 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.080583803 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.110707989 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.181602187 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.117644033 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.275791212 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.085852876 seconds)
  done (took 8.90470724 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.087294485 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.068396334 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.082224149 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.070694444 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.068391954 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.07049256 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.070061452 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.070558875 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.070609324 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.068877248 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.070081453 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.069445013 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.071580154 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.07092555 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.068510772 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.071275499 seconds)
  done (took 2.445794222 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.090990635 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.089126321 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.073658489 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.07364922 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.071033138 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.07161737 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.073304348 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.07342333 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.070223433 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.070977376 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.073910443 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.072985932 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.070772951 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.064173322 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.073228317 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.074810342 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.069728235 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.073018217 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.073860109 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.074046765 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.073657829 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.063798355 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.070533714 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.072533489 seconds)
  done (took 3.092967623 seconds)
done (took 16.985285514 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.110733117 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.071037202 seconds)
  done (took 1.416372698 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.080607197 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.082057162 seconds)
  done (took 1.402115902 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.081017708 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.065667621 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.088506252 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.076468307 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.065581211 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.065057161 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.085768175 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.065263184 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.065103121 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.065218012 seconds)
  done (took 1.963763535 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.067423286 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.07719337 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.070021099 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.079798232 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.072407695 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.063187266 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.071414598 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.06670323 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.076285315 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.06186906 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.069711484 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.081040853 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.069973962 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.082364779 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.071117199 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.06702885 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.070255121 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.066483767 seconds)
  done (took 2.526433166 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.064781202 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.065504475 seconds)
  done (took 1.375934667 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.066688401 seconds)
    (2/7) benchmarking "second"...
    done (took 0.062494973 seconds)
    (3/7) benchmarking "month"...
    done (took 0.066023733 seconds)
    (4/7) benchmarking "year"...
    done (took 0.065591591 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.062771647 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.06185533 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.062749866 seconds)
  done (took 1.689406796 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.381979612 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.109416751 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.292772152 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.071875925 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.080551443 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.247474175 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.064623698 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.069455949 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.069641114 seconds)
  done (took 2.671873686 seconds)
done (took 14.295106483 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.078047074 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.0842103 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.093901187 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.341821616 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.090389446 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.065278502 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.112810429 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.18653375 seconds)
done (took 2.313712478 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.210066233 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.603599602 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.377735536 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.193495885 seconds)
  done (took 2.426178776 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.321485467 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.085853987 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.058507912 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.065607916 seconds)
  done (took 1.789309622 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.065298364 seconds)
    (2/2) benchmarking "read"...
    done (took 0.067707604 seconds)
  done (took 1.387627703 seconds)
done (took 7.071608352 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065412079 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.064554694 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.081463596 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.061884409 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.065327383 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.06227042 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.062877652 seconds)
    (8/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.064941829 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.064831946 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.064779907 seconds)
    (11/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.067115694 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.064714357 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.064925129 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064906603 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06257063 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062294028 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064524727 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.063150035 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065026457 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.062213394 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.062709046 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.064567725 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.062325035 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.063012791 seconds)
  done (took 2.841351752 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.082349565 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.066217451 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.070454023 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.070445632 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.068826311 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.070065429 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.070407346 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.065284378 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.070741258 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.067074296 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068531709 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.068641474 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.066997763 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.069196134 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066906531 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.069165473 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.070293015 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066943125 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067620053 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.069057833 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.069988255 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065660819 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.068622782 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070316435 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.068514171 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.068204293 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.067028885 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.065696794 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.069823027 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.068829793 seconds)
  done (took 3.332097683 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.068395067 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.062491374 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.063423269 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.070064329 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.062301215 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.064020604 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.062314965 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.062987601 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.063457681 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.062517806 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.063933074 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.062524591 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.062605102 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.063509805 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.063400834 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.066385513 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.077800958 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.062998271 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.062996504 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.064044026 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.065819975 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.062894005 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.062536421 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.062540434 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.062475107 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.062116891 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.063221164 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.062624634 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.063062408 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.062564796 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.06536394 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.066289992 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.062491984 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.069294485 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.066217716 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.062551528 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.066248763 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.062285015 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.063291697 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.062272581 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.062370039 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.062728444 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.063050337 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.069499113 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.062741151 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.063933281 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.062650555 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.172665923 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.062979416 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.065248829 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.062030476 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.06223815 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.063993204 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.063499864 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.066109605 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.061775268 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.06317761 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.061929178 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.06317007 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.062181586 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.061798083 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.061824215 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.064475886 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.062981646 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.076432119 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.069068574 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.062425337 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.064314852 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.06366826 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.065168036 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.064271448 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.075348903 seconds)
  done (took 6.00299273 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.08942333 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.085656238 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.063981179 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.0641964 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.060817471 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.063079438 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.067542945 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063448937 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064233118 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.068490693 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063089618 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.063972862 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064011179 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.075703616 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063110206 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.064551982 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.068847219 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061445984 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.062845152 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.066156279 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063505437 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.066313622 seconds)
  done (took 2.751794373 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.152527031 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.069274539 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.104471533 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.071664141 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.066284929 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.071610388 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.068889303 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.06873601 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069057214 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067389896 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067056089 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068511152 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.066683084 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066819088 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066982188 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.067019888 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068949419 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.067539209 seconds)
  done (took 2.620035742 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.075848212 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.065380696 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.085238567 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065901016 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.064888802 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.067191619 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069482578 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073326445 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.067412305 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.065149265 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.073259197 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06733357 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.066906727 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064908517 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067321896 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.065077792 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.067128404 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06468949 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073236354 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069093884 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.06982776 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.072712515 seconds)
  done (took 2.792684125 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078483826 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.066934056 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.081191198 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.068236112 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061252757 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063371038 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.068910258 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.064994401 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.069436383 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.066449018 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064831874 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063243653 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.068696123 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.064827355 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.068145347 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064984369 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.066619516 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.064914351 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066376859 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.060787104 seconds)
  done (took 2.616614489 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.085609417 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.066463241 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.066865705 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075059244 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.066546463 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.066404909 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.074136258 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.066417968 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.066074633 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.086063298 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.066587786 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.066305077 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.074304696 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071267867 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.066683383 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074313753 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.074039188 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.073974574 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066366952 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.066255421 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.085692859 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.066130527 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.074205399 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.066121814 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.066507081 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.066424723 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.066669372 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.070887547 seconds)
  done (took 3.25797001 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065103618 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.064784144 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.062429693 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.062475373 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.062657143 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.062485198 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.062340719 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.062568674 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.064787654 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.062671029 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.064691564 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.064965818 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.065189735 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.064647099 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.064964943 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.065212307 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06472807 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.062778274 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.062794881 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062402684 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.065154436 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065008344 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.064900417 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.062522052 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062580331 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.064661517 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.062294712 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.062383665 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.064701726 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.062400524 seconds)
  done (took 3.189223222 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.074580981 seconds)
    (2/2) benchmarking "in"...
    done (took 0.072587122 seconds)
  done (took 1.42637441 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.062355163 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.078852642 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.062190089 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.068946358 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.068938839 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.065632877 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.072393921 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069115428 seconds)
  done (took 1.824147669 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.079861444 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.076735563 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.067235641 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.078902241 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.075475786 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.081664962 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.130364429 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.066107037 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.071910902 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.06344799 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.078823612 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.064291359 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.071047405 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065984679 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.070797131 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071477497 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.063431906 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.070909393 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.067742394 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.063736462 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.06655042 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073811817 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067693922 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.061078835 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.066633662 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.087424813 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.076298352 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.065143231 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.068748211 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.07284116 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.070893454 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.059747555 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.065023773 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.065645391 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.063477385 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.0745578 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.080050682 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.067839532 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.073935695 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066139946 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.075828082 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.060404698 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.069811383 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.071605503 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.074987805 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.065240797 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.065754299 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.06039104 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.063206022 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.067208565 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.060785611 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065976286 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.060090737 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074111755 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.068723084 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075553502 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.064207657 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.066795664 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.067816698 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.068566798 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.07190286 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.067191083 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067606414 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.064982822 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071848036 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.069825265 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.074383464 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.06069806 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.059662266 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.06346976 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.075361176 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.087595059 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.071947531 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.066271444 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066528977 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.063427195 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.068578545 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.066689178 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.070556752 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.071427576 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.06555054 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070688702 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072263628 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065484471 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.067494944 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.072976655 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.063555818 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.06787073 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.063088305 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081379432 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.064070876 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.063319106 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.063327064 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.075277077 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.06853263 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.065236294 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.063475795 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072975694 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.060021881 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.065683245 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066151189 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066298375 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.075547997 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.07003338 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070354091 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.074012957 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.072173284 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065517144 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.067744817 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.061984531 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.065671249 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.064044846 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.07112988 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.058493615 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.066876054 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.064827834 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.064552159 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.071838799 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.062241044 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.063965608 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071320031 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.069399873 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.062443714 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.061732426 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.0670042 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.063569037 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066827792 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.071490845 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.06269394 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.059101616 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.059489702 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.067347271 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.063489818 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.067723114 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.068167804 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.067067222 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.058601921 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.062467714 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.068939247 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.073290644 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.064342573 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.065445452 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.070210424 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.065645312 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.063258213 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.070402337 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.066270252 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.063465982 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.069291275 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.064889444 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.05932052 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.066877305 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.066594541 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.062528381 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.067524396 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066562948 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.066154563 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.064776778 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.062598856 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.070678629 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.064342129 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.062979461 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.063775915 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.062894775 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.07404376 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.06571125 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.059638499 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.061261131 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.071857187 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.062279443 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.063417348 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.06348869 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.065968149 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.064670391 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.06219036 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.064102648 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.066626 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.073562265 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.067738069 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.064614954 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.069139993 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.075203705 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.064414212 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.066827699 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.063787105 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.064849328 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.064861852 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.071157407 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.068552893 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.06810327 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.066274845 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.059944814 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.068496097 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.070829198 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.062424167 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.061628908 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.061949472 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.06629227 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.067673854 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.066204407 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.063640668 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.062088621 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.063955388 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.065328989 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.066060016 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.063070496 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.062331702 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.069284349 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.062374704 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.069470486 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.063726654 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.07346681 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.06672081 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.059339589 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066378511 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.062474028 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.069313712 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.059044472 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.061399947 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.063229216 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.064065453 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.062707149 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.065338358 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.05851362 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.070649957 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.070421321 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.064275939 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.063577531 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.063770237 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.069572919 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.065402663 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067574357 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.067288833 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.068855566 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073193854 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.062656834 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.066258715 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.072930062 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.064142636 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.292013164 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.072543623 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.066220519 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.066919073 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.06699845 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.06618825 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071605836 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.076969853 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.074514547 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.061566125 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.07049765 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.066299963 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.067113549 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.062723502 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.072242005 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.07088688 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.06861691 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.07453569 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.068681051 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.067616319 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.070806943 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.066623246 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.067352593 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.067810358 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070488143 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.067874358 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.068723168 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.066666166 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.069897501 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.065938033 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.064990822 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.069353065 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.066517691 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.067371737 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072055036 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.066013114 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066654992 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.0694422 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.067376828 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067399835 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.066445676 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.066596836 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069681719 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.066900618 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.066937829 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.068873399 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.062010937 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.07393024 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.06629119 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074339527 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.067425643 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.063467974 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.073861272 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.068797855 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.07198001 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.066847084 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.066966852 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.067713502 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.065780856 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.069256074 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.072366087 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.064482018 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.077267328 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073726099 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.066620317 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.068941976 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.067099016 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.067584061 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.065243703 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.067032892 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.06676625 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.066734635 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.066127946 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.070732322 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.069043967 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.066979499 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067408701 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.066999629 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.066337602 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.066760128 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.061376804 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.066189623 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.066202302 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.065687856 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075331284 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.067182681 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.066163556 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.065957058 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067444361 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.064943304 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.062931141 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.073883267 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.075380003 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.066581963 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.072920866 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.064922746 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.067283479 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.076222433 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.060349192 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.064300265 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.06400322 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.063993964 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073012549 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.066729956 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.075052597 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.065823533 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.065608004 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.063312912 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.066771122 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.064727928 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.060329484 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.063371942 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069368089 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.06483445 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065211619 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.065936399 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.06806306 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066315892 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.074354478 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.064561061 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.066258584 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.0653456 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.062685192 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.064705118 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.064742178 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.202706452 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.066806698 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.064351132 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.063265066 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.065304147 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.067301287 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.067773114 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.066129327 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.067687319 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075361315 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065186809 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.06900337 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069147265 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.061448795 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.069457269 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.066198302 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.065708233 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.065571973 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.069624911 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069278122 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.067481122 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.074859243 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.066251883 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.06707901 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066321631 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.063545657 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.065605601 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.066000491 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.066185679 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.065706608 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.067435449 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.073857173 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.064181487 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.068964683 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066395069 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.066289163 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.072817752 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.06760995 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.069397909 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.073390673 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.066428765 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.068269322 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.074052029 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.070223857 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069770236 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067699131 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.068268833 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072733015 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.065944414 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.072688779 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.067279234 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.066395308 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.068412628 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.06417055 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065810229 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.065118529 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064682733 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.072242572 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.066937904 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.065849776 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.06517911 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.063908268 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.066349065 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.068711983 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074006141 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.067883354 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.068873112 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.06158393 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.062839643 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067586583 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.063937637 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.067907507 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.068397487 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071458206 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.068856373 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.066557907 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.06503519 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.075026016 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071822471 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.069697607 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.06393892 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.069325461 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.066724184 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.067799523 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.066987692 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.065995241 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066780419 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.069546455 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.067423404 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.065400245 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.07287662 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.069075041 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066770164 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.067115904 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.066529803 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.06628813 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.06077049 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.066347222 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.067877641 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.070689652 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.067529427 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.065588338 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.075865135 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.063394894 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.065972608 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068291528 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064653666 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.06989967 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.0610614 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.067241032 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.066524269 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066277938 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.060605958 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.064912308 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.063825042 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.067893652 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.065071672 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.060299896 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.075410119 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.074129242 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.068003046 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064188877 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.06409361 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.060876457 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.060909726 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.200041833 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067630465 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.068357413 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.075333833 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.064717536 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.065242641 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.06134419 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.065954828 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.068590531 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.069498927 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.063133656 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.060968205 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.065641359 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.06902325 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.071708537 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065223323 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.066342314 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069053791 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.068868176 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.064501452 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070339081 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.06355692 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.069869404 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.07839496 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.066464086 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.066619032 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.072217349 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073789483 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.066974476 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.061590607 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.067002978 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.068697583 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.067147686 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.066909523 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.06666437 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.080887006 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.068944242 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.064806587 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.065524969 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.069041534 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.065506807 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.074132956 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067371271 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.066344805 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.070570959 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.068045093 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.074919855 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069084227 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073807724 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.069352263 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.068644041 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.065366452 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066859878 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.064020666 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.064968962 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.06645584 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.067264406 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.071289442 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.074140798 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.064902477 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.076408214 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.074987284 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.067407208 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.062486196 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.065693127 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.065227184 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.060846231 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.066464575 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.063779759 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.064082219 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.063808827 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.064293455 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.066699723 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.070643721 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.066491978 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.066846103 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.065413123 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.059941862 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.067768817 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.067815407 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.06633478 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.062155945 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.065368902 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.065964128 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.069167035 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068846106 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.063414152 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.067314581 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.066880072 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066524123 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.060985455 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.071919927 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064936604 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.067810781 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.064960745 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066251922 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.066593079 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.069209183 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070279168 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066745167 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.067611846 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.069874436 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.06770805 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.063176627 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.063031265 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.071080077 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.063650061 seconds)
  done (took 42.011139996 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.099663166 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.063006107 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.061966205 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.061613819 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073211011 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.06264347 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.062042063 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.063083172 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.062895778 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.065152305 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.061930361 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062088069 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.070819976 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.077971953 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073774818 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066638149 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061967401 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.063020193 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.061669743 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062792725 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.070288887 seconds)
  done (took 2.81746078 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.073469083 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.069564083 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.07198516 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.075134059 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066754197 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.070039786 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.072216394 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070177123 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.075363833 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066681611 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.075154899 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070257505 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.066413611 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.066724722 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075424199 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070280602 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.075377873 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.067384217 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.0704372 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.071898281 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070332851 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.072078151 seconds)
  done (took 2.940119596 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.066776969 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.066447125 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.06757649 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.061295823 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.065449557 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.061434226 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.06891788 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.063588355 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.068850212 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.064869448 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.064737856 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.064892507 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.067218021 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.060979049 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.066012299 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.063687298 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.107293593 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.069258497 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.065433772 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.066498738 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.061318352 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.067440177 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.061104281 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.061993632 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.064847716 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.069178328 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.066581722 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.064037931 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.0651474 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.06535271 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.065469769 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.063167521 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.067339023 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.066746243 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.064883797 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.064730382 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.065277567 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.065246197 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.060896105 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.063660411 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.066375501 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.062005527 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.065724492 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.066585094 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.063405815 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.063135279 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.067062154 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.064627402 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.060326974 seconds)
  done (took 4.605694113 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.079193309 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.108762439 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.068492258 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.087756913 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.07943584 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.074522685 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.069016358 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.089079315 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.063286635 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.064046162 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.080741821 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.079190862 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.06521886 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.069793134 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.071587716 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065176479 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066391848 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064061097 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.069301386 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.06491996 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.069234393 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.071500283 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.079223401 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.078338102 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.068846541 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064218541 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.064422181 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.069544033 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.07794315 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.069564031 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.069340897 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.070357271 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.079722401 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.070441595 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.06448798 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.067298277 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.080552042 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.065133586 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.067638546 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.062540811 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.067637266 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.068661274 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.071153356 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.08075779 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.06534698 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.069620793 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.064977855 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.061947909 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.077255126 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.067377421 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.072238328 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.078920973 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.068604846 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.065293207 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.069028839 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.079287705 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.064943157 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.063222549 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.067494784 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.076590124 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.062637678 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.068339073 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.078037236 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.066739254 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.071933551 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.078702508 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.07015519 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.06886123 seconds)
  done (took 6.372115438 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.074537218 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.071898474 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.07966364 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.079314797 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.07145848 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.072363426 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.071696721 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.071530209 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.071301454 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.076334268 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.071764962 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.092365387 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.066961086 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.074076521 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.072399716 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.071985882 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.071812871 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.071580789 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.071587251 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.071381576 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.071906998 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.079305105 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.072213811 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.079312012 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.097438048 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.066990631 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.071105637 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.071774289 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079330254 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.071254477 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.078821513 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.071674581 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.071369762 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.079598902 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.079144182 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.071124644 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.065166877 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071254838 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.071720236 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.07143434 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.066898719 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.078803241 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.070832953 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.066471427 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.071556837 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.070698958 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.078620819 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.078274925 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.073858925 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.075830796 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.07100947 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.079038973 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.070697046 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.071379808 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.078811613 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.103501102 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.078439409 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.07897829 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.071048268 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.079005715 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.078816891 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.085562989 seconds)
  done (took 6.047701501 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082494285 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.073571778 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.076326404 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.061520801 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.063443517 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.069203849 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.063755439 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.063724992 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.073711177 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.073662063 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07598249 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068636148 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071887858 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.075988599 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069055302 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071833661 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069035833 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.068903454 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073682652 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.068951803 seconds)
  done (took 2.818542982 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.073990378 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.082153829 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.067045509 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.071980842 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.068302511 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.071233999 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.06792318 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068514242 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066368043 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068496373 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.075734331 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.075345291 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066264948 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.071361415 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.075186845 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.070898552 seconds)
  done (took 2.536862423 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.073938973 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.071809634 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.079193258 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.065603419 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.063891422 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.062042921 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.065046827 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.061299363 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.061948656 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.077351923 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.065272248 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.067703846 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.065550456 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.063960776 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.062280722 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.068262914 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.06178821 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.062961161 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.066038896 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.077845686 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.075783859 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.063657178 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.066151678 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.065264412 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.065212359 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.070247202 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.064440333 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.063117242 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.062362905 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.065778329 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.065767384 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.068856534 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.062441925 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.063006279 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.063776734 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.062445763 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.065004586 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.065240033 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.067578482 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.06522044 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.063113277 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.064616738 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.065125715 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.065886677 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.061407566 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.065281384 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.061808281 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.066877982 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.063066606 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.06524454 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.065277579 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.067559205 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.065970291 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.071767334 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.068150242 seconds)
  done (took 5.034933489 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078126017 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068536801 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061730991 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063481101 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.068822116 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.067483474 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.068781194 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.067125243 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067109035 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063449267 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.067471516 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.067688477 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066869717 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.068462091 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067118877 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068969007 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061449567 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.066819168 seconds)
  done (took 2.617551102 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.070604747 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065214593 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.071934661 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.06530038 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.065102909 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.067333894 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06173928 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.064095864 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064018087 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.06517898 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065544118 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.067470425 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063866595 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.067327228 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.065050236 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065681257 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.067319763 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063703072 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065374358 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061601203 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067514682 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063830691 seconds)
  done (took 2.84519561 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.071692485 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.091793318 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.137058518 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.083157514 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.080092324 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.077666725 seconds)
  done (took 1.943446333 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089660295 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078024777 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066114516 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087456772 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.0728455 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066503214 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06663135 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067316775 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075005998 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075194634 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066793321 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075294715 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075692675 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074402328 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072551708 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072148916 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066581201 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06644106 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.0656251 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082942985 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066503267 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074902619 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066852775 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066691393 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067027318 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074356001 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074942858 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075243207 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066591374 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075292083 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072184184 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066888255 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075538084 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075384235 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068950082 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075404237 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067035484 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.083295719 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072483734 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075244585 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068560814 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072979564 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075158398 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071998273 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074922076 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067131097 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071674527 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066543728 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066954844 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085355716 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072400921 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074069038 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072643425 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075036485 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075292737 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084696895 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075578998 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074394761 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072539834 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077386335 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074737152 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072017756 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074188594 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075132639 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072705704 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074349728 seconds)
  done (took 6.227418594 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.081061414 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.086038276 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067525762 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075842789 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074981909 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06758515 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067091275 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066966607 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.066952587 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067280702 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106425274 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067161853 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074615968 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075206266 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067186238 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066935721 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.066827986 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074446572 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.0671684 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085450825 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067034652 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074384282 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074475913 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074275239 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075318054 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072436917 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067196628 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.06688887 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.06683677 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066977238 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071980398 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067104092 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074849689 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.06630794 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074625469 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06736078 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066843751 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071738784 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066903632 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072452625 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074814437 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082865475 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066944801 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066692902 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075113962 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.06663744 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066881486 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066530466 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066675017 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066805527 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075275308 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075261779 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075155319 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074086108 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067085423 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066738533 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066898688 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066691238 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067186169 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072039725 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074390656 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066743378 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.084906046 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.066394881 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.066580304 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074486357 seconds)
  done (took 6.139684697 seconds)
done (took 128.86636249 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.188250684 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.168707616 seconds)
  done (took 1.756387662 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.067569947 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.095847728 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.076489998 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.127297673 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.066741725 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.098540613 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.098098647 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.077240385 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.065993374 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.066017117 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.066198558 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.067189692 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.130153541 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.066236018 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.065507289 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.067329103 seconds)
  done (took 2.715417885 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.096847617 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.156191502 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.098097615 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.064783972 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.096314573 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.072388047 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.064509208 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.074107324 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.070622019 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.064528006 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.072198694 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.069918962 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.064549317 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.069907135 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.070232094 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.072454694 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.064482945 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.072164388 seconds)
  done (took 2.830306274 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.098560027 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.090545803 seconds)
  done (took 1.60663686 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.158584552 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.105595081 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.149606557 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.343333651 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.165772697 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.230314957 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.13103058 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.128816392 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.119316298 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.123639249 seconds)
  done (took 3.068686898 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.096860595 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.148272997 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.253531352 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.114351481 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.071911982 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.093416022 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.115141307 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.076917003 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.080300445 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.079776582 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.079639899 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.075583784 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.098449157 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.072984599 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.073725689 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.075515641 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.101899471 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.072087278 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.073327304 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.076314296 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.098706462 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.065700885 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.07350327 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.072016573 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.077207807 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.077187657 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.06528288 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.065639459 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.076231657 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.073096295 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.076498841 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.09256247 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.076958653 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.106296549 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.070099754 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.107138624 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.076003849 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.073419502 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.073290347 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.073574657 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.07845212 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.07881668 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.072001127 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.075354266 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.065169558 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.076007553 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.065278091 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.064999971 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.077745892 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.066100902 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.077184017 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.076516279 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.105565603 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.065931192 seconds)
  done (took 5.987890186 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.100420192 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.104508712 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071273647 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.108510395 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.09713912 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071099799 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.100333059 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.090624385 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.101408437 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.092152026 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.087955963 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070501913 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.081585104 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.082891523 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.108054959 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.101420172 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.095308442 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070699641 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.100608533 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.101370407 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068419336 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.094341397 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.091282368 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.100412301 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.067399079 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070114082 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.067935634 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.070433262 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.076044776 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.077519154 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069824797 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.101061767 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.08381447 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.077417306 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067025766 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.067868177 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068332221 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.078247562 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.096593468 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.077992678 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.077013414 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067480799 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.067822448 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.071094645 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.090214424 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067406929 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.078485885 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.07944359 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.078304555 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069541824 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070297615 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.06798412 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069777345 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.079558784 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.076961157 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.079941664 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079153444 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068589324 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068295592 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.071817085 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079503258 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.078762526 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078630511 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.091989107 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.07847712 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068225814 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.07952895 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.085099228 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068078667 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.069935899 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068098265 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069617965 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069242683 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.077117539 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.07730281 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069546657 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.069242035 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067749841 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.078761132 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.07731151 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067441622 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.076096514 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.06646776 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068035707 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069370983 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069479602 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.076611691 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.078497168 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069732678 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068215654 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.06909819 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068207698 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.066617771 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.076157891 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.079226683 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.078146218 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.07858685 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.06994584 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.078295303 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.077534889 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069561986 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.078502636 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.067864586 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.199092808 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070261665 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.078488563 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.07799616 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.07947068 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070853753 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068404926 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.078406825 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.079999434 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.069197129 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.078315808 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080666236 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.079954381 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.068027148 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080657934 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068626719 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.079864976 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069223074 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079574732 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068731458 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.078344774 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069150117 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.06827845 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068463621 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.078979141 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070349734 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068971662 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.07020053 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069880232 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.079658491 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.082116563 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070713782 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.079871982 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.078150861 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070526077 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.078556326 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069740287 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.077840081 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070079783 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070339521 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067329517 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081862032 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068917069 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.068449748 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069723356 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.080607055 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069335799 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.079023848 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.077317325 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068063549 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081055538 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.080293173 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.077487219 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.080314635 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070485435 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068177707 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068657923 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.070229741 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.077212333 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.079172784 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071630403 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068642461 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.078226785 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.078449592 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.067477504 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.077073213 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.078191627 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.077665272 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068713326 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.070059097 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080108766 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.080203791 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.077630169 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.077510461 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.077521825 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068314032 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.07685644 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.077497365 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068203086 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083336738 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068636998 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.081868202 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.078570503 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076224828 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078100973 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.080504525 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.079579483 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.079376188 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.081803111 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067298424 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.06790339 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.078587879 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068200288 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.0695817 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.07775043 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.07007545 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069864626 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.082948825 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069090283 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.078810994 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.067021248 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.078183634 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.066903623 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069641609 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081881566 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067973776 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.201198215 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.079596162 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.070111854 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.078239482 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080860993 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.078534346 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068949831 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070221354 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.080764972 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.079052306 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068536551 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069537081 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070928913 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.078135106 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.077008732 seconds)
  done (took 18.777999863 seconds)
done (took 38.167536427 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.209997838 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.149988436 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.203288918 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.11743594 seconds)
  done (took 2.196521214 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.120914069 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.10167387 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.094489524 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.064832582 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.100671531 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.064669236 seconds)
  done (took 2.001968806 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.311855914 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.216464275 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.180986066 seconds)
  done (took 2.159449565 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.196473074 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.186526184 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.394317566 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.251208409 seconds)
  done (took 2.583961757 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.141914135 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.088949888 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.06652756 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.08266205 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.13330621 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.159476842 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.100410648 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.124704009 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.077581244 seconds)
  done (took 2.477547374 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.143682759 seconds)
done (took 13.016269951 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.258872185 seconds)
    (2/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.169550441 seconds)
    (3/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.097131529 seconds)
    (4/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.07327424 seconds)
    (5/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.191033377 seconds)
    (6/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.127766728 seconds)
    (7/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.172127854 seconds)
    (8/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.110283043 seconds)
    (9/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.167892163 seconds)
    (10/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.081419127 seconds)
    (11/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.216862513 seconds)
    (12/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.170467973 seconds)
    (13/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.178791742 seconds)
    (14/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.099055175 seconds)
    (15/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.12900338 seconds)
    (16/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.088480525 seconds)
    (17/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.076695597 seconds)
    (18/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.081537213 seconds)
    (19/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.072426255 seconds)
    (20/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.196021739 seconds)
    (21/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.18719707 seconds)
    (22/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.22134699 seconds)
    (23/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.074661196 seconds)
    (24/309) benchmarking ("sort", Float64, false)...
    done (took 0.124411667 seconds)
    (25/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.152671072 seconds)
    (26/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.09193965 seconds)
    (27/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.076807336 seconds)
    (28/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.073693784 seconds)
    (29/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.061494272 seconds)
    (30/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.198222151 seconds)
    (31/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.069768788 seconds)
    (32/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.086262386 seconds)
    (33/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.105710496 seconds)
    (34/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.099790615 seconds)
    (35/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.152912436 seconds)
    (36/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.097439494 seconds)
    (37/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.120184308 seconds)
    (38/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.070826134 seconds)
    (39/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.069250362 seconds)
    (40/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.196754328 seconds)
    (41/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.139444622 seconds)
    (42/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.076053077 seconds)
    (43/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.07594199 seconds)
    (44/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.094286762 seconds)
    (45/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.078908913 seconds)
    (46/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.182594003 seconds)
    (47/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.166122983 seconds)
    (48/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.064743218 seconds)
    (49/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.198478462 seconds)
    (50/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.073023632 seconds)
    (51/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.094527294 seconds)
    (52/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.072665444 seconds)
    (53/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.061154712 seconds)
    (54/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.071982833 seconds)
    (55/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.072101661 seconds)
    (56/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.07360659 seconds)
    (57/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.113769154 seconds)
    (58/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.071659495 seconds)
    (59/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.158964163 seconds)
    (60/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.10846164 seconds)
    (61/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.083233942 seconds)
    (62/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.072458781 seconds)
    (63/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.066522954 seconds)
    (64/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.08790644 seconds)
    (65/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.112495049 seconds)
    (66/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.134813794 seconds)
    (67/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.099756834 seconds)
    (68/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.060355378 seconds)
    (69/309) benchmarking ("sort", Float32, false)...
    done (took 0.125801686 seconds)
    (70/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.071674117 seconds)
    (71/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.176736361 seconds)
    (72/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.052660604 seconds)
    (73/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.075624818 seconds)
    (74/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.174933956 seconds)
    (75/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.09281565 seconds)
    (76/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.072435239 seconds)
    (77/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.073074822 seconds)
    (78/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.169190321 seconds)
    (79/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.076252202 seconds)
    (80/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.183350926 seconds)
    (81/309) benchmarking ("sort", Int64, false)...
    done (took 0.065464508 seconds)
    (82/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.07093663 seconds)
    (83/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.066575664 seconds)
    (84/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.206914057 seconds)
    (85/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.051602509 seconds)
    (86/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.089988982 seconds)
    (87/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.097556194 seconds)
    (88/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.156829401 seconds)
    (89/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.052878298 seconds)
    (90/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.072535773 seconds)
    (91/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.066660972 seconds)
    (92/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.076085249 seconds)
    (93/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.081203788 seconds)
    (94/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.206704978 seconds)
    (95/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.066460463 seconds)
    (96/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.186999582 seconds)
    (97/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.150369534 seconds)
    (98/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.151565949 seconds)
    (99/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.089091837 seconds)
    (100/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.098176816 seconds)
    (101/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.071231569 seconds)
    (102/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.186700946 seconds)
    (103/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.053741481 seconds)
    (104/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.065113233 seconds)
    (105/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.053010397 seconds)
    (106/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.178132984 seconds)
    (107/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.06941547 seconds)
    (108/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.06637445 seconds)
    (109/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.077384253 seconds)
    (110/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.075878856 seconds)
    (111/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.064772098 seconds)
    (112/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.051453589 seconds)
    (113/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.077465234 seconds)
    (114/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.133985607 seconds)
    (115/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.072048575 seconds)
    (116/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.067026549 seconds)
    (117/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.283985809 seconds)
    (118/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.087207374 seconds)
    (119/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.091186885 seconds)
    (120/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.066849231 seconds)
    (121/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.079112728 seconds)
    (122/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.121654603 seconds)
    (123/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.136240241 seconds)
    (124/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.061902654 seconds)
    (125/309) benchmarking ("sort", Int8, false)...
    done (took 0.138545543 seconds)
    (126/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.147628551 seconds)
    (127/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.066359936 seconds)
    (128/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.090188249 seconds)
    (129/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.113669447 seconds)
    (130/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.074181768 seconds)
    (131/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.054603146 seconds)
    (132/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.094872951 seconds)
    (133/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.095600523 seconds)
    (134/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.067368678 seconds)
    (135/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.148448009 seconds)
    (136/309) benchmarking ("sort", Bool, false)...
    done (took 0.132067994 seconds)
    (137/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.072943863 seconds)
    (138/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.071587359 seconds)
    (139/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.071319266 seconds)
    (140/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.070909106 seconds)
    (141/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.070997047 seconds)
    (142/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.131578823 seconds)
    (143/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.070281215 seconds)
    (144/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.06449107 seconds)
    (145/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.071270246 seconds)
    (146/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.065104418 seconds)
    (147/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.088846443 seconds)
    (148/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.052134862 seconds)
    (149/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.094403913 seconds)
    (150/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.071381877 seconds)
    (151/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.064751446 seconds)
    (152/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.05381435 seconds)
    (153/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.089197417 seconds)
    (154/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.064373032 seconds)
    (155/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.179388541 seconds)
    (156/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.063452682 seconds)
    (157/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.104484362 seconds)
    (158/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.064605389 seconds)
    (159/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.060388445 seconds)
    (160/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.071643196 seconds)
    (161/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.086288491 seconds)
    (162/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.07273101 seconds)
    (163/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.078652003 seconds)
    (164/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.109846707 seconds)
    (165/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.099137624 seconds)
    (166/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.10578591 seconds)
    (167/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.068718046 seconds)
    (168/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.10800927 seconds)
    (169/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.104982413 seconds)
    (170/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.070934036 seconds)
    (171/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.051929214 seconds)
    (172/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.05055297 seconds)
    (173/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.066598093 seconds)
    (174/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.074217118 seconds)
    (175/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.158406833 seconds)
    (176/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.051256579 seconds)
    (177/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.051932346 seconds)
    (178/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.065391329 seconds)
    (179/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.064732595 seconds)
    (180/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.130710299 seconds)
    (181/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.066105186 seconds)
    (182/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.169982966 seconds)
    (183/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.07058957 seconds)
    (184/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.086133474 seconds)
    (185/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.149236832 seconds)
    (186/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.162266599 seconds)
    (187/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.075117636 seconds)
    (188/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.193988216 seconds)
    (189/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.071200865 seconds)
    (190/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.2392305 seconds)
    (191/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.074302472 seconds)
    (192/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.052339446 seconds)
    (193/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.053211785 seconds)
    (194/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.052216219 seconds)
    (195/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.064579693 seconds)
    (196/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.062412436 seconds)
    (197/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.155802177 seconds)
    (198/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.132648809 seconds)
    (199/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.088820999 seconds)
    (200/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.089835002 seconds)
    (201/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.152270846 seconds)
    (202/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.073473174 seconds)
    (203/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.06448437 seconds)
    (204/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.060762304 seconds)
    (205/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.152164324 seconds)
    (206/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.071433378 seconds)
    (207/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.054066559 seconds)
    (208/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.051278339 seconds)
    (209/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.152161739 seconds)
    (210/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.05185304 seconds)
    (211/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.075884892 seconds)
    (212/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.072862902 seconds)
    (213/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.065075427 seconds)
    (214/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.150786284 seconds)
    (215/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.072223133 seconds)
    (216/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.052300047 seconds)
    (217/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.073780378 seconds)
    (218/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.072233316 seconds)
    (219/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.051612529 seconds)
    (220/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.065231013 seconds)
    (221/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.111645502 seconds)
    (222/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.051178953 seconds)
    (223/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.087146205 seconds)
    (224/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.051671254 seconds)
    (225/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.151887477 seconds)
    (226/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.051731862 seconds)
    (227/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.053705285 seconds)
    (228/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.052874405 seconds)
    (229/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.053101545 seconds)
    (230/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.051948084 seconds)
    (231/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.07051359 seconds)
    (232/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.126622144 seconds)
    (233/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.064259205 seconds)
    (234/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.090295099 seconds)
    (235/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.061359421 seconds)
    (236/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.109981895 seconds)
    (237/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.079100033 seconds)
    (238/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.051360758 seconds)
    (239/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.050997341 seconds)
    (240/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.125007783 seconds)
    (241/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.065066292 seconds)
    (242/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.087974978 seconds)
    (243/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.131821636 seconds)
    (244/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.095438985 seconds)
    (245/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.052277098 seconds)
    (246/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.072624541 seconds)
    (247/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.051826249 seconds)
    (248/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.051765777 seconds)
    (249/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.050460995 seconds)
    (250/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.052007483 seconds)
    (251/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.052420783 seconds)
    (252/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.06597393 seconds)
    (253/309) benchmarking ("sort", BigInt, false)...
    done (took 0.182332001 seconds)
    (254/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.06632279 seconds)
    (255/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.051081447 seconds)
    (256/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.051319818 seconds)
    (257/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.064104578 seconds)
    (258/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.050588807 seconds)
    (259/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.068099341 seconds)
    (260/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.053039559 seconds)
    (261/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.064252474 seconds)
    (262/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.065753573 seconds)
    (263/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.050834081 seconds)
    (264/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.070938882 seconds)
    (265/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.092171861 seconds)
    (266/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.051145552 seconds)
    (267/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.052070609 seconds)
    (268/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.064874338 seconds)
    (269/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.064908931 seconds)
    (270/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.072432978 seconds)
    (271/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.052423878 seconds)
    (272/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.052086045 seconds)
    (273/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.077636766 seconds)
    (274/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.106226484 seconds)
    (275/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.072110511 seconds)
    (276/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.06741609 seconds)
    (277/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.066373998 seconds)
    (278/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.071118331 seconds)
    (279/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.070571461 seconds)
    (280/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.088454135 seconds)
    (281/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.069382895 seconds)
    (282/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.0783319 seconds)
    (283/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.051008897 seconds)
    (284/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.064778624 seconds)
    (285/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.051312495 seconds)
    (286/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.097998206 seconds)
    (287/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.071596683 seconds)
    (288/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.066665511 seconds)
    (289/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.064745813 seconds)
    (290/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.06341717 seconds)
    (291/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.064640687 seconds)
    (292/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.063725886 seconds)
    (293/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.070560009 seconds)
    (294/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.051110075 seconds)
    (295/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.067482968 seconds)
    (296/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.072059997 seconds)
    (297/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.051071153 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.069923705 seconds)
    (299/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.06771492 seconds)
    (300/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.060223566 seconds)
    (301/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.064758668 seconds)
    (302/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.051375737 seconds)
    (303/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.063925335 seconds)
    (304/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.10602996 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.069932602 seconds)
    (306/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.137076441 seconds)
    (307/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.086605213 seconds)
    (308/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.064271232 seconds)
    (309/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.051149424 seconds)
  done (took 30.405399801 seconds)
done (took 31.868622286 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.08324629 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090847337 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.073348987 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.091500598 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.079319904 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.075797505 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.071161833 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.07680576 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.078997885 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.080258155 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.077494297 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.054102418 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.072857114 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.073127447 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.072880826 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089821542 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.076757729 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.071750549 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.072094177 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.063807813 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.072157803 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.065129541 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.067293987 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.054638726 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.076923668 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.070677098 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.071575874 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.073019875 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.065366794 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.064956064 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.068058756 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.072125932 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.064733629 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.077079987 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.070972011 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.071852948 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.07362253 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.074979254 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.066279187 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.065198983 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.072698642 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.065233205 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.071426315 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.072387312 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.071584252 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.070311131 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.072062804 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.076729103 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.090885063 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067183969 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.073638418 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.075222187 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.075404462 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.071279697 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.068594931 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.072138389 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.069679664 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089885162 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.072412184 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067255053 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.072895867 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.072773232 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.070225223 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.072029908 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.072116574 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.074105927 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.074378568 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.070379379 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.073972376 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.07053108 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.064637429 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.071791036 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.068029768 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.064661292 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.074394428 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.075845631 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.063351495 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.070418801 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.071938993 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.070310904 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.06393835 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.066476908 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.06599339 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.070335605 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.066290654 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.054055448 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.067843133 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.070277177 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.063872945 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.072328799 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.070516592 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.070949916 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.066048024 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.07444106 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.063848262 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.069790228 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.064730254 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.06477015 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.065878739 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.068418212 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.064112225 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066258642 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.073102447 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.065750637 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.070538519 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.077437726 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.06440489 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.070697978 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.063756878 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.064190226 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.078396662 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.073624976 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.064857533 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067079832 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.063978692 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.071693785 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.063717695 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.065111474 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.064583374 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.064706931 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.069727166 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.064242311 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066315945 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.071011596 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.075973886 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.064167358 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.067540617 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.066692776 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.064358071 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.069330332 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.064051722 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.064635219 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.199357586 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.061882796 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067006103 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.064903809 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.07178117 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.066840687 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.071598792 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.06608273 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.072999359 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.068782472 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.07005217 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.069886835 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.063869662 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.059111558 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067599757 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067473731 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.066630201 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.065319736 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.066217225 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.065635355 seconds)
done (took 12.352251735 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.066136498 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.141347858 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.098200006 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.093805752 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.084957269 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.065906055 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.075286527 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.100558187 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.067176823 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.101021674 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.086212855 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.083647279 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.110956815 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.064118432 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.065105888 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.068797389 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.066599319 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.080919413 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.099721458 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.085743333 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.107735986 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.0644377 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.093127139 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.088983032 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.086243286 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.100139842 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.06633838 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.069058983 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.068841214 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.090198668 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.085168289 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.069294217 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.065714272 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.098707931 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.090991009 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.082442833 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.065229914 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.081047746 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.065803293 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.065199898 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.07991916 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.096579938 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.079036472 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.07896599 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.06897125 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.068183493 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.066372947 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.082402386 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.087598551 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.077291479 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.085480255 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.101566964 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.067632051 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.064762587 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.063736966 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.084391045 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.064598237 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.067957988 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.065563452 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.067120317 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.06540978 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.068378888 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.079904195 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.085443319 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.06874858 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.079259984 seconds)
  done (took 6.789622787 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.08181825 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.08850661 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.082795673 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.082418474 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.064644374 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.065706019 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.065935598 seconds)
  done (took 2.075800673 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.066518872 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.086643013 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.087608416 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.08787345 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.084429604 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.086096251 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.074934965 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.065681877 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.079994436 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.066649692 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.086319309 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.100258987 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.066082854 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.07203533 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.089377087 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.065502717 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.089376771 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.065708575 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.068646303 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.088706902 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.067528094 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.081061844 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.069339834 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.066700629 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.079443052 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.066063452 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.111595012 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069921529 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067257159 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.068755506 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.063860437 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.104380704 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.079121555 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.074525681 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.065299312 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.079443673 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.079471583 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.063989732 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.081087593 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.070509681 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.079225118 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.065751363 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.066620597 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.064074767 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.069804957 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.075585161 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.06630677 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.0659036 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.067938565 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.084665391 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.066532062 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.078760311 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.070317682 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.068135 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.067250491 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.069525076 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.07530705 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.066940515 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.085708456 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066995808 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.082446065 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.082138022 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.079624215 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.081936897 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068218678 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.078996658 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.079662573 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.068457971 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.0676342 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.069300146 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.081988219 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.064460794 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.067632218 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.076215785 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.067242244 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.087707442 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.087852709 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.066796076 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.074699028 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.066567261 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.066125487 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.065727103 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.087889768 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.067950038 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.065351511 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.06952276 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068801989 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.064128059 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.064830626 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.069249323 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.063735303 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.067484038 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.068777448 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.068777373 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068330028 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.082182499 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.068057932 seconds)
  done (took 8.720621701 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.068504248 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.067616902 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.068177185 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.067653401 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.06826064 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.06686301 seconds)
  done (took 1.972185001 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.092197263 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.06913626 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.079350152 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.071690394 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.102861593 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.085981537 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.086036987 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.077834176 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.082838643 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.077566908 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.085739131 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.087336427 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.091547088 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.071634285 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.085550546 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.070753497 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.085753377 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.074781016 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.077701242 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072289965 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.085508027 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.072043538 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072102073 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.080515837 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.074622744 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.071180933 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.066533814 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.078070674 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.077674107 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.077855265 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.071268309 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.074770536 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.069793227 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.077597751 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.085935838 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.069842045 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071159026 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.076173554 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.0714226 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.074639109 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.086648684 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.071845577 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.073948313 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.076554353 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.077238014 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.069814442 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.076085423 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.07544945 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.085181974 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.075870044 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.076363811 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.070749915 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.074291963 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.075750776 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.069663143 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077388604 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.075967062 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.085209412 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.071402891 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.069896086 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.068309144 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.074240814 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.07651002 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.074464445 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.077953572 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.075543035 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.069619017 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.072189003 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071847977 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.071479339 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.075789256 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.068034863 seconds)
  done (took 7.062072339 seconds)
done (took 28.154866736 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.540372985 seconds)
  done (took 2.074759131 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.610531313 seconds)
  done (took 2.166318318 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.625797804 seconds)
  done (took 8.179223036 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.378280805 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.46451591 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.707982653 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.12896963 seconds)
  done (took 3.277463906 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.665696481 seconds)
  done (took 2.229994185 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.207685835 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.194846834 seconds)
  done (took 1.97548088 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.37392481 seconds)
  done (took 1.931232723 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.099825031 seconds)
  done (took 2.657706816 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.260205899 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.170532606 seconds)
  done (took 1.990437193 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.455884784 seconds)
  done (took 2.012875507 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.786157215 seconds)
  done (took 6.34330847 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.206114507 seconds)
  done (took 1.805718791 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.239010017 seconds)
  done (took 1.797894681 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.724174812 seconds)
  done (took 3.282640671 seconds)
done (took 43.28841839 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.078352864 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.080157898 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.079299906 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.076345928 seconds)
  done (took 1.859692379 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.075561846 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.071451613 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.075348918 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.071282911 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.07519811 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.071971668 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.072883739 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.075316256 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.071346171 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.071381121 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.07128728 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.071140881 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.073309799 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.072564251 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.070354797 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.073835197 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.074370276 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.07207656 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.074110892 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.07115815 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.070269856 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.073577562 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.073404358 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.07075399 seconds)
  done (took 3.304608056 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.076005555 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.071343704 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.073827067 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.070463784 seconds)
  done (took 1.85900785 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.076423281 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.090347671 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.088244618 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.075893445 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.089947035 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.084582429 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.067896412 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.067852878 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.071712185 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.075388234 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.066683505 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.094152577 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.086513317 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.075977567 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.07764444 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.064777362 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.067028715 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.085311814 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.076060969 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.076152075 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.068907661 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.075988087 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.066854944 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.086806588 seconds)
  done (took 3.421545589 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.076159552 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.100980716 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.076522366 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.085599092 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.088698386 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.063876265 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.073313744 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.087388342 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.121261168 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.064150389 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.069321666 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.064345493 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.071133132 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.064054132 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.075078932 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.103506291 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.106617052 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.066995851 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.094416463 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.064476383 seconds)
  done (took 3.19026417 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.071149765 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.068390252 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.065321478 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.067699188 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.075744838 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.071424514 seconds)
  done (took 1.995719187 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.067015508 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.065910121 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.066960252 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.065954275 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.070335971 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.065966405 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.065277398 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.066221684 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.065949109 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.065749307 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.066274294 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.064927797 seconds)
  done (took 2.369204985 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.410830475 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.067210165 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.067641641 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.064836717 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.069893785 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.065736985 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.078660607 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.066984311 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.088947964 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.065624549 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.065510422 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.067400279 seconds)
  done (took 2.753687554 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202160912 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075320307 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233088335 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134733304 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110136577 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113740277 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.102139216 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111461185 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.140675313 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100158504 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165219868 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163310257 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10591421 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134700578 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.087241325 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.09623006 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153328609 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159338483 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101657443 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163144513 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141181433 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.122539329 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.144457187 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099541374 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104627236 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119721163 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.069786699 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.078728409 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167495654 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129056911 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143640278 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108854898 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092280416 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173537228 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166845619 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139406819 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132154 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082645003 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.100483493 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.130933924 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196103698 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087210699 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162109953 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.242987064 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.079772765 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131481337 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11924768 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.117495867 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.105294773 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.089030126 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143230375 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178775152 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.136470952 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.08597185 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110941659 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113519276 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.114107898 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102121899 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178302848 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158945434 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125243062 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.069832512 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.097344624 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150811797 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130212191 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.107110581 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.125414062 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092351654 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130926294 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152312729 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117174171 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142451865 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.126956875 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086468311 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117219879 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.137646076 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125864492 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167252204 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122791695 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.071821758 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122642823 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101269686 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079429928 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.140057876 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074009986 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172675016 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097501904 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.10505706 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.111033229 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107127842 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107255948 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158013311 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141452469 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.24178149 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.065285111 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102380069 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.118748652 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145768077 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.086042653 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10793013 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114890717 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.076507463 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137637557 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.073664352 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121944649 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.074160052 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123084222 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129088818 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.073968975 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.119339524 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.098968083 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.099188993 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131834079 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157221473 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087641581 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081098139 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16487713 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121900497 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.102726694 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.142000244 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.154253275 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.09809897 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100572836 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.147040364 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177378554 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.088826835 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159861028 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105640299 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.082367314 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.085892886 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121814596 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110390357 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.119955632 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081022089 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.116436987 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164987898 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.073570685 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.093634385 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131630599 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077700299 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079936655 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102131801 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099085856 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.093224058 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.098069529 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.102069276 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13500881 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121156121 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10310802 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.266552517 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.096437662 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168924681 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087703119 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.09950756 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101530895 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.0686616 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.135406986 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15531402 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.078181418 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160968654 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.121660234 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103526522 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118106321 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081984845 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138142922 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077067835 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.069062192 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142125728 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.109336103 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108664193 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.149127797 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102602205 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.125930346 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.118056302 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133583519 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130634719 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.127088764 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103614748 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.086177807 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110278862 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123779247 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.071939826 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.090783605 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.078488669 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102023058 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09375875 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.081729243 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139697298 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12227181 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.098814916 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109887387 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09503638 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145420208 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.075233104 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127001179 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.117021009 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092656014 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.149832169 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149187441 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128581813 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097502832 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141961412 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.069034391 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.072443528 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.087735861 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.263597316 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082670014 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.082865001 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115837739 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145474815 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12817432 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136742833 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110416746 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119694836 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.154464464 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.06826241 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.113111984 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146680819 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119543966 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.103591331 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088819931 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.097193711 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140062679 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106821648 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179700202 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112135642 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123491546 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15079801 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.098367942 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.081568715 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101924668 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133167741 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103510981 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.141976707 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.098148495 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.0865289 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108322059 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.072871201 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09860936 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124490856 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117520722 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133657581 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.113292791 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130342686 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.07574181 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114982482 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.118437655 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120632501 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.063555843 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1185219 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158994669 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.092399466 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11634132 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15032741 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.077858125 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.122100875 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.317903493 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144381418 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083562891 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108149843 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.117673475 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.125989714 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118874058 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138036811 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106029692 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132559719 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107813259 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.08427556 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085999187 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.096113 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104288257 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.093211023 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.106857098 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.112314599 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.093795286 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130619669 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100558789 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107863015 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116716591 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.095089867 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.087816195 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094919263 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172044726 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11774259 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16922696 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.097980101 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.143568197 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161933869 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.07374708 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077798091 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.077051037 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137578098 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082184865 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1282393 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.09609431 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103942073 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121561294 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139491162 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.093033044 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.067406241 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106537337 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135747785 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110280791 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.096633889 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.102906373 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160825789 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.101578227 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.078290387 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111541063 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102845881 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100662647 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169063056 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.060577943 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.238733586 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075484297 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.079837348 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.125909006 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151867727 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.080388097 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.10123295 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117494436 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.109891519 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.126726178 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100050711 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097774277 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.112552625 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.147366739 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126604571 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.08843086 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110359953 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128070397 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15445531 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103409015 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.109862728 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170101116 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150511462 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.157471843 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.087401007 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112369768 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112069701 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106737388 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136794317 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082180072 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160655735 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080233657 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1340354 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102093362 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08864737 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127733111 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.097187686 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.08666248 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145577964 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115465829 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081223749 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.076729324 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116054795 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118770293 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105429217 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.074342101 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137439246 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.071476048 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129805184 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165132993 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080042378 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102340329 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.237998539 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078874088 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10670715 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102607859 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088328558 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.097329665 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170857746 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.08676775 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147191096 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139162774 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111364978 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135204311 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099197638 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.633977926 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.076866558 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149972836 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.115838649 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170766467 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.09606033 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115206888 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107892486 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122186617 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14214088 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103091665 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.175549808 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129806256 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.115201464 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.078637482 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101197869 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101205832 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.087123358 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103736361 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111404641 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114259233 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.092174957 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.114405257 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121103104 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.080752905 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.093820992 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153823408 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114832374 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141515279 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138326651 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083533918 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116893764 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136972288 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078839337 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.119962301 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.149274541 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104236263 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096061421 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.079141982 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.243706004 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168086312 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.072271565 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160858342 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118633029 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109091057 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111183958 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.113059179 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130226684 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10607793 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12025485 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092305559 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.108907471 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111485056 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081392426 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.075705926 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103603538 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110317548 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.097039693 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097329526 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.097188183 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149992982 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.070651006 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094527033 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101535761 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143619542 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171442212 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.086831165 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081495881 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116729229 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110233399 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.111010151 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119182563 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.078013325 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081133484 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.080573807 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.076023403 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.107086124 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110435608 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102485251 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109478627 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161131507 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.081069269 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.223627839 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.093320475 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102899768 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.068538711 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.077252095 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093706944 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09576328 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106559518 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099115823 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168323425 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.093767137 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.089127238 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095488418 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.072030122 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081310745 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.125723369 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.252858885 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117554514 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096062 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.062027191 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108729304 seconds)
  done (took 58.080837559 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.103310901 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.081625562 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.096222742 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.148000359 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.120938989 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.210402036 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.156440983 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.198219069 seconds)
  done (took 2.787551581 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.067503279 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.092940188 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.098975791 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.081243285 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.065933897 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.067844764 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.221743161 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.078915043 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.065472714 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.086869645 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.07729045 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.067723639 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.417020875 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.064922029 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.065973038 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.061175997 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.066297632 seconds)
  done (took 3.412418959 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.370392241 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.361611534 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.36931906 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.074769778 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 2.868618092 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.087446817 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 2.06254402 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.09482512 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.070000329 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.26512751 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.694719764 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.091035751 seconds)
  done (took 14.082911619 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.073492096 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.068623555 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.081774028 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.082069393 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.071596721 seconds)
  done (took 2.051714225 seconds)
done (took 102.769102173 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.078866253 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.388702079 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.052926519 seconds)
  done (took 2.144281068 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.081956947 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.083150813 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.082864679 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.081177999 seconds)
  done (took 2.011455595 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.073396346 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.075259553 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.083084417 seconds)
  done (took 1.907582446 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.220113207 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.136198358 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.085304874 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.081167178 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.076198196 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.077179784 seconds)
  done (took 1.913115179 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.070148314 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.073739466 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.071991989 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.075453806 seconds)
  done (took 1.965175145 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.07510512 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.051675977 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.054344898 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.055357387 seconds)
  done (took 1.91212802 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.08458487 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.078162711 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.076610387 seconds)
  done (took 1.914967901 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.105336372 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.08373602 seconds)
  done (took 1.865324265 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.080319883 seconds)
  done (took 1.757091339 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.096940806 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.112178508 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.126391309 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.107335433 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.134410684 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.107452723 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.084143683 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.08507984 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.075695499 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.085858479 seconds)
  done (took 2.690918097 seconds)
done (took 22.277464968 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.07675981 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.364552453 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.359919335 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.090857265 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.66764496 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.355560577 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.966360779 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.090688942 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.111604748 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.066950945 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083261085 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.648083484 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.956288975 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.314505456 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.943706251 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.409155839 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.655379929 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.066951874 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.066447306 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067064557 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.951556766 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.066845816 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067013922 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067134748 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.653063091 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.369422275 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067128213 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.409670381 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.06697096 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.068948773 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.354181499 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.066933809 seconds)
  done (took 16.23289453 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.069347176 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.116572089 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.072537362 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.082427244 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.069267966 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.068849197 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.070380037 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.067930677 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.117598796 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.066759636 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.08363741 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.066794162 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.070966158 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.067361123 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.085581366 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.06709649 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.067793401 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067528205 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067821487 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067071615 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.085532519 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.066750927 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067149755 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.06739954 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.066906849 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.078153421 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067214629 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.066801687 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.066928268 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069079163 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.06954853 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.067864765 seconds)
  done (took 4.039504466 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.113044358 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.123568231 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.072536363 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.101732847 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.110726736 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069321206 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.140610882 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.091812931 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.125365147 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.066955802 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083531616 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067173098 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.099474812 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.067974747 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.086272141 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.067550046 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068172307 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067655579 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067199795 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068058366 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.085898272 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067053478 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067186002 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067734008 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.067890509 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.080353363 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067751391 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.0676845 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068013049 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069703194 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071136522 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068040283 seconds)
  done (took 4.295397431 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.072009112 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.073929677 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.081737993 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.083483215 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.069047597 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.070713803 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.072238723 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.069228438 seconds)
  done (took 2.283171207 seconds)
done (took 28.533447821 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.07818135 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.067921051 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.071826174 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.080286487 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.072144948 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.07777341 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.066437954 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.073370039 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.071369309 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.071654699 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.073850175 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.06675139 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.070155887 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.066679641 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.072713598 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.066730476 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.078113738 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.070732143 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.077899323 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.078411154 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.06879623 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.071620419 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.072722687 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.077668539 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.077833005 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.077824265 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.076288731 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.071580005 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.068023012 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.069329967 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.075438055 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.082473734 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.067726739 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.078117205 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.067601762 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.066787803 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.070345273 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.06691109 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.07804726 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.075414066 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.068661044 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.074906739 seconds)
  done (took 4.727101851 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.086244792 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.089538209 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.083147367 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.061087868 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.065928082 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.064244463 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.087212387 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.058923513 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.059058608 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.08633393 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.055258833 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.058869673 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.061740235 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.053283798 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.058287226 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.055824684 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.060839598 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.055088135 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.058217749 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.058325433 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.056978104 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.053450291 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.059182183 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.0636786 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.055469097 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.060723896 seconds)
  done (took 3.365527952 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.073879136 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.082633428 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.086253596 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.124386487 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.101496322 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.075391151 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.076705802 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.090095996 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.083907134 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.066107539 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.069895952 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.092182677 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.086522306 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.072402781 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.066701112 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.083639511 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.080706672 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.068239998 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.072684377 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.089552648 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.083253189 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.083058184 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.091146488 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.079928533 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.066090382 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.068713511 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.070706879 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.079732725 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.071531739 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.075625549 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.070475125 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.070509713 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.06887924 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.077590807 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.070388084 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.067832045 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.088311155 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.075871642 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.07641562 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.066881017 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.069613112 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.067348153 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.088132889 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.120705613 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.065577022 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.073044679 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.07388642 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.076082052 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.066334242 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.084610301 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.077256928 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.066157935 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.069538356 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.066072887 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.066625822 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.079116825 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.070839472 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.06855132 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.075002437 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.069553633 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.084252845 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.070643482 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.081589429 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.066162362 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.073972519 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.065627294 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.067222602 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.065451952 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.091251269 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.068173337 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.10671421 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.067696117 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.067158814 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.075022011 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.0743314 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.072240326 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.066958996 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.080920825 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.076782906 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.069826518 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.074702695 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.069920202 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.069361549 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.086278455 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.068452815 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.068059079 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.06741563 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.072663108 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.069392019 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.067872717 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.079376939 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.066449052 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.069461142 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.082684042 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.066122827 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.067854007 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.072381331 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.07109592 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.066239283 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.077211889 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.071243226 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.066981662 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.075553723 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.066306073 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.069728982 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.07671816 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.072733407 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.065447399 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.070992346 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.072354048 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.067437598 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.06830786 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.069511186 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.068454767 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.075966355 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.073191502 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.070900288 seconds)
  done (took 10.468772099 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.157906542 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.150484184 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.069031713 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.142951879 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.075596876 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.088898946 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.145435978 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.092706508 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.066986739 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.067145381 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.067886595 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.113732822 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.104504382 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.12030439 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.077565895 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.066789875 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.082000493 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.115552698 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.14655798 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.141026438 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.082825998 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.075725811 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.068880255 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.067911346 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.072910213 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.081811007 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.089289332 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.075610013 seconds)
  done (took 4.441898076 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.079029721 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.098849399 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.072959279 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.087603767 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.089970228 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.066749316 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.069095013 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.068603929 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.079171088 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.077604812 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.06689918 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.072365728 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.073276021 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.073032177 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.067924441 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.073473316 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.074045385 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.067802906 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.070026163 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.072372691 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.076192796 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.07972805 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.070963445 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.066188497 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.073486236 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.066358375 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.063431061 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.083112392 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.067291124 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.088474797 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.064681467 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.073608048 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.079989807 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.067451572 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.066867288 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.066948053 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.066601397 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.066426442 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.068662409 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.065463304 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.065100421 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.056835823 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.066130289 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.07863798 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.073264521 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.055845256 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.071904952 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.071740432 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.071567401 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.064374236 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.069538936 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.069118217 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.069913276 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.073515426 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.071841226 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.071573203 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.068183806 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.064854317 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.074673576 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.066619729 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.063926471 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.0653543 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.071167261 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.065508421 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.074461061 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.070812957 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.064938414 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.066064903 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.068144658 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.072834457 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.066572493 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.069500777 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.064042441 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.068608111 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.070965297 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.068542028 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.067338304 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.065195996 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.066271304 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.066558308 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.054614157 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.066319988 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.052932073 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.069543402 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.064737968 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.065131741 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.066162295 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.071211492 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.078546334 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.068064261 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.072142559 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.067340552 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.065689911 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.06965992 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.05930657 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.069079455 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.081305378 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.081391443 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.066303175 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.065073005 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.080793798 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.071508899 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.065508029 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.055304471 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.07368994 seconds)
  done (took 9.079134839 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.092586855 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.086321722 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.069029338 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.08227409 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.089657376 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.085514171 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.07378377 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.075671951 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.068378159 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.081129272 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.072832079 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.075315463 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.066924137 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.07576445 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.091873322 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.075520839 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.069015819 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.075227861 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.070799797 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.099390485 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.081516279 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.080688013 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.073886078 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.066964166 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.074435187 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.079273984 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.08781297 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.078980647 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.076940707 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.074173252 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.078739781 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.087596342 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.073233243 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.071140883 seconds)
  done (took 4.397583756 seconds)
done (took 38.167062697 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.768775994 seconds)
  (2/12) benchmarking "fasta"...
  done (took 2.029166818 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.767828118 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.181267545 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.848370675 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.979666004 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.82661321 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.763916379 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.047766692 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.807157959 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.028598767 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.832618787 seconds)
done (took 65.586747832 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.7846477 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.914350425 seconds)
    (2/2) benchmarking "String"...
    done (took 2.051213532 seconds)
  done (took 5.674759234 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.061305626 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.297507804 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.0123065 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.763311229 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.770160182 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.076488105 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.565406454 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.295461533 seconds)
  done (took 30.489788897 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.96019323 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.96107305 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.427216085 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.464468373 seconds)
  done (took 15.569971105 seconds)
done (took 63.366180778 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.783381425 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.791041035 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.785174863 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.74886832 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.822501769 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.782738399 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.915846603 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.996240687 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.763622905 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.757100531 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.764406735 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.191778997 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.765911165 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.022504581 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.762489384 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.761532013 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.806831724 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.180489508 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.917503052 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.783553242 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.782812008 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.798222426 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.761081531 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.762458146 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.805019791 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.762276695 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.193951682 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.777775367 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.578078666 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.771081447 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.81276787 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.18723978 seconds)
  done (took 204.804579384 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.765533216 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.637361586 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.730187809 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.77351214 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.105591358 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.968487402 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.905145713 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.21370925 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.771425664 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.771356189 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.90975419 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.770596248 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.94780514 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.723134323 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.77509086 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.848084981 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.935126806 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.96602545 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.772067778 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 3.0130824 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.766347907 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.772586339 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.724951908 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.896256915 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.781576032 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.871825724 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.797737696 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.778942089 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.957063074 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.907230395 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.805256168 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.788814691 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.960955641 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.639645109 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.781357774 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.794898325 seconds)
  done (took 169.03870692 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.184729814 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.768062985 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.767534114 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.768891953 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.773670094 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.768728241 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.898155634 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.891210313 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.221177162 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.272391979 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.820714634 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.583936675 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.768345394 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.835295265 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.780991813 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.768298736 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.782393396 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.795115339 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.76876753 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.769219595 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.893185241 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.781313969 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.827869237 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.777734535 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.769468521 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.775429361 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.138526995 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.768820938 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.774063157 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.011699516 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.770861137 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.769122504 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.657396219 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.090783791 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.860962523 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.770803562 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.775464898 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.769561767 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.989838627 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.771043808 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.770352256 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.772410634 seconds)
    (42/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.769096969 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.939811541 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.769117471 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.900050635 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.770102395 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.261834529 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.770163225 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.769928009 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.452589539 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.427685468 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.769719096 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.770783697 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.774433775 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.769897939 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.770019536 seconds)
    (57/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.769730772 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.776508362 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.453784962 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.840838254 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.772144376 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.773229285 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.776071499 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.770078622 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.782554367 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.773110877 seconds)
    (67/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.769961335 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.8281746 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.988014384 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.391045366 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.895926403 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.77293794 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.837983397 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.864983763 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.771438966 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.771412924 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.771085562 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.771439609 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.851909728 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.77168633 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.888680925 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.778083923 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.772499431 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.821052967 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.840033866 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.771656799 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.681501645 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.771378483 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.770914246 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.076307029 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.83807045 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.77121375 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.770979893 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.770991666 seconds)
    (95/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.771932783 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.887591686 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.895976262 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.568100429 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.772056363 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.557803284 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.772879206 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.901631915 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.772934593 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.948275192 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.773664542 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.853833696 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.777144382 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.774669576 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.772203318 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.804082548 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.773326357 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.831250313 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.774134528 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.143095856 seconds)
  done (took 402.493567182 seconds)
done (took 780.285008937 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.459129769 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.4201364 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.527733853 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.445887773 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.421012652 seconds)
  done (took 13.989377546 seconds)
done (took 15.704984759 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.86100129 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.864974007 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.797975069 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.863929122 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.792918793 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.863413728 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.843318925 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.797087337 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.829394857 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.798628503 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.831222428 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.798482815 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.785335252 seconds)
  done (took 25.444313373 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.02074004 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.015337749 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.843652573 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.018486355 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.819668183 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.004185535 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.934926514 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.925249518 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.939199622 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.790007974 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.787099506 seconds)
  done (took 22.81622824 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.010826327 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.016025591 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.847624061 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.014585793 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.821547109 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.011636119 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.937504666 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.928626663 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.927576996 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.791343845 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.788045008 seconds)
  done (took 22.81306857 seconds)
done (took 72.789203848 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.784179457 seconds)
  done (took 3.502055458 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.806517963 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.941206917 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.790550667 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.787627379 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.784482824 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.78456505 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.786896223 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.784466054 seconds)
  done (took 16.185345221 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.781049466 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.780643199 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.783495851 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.782386888 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.780545731 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.782809755 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.783880592 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.783355371 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.782527013 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.781091446 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.780781639 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.781495673 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.783249248 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.780379668 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.780462857 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.783613903 seconds)
  done (took 30.231513413 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.782884574 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.781226436 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.780697966 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.781467543 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.781343721 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.781774129 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.782208748 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.780999847 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.781312509 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.78213889 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.78238277 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.781284374 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.783106396 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.781421381 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.782296682 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.783108489 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.781422093 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.782505972 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.787776609 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.782696428 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.783104335 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.782436086 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.783815721 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.782894198 seconds)
  done (took 44.498879637 seconds)
done (took 96.135369727 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.462128091 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.463682115 seconds)
  done (took 8.645628889 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.786891068 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.786074569 seconds)
  done (took 5.336884521 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.786517332 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.786411214 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.786365325 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.785916856 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.785938424 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.785929755 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.786627819 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.78660911 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.785770946 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.786244212 seconds)
  done (took 19.583142009 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.786355021 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.786078796 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.784553309 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.787476979 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.78651227 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.78349987 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.785967035 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.786949756 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.787722171 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.784364941 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.787083192 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.78495627 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.787048191 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.785064505 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.788177557 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.784156259 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.784065441 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.784257901 seconds)
  done (took 33.866499489 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.787066833 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.78771283 seconds)
  done (took 5.297517523 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.785690527 seconds)
    (2/7) benchmarking "second"...
    done (took 1.786264194 seconds)
    (3/7) benchmarking "month"...
    done (took 1.784423424 seconds)
    (4/7) benchmarking "year"...
    done (took 1.78513778 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.784886006 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.78500988 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.785505293 seconds)
  done (took 14.21977888 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.789631266 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.96472452 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.030788193 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.49207761 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.789508836 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.792402034 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.724995472 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.792062174 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.792802903 seconds)
  done (took 19.89253074 seconds)
done (took 108.562417559 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.636403724 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.784798863 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.167137184 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.838277108 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.837828597 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.081038713 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.813457312 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.225177727 seconds)
done (took 43.108084252 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.81387639 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.264552307 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.269400516 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 5.443692976 seconds)
  done (took 11.701799713 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.768200466 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.325462879 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.825715736 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.377379919 seconds)
  done (took 20.032546544 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.156046299 seconds)
    (2/2) benchmarking "read"...
    done (took 2.145772278 seconds)
  done (took 6.031108009 seconds)
done (took 46.305055941 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.79164184 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.789883149 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.786862214 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.786818929 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.790504525 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.78790368 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.787445635 seconds)
    (8/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.790708819 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.789545497 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.789620587 seconds)
    (11/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.790093903 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.791420572 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.789957644 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.790716752 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.787218953 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.787373011 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.789706495 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.788340279 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.787572549 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.7881277 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.787717794 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.791719805 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.789157985 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.788377571 seconds)
  done (took 44.663810511 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.791440828 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.788692063 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.790487488 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.791130523 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.789243939 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.790944378 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.790709811 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.788339727 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.791965123 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.790799717 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.788552672 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.788660357 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.790462368 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.789752215 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.791750165 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.78884135 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.791809332 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.789720101 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.791719019 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.78916654 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.792529977 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.789152749 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.789171138 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.792110141 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.789590826 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.789654581 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.791877108 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.790569652 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.792147804 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.789557074 seconds)
  done (took 55.437250146 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.798208518 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.799370785 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.792348735 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.792735527 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.792235117 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.793328858 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.793035129 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.793082581 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.793144143 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.7927932 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.792817798 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.793365951 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.792999562 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.793188847 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.793400015 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.792745603 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.794853911 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.794517989 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.792918391 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.792427907 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.793259855 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.793965799 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.794003373 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.793107093 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.793310365 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.793500008 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.793012057 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.793260581 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.794219362 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.793778491 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.795240595 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.793706445 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.793833294 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.794830618 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.794627994 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.793573256 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.798709105 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.801580476 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.794036919 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.796294966 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.794690421 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.794489765 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.793779751 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.794447951 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.796035098 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.795524845 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.794157545 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.794541417 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.794151065 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.794838462 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.795775257 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.795489967 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.794779928 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.794814452 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.79582735 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.794839786 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.795971748 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.795004543 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.795435789 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.794835244 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.795868109 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.796178659 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.794963136 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.796660346 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.796642574 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.796386863 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.795886127 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.795903175 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.796255006 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.796329802 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.794926999 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.796341597 seconds)
  done (took 130.947261786 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.795851816 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.793455364 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.79246881 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.79349735 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.793503915 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.797669581 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.792853308 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.79552162 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.79348607 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.795944625 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.797769963 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.793663985 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.793448407 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.795816977 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.796719478 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.794784723 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.79598131 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.793923652 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.796576405 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.797730742 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.796312031 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.794545979 seconds)
  done (took 41.223590587 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.79707431 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.797468891 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.794636742 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.797923858 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.794876224 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.79806174 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.797443702 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.797523722 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.797930062 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.794063701 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.79593272 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.797923723 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.794101364 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.797102118 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.795440378 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.795441889 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.797732092 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.795198431 seconds)
  done (took 34.068772916 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.795270713 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.795227846 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.798572215 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.795624714 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.795129063 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.7977537 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.795223326 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.79928727 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.798418831 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.796561289 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.798083108 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.798910229 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.798455583 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.796743866 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.797798406 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.795965932 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.798690509 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.79639697 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.798778226 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.797141962 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.797153621 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.799237833 seconds)
  done (took 41.274135988 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.798708432 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.799349643 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.797131188 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.797669061 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.796706745 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.799099052 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.79908206 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.796227007 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.799429348 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.799895943 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.797815473 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.799435785 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.797327958 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.797477034 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.797490145 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.797096806 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.800050293 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.798354512 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.80056136 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.797410632 seconds)
  done (took 37.700922493 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.801333318 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.800863569 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.801493261 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.800880253 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.801216724 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.800401276 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.801609754 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.80141537 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.801768236 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.802053395 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.801289026 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.802479492 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.80141318 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.802722934 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.802362573 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.80227596 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.801552029 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.801887722 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.802138984 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.803064663 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.8028019 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.802269215 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.801808712 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.802461985 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.802118189 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.803025773 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.802956585 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.801734906 seconds)
  done (took 52.190013155 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.801604287 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.801744953 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.799237054 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.799501707 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.79923159 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.798845047 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.799740111 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.800420169 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.802189255 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.799629325 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.801836045 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.802010386 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.802900844 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.802467618 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.801858144 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.801833121 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.801926797 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.799742089 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.800187103 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.800490925 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.802922614 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.80293142 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.802946378 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.800098753 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.800552916 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.803302741 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.799496469 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.800947481 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.80320542 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.800383157 seconds)
  done (took 55.772069548 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.822318158 seconds)
    (2/2) benchmarking "in"...
    done (took 1.821569619 seconds)
  done (took 5.381989654 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.800893773 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.803762989 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.803455068 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.801617127 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.802283127 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.804279189 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.805027425 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.800692613 seconds)
  done (took 16.160670317 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.803784271 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.803889931 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.803498458 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.804280748 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.805005917 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.805810923 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.811363208 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.804633846 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.807412044 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.805807546 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.81096814 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.812058371 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.809308749 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.805439772 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.806296539 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.806734285 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.804009266 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.804732433 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.805413942 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.805346646 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.805776527 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.807359091 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.806689837 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.802368395 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.805917195 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.818003658 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.811896882 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.805801512 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.8062854 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.811249106 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.807620448 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.803195594 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.806081247 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.805975876 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.805618905 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.806009633 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.815461814 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.807360651 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.813020898 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.806094959 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.805715596 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.804897141 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.808672443 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.810337835 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.808025778 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.806672289 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.806200269 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.802986616 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.806812754 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.810225229 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.811095373 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.807003038 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.804055035 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.817812899 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.808258904 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.81408038 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.807234507 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.810437191 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.81597726 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.818319001 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.822547425 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.81493728 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.809096863 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.80807632 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.816807749 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.831260318 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.814187348 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.804837559 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.804959897 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.808071018 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.816733902 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.82267686 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.816201623 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.808125796 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.808519351 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.807714675 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.809465865 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.807249939 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.817042472 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.81272069 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.809432928 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.80911571 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.817775999 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.829194282 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.807528579 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.808081403 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.808659516 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.809530777 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.809608558 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.819833482 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.809433665 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.808508895 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.808757532 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.809319496 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.812624811 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.809114258 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.8083521 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.812008606 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.806281217 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.809665489 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.8089977 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.813070784 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.81898114 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.809419688 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.809862554 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.818514262 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.809239412 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.810477682 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.8200337 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.809572747 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.810037218 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.811873221 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.819198401 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.80833472 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.812926005 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.81840501 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.810007612 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.812703073 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.810303037 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.81072237 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.819784913 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.83605486 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.809601078 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.809828844 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.814788698 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.821077337 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.811391771 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.814311943 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.810502592 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.807443222 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.80832432 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.813376521 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.810833372 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.812103274 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.812030768 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.813890697 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.807922226 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.811042066 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.811179332 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.812415537 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.814955657 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.812925355 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.812308354 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.816244873 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.811927626 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.81318985 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.821214394 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.811963635 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.813890087 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.813324937 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.808359359 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.812671053 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.815042954 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.812261493 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.812962658 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.812557043 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.812769769 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.81329381 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.812632929 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.812285305 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.811954393 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.813715348 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.816289401 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.814543893 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.818499951 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.812179768 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.81040682 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.812592621 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.814097777 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.813440624 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.813187625 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.81227196 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.816330034 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.820392038 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.813458794 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.814537089 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.818473713 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.812882642 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.81439307 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.814976762 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.816997583 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.822175473 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.813425313 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.821513012 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.813912705 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.814232943 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.813378062 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.814223762 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.813451186 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.813541796 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.81783571 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.820619526 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.830344918 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.823499583 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.815210812 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.817962983 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.815483201 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.818178469 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.820113022 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.814539717 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.814251021 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.815248712 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.814966259 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.814991042 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.817691833 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.813819784 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.813622654 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.815049145 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.814721093 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.815311643 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.814314428 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.816834244 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.818681241 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.812214732 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.815519219 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.815528495 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.815033683 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.814177844 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.815645697 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.816448767 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.815654612 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.815921366 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.825967914 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.813954546 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.816919541 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.817456989 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.816645797 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.815894962 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.816305424 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.819807628 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.816593932 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.824605449 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.817175728 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.818399591 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.824708005 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.816468508 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.816417301 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.81959541 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.816442886 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.81372674 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.819907347 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.823664232 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.815926228 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.816930326 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.816247746 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.817419731 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.816806248 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.82443807 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.813809976 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.816884227 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.816188705 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.821582073 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.814782812 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.81969501 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.818799856 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.818977268 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.820200557 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.816970266 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.817458761 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.819195836 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.817753668 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.817684588 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.818749473 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.821063707 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.824693469 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.824562941 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.820196827 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.822622066 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.819751382 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.821184541 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.819414352 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.818484532 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.817917254 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.834360563 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.826719229 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.827653696 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.821705292 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.818504703 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.826488407 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.819863276 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.823195596 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.81877401 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.81959887 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.81939931 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.819366422 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.816049594 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.821126089 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.818720115 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.821788491 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.820570009 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.822944106 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.819594576 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.818887274 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.820311217 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.819490343 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.820965837 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.820244666 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.819514627 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.825315144 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.822213755 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.820599186 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.820364743 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.827657468 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.821464599 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.822288715 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.820328046 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.820425833 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.820292754 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.822047327 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.820494561 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.824055277 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.829182937 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.824943955 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.830325289 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.821462244 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.831278198 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.821000409 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.824243199 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.8287417 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.818025956 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.821077869 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.821750605 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.821413491 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.830124156 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.82159466 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.822227438 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.826025978 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.821362647 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.822967061 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.821397994 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.822638389 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.821659039 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.82189594 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.831950588 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.823422897 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.826563732 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.824653607 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.819487514 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.822604592 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.821864827 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.822483065 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.828848405 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.822509475 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.823701534 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.822847264 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.824194368 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.821901084 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.822911187 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.82120734 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.819018532 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.823293584 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.830784123 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.822833827 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.82716227 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.821758752 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.834595821 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.82398885 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.831192807 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.824345646 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.824488208 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.824320675 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.82269754 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.827072973 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.823413137 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.824735898 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.823933871 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.825574751 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.826536889 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.823349404 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.828073174 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.825001006 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.824055193 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.824270611 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.833523817 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.846475182 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.825681225 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.82689595 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.821768147 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.825926621 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.828741882 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.824790505 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.82422619 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.828189435 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.83452601 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.832077443 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.825386909 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.825186723 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.82637814 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.825408869 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.824514413 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.824985214 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.825107359 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.825072883 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.828199462 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.82706106 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.831973065 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.824321294 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.826681302 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.827939951 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.826925364 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.837762059 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.825176829 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.826794398 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.825403664 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.825435345 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.826513286 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.826389636 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.825762243 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.827658142 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.825962302 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.826699581 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.832456495 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.831306127 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.829204094 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.825863431 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.826144302 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.827728599 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.828072638 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.826625899 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.825902762 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.826864466 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.828090162 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.827019915 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.82943579 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.826033521 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.826445403 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.827522028 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.826029779 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.829312728 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.833242507 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.827925762 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.824489102 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.826922273 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.827139637 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.826827343 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.82894257 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.838567303 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.830033913 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.836717822 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.835668375 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.831823112 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.828095474 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.830310401 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.835958343 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.827094603 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.829530611 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.827999864 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.831215603 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.828490496 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.832880754 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.82869465 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.836920335 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.829166498 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.828657684 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.836999682 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.829663429 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.828256881 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.82986994 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.833426371 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.830957545 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.824703018 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.827583683 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.82792028 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.837526787 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.831346833 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.828949152 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.830892322 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.826732274 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.830148879 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.832923748 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.828379489 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.831127506 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.826288919 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.830379505 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.829273812 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.829027582 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.826145612 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.829182748 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.829792679 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.831996773 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.836817899 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.826688572 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.832298069 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.831241576 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.830182754 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.829965631 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.83021481 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.827390159 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.827276659 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.83090885 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.830193293 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.83137128 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.833587408 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.830405431 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.83175445 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.831118335 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.831893207 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.83396422 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.839832135 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.837097809 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.827926349 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.830049035 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.831553253 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.834935134 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.830710825 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.831306004 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.83184668 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.834315771 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.830394839 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.830973346 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.830017771 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.834330511 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.847977944 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.831320714 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.832036564 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.83198157 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.837485962 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.830124501 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.828974573 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.830849343 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.835266035 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.834768121 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.838853162 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.831739948 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.838244996 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.832319206 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.833303946 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.834867247 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.835080324 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.839345018 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.835659437 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.832260997 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.832509911 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.837308916 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.84954018 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.832519461 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.842123594 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.862107645 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.833151272 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.834032132 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.833512783 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.832781821 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.833210638 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.836537961 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.834350397 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.83295348 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.833166112 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.833491335 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.834656682 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.839105724 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.834450326 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.832626381 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.833257341 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.834569416 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.836739715 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.830379742 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.833262253 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.832723765 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.834419055 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.834604708 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.834024172 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.834714019 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.849535616 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.844520107 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.83397793 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.834245102 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.830511416 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.839232884 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.836304146 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.843716467 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.84085067 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.834218676 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.834405796 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.835416265 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.834646139 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.831493553 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.836482353 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.835877038 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.834814849 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.831730402 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.849195686 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.842626235 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.840621348 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.836975937 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.835512087 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.834880997 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.837342271 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.83556195 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.835161006 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.839313415 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.836273498 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.839876719 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.834929298 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.834406088 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.839002852 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.841529844 seconds)
  done (took 1087.715443782 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.832876665 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.833052722 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.832847834 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.832593384 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.832621122 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.833950806 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.834241443 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.833039413 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.833871238 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.833464594 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.833633146 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.833607019 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.833432474 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.833932669 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.832868902 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.833466584 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.834654151 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.833359384 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.833271699 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.833952538 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.8337476 seconds)
  done (took 40.272357739 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.83686232 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.832835702 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.833810757 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.835701337 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.83370116 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.836937281 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.833613381 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.836478089 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.836636242 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.834448216 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.836550864 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.836830595 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.834233601 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.833791664 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.83434285 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.836466244 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.837091561 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.835134982 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.837034963 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.834304856 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.836796055 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.835561052 seconds)
  done (took 42.150241992 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.838517818 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.838356852 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.838235735 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.834133519 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.837555567 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.834752151 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.838679854 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.837625671 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.838170086 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.840283866 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.837961658 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.839129757 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.846019971 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.843146081 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.842822999 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.838478453 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.982887516 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.839704154 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.83984576 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.839816317 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.836376483 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.845744109 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.836815733 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.836189039 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.838393016 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.839476599 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.839242637 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.838987004 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.839560272 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.840011713 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.843190741 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.83914816 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.839331634 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.84221313 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.839159961 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.840781435 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.843252474 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.840120248 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.836403554 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.838747196 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.84942803 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.858067267 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.840960359 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.848591795 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.840250692 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.839210627 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.843695137 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.848154719 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.836490577 seconds)
  done (took 92.097413427 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.839685458 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.840857119 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.837529121 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.840679358 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.839868792 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.840102172 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.8400291 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.840211481 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.837600441 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.837710947 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.840694741 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.836354 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.835976238 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.839412655 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.839890868 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.836976032 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.837055967 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.837217044 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.836864676 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.836293185 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.836144721 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.838871458 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.839378729 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.837224701 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.839244565 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.837034951 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.83670683 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.840240626 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.837617671 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.83667874 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.840327155 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.840364681 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.841080625 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.837073005 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.837458182 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.840260336 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.840652463 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.837595733 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.841426268 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.838193225 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.840806773 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.840264522 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.840518294 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.841089878 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.837511605 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.83837182 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.83840638 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.838623128 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.838528208 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.841015114 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.841027837 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.839309034 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.841100654 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.838330503 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.840591043 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.840990707 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.839411128 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.838572593 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.841560348 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.838951157 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.838702762 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.842041577 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.839706573 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.841473151 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.841572455 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.839430224 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.839324751 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.842352625 seconds)
  done (took 126.840923335 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.843085256 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.843031126 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.842806848 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.843442425 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.84330727 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.843997788 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.843042331 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.843942579 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.845314724 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.84375199 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.843607704 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.844843922 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.84553447 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.845442853 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.845401435 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.846104467 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.845800579 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.8449056 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.846434336 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.844750451 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.846191986 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.845679309 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.846459005 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.845608364 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.846384796 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.845415217 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.84649189 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.845685626 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.846573313 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.84581392 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.846138115 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.846098228 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.846065638 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.846324841 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.847162334 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.846522367 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.846348283 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.845959255 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.846686901 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.846282486 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.846200116 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.846700212 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.846235891 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.847486382 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.846334644 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.846957599 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.847476403 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.847454695 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.846427714 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.846853113 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.846108123 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.846972854 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.846686609 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.847575582 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.847411474 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.848291647 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.848414145 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.847702122 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.847736359 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.848257728 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.847722498 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.847476054 seconds)
  done (took 116.230059915 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.846870999 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.847952379 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.845022924 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.845407905 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.846928765 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.844002314 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.846855403 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.847247978 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.847266412 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.846923164 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.847134335 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.844610942 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.844875769 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.847524728 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.844639022 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.84532408 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.84501344 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.845127246 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.847878726 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.84564966 seconds)
  done (took 38.703837497 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.844658582 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.848589869 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.844943174 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.845531394 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.847828566 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.845544445 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.848424623 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.848238778 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.845145755 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.848443632 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.848998812 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.848302648 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.845909853 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.84629961 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.848877417 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.846443413 seconds)
  done (took 31.334206332 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.845907161 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.848727424 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.849704471 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.84968574 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.845730601 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.845479457 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.848795993 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.846405401 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.847055373 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.849627788 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.849590558 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.849206145 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.849235802 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.849966268 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.847391358 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.849923542 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.847406659 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.848017249 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.849332568 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.85180534 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.847518391 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.847543294 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.850293616 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.850684897 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.848074023 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.847498202 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.848070741 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.847378115 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.847423521 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.849453937 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.848515835 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.849057824 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.847809057 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.84785096 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.851679742 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.848056976 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.850840251 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.850638166 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.85081002 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.85089251 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.851153721 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.848306714 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.850511425 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.850557813 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.848277579 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.85153413 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.849074224 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.849796234 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.84893119 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.849578356 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.851278062 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.852694135 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.851795034 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.85183521 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.85095498 seconds)
  done (took 103.490557625 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.851590086 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.852026354 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.849068384 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.851476004 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.851884377 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.849162939 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.852382017 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.849864051 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.850150342 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.852689223 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.850348653 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.852461187 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.850425858 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.852728263 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.851644947 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.852446566 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.851121189 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.850100328 seconds)
  done (took 35.107505341 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.850346319 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.85082855 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.853992156 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.850377058 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.850341735 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.853751373 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.851256443 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.852796829 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.85213971 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.850719018 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.850913887 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.85296203 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.852425132 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.85365012 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.850867101 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.850661433 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.853260067 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.852947221 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.850775549 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.85103819 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.85394532 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.853292809 seconds)
  done (took 42.530363547 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.853167402 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.853629256 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.870959773 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.897523739 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.884721298 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.854056729 seconds)
  done (took 13.001309107 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.852195013 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.854622762 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.851192027 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.855018474 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.855023213 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.851856034 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.851558981 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.851960159 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.854581326 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.853247813 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.851166193 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.855450234 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.854126571 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.851918643 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.85426539 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.855278389 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.853820808 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.852547724 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.85269737 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.854606834 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.85210786 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.854924857 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.852927195 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.852262042 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.852162235 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.852657303 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.855029017 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.853510305 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.853776953 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.856832872 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.856148001 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.853393679 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.855396511 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.853119193 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.856371481 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.855563033 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.853145796 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.855617202 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.856313188 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.852972214 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.856411063 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.856623342 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.855386244 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.853684309 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.856689301 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.854057065 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.854783346 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.854438587 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.854102205 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.856639455 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.856148561 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.854973648 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.856445393 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.857036895 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.856800488 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.857665257 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.854583391 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.854382982 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.857240951 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.854853639 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.854925406 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.856779306 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.854812424 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.854975826 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.857250954 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.85449566 seconds)
  done (took 124.187743416 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.855715457 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.85475481 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.855523598 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.857189644 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.8555454 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.855804775 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.854411385 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.855820624 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.856381413 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.85518724 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.858279971 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.855367925 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.855646248 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.855980955 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.855406917 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.855979422 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.856540138 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.855694716 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.856747476 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.859043918 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.856158265 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.856401434 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.856676187 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.856934919 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.8581328 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.858629297 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.85657367 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.856185588 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.856530886 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.855602779 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.856022099 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.856330105 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.856520746 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.856572223 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.856900726 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.856733517 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.856415994 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.856499847 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.857393073 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.859709261 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.857085001 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.859901327 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.857504209 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.857220107 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.857689966 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.856890193 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.85779929 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.857553303 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.857169095 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.858936195 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.858036421 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.85852619 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.858569447 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.859005028 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.858578614 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.858352234 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.859260086 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.85849204 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.857983786 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.860653395 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.858316079 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.859576905 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.861292377 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.859242513 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.858236081 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.859120388 seconds)
  done (took 124.373596615 seconds)
done (took 2534.581647853 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.907445934 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.938782824 seconds)
  done (took 15.641177373 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.022248237 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.976092744 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.859653445 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.885025334 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.860610361 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.87593357 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.874143478 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.860338603 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.860589579 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.860267638 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.860905631 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.046500245 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.878158707 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.861048283 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.861458287 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.953521523 seconds)
  done (took 52.205856192 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.863194389 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.865421771 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.873411929 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.866722424 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.864103365 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.877339344 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.896180506 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.868425469 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.899225186 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.886358911 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.932235303 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.874709893 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.865031983 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.914275501 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.876783138 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.879002495 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.963550513 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.939240923 seconds)
  done (took 35.801961873 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.942963202 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.865820364 seconds)
  done (took 10.612257995 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.878066844 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.867991245 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.872582338 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.860190755 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.881783125 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.874659746 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.871910489 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.87668852 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.899782219 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.894109484 seconds)
  done (took 70.589242256 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.872296013 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.866617612 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.866183222 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.864728463 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.858202215 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.861612775 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.865249164 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.86354222 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.550887581 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.899919151 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.871147118 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.870869826 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.866184494 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.867075699 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.863222648 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.887064751 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.980560288 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.863604305 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.863150076 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.871010021 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.866100422 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.95740864 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.879171055 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.865965322 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.895097886 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.54982834 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.874097861 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.871953737 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 2.002128312 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.863165811 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.86563975 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.866324211 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.869201091 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.265123534 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.200717866 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.865957767 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.874383583 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.87404367 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.864148433 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 2.035244151 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.867052666 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.871806207 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.852245347 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.190220381 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.947504324 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.909248016 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.231716034 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.87052265 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.868163584 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.896963294 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.869595295 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.8689524 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.87898958 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.377658728 seconds)
  done (took 132.682142174 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.861063935 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.437401439 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.026220484 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.86208824 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.143923382 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.105514587 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.863834741 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.911995943 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.864148233 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.113513508 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.040345773 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.982051721 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.863978796 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.860687337 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.865349154 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.862170896 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.01652623 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.933914513 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.864233937 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.861127796 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.899403175 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.129563747 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.990715114 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.865732458 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.886775749 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.092282312 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.990621944 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.980531497 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.370844969 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.862160621 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.931919643 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.864666099 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.863408308 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.861375789 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.029860979 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.972659395 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.961696983 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.864642656 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.861570414 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.862761475 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.527581375 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.08712147 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.974966948 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.003013313 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.113901078 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.093520386 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.511012689 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.863148004 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.502687647 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.061144769 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.073722958 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.118136914 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.994827419 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.865708183 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.109611731 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.863707239 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.863431104 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.128076732 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.093002378 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.980167677 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.86771315 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.86377757 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.863494055 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.179726319 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.866718474 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.975701461 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.867853039 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.864578976 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.977939711 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.98238985 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.096028064 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.110145691 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.896282427 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.808283058 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.373298946 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.149001508 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.937553814 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.130577341 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.866369932 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.864410994 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.961104194 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.622495093 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.039880043 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.183288193 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.130974018 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.908827634 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.4687117 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.864503272 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.113574393 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.117083242 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.096128719 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.112925201 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.033481256 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.18364354 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.865344007 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.865294292 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.058051881 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.999874969 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.869266935 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.226992849 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.116650705 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.596464781 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.897731542 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.171340151 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.006576805 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.867367545 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.493868647 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.866627113 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.068239035 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.910195496 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.867300112 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.866694839 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.11427416 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.739933784 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.866994548 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.655446269 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.933947247 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.869559388 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.133146195 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.870730978 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.110138685 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.869369058 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.178084651 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.366070395 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.912407262 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.061830806 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.1126322 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.662407032 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.135461038 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.181426411 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.993929597 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.130303926 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.68823428 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.869488084 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.152067615 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.869061326 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.869412572 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.037868792 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.869870493 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.023728821 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.873239947 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.129423934 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.895268614 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.041058307 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.873873896 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.142083181 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.915814298 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.922414395 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.87112508 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.98689991 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.870458652 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.911207897 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.054331085 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.870632178 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.869823648 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.458219287 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.869792905 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.018710385 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.168708157 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.895663301 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.94183901 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.396732615 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.869614102 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.964065369 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.902052754 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.473867067 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.869328449 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.041333805 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.873606902 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.839437729 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.870135056 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.181391597 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.094638766 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.872560612 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.870720503 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.664851411 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.57143066 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.870676576 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.046750854 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.130597205 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.529204305 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.091998093 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.87225804 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.004589565 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.874800016 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.94912839 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.223761122 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.869783914 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.870247634 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.872602355 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.870383172 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.873579378 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.098474511 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.900824932 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.55726732 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.009299383 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.11727713 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.184694455 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.135548214 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.920907441 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.874911616 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.140291501 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.874767052 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.939448439 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.87311634 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.896593046 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.121143785 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.873660219 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.102657239 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.160607898 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.922103649 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.924273696 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.874209853 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.873644068 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.87167037 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.018161837 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.976044431 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.874644806 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.873814756 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.991787812 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.001739729 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.064890807 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.464563637 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 4.047953161 seconds)
  done (took 903.842787925 seconds)
done (took 1223.169816371 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.873024793 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.873118033 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.860572066 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.873114931 seconds)
  done (took 29.292315795 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.881361172 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.879433776 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.880162449 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.879340264 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.880766001 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.879179208 seconds)
  done (took 13.09250711 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.931070821 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.873351183 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.874885359 seconds)
  done (took 21.491620753 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.949757514 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.28804681 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.983711338 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.327708875 seconds)
  done (took 10.363451854 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.881747414 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.881129849 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.880865314 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.881849853 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.882446189 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.88389632 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.881640983 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.883250511 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.883635171 seconds)
  done (took 18.75431067 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.050163112 seconds)
done (took 98.855785158 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.87054901 seconds)
    (2/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.880141125 seconds)
    (3/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.902953008 seconds)
    (4/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.900664484 seconds)
    (5/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.075164262 seconds)
    (6/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.882984839 seconds)
    (7/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.896663819 seconds)
    (8/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.654457121 seconds)
    (9/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.880137007 seconds)
    (10/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.009478961 seconds)
    (11/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.457876468 seconds)
    (12/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.169411875 seconds)
    (13/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.876886517 seconds)
    (14/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.760684565 seconds)
    (15/309) benchmarking ("map", abs, Float32, false)...
    done (took 2.016513239 seconds)
    (16/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.765177871 seconds)
    (17/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.923843934 seconds)
    (18/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.971223408 seconds)
    (19/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.907334225 seconds)
    (20/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.175488414 seconds)
    (21/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.954895704 seconds)
    (22/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.747757842 seconds)
    (23/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.979368403 seconds)
    (24/309) benchmarking ("sort", Float64, false)...
    done (took 5.678834499 seconds)
    (25/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.878991239 seconds)
    (26/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.560929573 seconds)
    (27/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.885258882 seconds)
    (28/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 4.519878746 seconds)
    (29/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.976985968 seconds)
    (30/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.077167648 seconds)
    (31/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.094021435 seconds)
    (32/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.938253829 seconds)
    (33/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.891991544 seconds)
    (34/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.702725952 seconds)
    (35/309) benchmarking ("map", identity, Bool, false)...
    done (took 2.012949167 seconds)
    (36/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.879499057 seconds)
    (37/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 3.167234862 seconds)
    (38/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.978330364 seconds)
    (39/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.939204543 seconds)
    (40/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.473716121 seconds)
    (41/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.016660925 seconds)
    (42/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.880334866 seconds)
    (43/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 2.010441974 seconds)
    (44/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.173974306 seconds)
    (45/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 2.006355014 seconds)
    (46/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.861646134 seconds)
    (47/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.887181815 seconds)
    (48/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.180097938 seconds)
    (49/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.915066035 seconds)
    (50/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 8.038752089 seconds)
    (51/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.350641665 seconds)
    (52/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 8.387858308 seconds)
    (53/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.231099333 seconds)
    (54/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.904962358 seconds)
    (55/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.989001198 seconds)
    (56/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.975475282 seconds)
    (57/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.413290977 seconds)
    (58/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.138518221 seconds)
    (59/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.261478512 seconds)
    (60/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.160790337 seconds)
    (61/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.708316118 seconds)
    (62/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.05612664 seconds)
    (63/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.937217976 seconds)
    (64/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.786733886 seconds)
    (65/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.258716416 seconds)
    (66/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.125285504 seconds)
    (67/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.222839801 seconds)
    (68/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.073614658 seconds)
    (69/309) benchmarking ("sort", Float32, false)...
    done (took 5.657883949 seconds)
    (70/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.286251792 seconds)
    (71/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.057607073 seconds)
    (72/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.075489365 seconds)
    (73/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.883590722 seconds)
    (74/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.899431922 seconds)
    (75/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.184675908 seconds)
    (76/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.909189083 seconds)
    (77/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.398792901 seconds)
    (78/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.882394796 seconds)
    (79/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.879675535 seconds)
    (80/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.234013449 seconds)
    (81/309) benchmarking ("sort", Int64, false)...
    done (took 5.60541946 seconds)
    (82/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.236294917 seconds)
    (83/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.016856941 seconds)
    (84/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.020711733 seconds)
    (85/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.255168885 seconds)
    (86/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.134046953 seconds)
    (87/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.474560583 seconds)
    (88/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.392900886 seconds)
    (89/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.2625702 seconds)
    (90/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.139166369 seconds)
    (91/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.967272988 seconds)
    (92/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.888641162 seconds)
    (93/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.394306924 seconds)
    (94/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.871623183 seconds)
    (95/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 8.074288903 seconds)
    (96/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 3.642921316 seconds)
    (97/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.964177745 seconds)
    (98/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.041419897 seconds)
    (99/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.9169036 seconds)
    (100/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.928842706 seconds)
    (101/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.961916197 seconds)
    (102/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.226223655 seconds)
    (103/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.868185066 seconds)
    (104/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.21657072 seconds)
    (105/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.140285227 seconds)
    (106/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.777071143 seconds)
    (107/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.945640073 seconds)
    (108/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.882044653 seconds)
    (109/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.994872883 seconds)
    (110/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.966135752 seconds)
    (111/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.149360149 seconds)
    (112/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.248611922 seconds)
    (113/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.992985591 seconds)
    (114/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.881488357 seconds)
    (115/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.913526405 seconds)
    (116/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.02820082 seconds)
    (117/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.265005693 seconds)
    (118/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.901024078 seconds)
    (119/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.094878009 seconds)
    (120/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 8.434105532 seconds)
    (121/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.635325926 seconds)
    (122/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.970430072 seconds)
    (123/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.880730362 seconds)
    (124/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.097250463 seconds)
    (125/309) benchmarking ("sort", Int8, false)...
    done (took 4.918164142 seconds)
    (126/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.284398388 seconds)
    (127/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.946393288 seconds)
    (128/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.92660998 seconds)
    (129/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.93241949 seconds)
    (130/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.887095908 seconds)
    (131/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.890602704 seconds)
    (132/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 3.425174418 seconds)
    (133/309) benchmarking ("map", abs, Bool, false)...
    done (took 2.014529602 seconds)
    (134/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.883597182 seconds)
    (135/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 5.192050027 seconds)
    (136/309) benchmarking ("sort", Bool, false)...
    done (took 2.331996271 seconds)
    (137/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.907470999 seconds)
    (138/309) benchmarking ("perf_sum", Float32, true)...
    done (took 2.002443086 seconds)
    (139/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.963722664 seconds)
    (140/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.139155608 seconds)
    (141/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.908590093 seconds)
    (142/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.884671132 seconds)
    (143/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.101579726 seconds)
    (144/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.237505806 seconds)
    (145/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.166627094 seconds)
    (146/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 8.057007773 seconds)
    (147/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.774790274 seconds)
    (148/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.408684146 seconds)
    (149/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.911577285 seconds)
    (150/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 2.01844719 seconds)
    (151/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.126870666 seconds)
    (152/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.872824859 seconds)
    (153/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 3.995683936 seconds)
    (154/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.114725818 seconds)
    (155/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.258138274 seconds)
    (156/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 2.008602174 seconds)
    (157/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.051522944 seconds)
    (158/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.131461533 seconds)
    (159/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.057358862 seconds)
    (160/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.919744533 seconds)
    (161/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.81018336 seconds)
    (162/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.915805143 seconds)
    (163/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.560417304 seconds)
    (164/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.967538365 seconds)
    (165/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.026894878 seconds)
    (166/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 8.643799804 seconds)
    (167/309) benchmarking ("perf_sum", Float32, false)...
    done (took 2.054940786 seconds)
    (168/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.185498257 seconds)
    (169/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.873905924 seconds)
    (170/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.926823628 seconds)
    (171/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.774622674 seconds)
    (172/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.989895638 seconds)
    (173/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.886673043 seconds)
    (174/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.914532519 seconds)
    (175/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.078579324 seconds)
    (176/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.062123065 seconds)
    (177/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.316302118 seconds)
    (178/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.894400727 seconds)
    (179/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.035261626 seconds)
    (180/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.994175176 seconds)
    (181/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.884029456 seconds)
    (182/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.890949575 seconds)
    (183/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.048893575 seconds)
    (184/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 8.644550311 seconds)
    (185/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.596755385 seconds)
    (186/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.886359951 seconds)
    (187/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.222582786 seconds)
    (188/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 8.091813935 seconds)
    (189/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.996405921 seconds)
    (190/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.89350647 seconds)
    (191/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.940498854 seconds)
    (192/309) benchmarking ("map", identity, Int8, false)...
    done (took 2.015288665 seconds)
    (193/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.873498172 seconds)
    (194/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.899819607 seconds)
    (195/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.971980202 seconds)
    (196/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.176034464 seconds)
    (197/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.479767815 seconds)
    (198/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.8884485 seconds)
    (199/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.970994615 seconds)
    (200/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.528964851 seconds)
    (201/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.004175558 seconds)
    (202/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.911011191 seconds)
    (203/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.938859165 seconds)
    (204/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.050338701 seconds)
    (205/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.12118014 seconds)
    (206/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.916694798 seconds)
    (207/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.940756461 seconds)
    (208/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.049832666 seconds)
    (209/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.094400614 seconds)
    (210/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.189051123 seconds)
    (211/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.898133082 seconds)
    (212/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 8.084407707 seconds)
    (213/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.124664356 seconds)
    (214/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.986276684 seconds)
    (215/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 2.02605799 seconds)
    (216/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.472661013 seconds)
    (217/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 3.601238135 seconds)
    (218/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.105451028 seconds)
    (219/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.200025554 seconds)
    (220/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.214257929 seconds)
    (221/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 2.012034089 seconds)
    (222/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.245467871 seconds)
    (223/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.893654161 seconds)
    (224/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.079603732 seconds)
    (225/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.179663619 seconds)
    (226/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.767356072 seconds)
    (227/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.870076485 seconds)
    (228/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 3.444841326 seconds)
    (229/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.872282805 seconds)
    (230/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 3.500088665 seconds)
    (231/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.909458698 seconds)
    (232/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.991258499 seconds)
    (233/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.923823 seconds)
    (234/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.060766463 seconds)
    (235/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.39734916 seconds)
    (236/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.95780436 seconds)
    (237/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.815119305 seconds)
    (238/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.189347619 seconds)
    (239/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.952979629 seconds)
    (240/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.986738471 seconds)
    (241/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.885244537 seconds)
    (242/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.908995096 seconds)
    (243/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 4.887299127 seconds)
    (244/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.861074366 seconds)
    (245/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.874282968 seconds)
    (246/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.904309698 seconds)
    (247/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.553349825 seconds)
    (248/309) benchmarking ("map", identity, Float32, false)...
    done (took 2.12244885 seconds)
    (249/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.093483593 seconds)
    (250/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.23313323 seconds)
    (251/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.274806916 seconds)
    (252/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.888360004 seconds)
    (253/309) benchmarking ("sort", BigInt, false)...
    done (took 6.933659294 seconds)
    (254/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 8.549318683 seconds)
    (255/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.272881417 seconds)
    (256/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.278529799 seconds)
    (257/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.984434349 seconds)
    (258/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.992449277 seconds)
    (259/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.908402715 seconds)
    (260/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.871048116 seconds)
    (261/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 3.585324782 seconds)
    (262/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.994375251 seconds)
    (263/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.171199449 seconds)
    (264/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.91286598 seconds)
    (265/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.934926914 seconds)
    (266/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.955875942 seconds)
    (267/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.128983973 seconds)
    (268/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.21187882 seconds)
    (269/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.182331044 seconds)
    (270/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.28279734 seconds)
    (271/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.492778709 seconds)
    (272/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.872588972 seconds)
    (273/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.404736242 seconds)
    (274/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 8.414378544 seconds)
    (275/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.996474872 seconds)
    (276/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.949993109 seconds)
    (277/309) benchmarking ("perf_sum", Float64, true)...
    done (took 2.00942705 seconds)
    (278/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.912103665 seconds)
    (279/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.992477737 seconds)
    (280/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.271105181 seconds)
    (281/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.903283966 seconds)
    (282/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.451323962 seconds)
    (283/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.504216409 seconds)
    (284/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.268257896 seconds)
    (285/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.108512633 seconds)
    (286/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.224335361 seconds)
    (287/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.973313164 seconds)
    (288/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.971978102 seconds)
    (289/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.545222461 seconds)
    (290/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.969208263 seconds)
    (291/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.54271032 seconds)
    (292/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.003484677 seconds)
    (293/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.912501455 seconds)
    (294/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.15774467 seconds)
    (295/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.951272148 seconds)
    (296/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 5.096888563 seconds)
    (297/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.086025512 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.930007997 seconds)
    (299/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.888456433 seconds)
    (300/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.523128242 seconds)
    (301/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.127414822 seconds)
    (302/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.877940587 seconds)
    (303/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.894978221 seconds)
    (304/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.879186377 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.921864602 seconds)
    (306/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.891062032 seconds)
    (307/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.159356644 seconds)
    (308/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.167814128 seconds)
    (309/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.33234189 seconds)
  done (took 1028.823819704 seconds)
done (took 1030.649966188 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.924503139 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.918187988 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.901246307 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.923149558 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 2.013477448 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.930712047 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.912610904 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.904579101 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.949805586 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.952377232 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.901844413 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.93025177 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.904116338 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.9039671 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.901804484 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.916790282 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.209766048 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.928546918 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.920142517 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.913177146 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.91949851 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.901817239 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.95312983 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.930169164 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.9076712 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.906161201 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.907941647 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.92314233 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 2.015689234 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.907369502 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.906462928 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.914741929 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.209116659 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.92719507 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.899003978 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.923410381 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.916140979 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.913716792 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.907783222 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.936147345 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.351338571 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.909930114 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.906357517 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.904155379 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.905031151 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.908930536 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.90603565 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.910517766 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.917411803 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.918563503 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.348975891 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.925710777 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.907945581 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.904881713 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.916011609 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.905099539 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.907795617 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.921295134 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.92415841 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.921260246 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.201701281 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.934415289 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.906983196 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.921304864 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.912516928 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.384894783 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.906424444 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.909289179 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.353435858 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.91692256 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.38541861 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.920506379 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.907758135 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.921920202 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.9387571 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.210421267 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.925536759 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.905548806 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.913694052 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.904976132 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.915905048 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.919467496 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.911252716 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.907090147 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.920668822 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.934677746 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.917167019 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.907891401 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.916291557 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.925530486 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.915205673 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.918471209 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.909922128 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.902805167 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.91675283 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.911189524 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.910329283 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.910660644 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.912627218 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.917555518 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.351455629 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.930423186 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.903869617 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.904544047 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.906102457 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.922386267 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.352547439 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.914471002 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.930166103 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.955113997 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.90925938 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.204002963 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.936008154 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.924231122 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.91788259 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.911410476 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.904444446 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.204560986 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.376944675 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.929287776 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.91025821 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.907752838 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.92518938 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.910521223 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.90556473 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.214647947 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.934367829 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.922872997 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.030389952 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.920107942 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.941412465 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.908217857 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.912201872 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.938570463 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.925673762 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.941639511 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.912691666 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.925791705 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.926459815 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.906596128 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.921065455 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.920466079 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.911114227 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.916413552 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.905252459 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.942400539 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.923086843 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.923099294 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.930844952 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.030118883 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.907438426 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.205806954 seconds)
done (took 299.577350686 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.977575253 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.898791912 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 2.011042889 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.907218808 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.992704365 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.995134879 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.90380166 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.904273769 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.904175902 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.288045147 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.90460585 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.904356265 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.906165125 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.904416868 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.991795964 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.907611779 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.905170878 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.249632778 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.90837766 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.978644099 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.900347878 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.905047098 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.908309154 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.291904898 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.901963921 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.90025198 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.97980577 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.907070843 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.256612358 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.905948781 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.901264171 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.256343103 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.997876298 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.925603551 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.918539042 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.91457775 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.994096197 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.911131349 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.991960577 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.990541353 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 2.012583739 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.948168122 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.909893798 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.90548498 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.911867912 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.910005098 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.906425511 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.936771451 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.911780005 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.906743206 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.252396371 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.918728241 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.907170089 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.906325713 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.906979565 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.939965002 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.906543352 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.910766499 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.999528665 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.910892885 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.972651767 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.32232272 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.295792045 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.910485323 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.909229774 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.906312346 seconds)
  done (took 186.978975076 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.978985526 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.986414111 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.978922437 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.912299678 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.961687879 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.982734752 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.913610598 seconds)
  done (took 15.556455508 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.916373138 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.910884638 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.9608902 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.960800132 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.910375955 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.059678395 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.910787014 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.922017013 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.908577206 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.964550188 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.911459723 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.911184451 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.917908936 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.90624288 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.959457475 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.922297526 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.026758576 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.912503094 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.911873292 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.068379078 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.908926255 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.918186063 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.966554429 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.923976837 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.912442666 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.917761566 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.494129179 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.913333222 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.909213471 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.911613268 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.908835484 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.952462921 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.912383389 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.905128804 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.909708453 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 2.029122117 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.913169025 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.908996272 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.912651646 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.906446117 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.911941304 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.91222652 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.91200842 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.908740071 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.911871768 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.937045788 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.911928091 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.912375753 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.912645448 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.913018631 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.963166039 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.912542747 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.910175203 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.910501752 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.969625995 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.920164019 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.914191738 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.909809076 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.913254767 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.910351883 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.070383038 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.962048712 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.913085155 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.962473447 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.913407723 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.913287606 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.913907948 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.912814619 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.968262875 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.913424697 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.961993327 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.911849206 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.071579757 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.937717252 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.915371579 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.916871562 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.917227215 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.914780237 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.907066214 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.921366329 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.910997974 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.915499142 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.92052586 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.921108105 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.912178279 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.021478414 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 2.023052825 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.912270793 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.927724408 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.922225903 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.912650458 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.967990342 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.914674373 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.911889433 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.966423663 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.030174167 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 2.408226952 seconds)
  done (took 210.448399268 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.922203921 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.923066105 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.916654289 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.931961089 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.91594155 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.916363677 seconds)
  done (took 13.372497082 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.918611718 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.917708164 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.917004612 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.917852681 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.917886504 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.918235188 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.916333149 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.918337801 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.9207547 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.916032213 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.918529941 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.917561721 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.917261057 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.916095638 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.916825869 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.916689803 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.918196755 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.914753683 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.916515111 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.917915294 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.062624109 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.917059503 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.917717691 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.919275393 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.921715773 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.9165705 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.925397065 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.917130292 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.917261103 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.923735884 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.921257988 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.91770236 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.919155258 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.924182688 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.922688782 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.91899573 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.921470013 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.918912991 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.915285778 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.918338851 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.919708336 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.917999518 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.918360443 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.920416856 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.919908557 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.923981467 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.923358968 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.925603791 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.920161141 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.91984362 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.919909372 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.919162193 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.919056537 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.921283211 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.923789405 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.924276725 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.924028075 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.920427782 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.919508262 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.920736993 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.920021059 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.921060077 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.921711993 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.924962964 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.927005883 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.920579692 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.922045009 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.924390527 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.920754602 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.919727211 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.921462853 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.917508314 seconds)
  done (took 141.217796377 seconds)
done (took 569.42732629 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.171287337 seconds)
  done (took 9.021616876 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.07636073 seconds)
  done (took 9.016132535 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.470771862 seconds)
  done (took 10.321598303 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.934195359 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.92128509 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.923602007 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.923201176 seconds)
  done (took 29.561826726 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.289943051 seconds)
  done (took 9.140609951 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.927473182 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.914517175 seconds)
  done (took 15.760230827 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.983765271 seconds)
  done (took 8.83590897 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.094917731 seconds)
  done (took 8.947872989 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.937620144 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.931511205 seconds)
  done (took 15.733843562 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.899625052 seconds)
  done (took 8.750436352 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.582732167 seconds)
  done (took 11.443285639 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.924339137 seconds)
  done (took 8.788872199 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.917391328 seconds)
  done (took 8.770350883 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.074275935 seconds)
  done (took 9.926788289 seconds)
done (took 165.869515835 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.918774087 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.917563814 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.916504251 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.91469742 seconds)
  done (took 29.5199556 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.956550352 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.955590507 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.957114985 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.967146385 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.958153575 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.956289999 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.947922838 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.948848585 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.967766493 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.958422435 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.957010316 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.958262416 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.956611924 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.948756634 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.957838714 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.95796766 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.967104102 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.957037223 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.948980201 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.959190951 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.923136774 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.967270443 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.959224601 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.924222122 seconds)
  done (took 48.770300981 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.121425164 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.994902975 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.077327178 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.976975981 seconds)
  done (took 10.02455201 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.974716599 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.976438484 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.988156248 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 2.034055135 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 2.052916197 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.986150072 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.950276379 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.945496709 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.931311048 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.977116235 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 2.052775864 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.993076727 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.076156162 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.924058616 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.105206702 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.924131739 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.924953018 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.976796992 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 2.02809053 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 2.057855335 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.925171101 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.976571288 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.979903953 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.993898085 seconds)
  done (took 49.610476837 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.922453942 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.931627436 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.930328112 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.92376896 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.924412268 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.924130029 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.925906057 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.921725569 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.941379547 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.922262726 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.919317368 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.920232315 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.919668066 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.921217454 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.919685113 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.934108306 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.934424305 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.921588808 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.924081966 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.926673986 seconds)
  done (took 40.365341867 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.915535218 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.769720351 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.267994758 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.171525895 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.915560089 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.917107592 seconds)
  done (took 31.810858767 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.934854729 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.985084268 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.929284257 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.978816732 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.05988581 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.92887947 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.923507121 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.990512274 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.033600311 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.994984737 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.943124455 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.949207363 seconds)
  done (took 25.505492711 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.917949627 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.918083363 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.91789099 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.93393782 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.933440518 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.930845539 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.929866215 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.916411759 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.936058599 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.9412375 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.930306915 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.934828759 seconds)
  done (took 44.99807938 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.005831597 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.961067919 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.941937362 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.602036224 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.296666302 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.129080264 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.568640969 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.248768852 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.922102405 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.191415481 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.010571288 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.023495307 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.174560514 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.401674271 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.95067456 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.39543597 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.21511787 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.125496852 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.946598349 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.597494542 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.9830979 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.092673368 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.667629637 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.976701133 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.131116364 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.051382146 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.180006723 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.920401353 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.055851186 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.957205662 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.930091044 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.919375121 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.193450446 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.301174648 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.023933743 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.929906151 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.53833419 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.635324191 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.907061738 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.701619917 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.65475747 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.041318697 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.930597167 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.920458416 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.853587358 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.065635696 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.302701156 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.925868787 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.63125909 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.920464115 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.93109539 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.015680189 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.924123335 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.74005325 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.833420612 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.922537406 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.918543294 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.927327762 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.495428309 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.025720006 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.094977991 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.893681342 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.011271504 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.604153905 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.305795238 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.06919153 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.92562882 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.925204881 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.855355656 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.678134712 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.977558366 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.270114924 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.943533153 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.571724819 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.237934028 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.065971516 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.865017047 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.188126617 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.446681026 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.893777357 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.150690082 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.921342248 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.857988766 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.870335349 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.856421207 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.182224107 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.959040918 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.678460948 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.962449919 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.250100858 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.934005821 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.939456177 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.947008582 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.146549651 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.808931939 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.921905097 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.728750572 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.080542528 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.945037989 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.251292203 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.857979645 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.927190424 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.180376748 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.135218162 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.995455214 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.442728 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.078832439 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.482291374 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.974695551 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.063351617 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.970847275 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.190759132 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.980599049 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.029496503 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.977365145 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.924191599 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.215191483 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.507579102 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.06004313 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.993303743 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.051814255 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.255856618 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.952212979 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.006957358 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.93402647 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.924816442 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.701428361 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.477465917 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.924931951 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.928143154 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.992981008 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.971023206 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.925932963 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.872080167 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.555203551 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.992464299 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.939970449 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.149607348 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.49248711 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.235878018 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.86064111 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.254995074 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.018298613 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.148873923 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.571788352 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.998177721 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.187622243 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.998218178 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.027875957 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.972781948 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.945144578 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.02484576 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.948590538 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.077074422 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.219432684 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.931029105 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.930106663 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.706992358 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.963349081 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.926472482 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.930774985 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.680491527 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.19540592 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.951487629 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.932807298 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.815564089 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.940687175 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.991755341 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.932339394 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.937090657 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.471831081 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.639032687 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.933265909 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.519329585 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.15158025 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.938384089 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.606796078 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.045715562 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.008758051 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.197016864 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.994304463 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.863311706 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.640268451 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.621185968 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.92954683 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.864165994 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.929465917 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.938906776 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.940420902 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.125025524 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.201170998 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.973327089 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.614690479 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.971981048 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.940700263 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.934114749 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.929777825 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.442019825 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.040142893 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.116623564 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.975314679 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.073605683 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.943125858 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.863983323 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.933650804 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.934820869 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.929846648 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.931708426 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.96323401 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.624947091 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.307414519 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.191700335 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.540905409 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.944988677 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.641464757 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.990018195 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.929289305 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.763128968 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.087592958 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.964064038 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.947237245 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.94132017 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.715870359 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.62565919 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.502344435 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.247236184 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.228036041 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.369920915 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.136962355 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.958290978 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.272038763 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.865425409 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.496284242 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.991227657 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.27273998 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.876235371 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.015480095 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.577751891 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.27325087 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.946332546 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.16112795 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.322281162 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.70520604 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.07349546 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.144120516 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.967583028 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.082376958 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.892363775 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.218816288 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.073621424 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.62469071 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.134858766 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.264310206 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.632368149 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.05441815 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.932194761 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.608144924 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.016359564 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.650139081 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.105336919 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.119009018 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.92820654 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.399536694 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.93924458 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.158059283 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.276681549 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.102096627 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.053113824 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.869337461 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.944717286 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.945111136 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.935042668 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.932958929 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.826128225 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.188223172 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.944896152 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.868456562 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.044387616 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.21827658 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.834071178 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.940092608 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.935395356 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.241187118 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.469965048 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.103088302 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.028009064 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.4568289 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.942426343 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.869413058 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.86875165 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.627176441 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.93996666 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.910456608 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.139039896 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.036752168 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.855211295 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.010190882 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.014613745 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.191940418 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.949898007 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.202434414 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.209697073 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.637171232 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.96021422 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.0360249 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.611359717 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 7.040989751 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.935676216 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.171316845 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.6911021 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.162541349 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.968249669 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.894043522 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.935452293 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.150732123 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.936189915 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.848719286 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.165152934 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.65869614 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.960495238 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.247826189 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.00868227 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.882830686 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.979155289 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.02673492 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.946992511 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.016565117 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.948029413 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.948215758 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.948352297 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.983962011 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.900344912 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.058476095 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.951752162 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.031231597 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.053515867 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.46223074 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.943020267 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.206383733 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.292289897 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.257655317 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.995839683 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.938317032 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.946190594 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.871656306 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.08750116 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.163396682 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.211597223 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.070135237 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.055783526 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.964048274 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.627871432 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.133249263 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.178392909 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.213601011 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.834300084 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.443212301 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.978668624 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.939749967 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.950552531 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.150409283 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.146115761 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.234297409 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.085081694 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.013085337 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.301510463 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.213080859 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.939164949 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.938760893 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.527238313 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 7.02669611 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.616219681 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.981275293 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.87655177 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.213032625 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.949769882 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.325018185 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.9623633 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.095846932 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.713671311 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.672803457 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.229891209 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.92558285 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.000051567 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.209310262 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.317101277 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.252860345 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.008798012 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.95161718 seconds)
    (390/481) benchmarking "6d"...
    done (took 4.05129867 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.087655747 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.835160528 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.94237984 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.941214495 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.989917125 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.652352903 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.950646548 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.212996709 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.251721679 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.939156075 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.839949854 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.964851282 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.951026967 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.164916336 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.200432152 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.195877705 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.95166361 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.947759387 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.75673559 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.210944664 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.99907034 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.877022089 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.945482536 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.041319937 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.191127915 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.962858535 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.394828034 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.653458535 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.208393508 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.942700832 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.964383623 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.08452904 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.299508549 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.258071324 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.478100081 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.146263229 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.530490139 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.50597315 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.243455197 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.947948991 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.085732315 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.246435074 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.947137979 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.017724277 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.982266518 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.206587311 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.253132747 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 7.010308621 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.618953944 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.912548513 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.284788108 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.505065604 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.882101965 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.953903657 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 2.003992068 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.944277023 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.072952448 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.956432705 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.846081053 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.091917558 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.727994139 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.220122719 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.949412235 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.935090053 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.660102572 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.215635811 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.978921946 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.086709315 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.946632866 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.619105049 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.295658971 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.20183873 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.013697512 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.954128421 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.948611444 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.946041543 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.931925291 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.141483501 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.141620178 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.214272289 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.043041461 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.982933589 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.94949776 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.161325884 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.156761109 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.848324304 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.077940684 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.017869215 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.988317851 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.851261466 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.454229596 seconds)
  done (took 1704.161125766 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.965924091 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.973529706 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 7.001358486 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 7.038111793 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.976233387 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.983445904 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 7.027080831 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.029544968 seconds)
  done (took 57.87726964 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.947197074 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.170411393 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.955803811 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.947223119 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.955736793 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.947449569 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.113026529 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.956715656 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.955396386 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.957062361 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.947407139 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.947079781 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.266136683 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.970413945 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.957822252 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.937857687 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.95583274 seconds)
  done (took 75.79671253 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.946252923 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.018937685 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.969784713 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.962728319 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.017177864 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.956205652 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.829187675 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.953890731 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.949965482 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.105694206 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.577444192 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.970011908 seconds)
  done (took 88.141954448 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.956802851 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.954727369 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.955611223 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.956588687 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.954894032 seconds)
  done (took 11.665288045 seconds)
done (took 2220.126262908 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.200296923 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.161388158 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.175894824 seconds)
  done (took 6.222226586 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.096739801 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.145117016 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.264198986 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.284829609 seconds)
  done (took 10.676554358 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.237589287 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.335564522 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.155885777 seconds)
  done (took 8.612108355 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.350472101 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.953375141 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.056701059 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.947128214 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.948231505 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.949667158 seconds)
  done (took 22.729989335 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.951116564 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.954380133 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.951372902 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.953791833 seconds)
  done (took 9.69441977 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.932761998 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.688126614 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.934737763 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.948291128 seconds)
  done (took 21.388155751 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.699141134 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.710439525 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.694832324 seconds)
  done (took 9.987808717 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.513688408 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.865832623 seconds)
  done (took 9.263433473 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.212453896 seconds)
  done (took 4.097256956 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.082709754 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.215828424 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.410223831 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.447333694 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.498693903 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.820458852 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.263539285 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.197634126 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.342217311 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.385753982 seconds)
  done (took 25.549632236 seconds)
done (took 143.667032587 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.339242151 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 8.19131168 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.154912736 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.336790725 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.183017693 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.15502246 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.164539313 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.318575204 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.806829857 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.801242308 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.296826251 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.180745702 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.11281868 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 8.191084508 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.113543565 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.319861053 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.228395656 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.362473278 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.992478106 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.192581725 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.152815673 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.933495341 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.139329433 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.950872411 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.210203805 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.109224019 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.512798048 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.321928263 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.146728627 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.525128737 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.109084722 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.342908943 seconds)
  done (took 173.78254309 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.719656108 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.952196898 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.951606629 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.952708282 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.509414607 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.953988433 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.952248927 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.950289438 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.253889544 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.215359984 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.960210456 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.496259918 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.966052931 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.952194531 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.958000888 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.952348718 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.337971779 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.7935897 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.963456684 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.965855252 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.970491427 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.372067494 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.971688201 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.430395007 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.357067356 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.970657083 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.953434545 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.971506311 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.957698814 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.94934166 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.961260206 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.954085584 seconds)
  done (took 211.466197065 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.954034445 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.954971335 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.95236632 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.954170925 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.974167511 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.954485067 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.953725066 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.954075215 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.516359837 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.502465263 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.981191472 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.960095397 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.958137377 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.953995214 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.961252283 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.954513434 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.980223328 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.963992448 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.960140357 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.962182319 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.965239045 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.754063116 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.983182138 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.758235943 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.982934522 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.962294852 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.955271342 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.963804819 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.964919234 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.96625915 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.965568151 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.955086177 seconds)
  done (took 223.383886782 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.158622097 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.962802539 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.96368941 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.919186727 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.963471114 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.96271411 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.956913145 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.160830324 seconds)
  done (took 20.39428657 seconds)
done (took 630.925667415 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.535736901 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.291784799 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.147210222 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.98758164 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.2308265 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 2.025941427 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.983268609 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.053597878 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 3.212782556 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.066298579 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.630293607 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 2.00412975 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.714364902 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 2.009687375 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.114310296 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.042005035 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.51686965 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.606966424 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.169356054 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.055029786 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.167637863 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.967809166 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.061300499 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 3.228841679 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.743641323 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.970279439 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.173132084 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.523523162 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.997357356 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.154206459 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.756351314 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.41150013 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.999456428 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.982459614 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.035506127 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 2.018524538 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.348815924 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.997416021 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.108096387 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.726940626 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.048641905 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 3.091384004 seconds)
  done (took 108.803655737 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.955302637 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.953407836 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.952224844 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.953155034 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.95461955 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.953691902 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.953538612 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.952827982 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.954046157 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.953594337 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.953085744 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.954981792 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.953366021 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.954614763 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.953557181 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.953429684 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.954308276 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.9564631 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.95363192 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.953827966 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.954634691 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.953781375 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.954400702 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.95727887 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.955103258 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.953949586 seconds)
  done (took 52.721128453 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.966530323 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.112025497 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.195267973 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.986260726 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.966521938 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.970528013 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.986408427 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.97164872 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.969733044 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.969252972 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.061712715 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.974088418 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.987120043 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.193028552 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.986364356 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.967603159 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.967170943 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.967909693 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.118779759 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.986029198 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.988738682 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.973174322 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.988360647 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.981678436 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.970246431 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.968039239 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.971729046 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.434226544 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.978022043 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.062461707 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.060429689 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.993527315 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.403469297 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.203796365 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.034785621 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.978494824 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.968253148 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.068548167 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.975390008 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.969647002 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.98819074 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.975595816 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.193900818 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.475777837 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.982952981 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.970066194 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.443856962 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.077418962 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 2.012961039 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.982108509 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.20023529 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.987525235 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.971043721 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.970798477 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 2.007432006 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.980367367 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.970038221 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.330333222 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.982598487 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.988850164 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.975694423 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.97028931 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.125406275 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.979069381 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.115590385 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.979166646 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.977643063 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.971088358 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.197097689 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.988037899 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.472143127 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.987234736 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.974127259 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.066910914 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.120932669 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.474618004 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.988109515 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.131378784 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.421863159 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.998192374 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.981327407 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.427291735 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.002408806 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.983224747 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.975699769 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.976258355 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.974434669 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 2.018821578 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.991197076 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.412866399 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.487485719 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.347901446 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.001975904 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.991394747 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.975422804 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.335717239 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.982968942 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.97448318 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.196312126 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.49663036 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.986757161 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.978791439 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.461830193 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.989129948 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.990829252 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.981281345 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.202785239 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.989245554 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 2.016969969 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.972146909 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.979397235 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.975245139 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.991124545 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.980473287 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.972578566 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.456146312 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.088708593 seconds)
  done (took 244.131909702 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.967766571 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.9685888 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.96721794 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.967947097 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.965873597 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.981299775 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.966364563 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.966772804 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.971690229 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.966054813 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.96656867 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.972018207 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.969286555 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.978531742 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.000233361 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.974779748 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.576453136 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.96842216 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.967260256 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.968620641 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.614822839 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.972682347 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.968011525 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.977953507 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.968874581 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.967042097 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.976264984 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.992805803 seconds)
  done (took 170.376605641 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.974415716 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.090240072 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.991877081 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.002422076 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.982071481 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.972457651 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.999835714 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.990573852 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.980173343 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.972576385 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.972470948 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.03562476 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.987427829 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.076252694 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 2.006765045 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.005840819 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.07996899 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.983762604 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.972917628 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.973310616 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.003584412 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.970359651 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.036985788 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.103513983 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.993764469 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.091443087 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.981419451 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.976850147 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.975615338 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.094144659 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.991101025 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.036183025 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 2.004867463 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.994436646 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.097722633 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.094694628 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.083793911 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 2.00751132 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.980825088 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.974915492 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.974101388 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.96478788 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.094380263 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.995077434 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.977016768 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.083746363 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.996385378 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.977134588 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.985127924 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.974681152 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.990058802 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.994037001 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.043592923 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.10943668 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.010319592 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 2.001816851 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 2.002663092 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.264622858 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.985771245 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.07740019 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.97155773 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.093519575 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.997449487 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.966114436 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.976196997 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.981326084 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.005377769 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 2.008449452 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.083014955 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.98587557 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.07812212 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.013888307 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.98347938 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.976294969 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.979075114 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.097012757 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.098135098 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.012456128 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.015537271 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 2.009183239 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.973417695 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.977651502 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.967330952 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.995734806 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.982245045 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.094430792 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.097079407 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.986407885 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.980527221 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.98012725 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.980073868 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 2.004140945 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.105515078 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.016218961 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.07609903 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.048587425 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.054293421 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.993755018 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.990653565 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.981567352 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.042399985 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.993399768 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.989606401 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.313533816 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.05047165 seconds)
  done (took 213.962263799 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 2.072533965 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.437112206 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 2.032406418 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 2.035548073 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.270461565 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.411050039 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.772733059 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 2.026628433 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.028354128 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 2.053455529 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.186217798 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.088559073 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.041133286 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 2.015444444 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.426852811 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 2.01692826 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.029460748 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 2.048099935 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 2.031893713 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.568986863 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.333585193 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.15388881 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.026608015 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.193788534 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 2.009924485 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.29687241 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.518904496 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.401275681 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 2.06256916 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.373095573 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.363252668 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.705120131 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.23999981 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.271467792 seconds)
  done (took 78.460165512 seconds)
done (took 870.346668601 seconds)
SAVING RESULT...
DONE!
